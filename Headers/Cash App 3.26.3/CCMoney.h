//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"

@class CCCurrency, NSDecimalNumber, NSNumber;

@interface CCMoney : NSObject <NSCopying>
{
    unsigned long long _hash;
    NSDecimalNumber *_dollarAmount;
    CCCurrency *_currency;
}

+ (id)_validCurrencyForCurrencyCode:(id)arg1;
+ (id)_validCurrencyForCurrency:(id)arg1;
+ (id)_validAmountForFuzzyAmountString:(id)arg1;
+ (id)_validAmountForAmountString:(id)arg1;
+ (id)_validAmountForAmount:(id)arg1;
+ (id)debug_moneyWithUSDAmountString:(id)arg1;
+ (id)moneyWithExactSubunitsForOneUnitOfCurrency:(id)arg1;
+ (id)moneyWithCentsAmountString:(id)arg1 currency:(id)arg2;
+ (id)moneyWithCentsAmount:(id)arg1 currency:(id)arg2;
+ (id)moneyWithDollarAmountString:(id)arg1 currency:(id)arg2;
+ (id)moneyWithDollarAmount:(id)arg1 currency:(id)arg2;
+ (id)moneyWithMoney:(id)arg1;
+ (id)moneyWithCurrency:(id)arg1;
+ (id)moneyWithSQPBMoneyData:(id)arg1;
+ (id)moneyWithSQPBMoney:(id)arg1;
@property(readonly, nonatomic) CCCurrency *currency; // @synthesize currency=_currency;
@property(readonly, nonatomic) NSDecimalNumber *dollarAmount; // @synthesize dollarAmount=_dollarAmount;
@property(readonly, nonatomic) unsigned long long hash; // @synthesize hash=_hash;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool hasCents;
@property(readonly, nonatomic) _Bool isRoundedToNearestCent;
@property(readonly, nonatomic) _Bool isNotZero;
@property(readonly, nonatomic) _Bool isPositive;
@property(readonly, nonatomic) _Bool isNegative;
- (_Bool)isLessThanOrEqualTo:(id)arg1;
- (_Bool)isLessThan:(id)arg1;
- (_Bool)isOrderedSame:(id)arg1;
- (_Bool)isGreaterThanOrEqualTo:(id)arg1;
- (_Bool)isGreaterThan:(id)arg1;
- (id)localizedStringValueForDisplayType:(unsigned long long)arg1;
@property(readonly, nonatomic) NSNumber *centsNumberValue;
- (_Bool)isEqual:(id)arg1;
- (id)debugDescription;
- (id)description;
- (long long)compare:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithDollarAmountString:(id)arg1 currency:(id)arg2 allowsFuzzyMatch:(_Bool)arg3;
- (id)initWithDollarAmountString:(id)arg1 currency:(id)arg2;
- (id)initWithDollarAmount:(id)arg1 currency:(id)arg2;
- (id)percentageByDividingByMoney:(id)arg1;
- (_Bool)isRoundedToIntervalCents:(unsigned long long)arg1 roundingMode:(unsigned long long)arg2;
@property(readonly, nonatomic) _Bool isRoundedToSwedishRoundingInterval;
- (id)moneyByRoundingMoneyToIntervalCents:(unsigned long long)arg1 CCRoundingMode:(unsigned long long)arg2;
- (id)moneyByRoundingMoneyToSwedishRoundingInterval;
- (id)moneyByRoundingWithNSRoundingMode:(unsigned long long)arg1 scale:(short)arg2;
- (id)moneyByRoundingWithCCRoundingMode:(unsigned long long)arg1 scale:(short)arg2;
- (id)moneyByRoundingMoneyToNearestDollarWithCCRoundingMode:(unsigned long long)arg1;
- (id)moneyByRoundingMoneyToNearestDollarWithRoundingMode:(unsigned long long)arg1;
- (id)moneyByRoundingMoneyToNearestCentWithCCRoundingMode:(unsigned long long)arg1;
- (id)cc_moneyByRoundingMoneyToNearestCentWithCCRoundingMode:(unsigned long long)arg1;
- (id)moneyByRoundingMoneyToNearestCentWithRoundingMode:(unsigned long long)arg1;
- (id)moneyByMultiplyingByNegativeOne;
- (id)moneyByMultiplyingByPercentDecimalNumber:(id)arg1;
- (id)moneyByMultiplyingByNumber:(id)arg1;
- (id)moneyByMultiplyingByString:(id)arg1;
- (id)moneyByDividingByPercentDecimalNumber:(id)arg1;
- (id)moneyByDividingByDecimalNumber:(id)arg1;
- (id)moneyBySubtractingMoney:(id)arg1;
- (id)moneyByAddingMoney:(id)arg1;
- (id)SQPBMoneyData;
- (id)SQPBMoney;

@end

