//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AWSCognitoIdentityUserPool, NSString;

@interface AWSCognitoIdentityUser : NSObject
{
    NSString *_username;
    long long _confirmedStatus;
    AWSCognitoIdentityUserPool *_pool;
    NSString *_userIdForSRP;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSString *userIdForSRP; // @synthesize userIdForSRP=_userIdForSRP;
@property(retain, nonatomic) AWSCognitoIdentityUserPool *pool; // @synthesize pool=_pool;
@property(nonatomic) long long confirmedStatus; // @synthesize confirmedStatus=_confirmedStatus;
@property(retain, nonatomic) NSString *username; // @synthesize username=_username;
@property(readonly, nonatomic) NSString *deviceId;
- (id)strippedPoolName;
- (id)keyChainKey:(id)arg1 key:(id)arg2;
- (id)asfDeviceId;
- (id)keyChainNamespacePoolId;
- (id)keyChainNamespaceClientId;
- (id)getDeviceCredentials;
- (void)forgetDeviceInternal;
- (void)persistDevice:(id)arg1 deviceSecret:(id)arg2 deviceGroup:(id)arg3;
- (void)updateUsernameAndPersistTokens:(id)arg1;
- (id)forgetDevice:(id)arg1;
- (id)deviceNotTrackedError;
- (id)forgetDevice;
- (id)getDevice;
- (id)getDevice:(id)arg1;
- (id)updateDeviceStatus:(_Bool)arg1;
- (id)updateDeviceStatus:(id)arg1 remembered:(_Bool)arg2;
- (id)listDevices:(int)arg1 paginationToken:(id)arg2;
- (id)globalSignOut;
@property(readonly, nonatomic, getter=isSignedIn) _Bool signedIn;
- (id)refreshTokenFromKeyChain:(id)arg1;
- (void)clearSession;
- (void)signOutAndClearLastKnownUser;
- (void)signOut;
- (id)deleteUser;
- (id)verifySoftwareToken:(id)arg1 friendlyDeviceName:(id)arg2;
- (id)associateSoftwareToken;
- (id)setUserMfaPreference:(id)arg1;
- (id)setUserSettings:(id)arg1;
- (id)getAttributeVerificationCode:(id)arg1;
- (id)verifyAttribute:(id)arg1 code:(id)arg2;
- (id)deleteAttributes:(id)arg1;
- (id)updateAttributes:(id)arg1;
- (id)mfaAuthInternal:(id)arg1 destination:(id)arg2 authState:(id)arg3 challengeName:(long long)arg4 authenticationDelegate:(id)arg5;
- (void)addSecretHashDeviceKeyAndUsername:(id)arg1;
- (void)addDeviceKey:(id)arg1;
- (id)deviceAuthInternal:(id)arg1;
- (_Bool)isDeviceNotFoundError:(id)arg1;
- (id)forgetDeviceOnRespondDeviceNotFoundError:(id)arg1 retryContinuation:(CDUnknownBlockType)arg2;
- (id)forgetDeviceOnInitiateDeviceNotFoundError:(id)arg1 retryContinuation:(CDUnknownBlockType)arg2;
- (id)srpAuthInternalStep2:(id)arg1 srpHelper:(id)arg2;
- (id)srpAuthInternal:(id)arg1 password:(id)arg2 validationData:(id)arg3 lastChallenge:(id)arg4 isInitialCustomChallenge:(_Bool)arg5;
- (id)performRespondToAuthChallenge:(id)arg1 challengeName:(long long)arg2 session:(id)arg3;
- (id)performRespondToSelectMfaChallenge:(id)arg1 session:(id)arg2;
- (id)performRespondToNewPasswordChallenge:(id)arg1 session:(id)arg2;
- (id)performRespondCustomAuthChallenge:(id)arg1 session:(id)arg2;
- (id)performInitiateCustomAuthChallenge:(id)arg1;
- (_Bool)isFirstCustomStepSRP:(id)arg1;
- (id)customAuthInternal:(id)arg1;
- (id)migrationAuth:(id)arg1 password:(id)arg2 validationData:(id)arg3 lastChallenge:(id)arg4;
- (id)passwordAuthInternal:(id)arg1 lastChallenge:(id)arg2 isInitialCustomChallenge:(_Bool)arg3;
- (id)interactiveAuth;
- (id)confirmDeviceInternal:(id)arg1;
- (id)performDeviceAuth:(id)arg1 session:(id)arg2;
- (id)startSelectMfaUI:(id)arg1;
- (id)verifyMfaSetup:(id)arg1 selectMfaDelegate:(id)arg2 input:(id)arg3;
- (id)startMfaSetupRequiredUI:(id)arg1;
- (id)startNewPasswordRequiredUI:(id)arg1;
- (id)startPasswordAuthenticationUI:(id)arg1;
- (id)getSessionInternal:(id)arg1;
- (id)setConfirmationStatus:(id)arg1;
- (id)getSession:(id)arg1 password:(id)arg2 validationData:(id)arg3;
- (id)getSession;
- (id)getDetails;
- (id)changePassword:(id)arg1 proposedPassword:(id)arg2;
- (id)resendConfirmationCode;
- (id)confirmForgotPassword:(id)arg1 password:(id)arg2;
- (id)forgotPassword;
- (id)confirmSignUp:(id)arg1 forceAliasCreation:(_Bool)arg2;
- (id)confirmSignUp:(id)arg1;
- (id)initWithUsername:(id)arg1 pool:(id)arg2;

@end

