//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TWServicesControllerUpdateRecipient-Protocol.h"
#import "TWTwitchChatAdapterDelegate-Protocol.h"

@class NSArray, NSDictionary, NSMutableDictionary, NSMutableSet, NSSet, NSString, TWBitsConfiguration, TWChatRaidContainer, TWFollowingListener, TWLInvalidationToken, TWTwitchChatAdapter, _TtC6Twitch19TWChatBitsActionBag, _TtC6Twitch20TWChatFilterSettings;
@protocol TWChatControllerSubscriptionsDelegate;

__attribute__((visibility("hidden")))
@interface TWChatController : NSObject <TWTwitchChatAdapterDelegate, TWServicesControllerUpdateRecipient>
{
    NSMutableDictionary *_channelConnectionControllers;
    NSMutableDictionary *_channelConnectionPreconnectStartTimes;
    NSMutableDictionary *_conversationConnectionControllers;
    NSMutableDictionary *_bitsConfigurationsByChannelId;
    NSMutableSet *_requestedBitsConfigurationChannelIds;
    NSArray *_userEmotesets;
    NSDictionary *_emotesetData;
    NSMutableDictionary *_badgeImageURLCache;
    _TtC6Twitch19TWChatBitsActionBag *_maybeGlobalBitsActionBag;
    unsigned long long _backgroundTask;
    TWTwitchChatAdapter *_chatAdapter;
    unsigned long long _lastGlobalUnreadMessagesCount;
    unsigned long long _lastGlobalUnreadThreadsCount;
    CDUnknownBlockType _ownChatAction;
    unsigned long long _pendingHostAction;
    NSString *_pendingHostTargetName;
    NSSet *_keysWeDontWantToReceiveNotificationsFor;
    TWLInvalidationToken *_chatFilterStateInvalidationToken;
    unsigned int _loggedInUser;
    _Bool _pubSubConnected;
    _Bool _subscriptionsEnabled;
    _Bool _isRefreshingChatThreads;
    unsigned long long _globalUnreadMessagesCount;
    TWBitsConfiguration *_maybeGlobalBitsConfiguration;
    _TtC6Twitch20TWChatFilterSettings *_chatFilterSettings;
    id <TWChatControllerSubscriptionsDelegate> _subscriptionsDelegate;
    TWChatRaidContainer *_chatRaidContainer;
    TWFollowingListener *_followingListener;
}

+ (id)caughtByAutomodLocalizedNotice;
+ (id)otherParticipantIdWithThreadId:(id)arg1 participant:(id)arg2;
+ (id)threadIdWithParticipant:(unsigned int)arg1 otherParticipant:(unsigned int)arg2;
+ (id)sharedInstance;
+ (id)localizedChatNoticeForKey:(id)arg1 parameters:(id)arg2;
- (void).cxx_destruct;
@property(retain, nonatomic) TWFollowingListener *followingListener; // @synthesize followingListener=_followingListener;
@property(readonly, nonatomic) TWChatRaidContainer *chatRaidContainer; // @synthesize chatRaidContainer=_chatRaidContainer;
@property(retain, nonatomic) id <TWChatControllerSubscriptionsDelegate> subscriptionsDelegate; // @synthesize subscriptionsDelegate=_subscriptionsDelegate;
@property(readonly, nonatomic) _TtC6Twitch20TWChatFilterSettings *chatFilterSettings; // @synthesize chatFilterSettings=_chatFilterSettings;
@property(retain, nonatomic) TWBitsConfiguration *maybeGlobalBitsConfiguration; // @synthesize maybeGlobalBitsConfiguration=_maybeGlobalBitsConfiguration;
@property(readonly, nonatomic) unsigned long long globalUnreadMessagesCount; // @synthesize globalUnreadMessagesCount=_globalUnreadMessagesCount;
@property(readonly, nonatomic) _Bool isRefreshingChatThreads; // @synthesize isRefreshingChatThreads=_isRefreshingChatThreads;
@property(readonly, nonatomic) NSArray *userEmotesets; // @synthesize userEmotesets=_userEmotesets;
- (void)disposeOfConnectionController:(id)arg1;
- (void)handleHostModeNoticeWithKey:(id)arg1 notice:(id)arg2 hostUserName:(id)arg3;
- (void)cleanUpAfterHostAction;
- (void)unsubscribeFromPropertyUpdatesForChannel:(id)arg1;
- (void)subscribeToPropertyUpdatesForChannel:(id)arg1 forUser:(id)arg2;
- (void)stopHosting;
- (void)hostChannelName:(id)arg1;
- (void)performChatActionBlockOnOwnChannelChatRoom:(CDUnknownBlockType)arg1;
- (void)setLastReadMessageId:(unsigned long long)arg1 forThreadWithId:(id)arg2;
- (void)sendMessage:(id)arg1 toRoomForChannelId:(id)arg2;
- (void)partRoomForChannelId:(id)arg1 forMaybeUser:(id)arg2;
- (void)joinRoomForChannelId:(id)arg1 withMaybeUser:(id)arg2;
- (void)fetchListOfBlockedUsersWithCompletionBlock:(CDUnknownBlockType)arg1;
- (_Bool)isUserBlocked:(id)arg1;
- (void)updateSubscriptionsEnabled;
- (void)disposeMultiviewNotificationsListener:(id)arg1;
- (void)fetchMultiviewNotificationsListenerForMultiviewSessionOnChannelWithIdentifier:(unsigned int)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)disposeSquadNotificationsListener:(id)arg1;
- (void)fetchSquadNotificationsListenerForSquadWithIdentifier:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)updateChatFilterSettings:(id)arg1;
- (void)registerUserInteractionTimeForChannelChatConnectLatencyWithChannelName:(id)arg1;
- (void)preconnectToChannelChatIfNeededWithChannelID:(unsigned int)arg1 chatMedium:(long long)arg2 isFromDeeplink:(_Bool)arg3;
- (void)disposeChatRaidOnChannelId:(unsigned int)arg1;
- (id)chatRaidOnChannelId:(unsigned int)arg1;
- (void)fetchChatRaidOnChannelId:(unsigned int)arg1;
- (void)disconnectUnneededChannelChatConnectionControllers;
- (id)conversationChatConnectionControllerForThreadId:(id)arg1;
- (id)activeChannelChatConnectionControllerForChannelId:(id)arg1;
- (id)chatConnectionControllerForThreadWithParticipantIdentity:(id)arg1;
- (id)chatConnectionControllerForThreadWithId:(id)arg1;
- (id)chatConnectionControllerForChannelWithIdentity:(id)arg1 chatMedium:(long long)arg2;
@property(readonly, nonatomic) _TtC6Twitch19TWChatBitsActionBag *maybeGlobalBitsActionBag;
- (id)makeBitsAdapterForUserWithIdentifier:(unsigned int)arg1;
- (id)maybeBitsConfigurationForChannelId:(id)arg1;
- (id)maybeMessageStringBitsImageDataForChannelId:(unsigned int)arg1 prefix:(id)arg2 quantity:(unsigned long long)arg3 scale:(double)arg4 style:(unsigned long long)arg5 animationMode:(unsigned long long)arg6;
- (void)disposeBitsConfigurationForChannelId:(id)arg1;
- (void)fetchBitsConfigurationForChannelId:(id)arg1;
- (void)removeFrequentlyUsedEmotesNotInUserEmotesets;
- (_Bool)hasEmotesetDataForAllUserEmotesets;
- (void)updateFrequentlyUsedEmotesWithMessages:(id)arg1;
- (void)fetchUserEmotesetsForUserWithIdentifier:(unsigned int)arg1;
- (id)emotesForEmoteset:(id)arg1;
- (id)badgeSetsForChannel:(id)arg1;
@property(readonly, nonatomic) NSDictionary *globalBadgeSets;
- (void)updateGlobalUnreadThreadCount:(unsigned long long)arg1 unreadMessagesCount:(unsigned long long)arg2;
@property(readonly, nonatomic) unsigned long long globalUnreadThreadsCount;
- (void)chatAdapter:(id)arg1 subscribedToChannel:(unsigned int)arg2 forUser:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 targetUserUnbannedInChannel:(unsigned int)arg2 moderatorName:(id)arg3 targetName:(id)arg4;
- (void)chatAdapter:(id)arg1 targetUserUntimedOutInChannel:(unsigned int)arg2 moderatorName:(id)arg3 targetName:(id)arg4;
- (void)chatAdapter:(id)arg1 targetUserBannedInChannel:(unsigned int)arg2 moderatorName:(id)arg3 targetName:(id)arg4;
- (void)chatAdapter:(id)arg1 targetUserTimedOutInChannel:(unsigned int)arg2 moderatorName:(id)arg3 targetName:(id)arg4 timeoutDuration:(unsigned long long)arg5;
- (void)chatAdapter:(id)arg1 deleteChatMessageWithMessageID:(id)arg2 channel:(unsigned int)arg3 deletedNotice:(id)arg4;
- (void)chatAdapter:(id)arg1 squadUpdatedForUser:(unsigned int)arg2 onChannel:(unsigned int)arg3 withInfo:(id)arg4;
- (void)chatAdapter:(id)arg1 squadClosedForUser:(unsigned int)arg2 onChannel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 propertiesChangedInChannelID:(id)arg2 ritualsEnabled:(_Bool)arg3;
- (void)chatAdapter:(id)arg1 receivedSystemMessage:(id)arg2 forChannelID:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 hostStatusChangedForChannelID:(unsigned int)arg2 targetChannelName:(id)arg3 withNoticeKey:(id)arg4;
- (void)chatAdapter:(id)arg1 userWasTimedOutFromRoomsInChannelID:(id)arg2 untilDate:(id)arg3;
- (void)chatAdapter:(id)arg1 userBannedStatusChanged:(_Bool)arg2 inChannelID:(id)arg3;
- (void)chatAdapter:(id)arg1 autoModTimedOutSentCheerForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 autoModDeniedSentCheerForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 autoModCaughtSentCheerForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 autoModApprovedSentMessageForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 autoModDeniedSentMessageForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 autoModCaughtSentMessageForUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeSubsOnlyOffForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeSubsOnlyForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeSlowOffForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeSlowForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4 slowModeDuration:(double)arg5;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeR9KOffForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeR9KForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeFollowersOnlyOffForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeFollowersOnlyForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4 minimumFollowingDuration:(double)arg5;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeEmoteOnlyOffForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 chatChannelModNoticeEmoteOnlyForUser:(unsigned int)arg2 channel:(unsigned int)arg3 modName:(id)arg4;
- (void)chatAdapter:(id)arg1 receivedGenericNotice:(id)arg2 forUser:(unsigned int)arg3 channel:(unsigned int)arg4;
- (void)chatAdapter:(id)arg1 receivedUnraidNotice:(id)arg2 forUser:(unsigned int)arg3 channel:(unsigned int)arg4;
- (void)chatAdapter:(id)arg1 receivedRaidNotice:(id)arg2 forUser:(unsigned int)arg3 channel:(unsigned int)arg4;
- (void)chatAdapter:(id)arg1 raidCancelledWithStatus:(id)arg2;
- (void)chatAdapter:(id)arg1 raidFiredWithStatus:(id)arg2;
- (void)chatAdapter:(id)arg1 raidUpdatedWithStatus:(id)arg2;
- (void)chatAdapter:(id)arg1 raidStartedWithStatus:(id)arg2;
- (void)chatAdapter:(id)arg1 createdChatRaid:(id)arg2;
- (void)chatAdapter:(id)arg1 didChangeChatUnreadCountBag:(id)arg2 forUser:(id)arg3;
- (void)chatAdapter:(id)arg1 didFetchUnreadThreadCount:(unsigned long long)arg2 unreadMessageCount:(unsigned long long)arg3 isExhaustive:(_Bool)arg4 forUser:(id)arg5;
- (void)chatAdapter:(id)arg1 finishedFetchingChannelBitsConfiguration:(id)arg2 failure:(id)arg3 forChannelWithIdentifier:(unsigned int)arg4;
- (void)chatAdapter:(id)arg1 finishedFetchingGlobalBitsConfiguration:(id)arg2 failure:(id)arg3;
- (void)chatAdapter:(id)arg1 hostTargetChanged:(id)arg2 forMaybeUser:(id)arg3 onChannel:(id)arg4;
- (void)chatAdapter:(id)arg1 didFailToSendMessage:(id)arg2 fromUser:(id)arg3 toChannel:(id)arg4 withError:(unsigned long long)arg5;
- (void)chatAdapter:(id)arg1 receivedMessage:(id)arg2 inThreadWithId:(id)arg3 forUser:(id)arg4;
- (void)chatAdapter:(id)arg1 receivedNotice:(id)arg2 withParamaters:(id)arg3 forMaybeUser:(id)arg4 onChannel:(id)arg5;
- (void)chatAdapter:(id)arg1 receivedRestrictions:(unsigned long long)arg2 forMaybeUser:(id)arg3 onChannel:(id)arg4;
- (void)chatAdapter:(id)arg1 receivedChatRestrictions:(id)arg2 forUser:(unsigned int)arg3 channel:(unsigned int)arg4;
- (void)chatAdapter:(id)arg1 receivedLocalUserModes:(unsigned long long)arg2 color:(id)arg3 forMaybeUser:(id)arg4 onChannel:(id)arg5;
- (void)chatAdapter:(id)arg1 receivedClearAllMessagesRequestForMaybeUser:(id)arg2 onChannel:(id)arg3;
- (void)chatAdapter:(id)arg1 receivedClearMessagesRequestForMaybeUser:(id)arg2 clearUser:(id)arg3 onChannel:(id)arg4;
- (void)chatAdapter:(id)arg1 receivedEmotesets:(id)arg2 forUser:(id)arg3;
- (void)chatAdapter:(id)arg1 receivedGlobalBadgeSets:(id)arg2 descriptionLanguage:(id)arg3;
- (void)chatAdapter:(id)arg1 receivedBadgeSets:(id)arg2 forChannel:(id)arg3 descriptionLanguage:(id)arg4;
- (void)chatAdapter:(id)arg1 receivedMessages:(id)arg2 forMaybeUser:(id)arg3 onChannel:(id)arg4;
- (void)chatAdapter:(id)arg1 connectionStatusDidChange:(unsigned long long)arg2 forMaybeUser:(id)arg3 onChannel:(id)arg4 withErrorCode:(unsigned int)arg5;
- (void)chatAdapter:(id)arg1 statusDidChange:(unsigned long long)arg2;
- (void)servicesController:(id)arg1 pubSubConnectionStatusDidChange:(unsigned long long)arg2 forUser:(unsigned int)arg3;
- (void)servicesController:(id)arg1 failedToLogOutUser:(unsigned int)arg2;
- (void)servicesController:(id)arg1 loggedOutUser:(unsigned int)arg2;
- (void)servicesController:(id)arg1 failedToLogInUser:(unsigned int)arg2;
- (void)servicesController:(id)arg1 loggedInUser:(unsigned int)arg2;
- (void)disconnectAllChannelConnectionControllers;
- (void)reconnectAllChannels;
- (void)disconnectAndReleaseConnectionsControllers;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)dealloc;
- (id)initWithChatAdapter:(id)arg1;
- (id)badgeImageURLforBadgeSetNamed:(id)arg1 versionNamed:(id)arg2 onChannel:(id)arg3 scale:(double)arg4;
- (id)urlForEmoticonWithId:(id)arg1 scale:(double)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

