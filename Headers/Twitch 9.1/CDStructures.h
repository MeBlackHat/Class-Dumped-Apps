//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AppleAacEncoder;

struct AutoModFlags {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct Badge {
    basic_string_7c0a1c0b _field1;
    struct map<std::__1::basic_string<char>, ttv::chat::BadgeVersion, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ttv::chat::BadgeVersion>>> _field2;
};

struct BadgeSet {
    basic_string_7c0a1c0b _field1;
    struct map<std::__1::basic_string<char>, ttv::chat::Badge, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ttv::chat::Badge>>> _field2;
};

struct BandwidthStat {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct BitsConfiguration;

struct BroadcastAPI;

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CallbackQueue<std::__1::function<void (unsigned int)>> {
    struct vector<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry, std::__1::allocator<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry>> _field1;
};

struct Chanlet {
    struct vector<ttv::chat::MultiviewContentAttribute, std::__1::allocator<ttv::chat::MultiviewContentAttribute>> _field1;
    unsigned int _field2;
};

struct ChannelInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    basic_string_7c0a1c0b _field9;
    basic_string_7c0a1c0b _field10;
    basic_string_7c0a1c0b _field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
};

struct ChannelRepository;

struct ChatAPI;

struct ChatChannelInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    struct RestrictionReason _field3;
};

struct ChatChannelRestrictions {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
};

struct ChatRoomMessage {
    struct MessageInfo _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
};

struct ChatUserInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned int _field3;
    unsigned int _field4;
    struct UserMode _field5;
};

struct Cheermote {
    basic_string_7c0a1c0b _field1;
    struct vector<ttv::chat::BitsConfiguration::CheermoteTier, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteTier>> _field2;
    int _field3;
};

struct CheermoteImage;

struct CheermoteTier {
    struct vector<ttv::chat::BitsConfiguration::CheermoteImage, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteImage>> _field1;
    basic_string_7c0a1c0b _field2;
    unsigned int _field3;
    unsigned int _field4;
    _Bool _field5;
    _Bool _field6;
};

struct ComponentContainer;

struct CoreAPI {
    CDUnknownFunctionPointerType *_field1;
    struct EventSource<ttv::IModuleListener> _field2;
    int _field3;
    int _field4;
    struct shared_ptr<ttv::ComponentContainer> _field5;
    struct CallbackQueue<std::__1::function<void (unsigned int)>> _field6;
    struct CallbackQueue<std::__1::function<void (unsigned int)>> _field7;
    struct shared_ptr<ttv::ChannelRepository> _field8;
    struct shared_ptr<ttv::UserRepository> _field9;
    struct shared_ptr<ttv::TrackingContext> _field10;
    struct shared_ptr<ttv::CoreAPI::UserListener> _field11;
    struct shared_ptr<ttv::CoreAPI::PubSubListener> _field12;
    struct shared_ptr<ttv::TaskRunner> _field13;
    struct shared_ptr<ttv::SettingRepository> _field14;
    struct shared_ptr<ttv::CoreAPIInternalData> _field15;
    struct shared_ptr<ttv::IEventScheduler> _field16;
    struct shared_ptr<ttv::PollingEventScheduler> _field17;
    struct vector<std::__1::shared_ptr<ttv::ICoreApiClient>, std::__1::allocator<std::__1::shared_ptr<ttv::ICoreApiClient>>> _field18;
    basic_string_7c0a1c0b _field19;
};

struct CoreAPIInternalData;

struct DashboardActivityFragment;

struct EmoticonSet;

struct EventSource<ttv::IModuleListener> {
    struct vector<std::__1::weak_ptr<ttv::IModuleListener>, std::__1::allocator<std::__1::weak_ptr<ttv::IModuleListener>>> _field1;
};

struct ExtensionMessage {
    vector_181226ed _field1;
    struct vector<ttv::chat::MessageBadge, std::__1::allocator<ttv::chat::MessageBadge>> _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    unsigned int _field7;
    unsigned int _field8;
};

struct FirstTimeChatterNotice {
    struct MessageInfo _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
};

struct Flags {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct Friend {
    struct UserInfo _field1;
    unsigned int _field2;
    struct PresenceStatus _field3;
};

struct FriendRequest {
    struct UserInfo _field1;
    unsigned int _field2;
};

struct GenericMessageNotice {
    struct MessageInfo _field1;
    basic_string_7c0a1c0b _field2;
};

struct HttpRequest;

struct IAudioCapture;

struct IBackgroundEventSchedulerFactory;

struct IBandwidthStatListener;

struct IBitsStatus;

struct IChannelListener;

struct IChannelStatus;

struct IChatRaid;

struct IChatRoomNotifications;

struct IEventScheduler;

struct IFollowingStatus;

struct IGenericSubscriberStatus;

struct IIngestTester {
    CDUnknownFunctionPointerType *_field1;
};

struct IMultiviewNotifications;

struct IMutexFactory;

struct ISocketFactory;

struct ISquadNotifications;

struct ISystemClock;

struct IThreadApi;

struct IThreadFactory;

struct IThreadSyncFactory;

struct ITracer;

struct IVideoEncoder;

struct IWebSocketFactory;

struct LiveChatMessage {
    struct MessageInfo _field1;
    basic_string_7c0a1c0b _field2;
};

struct LocalBroadcastAPIListener;

struct LocalChatAPIListener;

struct LocalChatChannelListener;

struct LocalChatRaidListener;

struct LocalChatRoomNotificationsListener;

struct LocalChatThreadsListener;

struct LocalCoreAPIListener;

struct LocalIngestTesterListener;

struct LocalSocialAPIListener;

struct LocalVideoCapturer;

struct LookupEntry;

struct MessageBadge;

struct MessageInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    vector_181226ed _field3;
    struct vector<ttv::chat::MessageBadge, std::__1::allocator<ttv::chat::MessageBadge>> _field4;
    struct UserMode _field5;
    struct Flags _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    basic_string_7c0a1c0b _field11;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field12;
};

struct MultiviewContentAttribute {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    basic_string_7c0a1c0b _field5;
    basic_string_7c0a1c0b _field6;
    basic_string_7c0a1c0b _field7;
    basic_string_7c0a1c0b _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
};

struct PollingEventScheduler;

struct PresenceActivity;

struct PresenceSettings {
    int _field1;
    unsigned int :1;
};

struct PresenceStatus {
    struct unique_ptr<ttv::social::PresenceActivity, std::__1::default_delete<ttv::social::PresenceActivity>> _field1;
    int _field2;
    unsigned int _field3;
};

struct PreviewImages {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
};

struct ProfileImage;

struct PubSubListener;

struct RaidNotice {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    struct UserInfo _field3;
    unsigned int _field4;
};

struct RaidStatus {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    _Bool _field11;
};

struct Recipient {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    unsigned int _field3;
};

struct RestrictionReason {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct SettingRepository;

struct SocialAPI;

struct SquadInfo {
    struct vector<ttv::SquadMember, std::__1::allocator<ttv::SquadMember>> _field1;
    basic_string_7c0a1c0b _field2;
    unsigned int _field3;
    int _field4;
};

struct SquadMember;

struct StreamInfo {
    struct ChannelInfo _field1;
    struct PreviewImages _field2;
    basic_string_7c0a1c0b _field3;
    double _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    unsigned long long _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
};

struct SubscriptionNotice {
    struct unique_ptr<ttv::chat::MessageInfo, std::__1::default_delete<ttv::chat::MessageInfo>> _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    struct Recipient _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
};

struct TaskRunner;

struct TrackingContext;

struct TwitchKitEventTracker;

struct UnraidNotice {
    basic_string_7c0a1c0b _field1;
};

struct UnreadThreadCounts {
    unsigned int _field1;
    unsigned int _field2;
    _Bool _field3;
};

struct UserInfo {
    basic_string_7c0a1c0b _field1;
    basic_string_7c0a1c0b _field2;
    basic_string_7c0a1c0b _field3;
    basic_string_7c0a1c0b _field4;
    unsigned int _field5;
    unsigned int _field6;
};

struct UserListener;

struct UserMode {
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct UserRepository;

struct VideoParams {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    int _field7;
    _Bool _field8;
};

struct WhisperMessage {
    struct MessageInfo _field1;
    basic_string_7c0a1c0b _field2;
    unsigned int _field3;
    basic_string_7c0a1c0b _field4;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, ttv::chat::Badge, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ttv::chat::Badge>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::Badge>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::Badge>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::Badge>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::Badge>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::Badge>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, ttv::chat::BadgeVersion, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, ttv::chat::BadgeVersion>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::BadgeVersion>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::BadgeVersion>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::BadgeVersion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::BadgeVersion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, ttv::chat::BadgeVersion>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>>> {
    struct __tree<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct shared_ptr<(anonymous namespace)::LocalBroadcastAPIListener> {
    struct LocalBroadcastAPIListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalChatAPIListener> {
    struct LocalChatAPIListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalChatChannelListener> {
    struct LocalChatChannelListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalChatRaidListener> {
    struct LocalChatRaidListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalChatRoomNotificationsListener> {
    struct LocalChatRoomNotificationsListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalChatThreadsListener> {
    struct LocalChatThreadsListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalCoreAPIListener> {
    struct LocalCoreAPIListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalIngestTesterListener> {
    struct LocalIngestTesterListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalSocialAPIListener> {
    struct LocalSocialAPIListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::LocalVideoCapturer> {
    struct LocalVideoCapturer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::TwitchKitEventTracker> {
    struct TwitchKitEventTracker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::ChannelRepository> {
    struct ChannelRepository *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::ComponentContainer> {
    struct ComponentContainer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::CoreAPI::PubSubListener> {
    struct PubSubListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::CoreAPI::UserListener> {
    struct UserListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::CoreAPI> {
    struct CoreAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::CoreAPIInternalData> {
    struct CoreAPIInternalData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::HttpRequest> {
    struct HttpRequest *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IBackgroundEventSchedulerFactory> {
    struct IBackgroundEventSchedulerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IChannelListener> {
    struct IChannelListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IChannelStatus> {
    struct IChannelStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::ICoreApiClient>;

struct shared_ptr<ttv::IEventScheduler> {
    struct IEventScheduler *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::IGenericSubscriberStatus> {
    struct IGenericSubscriberStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IMutexFactory> {
    struct IMutexFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::ISocketFactory> {
    struct ISocketFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::ISystemClock> {
    struct ISystemClock *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IThreadApi> {
    struct IThreadApi *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IThreadFactory> {
    struct IThreadFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IThreadSyncFactory> {
    struct IThreadSyncFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::ITracer> {
    struct ITracer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::IWebSocketFactory> {
    struct IWebSocketFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::PollingEventScheduler> {
    struct PollingEventScheduler *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::SettingRepository> {
    struct SettingRepository *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::TaskRunner> {
    struct TaskRunner *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::TrackingContext> {
    struct TrackingContext *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::UserRepository> {
    struct UserRepository *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<ttv::broadcast::AppleAacEncoder> {
    struct AppleAacEncoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::broadcast::BroadcastAPI> {
    struct BroadcastAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::broadcast::IAudioCapture> {
    struct IAudioCapture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::broadcast::IBandwidthStatListener> {
    struct IBandwidthStatListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::broadcast::IIngestTester> {
    struct IIngestTester *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::broadcast::IVideoEncoder> {
    struct IVideoEncoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::BitsConfiguration> {
    struct BitsConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::ChatAPI> {
    struct ChatAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::IBitsStatus> {
    struct IBitsStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::IChatRaid> {
    struct IChatRaid *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::IChatRoomNotifications> {
    struct IChatRoomNotifications *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::IFollowingStatus> {
    struct IFollowingStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::IMultiviewNotifications> {
    struct IMultiviewNotifications *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::chat::ISquadNotifications> {
    struct ISquadNotifications *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ttv::social::SocialAPI> {
    struct SocialAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct unique_ptr<ttv::chat::MessageInfo, std::__1::default_delete<ttv::chat::MessageInfo>> {
    struct __compressed_pair<ttv::chat::MessageInfo *, std::__1::default_delete<ttv::chat::MessageInfo>> {
        struct MessageInfo *_field1;
    } _field1;
};

struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>;

struct unique_ptr<ttv::social::PresenceActivity, std::__1::default_delete<ttv::social::PresenceActivity>> {
    struct __compressed_pair<ttv::social::PresenceActivity *, std::__1::default_delete<ttv::social::PresenceActivity>> {
        struct PresenceActivity *_field1;
    } _field1;
};

struct vector<std::__1::shared_ptr<ttv::ICoreApiClient>, std::__1::allocator<std::__1::shared_ptr<ttv::ICoreApiClient>>> {
    struct shared_ptr<ttv::ICoreApiClient> *_field1;
    struct shared_ptr<ttv::ICoreApiClient> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<ttv::ICoreApiClient>*, std::__1::allocator<std::__1::shared_ptr<ttv::ICoreApiClient>>> {
        struct shared_ptr<ttv::ICoreApiClient> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>, std::__1::allocator<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>>> {
    struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field1;
    struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>*, std::__1::allocator<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>>> {
        struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field1;
    } _field3;
};

struct vector<std::__1::weak_ptr<ttv::IModuleListener>, std::__1::allocator<std::__1::weak_ptr<ttv::IModuleListener>>> {
    struct weak_ptr<ttv::IModuleListener> *_field1;
    struct weak_ptr<ttv::IModuleListener> *_field2;
    struct __compressed_pair<std::__1::weak_ptr<ttv::IModuleListener>*, std::__1::allocator<std::__1::weak_ptr<ttv::IModuleListener>>> {
        struct weak_ptr<ttv::IModuleListener> *_field1;
    } _field3;
};

struct vector<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry, std::__1::allocator<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry>> {
    struct LookupEntry *_field1;
    struct LookupEntry *_field2;
    struct __compressed_pair<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry *, std::__1::allocator<ttv::CallbackQueue<std::__1::function<void (unsigned int)>>::LookupEntry>> {
        struct LookupEntry *_field1;
    } _field3;
};

struct vector<ttv::DashboardActivityFragment, std::__1::allocator<ttv::DashboardActivityFragment>> {
    struct DashboardActivityFragment *_field1;
    struct DashboardActivityFragment *_field2;
    struct __compressed_pair<ttv::DashboardActivityFragment *, std::__1::allocator<ttv::DashboardActivityFragment>> {
        struct DashboardActivityFragment *_field1;
    } _field3;
};

struct vector<ttv::ProfileImage, std::__1::allocator<ttv::ProfileImage>> {
    struct ProfileImage *_field1;
    struct ProfileImage *_field2;
    struct __compressed_pair<ttv::ProfileImage *, std::__1::allocator<ttv::ProfileImage>> {
        struct ProfileImage *_field1;
    } _field3;
};

struct vector<ttv::SquadMember, std::__1::allocator<ttv::SquadMember>> {
    struct SquadMember *_field1;
    struct SquadMember *_field2;
    struct __compressed_pair<ttv::SquadMember *, std::__1::allocator<ttv::SquadMember>> {
        struct SquadMember *_field1;
    } _field3;
};

struct vector<ttv::chat::BitsConfiguration::CheermoteImage, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteImage>> {
    struct CheermoteImage *_field1;
    struct CheermoteImage *_field2;
    struct __compressed_pair<ttv::chat::BitsConfiguration::CheermoteImage *, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteImage>> {
        struct CheermoteImage *_field1;
    } _field3;
};

struct vector<ttv::chat::BitsConfiguration::CheermoteTier, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteTier>> {
    struct CheermoteTier *_field1;
    struct CheermoteTier *_field2;
    struct __compressed_pair<ttv::chat::BitsConfiguration::CheermoteTier *, std::__1::allocator<ttv::chat::BitsConfiguration::CheermoteTier>> {
        struct CheermoteTier *_field1;
    } _field3;
};

struct vector<ttv::chat::ChatUserInfo, std::__1::allocator<ttv::chat::ChatUserInfo>> {
    struct ChatUserInfo *_field1;
    struct ChatUserInfo *_field2;
    struct __compressed_pair<ttv::chat::ChatUserInfo *, std::__1::allocator<ttv::chat::ChatUserInfo>> {
        struct ChatUserInfo *_field1;
    } _field3;
};

struct vector<ttv::chat::EmoticonSet, std::__1::allocator<ttv::chat::EmoticonSet>> {
    struct EmoticonSet *_field1;
    struct EmoticonSet *_field2;
    struct __compressed_pair<ttv::chat::EmoticonSet *, std::__1::allocator<ttv::chat::EmoticonSet>> {
        struct EmoticonSet *_field1;
    } _field3;
};

struct vector<ttv::chat::LiveChatMessage, std::__1::allocator<ttv::chat::LiveChatMessage>> {
    struct LiveChatMessage *_field1;
    struct LiveChatMessage *_field2;
    struct __compressed_pair<ttv::chat::LiveChatMessage *, std::__1::allocator<ttv::chat::LiveChatMessage>> {
        struct LiveChatMessage *_field1;
    } _field3;
};

struct vector<ttv::chat::MessageBadge, std::__1::allocator<ttv::chat::MessageBadge>> {
    struct MessageBadge *_field1;
    struct MessageBadge *_field2;
    struct __compressed_pair<ttv::chat::MessageBadge *, std::__1::allocator<ttv::chat::MessageBadge>> {
        struct MessageBadge *_field1;
    } _field3;
};

struct vector<ttv::chat::MultiviewContentAttribute, std::__1::allocator<ttv::chat::MultiviewContentAttribute>> {
    struct MultiviewContentAttribute *_field1;
    struct MultiviewContentAttribute *_field2;
    struct __compressed_pair<ttv::chat::MultiviewContentAttribute *, std::__1::allocator<ttv::chat::MultiviewContentAttribute>> {
        struct MultiviewContentAttribute *_field1;
    } _field3;
};

struct vector<ttv::chat::WhisperMessage, std::__1::allocator<ttv::chat::WhisperMessage>> {
    struct WhisperMessage *_field1;
    struct WhisperMessage *_field2;
    struct __compressed_pair<ttv::chat::WhisperMessage *, std::__1::allocator<ttv::chat::WhisperMessage>> {
        struct WhisperMessage *_field1;
    } _field3;
};

struct vector<ttv::social::Friend, std::__1::allocator<ttv::social::Friend>> {
    struct Friend *_field1;
    struct Friend *_field2;
    struct __compressed_pair<ttv::social::Friend *, std::__1::allocator<ttv::social::Friend>> {
        struct Friend *_field1;
    } _field3;
};

struct vector<ttv::social::FriendRequest, std::__1::allocator<ttv::social::FriendRequest>> {
    struct FriendRequest *_field1;
    struct FriendRequest *_field2;
    struct __compressed_pair<ttv::social::FriendRequest *, std::__1::allocator<ttv::social::FriendRequest>> {
        struct FriendRequest *_field1;
    } _field3;
};

struct weak_ptr<ttv::IModuleListener>;

#pragma mark Typedef'd Structures

typedef struct {
    long long _field1;
    int _field2;
    unsigned int _field3;
    long long _field4;
} CDStruct_198678f7;

// Template types
typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
} basic_string_7c0a1c0b;

typedef struct shared_ptr<ttv::CoreAPI> {
    struct CoreAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4d0126a2;

typedef struct shared_ptr<ttv::IChannelListener> {
    struct IChannelListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3988d48f;

typedef struct shared_ptr<ttv::IChannelStatus> {
    struct IChannelStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2da322aa;

typedef struct shared_ptr<ttv::broadcast::BroadcastAPI> {
    struct BroadcastAPI *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4ddf86ba;

typedef struct shared_ptr<ttv::broadcast::IBandwidthStatListener> {
    struct IBandwidthStatListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c899a8f8;

typedef struct shared_ptr<ttv::chat::BitsConfiguration> {
    struct BitsConfiguration *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1162ea4f;

typedef struct shared_ptr<ttv::chat::IBitsStatus> {
    struct IBitsStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_da304b7c;

typedef struct shared_ptr<ttv::chat::IChatRaid> {
    struct IChatRaid *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_82334543;

typedef struct shared_ptr<ttv::chat::IFollowingStatus> {
    struct IFollowingStatus *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_68dd11ae;

typedef struct shared_ptr<ttv::chat::IMultiviewNotifications> {
    struct IMultiviewNotifications *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bba282c8;

typedef struct shared_ptr<ttv::chat::ISquadNotifications> {
    struct ISquadNotifications *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_61fccec8;

typedef struct vector<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>, std::__1::allocator<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>>> {
    struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field1;
    struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>*, std::__1::allocator<std::__1::unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>>>> {
        struct unique_ptr<ttv::chat::MessageToken, std::__1::default_delete<ttv::chat::MessageToken>> *_field1;
    } _field3;
} vector_181226ed;

typedef struct vector<ttv::DashboardActivityFragment, std::__1::allocator<ttv::DashboardActivityFragment>> {
    struct DashboardActivityFragment *_field1;
    struct DashboardActivityFragment *_field2;
    struct __compressed_pair<ttv::DashboardActivityFragment *, std::__1::allocator<ttv::DashboardActivityFragment>> {
        struct DashboardActivityFragment *_field1;
    } _field3;
} vector_41ddd2f7;

typedef struct vector<ttv::ProfileImage, std::__1::allocator<ttv::ProfileImage>> {
    struct ProfileImage *_field1;
    struct ProfileImage *_field2;
    struct __compressed_pair<ttv::ProfileImage *, std::__1::allocator<ttv::ProfileImage>> {
        struct ProfileImage *_field1;
    } _field3;
} vector_d153d622;

typedef struct vector<ttv::chat::ChatUserInfo, std::__1::allocator<ttv::chat::ChatUserInfo>> {
    struct ChatUserInfo *_field1;
    struct ChatUserInfo *_field2;
    struct __compressed_pair<ttv::chat::ChatUserInfo *, std::__1::allocator<ttv::chat::ChatUserInfo>> {
        struct ChatUserInfo *_field1;
    } _field3;
} vector_71a45c04;

typedef struct vector<ttv::chat::EmoticonSet, std::__1::allocator<ttv::chat::EmoticonSet>> {
    struct EmoticonSet *_field1;
    struct EmoticonSet *_field2;
    struct __compressed_pair<ttv::chat::EmoticonSet *, std::__1::allocator<ttv::chat::EmoticonSet>> {
        struct EmoticonSet *_field1;
    } _field3;
} vector_9364275c;

typedef struct vector<ttv::chat::LiveChatMessage, std::__1::allocator<ttv::chat::LiveChatMessage>> {
    struct LiveChatMessage *_field1;
    struct LiveChatMessage *_field2;
    struct __compressed_pair<ttv::chat::LiveChatMessage *, std::__1::allocator<ttv::chat::LiveChatMessage>> {
        struct LiveChatMessage *_field1;
    } _field3;
} vector_12e8bee1;

typedef struct vector<ttv::chat::WhisperMessage, std::__1::allocator<ttv::chat::WhisperMessage>> {
    struct WhisperMessage *_field1;
    struct WhisperMessage *_field2;
    struct __compressed_pair<ttv::chat::WhisperMessage *, std::__1::allocator<ttv::chat::WhisperMessage>> {
        struct WhisperMessage *_field1;
    } _field3;
} vector_35adc749;

typedef struct vector<ttv::social::Friend, std::__1::allocator<ttv::social::Friend>> {
    struct Friend *_field1;
    struct Friend *_field2;
    struct __compressed_pair<ttv::social::Friend *, std::__1::allocator<ttv::social::Friend>> {
        struct Friend *_field1;
    } _field3;
} vector_7259a19b;

typedef struct vector<ttv::social::FriendRequest, std::__1::allocator<ttv::social::FriendRequest>> {
    struct FriendRequest *_field1;
    struct FriendRequest *_field2;
    struct __compressed_pair<ttv::social::FriendRequest *, std::__1::allocator<ttv::social::FriendRequest>> {
        struct FriendRequest *_field1;
    } _field3;
} vector_0d7b6ef1;

