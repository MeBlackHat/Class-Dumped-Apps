//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary, NSMutableDictionary;
@protocol OS_dispatch_queue, TWTwitchChatAdapterDelegate, _TtP9TwitchKit37TWMessageParserSystemMessageLocalizer_;

@interface TWTwitchChatAdapter : NSObject
{
    unsigned long long _status;
    NSMutableDictionary *_userEmotesets;
    NSMutableDictionary *_emotesetData;
    NSMutableDictionary *_channelBadgeSets;
    NSObject<OS_dispatch_queue> *_chatDispatchQueue;
    NSObject<OS_dispatch_queue> *_chatDelegateQueue;
    id <_TtP9TwitchKit37TWMessageParserSystemMessageLocalizer_> _messageParserSystemMessageLocalizer;
    struct shared_ptr<ttv::chat::ChatAPI> _chatAPI;
    struct shared_ptr<(anonymous namespace)::LocalChatAPIListener> _chatAPIListener;
    struct shared_ptr<(anonymous namespace)::LocalChatChannelListener> _chatChannelListener;
    struct shared_ptr<(anonymous namespace)::LocalChatThreadsListener> _chatThreadsListener;
    struct shared_ptr<(anonymous namespace)::LocalChatRaidListener> _chatRaidListener;
    struct shared_ptr<(anonymous namespace)::LocalChatRoomNotificationsListener> _roomNotificationsListener;
    struct shared_ptr<ttv::chat::IChatRoomNotifications> _chatRoomNotifications;
    struct map<unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ttv::chat::IChatChannelProperties>>>> _chatChannelPropertiesByChannelID;
    NSMutableDictionary *_squadNotificationsListenersBySquadID;
    NSMutableDictionary *_multiviewNotificationsListenersByChannelID;
    struct map<unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::shared_ptr<ttv::chat::ISubscriptionsNotifications>>>> _subscriptionsNotificationsByUserID;
    NSDictionary *_globalBadgeSets;
    NSDictionary *_chatRaidsByChannelID;
    id <TWTwitchChatAdapterDelegate> _delegate;
}

+ (id)tokenizeChatMessageWithString:(id)arg1 embeddedEmotes:(id)arg2;
+ (id)processChanlet:(const struct Chanlet *)arg1 ownerChannelID:(unsigned int)arg2;
+ (id)processMultiviewContentAttribute:(const struct MultiviewContentAttribute *)arg1;
+ (id)processRaidStatus:(const struct RaidStatus *)arg1;
+ (unsigned long long)parseTTVChatMessageSendError:(unsigned int)arg1;
+ (id)processChatBadgeSet:(const struct BadgeSet *)arg1;
+ (id)processChatUserList:(const vector_71a45c04 *)arg1;
+ (id)processChatUser:(const struct ChatUserInfo *)arg1;
+ (id)processTokenizedLiveChatMessageList:(const vector_12e8bee1 *)arg1;
+ (id)processTokenizedWhisperMessageList:(const vector_35adc749 *)arg1;
+ (id)parseChatNotice:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) __weak id <TWTwitchChatAdapterDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSDictionary *chatRaidsByChannelID; // @synthesize chatRaidsByChannelID=_chatRaidsByChannelID;
@property(readonly, nonatomic) NSDictionary *globalBadgeSets; // @synthesize globalBadgeSets=_globalBadgeSets;
- (void)addChannelIdentity:(id)arg1;
- (void)unsubscribeFromPropertyUpdatesForChannel:(id)arg1;
- (void)subscribeToPropertyUpdatesForChannel:(id)arg1 withUser:(id)arg2;
- (_Bool)fetchUserEmotesetsForUserWithIdentifier:(unsigned int)arg1;
- (id)emoteImageURLForId:(id)arg1 scale:(double)arg2;
- (id)badgeImageURLforBadgeSetNamed:(id)arg1 versionNamed:(id)arg2 onChannel:(id)arg3 scale:(double)arg4;
- (id)badgeSetsForChannel:(id)arg1;
@property(readonly, nonatomic) NSDictionary *emotesetData;
@property(readonly, nonatomic) NSDictionary *userEmotesets;
- (void)disableSubscriptionsListenerForUserID:(unsigned int)arg1;
- (void)enableSubscriptionsListenerForUserID:(unsigned int)arg1;
- (void)disposeMultiviewNotificationsListener:(id)arg1;
- (void)createMultiviewNotificationsListenerWithUserID:(unsigned int)arg1 channelID:(unsigned int)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)disposeSquadNotificationsListener:(id)arg1;
- (void)createSquadNotificationsListenerWithUserID:(unsigned int)arg1 squadID:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)userWasTimedOutFromRoomsInChannelID:(id)arg1 untilDate:(id)arg2;
- (void)userBannedStatusChanged:(_Bool)arg1 inChannelID:(id)arg2;
- (void)stopListeningForChatNotifications;
- (void)startListeningForChatNotificationsWithUserID:(unsigned int)arg1;
- (void)subscribeToFollowingEventsWithUserID:(unsigned int)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)createChatRaidWithUserId:(unsigned int)arg1 channelId:(unsigned int)arg2;
- (void)requestChannelBadgesForChannelId:(id)arg1;
- (void)requestGlobalBadges;
- (id)makeBitsAdapterForUserWithIdentifier:(unsigned int)arg1;
- (void)requestBitsConfigurationForChannelId:(unsigned int)arg1 forUserWithIdentifier:(unsigned int)arg2;
- (void)requestGlobalBitsConfiguration;
- (void)setLastReadMessageId:(unsigned long long)arg1 inThreadWithId:(id)arg2 forUser:(id)arg3;
- (void)fetchListOfUsersBlockedByUserId:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (_Bool)user:(id)arg1 isBlockingUser:(id)arg2;
- (void)sendMessage:(id)arg1 fromUser:(id)arg2 toChannel:(id)arg3;
- (void)loginUserWithIdentifier:(id)arg1;
- (void)partChannel:(id)arg1 forMaybeUser:(id)arg2;
- (void)joinChannel:(id)arg1 withMaybeUser:(id)arg2;
- (void)subscribedToChannel:(unsigned int)arg1 forUser:(unsigned int)arg2;
- (void)chanletUpdated:(struct Chanlet *)arg1 inChannel:(unsigned int)arg2;
- (void)squadEndedWithIdentifier:(id)arg1;
- (void)squadUpdatedWithIdentifier:(id)arg1 info:(struct SquadInfo *)arg2;
- (void)receivedExtensionMessage:(struct ExtensionMessage *)arg1 forChannelID:(unsigned int)arg2;
- (void)channelHostStatusChangedForChannelID:(unsigned int)arg1 targetChannelName:(id)arg2 withNoticeKey:(id)arg3;
- (void)channelPropertiesUpdatedForChannelID:(id)arg1 ritualsEnabled:(_Bool)arg2;
- (void)chatRaidCancelledWithStatus:(const struct RaidStatus *)arg1;
- (void)chatRaidFiredWithStatus:(const struct RaidStatus *)arg1;
- (void)chatRaidUpdatedWithStatus:(const struct RaidStatus *)arg1;
- (void)chatRaidStartedWithStatus:(const struct RaidStatus *)arg1;
- (void)autoModTimedOutSentCheerForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)autoModDeniedSentCheerForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)autoModCaughtSentCheerForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)autoModApprovedSentMessageForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)autoModDeniedSentMessageForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)autoModCaughtSentMessageForUser:(unsigned int)arg1 channel:(unsigned int)arg2;
- (void)chatChannelModNoticeSubsOnlyOffForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeSubsOnlyForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeSlowOffForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeSlowForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3 slowModeDuration:(double)arg4;
- (void)chatChannelModNoticeR9KOffForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeR9KForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeFollowersOnlyOffForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeFollowersOnlyForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3 minimumFollowingDuration:(double)arg4;
- (void)chatChannelModNoticeEmoteOnlyOffForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeEmoteOnlyForUser:(unsigned int)arg1 channel:(unsigned int)arg2 modName:(id)arg3;
- (void)chatChannelModNoticeMessageDeletedInChannel:(unsigned int)arg1 moderatorName:(id)arg2 targetName:(id)arg3 deletedMessage:(id)arg4;
- (void)chatChannelTargetUserUnbannedInChannel:(unsigned int)arg1 moderatorName:(id)arg2 targetName:(id)arg3;
- (void)chatChannelTargetUserUntimedOutInChannel:(unsigned int)arg1 moderatorName:(id)arg2 targetName:(id)arg3;
- (void)chatChannelTargetUserBannedInChannel:(unsigned int)arg1 moderatorName:(id)arg2 targetName:(id)arg3;
- (void)chatChannelTargetUserTimedOutInChannel:(unsigned int)arg1 moderatorName:(id)arg2 targetName:(id)arg3 timeoutDuration:(unsigned long long)arg4;
- (void)chatChannelMessageDeletedForUser:(unsigned int)arg1 channel:(unsigned int)arg2 deletedMessageID:(id)arg3 senderLoginName:(id)arg4 messageContent:(id)arg5;
- (void)chatChannelGenericNoticeReceived:(const struct GenericMessageNotice *)arg1 forUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatChannelUnraidNoticeReceived:(id)arg1 forUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatChannelRaidNoticeReceived:(id)arg1 forUser:(unsigned int)arg2 channel:(unsigned int)arg3;
- (void)chatChannelNoticeReceivedForMaybeUser:(id)arg1 channel:(id)arg2 key:(id)arg3 params:(id)arg4;
- (void)chatChannelHostTargetChangedForMaybeUser:(id)arg1 channel:(id)arg2 targetChannel:(id)arg3 viewerCount:(unsigned long long)arg4;
- (void)chatChannelMessagesClearedForMaybeUser:(id)arg1 channel:(id)arg2;
- (void)chatChannelUserMessagesClearedForMaybeUser:(id)arg1 channel:(id)arg2 clearUser:(id)arg3;
- (void)chatChannelFirstTimeChatterNoticeReceived:(const struct FirstTimeChatterNotice *)arg1 forMaybeUser:(id)arg2 channel:(id)arg3;
- (void)chatChannelSubscriptionNoticeReceived:(const struct SubscriptionNotice *)arg1 forMaybeUser:(id)arg2 channel:(id)arg3;
- (void)chatChannelMessagesReceivedForMaybeUser:(id)arg1 channel:(id)arg2 messageList:(const vector_12e8bee1 *)arg3;
- (void)chatChannelLocalUserChangedForMaybeUser:(id)arg1 channel:(id)arg2 userInfo:(const struct ChatUserInfo *)arg3;
- (void)chatChannelInfoChangedForMaybeUser:(id)arg1 channel:(id)arg2 channelInfo:(const struct ChatChannelInfo *)arg3;
- (void)chatChannelRestrictionsChangedForUser:(unsigned int)arg1 channel:(unsigned int)arg2 restrictions:(const struct ChatChannelRestrictions *)arg3;
- (void)chatChannelStateChangedForMaybeUser:(id)arg1 channel:(id)arg2 state:(int)arg3 error:(unsigned int)arg4;
- (void)chatThreadGlobalUnreadCountsChangedForUser:(id)arg1 unreadCounts:(const struct UnreadThreadCounts *)arg2;
- (void)chatThreadUnreadCountsFetchCompleteForUser:(id)arg1 unreadCounts:(const struct UnreadThreadCounts *)arg2 result:(unsigned int)arg3;
- (void)chatThreadRealtimeMessageReceivedForUser:(id)arg1 threadId:(id)arg2 message:(const struct WhisperMessage *)arg3;
- (void)chatFetchChannelBitsConfigurationComplete:(unsigned int)arg1 bitsConfiguration:(const shared_ptr_1162ea4f *)arg2 error:(unsigned int)arg3;
- (void)chatFetchGlobalBitsConfigurationComplete:(const shared_ptr_1162ea4f *)arg1 error:(unsigned int)arg2;
- (void)chatFetchChannelBadgesComplete:(id)arg1 badgeSet:(const struct BadgeSet *)arg2 error:(unsigned int)arg3;
- (void)chatFetchGlobalBadgesComplete:(const struct BadgeSet *)arg1 error:(unsigned int)arg2;
- (void)chatUserEmoticonSetsChanged:(id)arg1 sets:(const vector_9364275c *)arg2;
- (void)chatModuleStateChanged:(int)arg1 error:(unsigned int)arg2;
- (id)errorWithSDKErrorCode:(unsigned int)arg1;
@property(readonly, nonatomic) unsigned long long status;
- (void)setStatus:(unsigned long long)arg1;
- (void)update;
- (void)shutdownSynchronously:(_Bool)arg1;
- (void)shutdownInternal:(_Bool)arg1;
- (void)dealloc;
- (id)initWithCoreAPI:(shared_ptr_4d0126a2)arg1 delegate:(id)arg2 workQueue:(id)arg3 delegateQueue:(id)arg4 messageParserSystemMessageLocalizer:(id)arg5;

@end

