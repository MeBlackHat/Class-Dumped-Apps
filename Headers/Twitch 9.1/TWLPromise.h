//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class TWLObjCPromiseBox;
@protocol TWLCancellable;

@interface TWLPromise : NSObject
{
    TWLObjCPromiseBox *_box;
}

+ (pair_80c2c6fc)makePromiseWithResolver;
+ (id)newCancelled;
+ (id)newRejectedWithError:(id)arg1;
+ (id)newFulfilledWithValue:(id)arg1;
+ (id)newOnContext:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
+ (id)newCancelledOnContext:(id)arg1 afterDelay:(double)arg2;
+ (id)newCancelledAfterDelay:(double)arg1;
+ (id)newRejectedOnContext:(id)arg1 withError:(id)arg2 afterDelay:(double)arg3;
+ (id)newRejectedWithError:(id)arg1 afterDelay:(double)arg2;
+ (id)newFulfilledOnContext:(id)arg1 withValue:(id)arg2 afterDelay:(double)arg3;
+ (id)newFulfilledWithValue:(id)arg1 afterDelay:(double)arg2;
+ (id)race:(id)arg1 cancelRemaining:(_Bool)arg2;
+ (id)race:(id)arg1;
+ (id)whenFulfilled:(id)arg1 qos:(unsigned int)arg2 cancelOnFailure:(_Bool)arg3;
+ (id)whenFulfilled:(id)arg1 cancelOnFailure:(_Bool)arg2;
+ (id)whenFulfilled:(id)arg1 qos:(unsigned int)arg2;
+ (id)whenFulfilled:(id)arg1;
- (void).cxx_destruct;
- (id)debugDescription;
- (void)pipeToResolver:(id)arg1;
- (void)enqueueCallbackWithoutOneshot:(CDUnknownBlockType)arg1 willPropagateCancel:(_Bool)arg2;
@property(readonly) id <TWLCancellable> cancellable;
- (id)ignoringCancel;
- (id)requestCancelOnDealloc:(id)arg1;
- (id)requestCancelOnInvalidate:(id)arg1;
- (void)requestCancel;
@property(readonly) tuple_d39fee6c result;
- (_Bool)getValue:(id *)arg1 error:(id *)arg2;
- (id)propagatingCancellationOnContext:(id)arg1 cancelRequestedHandler:(CDUnknownBlockType)arg2;
- (id)whenCancelledOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)whenCancelledOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)whenCancelled:(CDUnknownBlockType)arg1;
- (id)tap;
- (id)tapOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)tapOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)tap:(CDUnknownBlockType)arg1;
- (id)alwaysOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)alwaysOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)always:(CDUnknownBlockType)arg1;
- (id)inspectOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)inspectOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)inspect:(CDUnknownBlockType)arg1;
- (id)recoverOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)recoverOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)recover:(CDUnknownBlockType)arg1;
- (id)catchOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)catchOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)catch:(CDUnknownBlockType)arg1;
- (id)mapOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)mapOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)map:(CDUnknownBlockType)arg1;
- (id)thenOnContext:(id)arg1 token:(id)arg2 handler:(CDUnknownBlockType)arg3;
- (id)thenOnContext:(id)arg1 handler:(CDUnknownBlockType)arg2;
- (id)then:(CDUnknownBlockType)arg1;
- (void)dealloc;
- (id)initDelayed;
- (id)initWithResolver:(id *)arg1;
- (id)initCancelled;
- (id)initRejectedWithError:(id)arg1;
- (id)initFulfilledWithValue:(id)arg1;
- (id)initOnContext:(id)arg1 withBlock:(CDUnknownBlockType)arg2;
- (id)timeoutOnContext:(id)arg1 withDelay:(double)arg2;
- (id)timeoutWithDelay:(double)arg1;
- (id)delay:(double)arg1 onContext:(id)arg2;
- (id)delay:(double)arg1;
- (id)initCancelledOnContext:(id)arg1 afterDelay:(double)arg2;
- (id)initCancelledAfterDelay:(double)arg1;
- (id)initRejectedOnContext:(id)arg1 withError:(id)arg2 afterDelay:(double)arg3;
- (id)initRejectedWithError:(id)arg1 afterDelay:(double)arg2;
- (id)initFulfilledOnContext:(id)arg1 withValue:(id)arg2 afterDelay:(double)arg3;
- (id)initFulfilledWithValue:(id)arg1 afterDelay:(double)arg2;

@end

