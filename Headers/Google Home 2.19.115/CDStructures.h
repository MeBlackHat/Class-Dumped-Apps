//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GMSModelStyleIcon, GMSx_GPBMessage, GPBMessage, NSData, NSMutableData, NSObject, NSOutputStream, NSString, TAGPBArray, TAGPBGeneratedMessage;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ASTAvocadoAngleSettings {
    struct ASTAvocadoYawAngleSettings yaw;
    struct ASTAvocadoPitchAngleSettings pitch;
};

struct ASTAvocadoPitchAngleSettings {
    float up;
    float center;
    float down;
};

struct ASTAvocadoYawAngleSettings {
    float left;
    float center;
    float right;
};

struct ASTImageData {
    struct opaqueCMSampleBuffer *sampleBuffer;
    unsigned int orientation;
    unsigned long long width;
    unsigned long long height;
    struct ASTImageExifData exif;
};

struct ASTImageExifData {
    double apertureSize;
    double exposureTime;
    double isoSpeed;
    double luminance;
    double brightness;
    double angularVelocity;
};

struct AbsolutePosition;

struct AcquisitionParams {
    _Bool _field1;
    int _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    int _field7;
};

struct AcquisitionScorer;

struct AdaptiveJitterBuffer {
    float _field1;
    struct DelayCalculator _field2;
    struct DelayCalculator _field3;
    struct SortedDeque<JBPacket> _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    struct timeval _field12;
    int _field13;
};

struct AdjustableTextureShaderState;

struct Aead {
    CDUnknownFunctionPointerType *_field1;
};

struct Alignment {
    unsigned char value_;
};

struct AppContactRequester;

struct AreaGroup;

struct Array<float, -1, 1, 0, -1, 1> {
    struct DenseStorage<float, -1, -1, 1, 0> _field1;
};

struct AsyncDNSResolverSockets {
    struct _opaque_pthread_t *mAsyncDNSThreadHandle[2];
    struct _opaque_pthread_mutex_t mAsyncDNSMutex;
    struct _opaque_pthread_cond_t {
        long long __sig;
        char __opaque[40];
    } mAsyncDNSCondVar;
    struct DNSResolver *mAsyncDNSQueueHead;
    struct DNSResolver *mAsyncDNSQueueTail;
    struct InetLayer *mInet;
};

struct Audio {
    int _field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioBytePacketTranslation {
    long long _field1;
    long long _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct AudioComponentDescription {
    unsigned int componentType;
    unsigned int componentSubType;
    unsigned int componentManufacturer;
    unsigned int componentFlags;
    unsigned int componentFlagsMask;
};

struct AudioConverterPrimeInfo {
    unsigned int leadingFrames;
    unsigned int trailingFrames;
};

struct AudioDecoderFactory;

struct AudioDeviceModule {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioEncoderFactory;

struct AudioFrame;

struct AudioFramePacketTranslation {
    long long _field1;
    long long _field2;
    unsigned int _field3;
};

struct AudioModemDecoder {
    struct unique_ptr<audio_whispernet::WhispernetDecoder, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> _field1;
    struct unique_ptr<audio_whispernet_dtmf::DtmfDecoder, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> _field2;
    int _field3;
    int _field4;
};

struct AudioProcessing;

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioSourceInterface;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioTimeStamp {
    double _field1;
    unsigned long long _field2;
    double _field3;
    unsigned long long _field4;
    struct SMPTETime _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct AudioTrackInterface;

struct BLEEndPoint;

struct BaseEntity;

struct Behavior;

struct BindWatcher;

struct Binding {
    void *AppState;
    struct WeaveExchangeManager *mExchangeManager;
    unsigned char mRefCount;
    unsigned int mState:4;
    unsigned int mSecurityOption:3;
    unsigned int mAddressingOption:3;
    unsigned int mTransportOption:3;
    unsigned int mFlags:3;
    unsigned char mDNSOptions;
    CDUnknownFunctionPointerType mAppEventCallback;
    CDUnknownFunctionPointerType mProtocolLayerCallback;
    void *mProtocolLayerState;
    unsigned long long mPeerNodeId;
    unsigned int mInterfaceId;
    unsigned short mPeerPort;
    struct IPAddress mPeerAddress;
    char *mHostName;
    struct WeaveConnection *mCon;
    unsigned int mDefaultResponseTimeoutMsec;
    unsigned int mUDPPathMTU;
    struct WRMPConfig mDefaultWRMPConfig;
    unsigned char mHostNameLen;
    unsigned char mEncType;
    unsigned short mAuthMode;
    unsigned int mKeyId;
};

struct BitrateAdjuster;

struct BleApplicationDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct BleDelegateTrampoline {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    id _field3;
};

struct BleLayer {
    int mState;
    void *mAppState;
    CDUnknownFunctionPointerType OnWeaveBleConnectReceived;
    struct BlePlatformDelegate *mPlatformDelegate;
    struct BleApplicationDelegate *mApplicationDelegate;
    struct Layer *mSystemLayer;
};

struct BlePlatformDelegate {
    CDUnknownFunctionPointerType *_field1;
};

struct BlendState;

struct BlockBasedBehavior;

struct BubbleBehavior;

struct BuildingGroupFadeBehavior;

struct ByteBuffer {
    vector_aab22ae2 _field1;
};

struct ByteSymbolConverter {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct CATransform3D {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    double _field16;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct Call;

struct CallInfoCallback;

struct CallManager;

struct CallOptionsBuilder;

struct CalloutImageLayout {
    struct {
        unsigned int x;
        unsigned int y;
    } imageAnchor;
    CDStruct_0a4f9365 contentCollisionBounds;
    CDStruct_0a4f9365 arrowCollisionBounds;
    struct {
        unsigned int width;
        unsigned int height;
    } imageSize;
};

struct CalloutSharedState;

struct CalloutStrategy;

struct Camera;

struct CardCorners {
    struct Point2D<float> *_field1;
    struct Point2D<float> *_field2;
    struct Point2D<float> *_field3;
    struct Point2D<float> *_field4;
};

struct CardEdges {
    struct Line *_field1;
    struct Line *_field2;
    struct Line *_field3;
    struct Line *_field4;
};

struct CategorizedLabelProvider;

struct ChallengeImpl;

struct Chromaticity {
    float _field1;
    float _field2;
};

struct Client;

struct ClientConfigBuilder;

struct ClientVectorOpsBehavior;

struct ClientVectorOpsPassConfiguration {
    char *_field1;
    char *_field2;
    char *_field3;
    char *_field4;
    char *_field5;
};

struct CodecBufferUsage;

struct CodecSpecificInfo {
    int _field1;
    union CodecSpecificInfoUnion _field2;
    struct optional<webrtc::GenericFrameInfo> _field3;
    struct optional<webrtc::FrameDependencyStructure> _field4;
};

struct CodecSpecificInfoH264 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CodecSpecificInfoVP8 {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    char _field4;
    _Bool _field5;
    unsigned long long _field6[3];
    unsigned long long _field7;
    unsigned long long _field8[3];
    unsigned long long _field9;
};

struct CodecSpecificInfoVP9 {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned char _field6;
    _Bool _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned long long _field10;
    unsigned long long _field11;
    _Bool _field12;
    unsigned short _field13[8];
    unsigned short _field14[8];
    struct GofInfoVP9 _field15;
    unsigned char _field16;
    unsigned char _field17[3];
    _Bool _field18;
};

struct Collidable2D {
    CDUnknownFunctionPointerType *_field1;
};

struct CollidableSet2D;

struct ColorMaskState;

struct ColorMatrix {
    float *m_;
};

struct ColorSpace {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    int _field4;
    int _field5;
    int _field6;
    struct optional<webrtc::HdrMetadata> _field7;
};

struct ColorSpan;

struct ColoredOverlayBehavior;

struct ColoredPoint;

struct CompressedTuple<std::__1::allocator<int>, unsigned long> {
    unsigned long long _field1;
};

struct CompressedTuple<std::__1::allocator<webrtc::CodecBufferUsage>, unsigned long> {
    unsigned long long _field1;
};

struct CompressedTuple<std::__1::allocator<webrtc::DecodeTargetIndication>, unsigned long> {
    unsigned long long _field1;
};

struct CompressedTuple<std::__1::allocator<webrtc::RenderResolution>, unsigned long> {
    unsigned long long _field1;
};

struct Constraint;

struct Constraints {
    struct Constraint *_field1;
    struct Constraint *_field2;
    struct __compressed_pair<webrtc::MediaConstraints::Constraint *, std::__1::allocator<webrtc::MediaConstraints::Constraint>> {
        struct Constraint *_field1;
    } _field3;
};

struct ContactManager;

struct ContainerImpl;

struct CookieStore;

struct CopyOnWriteBuffer {
    struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct CriticalSection {
    struct _opaque_pthread_mutex_t mutex_;
    struct _opaque_pthread_t *thread_;
    int recursion_count_;
};

struct CryptoOptions {
    struct Srtp _field1;
    struct SFrame _field2;
};

struct DASHDataInputProvider {
    CDUnknownFunctionPointerType *_vptr$DataInputProvider;
    _Bool doneAdding_;
    _Bool gotError_;
    NSObject *data_ready_semaphore_;
    NSObject *access_semaphore_;
    NSMutableData *data_;
    char *base_;
    unsigned long long size_;
    unsigned long long offset_;
};

struct DNSResolver;

struct Data;

struct DataBuffer {
    struct CopyOnWriteBuffer _field1;
    _Bool _field2;
};

struct DataChannelDelegateAdapter;

struct DataChannelInit {
    _Bool reliable;
    _Bool ordered;
    struct optional<int> maxRetransmitTime;
    struct optional<int> maxRetransmits;
    basic_string_90719d97 protocol;
    _Bool negotiated;
    int id;
};

struct DataChannelInterface;

struct DataInputProvider;

struct DbCommitHook;

struct DbWrapperFactory;

struct DbWrapperFactoryFactory;

struct DbWrapperInterface;

struct DbWrapperParams;

struct DbWrapperParamsBuilder;

struct DecisionPoint;

struct DecodeTokenParams {
    int _field1;
    _Bool _field2;
    float _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    int _field11;
};

struct DefaultAlphaShaderState;

struct DefaultShaderState;

struct DelayCalculator {
    int _field1;
    int _field2;
    struct SortedDeque<TimingInfo> _field3;
};

struct DelayedMessage;

struct DenseStorage<float, -1, -1, -1, 0> {
    float *_field1;
    long long _field2;
    long long _field3;
};

struct DenseStorage<float, -1, -1, 1, 0> {
    float *_field1;
    long long _field2;
};

struct DenseStorage<std::__1::complex<float>, -1, -1, -1, 1> {
    struct complex<float> *_field1;
    long long _field2;
    long long _field3;
};

struct DepthBufferState;

struct DeterministicAead {
    CDUnknownFunctionPointerType *_field1;
};

struct DtmfDecoder {
    struct DtmfDecoderParams _field1;
    struct ByteSymbolConverter _field2;
    struct TokenSelector _field3;
    int _field4;
    int _field5;
    int _field6;
    float _field7;
    float _field8;
    float _field9;
    int _field10;
    float _field11;
    int _field12;
    int _field13;
    struct unique_ptr<audio_dsp::Resampler<float>, std::__1::default_delete<audio_dsp::Resampler<float>>> _field14;
    struct vector<audio_whispernet_dtmf::ToneStrengthFilter, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> _field15;
    struct vector<audio_whispernet::StreamBuffer<float>, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> _field16;
    int _field17;
    _Bool _field18;
};

struct DtmfDecoderParams {
    struct DtmfEncoderParams _field1;
    float _field2;
    float _field3;
    struct ToneNormalizationParams _field4;
    int _field5;
    float _field6;
    float _field7;
    int _field8;
    int _field9;
    float _field10;
};

struct DtmfEncoderParams {
    float _field1;
    int _field2;
    float _field3;
    vector_7584168e _field4;
    vector_7584168e _field5;
    int _field6;
    struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> _field7;
    int _field8;
    int _field9;
    _Bool _field10;
    float _field11;
};

struct DtmfSenderInterface;

struct EAGLContext {
    Class _field1;
    struct _EAGLContextPrivate *_field2;
};

struct EncodedImage {
    unsigned int _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
    _Bool _field8;
    int _field9;
    struct PlayoutDelay _field10;
    struct Timing _field11;
    scoped_refptr_05c3cd2c _field12;
    unsigned long long _field13;
    char *_field14;
    unsigned long long _field15;
    unsigned int _field16;
    struct optional<int> _field17;
    struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> _field18;
    struct optional<webrtc::ColorSpace> _field19;
    struct RtpPacketInfos _field20;
    _Bool _field21;
};

struct EncodedImageBufferInterface;

struct EntityRenderer;

struct EntityState;

struct ErrorLogger;

struct EventLogger;

struct EventPublisher;

struct ExchangeContext {
    struct WeaveExchangeManager *ExchangeMgr;
    unsigned short mMsgProtocolVersion;
    struct WeaveConnection *Con;
    unsigned long long PeerNodeId;
    struct IPAddress PeerAddr;
    unsigned int PeerIntf;
    unsigned short PeerPort;
    unsigned short ExchangeId;
    void *AppState;
    _Bool AllowDuplicateMsgs;
    unsigned char EncryptionType;
    unsigned short KeyId;
    unsigned int RetransInterval;
    unsigned int ResponseTimeout;
    struct WRMPConfig mWRMPConfig;
    CDUnknownFunctionPointerType OnMessageReceived;
    CDUnknownFunctionPointerType OnResponseTimeout;
    CDUnknownFunctionPointerType OnRetransmissionTimeout;
    CDUnknownFunctionPointerType OnConnectionClosed;
    CDUnknownFunctionPointerType OnKeyError;
    CDUnknownFunctionPointerType OnThrottleRcvd;
    CDUnknownFunctionPointerType OnDDRcvd;
    CDUnknownFunctionPointerType OnSendError;
    CDUnknownFunctionPointerType OnAckRcvd;
    struct PacketBuffer *msg;
    unsigned int backoff;
    unsigned int currentBcastMsgID;
    unsigned char msgsReceived;
    unsigned char rebroadcastThreshold;
    unsigned short mFlags;
    unsigned int mPendingPeerAckId;
    unsigned short mWRMPNextAckTime;
    unsigned short mWRMPThrottleTimeout;
    unsigned char mRefCount;
};

struct Executor;

struct ExpansionInfo {
    unsigned short _field1;
    id _field2;
    _Bool _field3;
    id _field4;
};

struct FIRFilter<std::__1::complex<float>, std::__1::complex<float>> {
    struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> _field1;
    struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> _field2;
};

struct FLXAxisFactor {
    float _field1;
    float _field2;
};

struct FLXPoint {
    float _field1;
    float _field2;
};

struct FabricStateDelegate;

struct FaceDetector;

struct FeatureData;

struct FileRotatingLogSink;

struct FragmentDownload;

struct FragmentStore;

struct FragmentUpload;

struct FrameDecryptorInterface;

struct FrameDependencyStructure {
    int _field1;
    int _field2;
    int _field3;
    struct InlinedVector<int, 10, std::__1::allocator<int>> _field4;
    struct InlinedVector<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution>> _field5;
    struct vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate>> _field6;
};

struct FrameDependencyTemplate;

struct FrameEncryptorInterface;

struct Frustum2D {
    CDUnknownFunctionPointerType *_field1;
    struct Point2D _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Rectangle2D _field6;
};

struct GAIReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GAKPacketData {
    unsigned int mNumberPackets;
    struct AudioStreamPacketDescription *mPacketDescriptions;
    struct AudioBufferList *mBufferList;
};

struct GCKCastMessageSegmenterOutgoingMessage {
    Class _field1;
    _Bool _field2;
    _Bool _field3;
    id _field4;
    id _field5;
    unsigned long long _field6;
};

struct GFBArchivedFeedbackReportMetadata {
    unsigned int length;
    unsigned int version;
    long long timestamp;
};

struct GIPPerformanceSimpleSample;

struct GLAlphaOnlyTextureShaderState;

struct GLAlphaShaderState;

struct GLBasicShaderState;

struct GLBuildingFadingAlphaShaderState;

struct GLBuildingFadingShaderState;

struct GLColorPair {
    unsigned int first;
    unsigned int second;
};

struct GLState {
    CDUnknownFunctionPointerType *_field1;
    struct GLrectangle _field2;
    struct GLrectangle _field3;
    _Bool _field4;
    unsigned int _field5;
    struct Vector4f _field6;
    _Bool _field7;
    int _field8;
    _Bool _field9;
    float _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    unsigned int _field19;
    _Bool _field20;
    unsigned int _field21;
    unsigned int _field22;
    unsigned int _field23[8];
    unsigned int _field24;
    _Bool _field25;
    unsigned int _field26;
    _Bool _field27;
    unsigned int _field28;
    _Bool _field29;
    unsigned int _field30;
    _Bool _field31;
    unsigned int _field32;
    unsigned int _field33;
    _Bool _field34;
    unsigned int _field35;
    int _field36;
    unsigned int _field37;
    _Bool _field38;
    unsigned int _field39;
    _Bool _field40;
    unsigned int _field41;
    unsigned int _field42;
    unsigned int _field43;
    _Bool _field44;
    float _field45;
    float _field46;
    _Bool _field47;
    unsigned int _field48;
    _Bool _field49;
    struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> _field50;
    float _field51;
    _Bool _field52;
    unsigned long long _field53;
    unsigned int _field54;
    unsigned int _field55;
};

struct GLrectangle {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct GMSContourList {
    vector_12bd641b indices_;
    vector_c5a5cb90 vertices_;
};

struct GMSCoordinate {
    double latitude;
    double longitude;
};

struct GMSCoordinateRectangle {
    struct GMSCoordinate center;
    struct GMSCoordinate span;
};

struct GMSCopyrightOverlayPadding {
    double _field1;
    double _field2;
    long long _field3;
};

struct GMSEntityTapClassStatusSet {
    _Bool is_whitelist_;
    struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> classes_;
};

struct GMSEntityTapOrdering {
    struct GMSEntityTapPriority tapPriority;
    struct tuple<int, int, unsigned int> zOrder;
    short rank;
};

struct GMSEntityTapPriority {
    unsigned short tapClass;
    unsigned short relativePriority;
};

struct GMSFeatureID {
    unsigned long long cellID;
    unsigned long long fprint;
};

struct GMSGeneratedTextureAtlas;

struct GMSLazyMultiZoomStyle;

struct GMSMarkupBehavior;

struct GMSPoint2D {
    int x;
    int y;
};

struct GMSRocketIconService {
    CDUnknownFunctionPointerType *_field1;
    struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> _field2;
};

struct GMSStippleTexturePool;

struct GMSTextureAtlas {
    int _field1;
    int _field2;
    int _field3;
    struct GMSTextureAtlasItem *_field4;
};

struct GMSTextureAtlasItem;

struct GMSTileTypeInfo {
    int _field1;
    int _field2;
    unsigned int _field3;
    int _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
};

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GSKAudioSessionConfig {
    _Bool _field1;
    _Bool _field2;
};

struct GSXDynamicInteger {
    long long portraitPhone;
    long long landscapePhone;
    long long portraitPad;
    long long landscapePad;
};

struct GTLROAuthIntegrations_GenericInfoAction {
    Class _field1;
};

struct GULReachabilityApi {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
};

struct GaiaOauthTokenGetter;

struct GenericFrameInfo {
    int _field1;
    int _field2;
    struct InlinedVector<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication>> _field3;
    struct InlinedVector<int, 4, std::__1::allocator<int>> _field4;
    struct InlinedVector<int, 4, std::__1::allocator<int>> _field5;
    long long _field6;
    struct InlinedVector<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage>> _field7;
};

struct GofInfoVP9 {
    unsigned long long _field1;
    unsigned char _field2[255];
    _Bool _field3[255];
    unsigned char _field4[255];
    unsigned char _field5[255][3];
    unsigned short _field6;
};

struct GoogleHotwordResult {
    int _field1;
    int _field2;
    int _field3;
    struct GoogleHotwordResultDetail *_field4;
    int _field5;
    struct GoogleSpeakerIdResultDetail *_field6;
    int _field7;
    struct GoogleHotwordResultDetail *_field8;
    int _field9;
};

struct GoogleHotwordResultDetail;

struct GoogleSpeakerIdResultDetail;

struct GroupCallManager;

struct GroupKeyStoreBase;

struct H264BitstreamParser {
    CDUnknownFunctionPointerType *_vptr$BitstreamParser;
    struct optional<webrtc::SpsParser::SpsState> sps_;
    struct optional<webrtc::PpsParser::PpsState> pps_;
    struct optional<int> last_slice_qp_delta_;
};

struct HMECameraViewStateProperties {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
    _Bool _field17;
    _Bool _field18;
    _Bool _field19;
    _Bool _field20;
    _Bool _field21;
};

struct HMEStreamTransferDataAnalyticsCounts {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct Handle<std::__1::shared_ptr<scytale::DbCommitHook>, std::__1::shared_ptr<scytale::DbCommitHook>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ff15fcd9 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::DbWrapperFactory>, std::__1::shared_ptr<scytale::DbWrapperFactory>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f80c3c8c m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::DbWrapperFactoryFactory>, std::__1::shared_ptr<scytale::DbWrapperFactoryFactory>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e8ad2cb3 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::DbWrapperInterface>, std::__1::shared_ptr<scytale::DbWrapperInterface>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7e67c2ee m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::DbWrapperParams>, std::__1::shared_ptr<scytale::DbWrapperParams>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8a11b7a7 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::DbWrapperParamsBuilder>, std::__1::shared_ptr<scytale::DbWrapperParamsBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_fc0be075 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::EventPublisher>, std::__1::shared_ptr<scytale::EventPublisher>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_3cc9791c m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::KeyTransparencyIdConverter>, std::__1::shared_ptr<scytale::KeyTransparencyIdConverter>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ea6f61b9 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::KeyTransparencyRpcInterface>, std::__1::shared_ptr<scytale::KeyTransparencyRpcInterface>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e88d954e m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::KeyTransparencyStateStore>, std::__1::shared_ptr<scytale::KeyTransparencyStateStore>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_374389ed m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::MediaEncryptor>, std::__1::shared_ptr<scytale::MediaEncryptor>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ec984a06 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::MessageEncryptor>, std::__1::shared_ptr<scytale::MessageEncryptor>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_17c8e493 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::MessageEncryptorParamsBuilder>, std::__1::shared_ptr<scytale::MessageEncryptorParamsBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_28c3a632 m_obj;
};

struct Handle<std::__1::shared_ptr<scytale::PrekeyRpcInterface>, std::__1::shared_ptr<scytale::PrekeyRpcInterface>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_265272b0 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::AppContactRequester>, std::__1::shared_ptr<tacl::AppContactRequester>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e53e7d0a m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::AudioFrame>, std::__1::shared_ptr<tacl::AudioFrame>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8a2c361d m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::BindWatcher>, std::__1::shared_ptr<tacl::BindWatcher>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_1949bd9b m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::Call>, std::__1::shared_ptr<tacl::Call>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_04f72ccf m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::CallInfoCallback>, std::__1::shared_ptr<tacl::CallInfoCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a89686a2 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::CallManager>, std::__1::shared_ptr<tacl::CallManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_91d50efb m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::CallOptionsBuilder>, std::__1::shared_ptr<tacl::CallOptionsBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ff8aba6a m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::Client>, std::__1::shared_ptr<tacl::Client>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5e63cda4 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::ClientConfigBuilder>, std::__1::shared_ptr<tacl::ClientConfigBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b777b387 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::ContactManager>, std::__1::shared_ptr<tacl::ContactManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_06f1f349 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::EventLogger>, std::__1::shared_ptr<tacl::EventLogger>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_00effa6a m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::FragmentDownload>, std::__1::shared_ptr<tacl::FragmentDownload>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b2309849 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::FragmentStore>, std::__1::shared_ptr<tacl::FragmentStore>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_4b2fe5b7 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::FragmentUpload>, std::__1::shared_ptr<tacl::FragmentUpload>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ec3c5ba7 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::GaiaOauthTokenGetter>, std::__1::shared_ptr<tacl::GaiaOauthTokenGetter>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ca22b750 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::GroupCallManager>, std::__1::shared_ptr<tacl::GroupCallManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_4bd11637 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::IceConfigFetcher>, std::__1::shared_ptr<tacl::IceConfigFetcher>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_9f7a6f5f m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::IdHelpers>, std::__1::shared_ptr<tacl::IdHelpers>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_cc942ccc m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::LocalSession>, std::__1::shared_ptr<tacl::LocalSession>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_07464c9e m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::LoggingControl>, std::__1::shared_ptr<tacl::LoggingControl>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_01893b99 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageReceiver>, std::__1::shared_ptr<tacl::MessageReceiver>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_7932248f m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageReceiverAsync>, std::__1::shared_ptr<tacl::MessageReceiverAsync>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_50194512 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageSender>, std::__1::shared_ptr<tacl::MessageSender>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_87c945a9 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageSenderAsync>, std::__1::shared_ptr<tacl::MessageSenderAsync>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_20dcb7f5 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageTransport>, std::__1::shared_ptr<tacl::MessageTransport>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_bd1640f3 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::MessageTransportAsync>, std::__1::shared_ptr<tacl::MessageTransportAsync>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6dc9108f m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::PiiAuditor>, std::__1::shared_ptr<tacl::PiiAuditor>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6b867711 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::ServerSession>, std::__1::shared_ptr<tacl::ServerSession>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_3154ea20 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::TachyonCallManagerBuilder>, std::__1::shared_ptr<tacl::TachyonCallManagerBuilder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_2ba276e8 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::TaclContext>, std::__1::shared_ptr<tacl::TaclContext>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_0defdf4f m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::VideoDecoder>, std::__1::shared_ptr<tacl::VideoDecoder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_37ed66e6 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::VideoEncoder>, std::__1::shared_ptr<tacl::VideoEncoder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_69cff784 m_obj;
};

struct Handle<std::__1::shared_ptr<tacl::VideoFrame>, std::__1::shared_ptr<tacl::VideoFrame>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_f95e7129 m_obj;
};

struct HdrMasteringMetadata {
    struct Chromaticity _field1;
    struct Chromaticity _field2;
    struct Chromaticity _field3;
    struct Chromaticity _field4;
    float _field5;
    float _field6;
};

struct HdrMetadata {
    struct HdrMasteringMetadata _field1;
    int _field2;
    int _field3;
};

struct HistoryRing {
    struct DecisionPoint *_field1;
    int _field2;
    int _field3;
};

struct Holder;

struct HostPortList {
    char *mElements;
    char *mSuffixTable;
    unsigned char mCount;
    unsigned char mSuffixCount;
};

struct HybridDecrypt {
    CDUnknownFunctionPointerType *_field1;
};

struct HybridEncrypt {
    CDUnknownFunctionPointerType *_field1;
};

struct I420BufferInterface;

struct IOSGLState;

struct IOSPlatformContext {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> _field2;
    struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> _field3;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> _field4;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> _field5;
    struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> _field6;
    id _field7;
};

struct IPAddress {
    unsigned int Addr[4];
};

struct IVIOSGLContext;

struct IceCandidateInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceConfigFetcher;

struct IceServer {
    basic_string_90719d97 _field1;
    vector_ebb6ef3e _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    int _field5;
    basic_string_90719d97 _field6;
    vector_ebb6ef3e _field7;
    vector_ebb6ef3e _field8;
};

struct IconHandle {
    struct IconOptions *_field1;
};

struct IconOptions;

struct IconRenderer {
    CDUnknownFunctionPointerType *_field1;
};

struct IconTextureCache;

struct IdBase;

struct IdHelpers;

struct IdentifyDeviceCriteria {
    unsigned long long _field1;
    unsigned int _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned long long _field5;
};

struct ImageData;

struct ImageDataSignature {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct IndexedTriangleList2D {
    vector_52d06928 vertices_;
    vector_12bd641b indices_;
};

struct IndoorTileAnimationBehavior;

struct InetLayer {
    int State;
    void *mContext;
    void *mPlatformData;
    struct Layer *mSystemLayer;
    struct AsyncDNSResolverSockets mAsyncDNSResolver;
};

struct Inlined {
    char _field1[40];
};

struct InlinedVector<int, 10, std::__1::allocator<int>> {
    struct Storage<int, 10, std::__1::allocator<int>> _field1;
};

struct InlinedVector<int, 4, std::__1::allocator<int>> {
    struct Storage<int, 4, std::__1::allocator<int>> _field1;
};

struct InlinedVector<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage>> {
    struct Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage>> _field1;
};

struct InlinedVector<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication>> {
    struct Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication>> _field1;
};

struct InlinedVector<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution>> {
    struct Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution>> _field1;
};

struct JBPacket;

struct JSFunctionProxy;

struct JavaDataInput {
    struct DataInputProvider *_field1;
};

struct JavaDataOutput {
    id _field1;
};

struct JavaScriptExecutor;

struct Key {
    struct ByteBuffer _field1;
    int _field2;
    int _field3;
};

struct KeyPair;

struct KeyTransparencyIdConverter;

struct KeyTransparencyRpcInterface;

struct KeyTransparencyStateStore;

struct KeysetHandle;

struct KeysetReader;

struct LOT_Subpath {
    int _field1;
    double _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
    struct CGPoint _field5;
    struct LOT_Subpath *_field6;
};

struct LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false>;

struct LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false>;

struct LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false>;

struct LabelBucketRestriction;

struct LabelDedupingRule;

struct LabelElement;

struct LabelGroup {
    struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> label_elements_;
    struct Alignment alignment_;
    basic_string_90719d97 text_;
};

struct LabelProvider;

struct LabelSnapshot;

struct LabelSource;

struct LabelSourceSet {
    CDUnknownFunctionPointerType *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> _field2;
    struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> _field3;
};

struct LabelUpdateDelegate;

struct LabelableFeature;

struct LabelableFeatureSelector;

struct LabelingBehavior;

struct LabelingUpdateListener;

struct Layer {
    int mLayerState;
    void *mContext;
    void *mPlatformData;
    int mWakePipeIn;
    int mWakePipeOut;
    struct _opaque_pthread_t *mHandleSelectThread;
};

struct LayeredFeatureGroup {
    struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> _field1;
    struct map<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<GMSFeatureType>, std::__1::allocator<std::__1::pair<const GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> _field2;
};

struct Line;

struct LineState;

struct Listener;

struct LocalSession;

struct Locale {
    CDUnknownFunctionPointerType *_field1;
    char _field2[12];
    char _field3[6];
    char _field4[4];
    int _field5;
    char *_field6;
    char _field7[157];
    char *_field8;
    char _field9;
};

struct Location {
    char *_field1;
    char *_field2;
    int _field3;
};

struct LoggingControl;

struct LsdParameters {
    float min_rect_density;
    float scale_factor;
    float gradient_quantization;
    float angle_thresh;
    float log_nfa;
    float region_radius_reduce_fraction;
    int rect_improvement_attempts;
};

struct MDCActivityIndicatorMotionSpecIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
    struct MDMMotionTiming _field3;
    struct MDMMotionTiming _field4;
};

struct MDCActivityIndicatorMotionSpecProgress {
    struct MDMMotionTiming _field1;
};

struct MDCActivityIndicatorMotionSpecTransitionToDeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDCActivityIndicatorMotionSpecTransitionToIndeterminate {
    struct MDMMotionTiming _field1;
    struct MDMMotionTiming _field2;
};

struct MDMMotionCurve {
    unsigned long long _field1;
    double _field2[4];
};

struct MDMMotionRepetition {
    unsigned long long _field1;
    double _field2;
    _Bool _field3;
};

struct MDMMotionTiming {
    double _field1;
    double _field2;
    struct MDMMotionCurve _field3;
    struct MDMMotionRepetition _field4;
};

struct Mac {
    CDUnknownFunctionPointerType *_field1;
};

struct ManagerImpl;

struct MarkupPolyline;

struct MarkupRevealOptions {
    double _field1;
    double _field2;
    _Bool _field3;
    int _field4;
};

struct MarkupSprite {
    basic_string_90719d97 _field1;
    struct Vector2f _field2;
    int _field3;
    int _field4;
};

struct Mat<unsigned char> {
    int _field1;
    int _field2;
    char *_field3;
};

struct Matrix<float, -1, -1, 0, -1, -1> {
    struct DenseStorage<float, -1, -1, -1, 0> _field1;
};

struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> {
    struct DenseStorage<std::__1::complex<float>, -1, -1, -1, 1> _field1;
};

struct MediaConfig {
    _Bool _field1;
    struct Video _field2;
    struct Audio _field3;
};

struct MediaConstraints;

struct MediaEncryptor;

struct MediaSourceInterface;

struct MediaStreamInterface;

struct MediaStreamTrackInterface;

struct MediaTransportFactory;

struct Message {
    struct Location _field1;
    struct MessageHandler *_field2;
    unsigned int _field3;
    struct MessageData *_field4;
};

struct MessageData;

struct MessageEncryptor;

struct MessageEncryptorParamsBuilder;

struct MessageFormat;

struct MessageHandler;

struct MessageReceiver;

struct MessageReceiverAsync;

struct MessageSender;

struct MessageSenderAsync;

struct MessageTransport;

struct MessageTransportAsync;

struct ModelRendererValue<bool>;

struct ModelRendererValue<float>;

struct ModelRendererValue<unsigned int>;

struct MonotonicallyIncreasingCounter {
    CDUnknownFunctionPointerType *_vptr$Counter;
    unsigned int mCounterValue;
};

struct MutableState;

struct MutableStateTracker;

struct Mutex {
    struct _opaque_pthread_mutex_t mutex_;
    _Bool is_safe_;
    _Bool destroy_;
};

struct MyLocationIndicator;

struct NLManufacturingDate {
    long long NLManufacturingDateYear;
    long long NLManufacturingDateMonth;
    long long NLManufacturingDateDay;
};

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSDirectionalEdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSSet {
    Class _field1;
};

struct NSString {
    Class _field1;
};

struct NetworkControllerFactoryInterface;

struct NetworkInfo {
    int _field1;
    long long _field2;
    char *_field3;
    int _field4;
    int _field5;
    int _field6;
    char *_field7;
    unsigned int _field8;
    char *_field9;
    char *_field10;
    char *_field11;
    unsigned int _field12;
    unsigned int _field13;
    unsigned char _field14;
    short _field15;
    _Bool _field16;
};

struct NormalVector;

struct OPAC2MeasureAxisSpec {
    double _field1;
    long long _field2;
};

struct OPAC2MeasureSpec {
    struct CGSize size;
    long long widthMode;
    long long heightMode;
};

struct ObjCVideoTrackSource {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> _field4;
    struct VideoAdapter _field5;
    struct CriticalSection _field6;
    struct optional<webrtc::VideoTrackSourceInterface::Stats> _field7;
    struct VideoBroadcaster _field8;
    struct VideoBroadcaster _field9;
    struct TimestampAligner _field10;
    id _field11;
};

struct Options {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    int _field5;
    struct CryptoOptions _field6;
};

struct PacketBuffer;

struct PeerConnectionDelegateAdapter;

struct PeerConnectionDependencies;

struct PeerConnectionFactoryInterface;

struct PeerConnectionInterface;

struct PersistedCounter {
    CDUnknownFunctionPointerType *_vptr$Counter;
    unsigned int mCounterValue;
    char *mId;
    unsigned int mStartingCounterValue;
    unsigned int mEpoch;
};

struct PiiAuditor;

struct Pimpl;

struct PlaceholderUpdate;

struct PlayoutDelay {
    int _field1;
    int _field2;
};

struct Point2D {
    struct GMSPoint2D point_;
};

struct Point2D<float>;

struct Point3D {
    int _field1;
    int _field2;
    int _field3;
};

struct PointsBehavior;

struct PolylineSpan2D {
    struct __wrap_iter<const gmscore::model::Point2D *> _field1;
    struct __wrap_iter<const gmscore::model::Point2D *> _field2;
    struct __wrap_iter<const gmscore::model::Point2D *> _field3;
    float _field4;
    struct Rectangle2D _field5;
};

struct PostprocessAcquisitionParams {
    int _field1;
    int _field2;
    float _field3;
};

struct PpsState {
    _Bool bottom_field_pic_order_in_frame_present_flag;
    _Bool weighted_pred_flag;
    _Bool entropy_coding_mode_flag;
    unsigned int weighted_bipred_idc;
    unsigned int redundant_pic_cnt_present_flag;
    int pic_init_qp_minus26;
    unsigned int id;
    unsigned int sps_id;
};

struct PrekeyRpcInterface;

struct PriorityQueue {
    struct vector<rtc::Thread::DelayedMessage, std::__1::allocator<rtc::Thread::DelayedMessage>> _field1;
    struct less<rtc::Thread::DelayedMessage> _field2;
};

struct PrivateKey {
    struct ByteBuffer _field1;
    int _field2;
    int _field3;
};

struct ProfileLevelId {
    int profile;
    int level;
};

struct PublicKey {
    struct ByteBuffer _field1;
    int _field2;
    int _field3;
};

struct PublicKeySign {
    CDUnknownFunctionPointerType *_field1;
};

struct PublicKeyVerify {
    CDUnknownFunctionPointerType *_field1;
};

struct QuadDetectorOptions {
    struct Vec2 roi_center;
    float roi_width;
    float roi_height;
    int image_width;
    int image_height;
    float physical_width;
    float physical_height;
    float camera_horizontal_fov;
    float corner_outside_image_tolerance;
    int max_num_quads;
    int max_num_segments;
    float merge_segment_angle_tolerance;
    float merge_segment_mse_tolerance;
    float merge_segment_max_gap;
    float corner_angle_tolerance;
    float aspect_ratio_bound_factor;
    float area_tolerance_factor;
    float min_perimeter_coverage_fraction;
    float intersection_fuzz_factor;
    float max_geometric_error;
    float max_slant;
    float expected_tilt;
    float max_tilt_deviation;
    float max_distance;
    float area_deviation_weight;
    float corner_angle_deviation_weight;
    float aspect_ratio_deviation_weight;
    float perimeter_coverage_weight;
};

struct Quadrilateral {
    struct Vec2 _field1;
    struct Vec2 _field2;
    struct Vec2 _field3;
    struct Vec2 _field4;
    unsigned short _field5[4];
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
};

struct QueuedTaskHandler {
    CDUnknownFunctionPointerType *_field1;
};

struct RTCConfiguration {
    struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> _field1;
    int _field2;
    int _field3;
    int _field4;
    struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    struct optional<int> _field12;
    struct optional<bool> _field13;
    struct optional<bool> _field14;
    int _field15;
    int _field16;
    int _field17;
    _Bool _field18;
    int _field19;
    _Bool _field20;
    int _field21;
    int _field22;
    int _field23;
    _Bool _field24;
    struct MediaConfig _field25;
    _Bool _field26;
    int _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    _Bool _field31;
    struct optional<int> _field32;
    struct optional<int> _field33;
    struct optional<int> _field34;
    struct optional<int> _field35;
    struct optional<int> _field36;
    struct optional<int> _field37;
    struct optional<int> _field38;
    struct TurnCustomizer *_field39;
    struct optional<rtc::AdapterType> _field40;
    int _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    struct optional<bool> _field45;
    struct optional<bool> _field46;
    struct optional<bool> _field47;
    struct optional<webrtc::CryptoOptions> _field48;
    _Bool _field49;
    basic_string_90719d97 _field50;
    _Bool _field51;
    struct optional<bool> _field52;
};

struct RTCStats {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    long long _field3;
};

struct RTCStatsReport {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> _field3;
};

struct RTPFragmentationHeader {
    unsigned short _field1;
    unsigned long long *_field2;
    unsigned long long *_field3;
};

struct RecognizerOutput {
    int _field1;
    int _field2;
    int *_field3;
    int *_field4;
    int *_field5;
    float *_field6;
    int _field7;
    basic_string_90719d97 _field8;
    float _field9;
    int _field10;
    int _field11[2];
    int _field12[6];
    int _field13[6];
};

struct Rect {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
};

struct Rectangle2D {
    CDUnknownFunctionPointerType *_vptr$Collidable2D;
    struct Point2D low_;
    struct Point2D high_;
};

struct Rectangle2f {
    CDUnknownFunctionPointerType *_field1;
    struct Vector2f _field2;
    struct Vector2f _field3;
};

struct RefCountedObject<rtc::BufferT<unsigned char, false>>;

struct Region2D {
    CDUnknownFunctionPointerType *_field1;
};

struct Region2f {
    CDUnknownFunctionPointerType *_field1;
};

struct RenderBin;

struct RenderLabel;

struct RenderLabelGroup {
    CDUnknownFunctionPointerType *_field1;
    struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>>> _field2;
    int _field3;
    int _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    struct LabelGroup _field10;
    id _field11;
    id _field12;
    vector_12bd641b _field13;
    int _field14;
    int _field15;
    float _field16;
    float _field17;
    int _field18;
    _Bool _field19;
    id _field20;
    struct reffed_ptr<gmscore::vector::IconTextureCache> _field21;
    struct RenderLabel *_field22;
    struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field23;
    id _field24;
    id _field25;
};

struct RenderTarget;

struct Renderer {
    CDUnknownFunctionPointerType *_field1;
};

struct RepeatedField<float> {
    int _field1;
    int _field2;
    void *_field3;
};

struct Resampler<float>;

struct Resampler<std::__1::complex<float>>;

struct ResourceFinder {
    CDUnknownFunctionPointerType *_field1;
};

struct Result {
    _Bool _field1;
    struct CardEdges _field2;
    struct CardCorners _field3;
    Mat_c4fc5366 *_field4;
    Mat_c4fc5366 *_field5;
    Mat_c4fc5366 *_field6;
    Mat_c4fc5366 *_field7;
    _Bool _field8;
};

struct RetransTableEntry {
    unsigned int msgId;
    struct ExchangeContext *exchContext;
    struct PacketBuffer *msgBuf;
    void *msgCtxt;
    unsigned short nextRetransTime;
    unsigned char sendCount;
};

struct RtcpFeedback;

struct RtcpParameters {
    struct optional<unsigned int> _field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    _Bool _field4;
};

struct RtpCodecParameters {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    struct optional<int> _field4;
    struct optional<int> _field5;
    struct optional<int> _field6;
    struct optional<int> _field7;
    struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> _field8;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field9;
};

struct RtpEncodingParameters {
    struct optional<unsigned int> _field1;
    double _field2;
    double _field3;
    struct optional<int> _field4;
    struct optional<int> _field5;
    struct optional<double> _field6;
    struct optional<int> _field7;
    struct optional<double> _field8;
    _Bool _field9;
    basic_string_90719d97 _field10;
};

struct RtpExtension {
    basic_string_90719d97 _field1;
    int _field2;
    _Bool _field3;
};

struct RtpPacketInfos {
    struct scoped_refptr<webrtc::RtpPacketInfos::Data> _field1;
};

struct RtpParameters {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> _field3;
    struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> _field4;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field5;
    struct RtcpParameters _field6;
    int _field7;
};

struct RtpReceiverDelegateAdapter;

struct RtpReceiverInterface;

struct RtpSenderInterface;

struct RtpTransceiverInit {
    int _field1;
    vector_ebb6ef3e _field2;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field3;
};

struct RtpTransceiverInterface;

struct SFrame {
    _Bool _field1;
};

struct SMPTETime {
    short _field1;
    short _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    short _field6;
    short _field7;
    short _field8;
    short _field9;
};

struct SRLMemoizingScopeIvars;

struct SRLRegistryIvars;

struct SRLScopeTagSet {
    void *_field1[2];
};

struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
};

struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
};

struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
};

struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
};

struct SampleInfo {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field5;
};

struct SchedulingService;

struct SdpVideoFormat {
    basic_string_90719d97 _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
};

struct SecretKey {
    struct ByteBuffer _field1;
    int _field2;
    int _field3;
};

struct ServerSession;

struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>;

struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>;

struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>;

struct ServicesConfig {
    basic_string_90719d97 product_id;
    basic_string_90719d97 language;
    basic_string_90719d97 country;
    basic_string_90719d97 geo_photo_metadata_url;
    basic_string_90719d97 geo_photo_single_image_url;
    basic_string_90719d97 geo_photo_local_tiled_single_image_url;
    basic_string_90719d97 geo_photo_area_connectivity_url;
    basic_string_90719d97 alleycat_url;
    basic_string_90719d97 fife_url;
    struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> tile_templates;
};

struct SessionDescriptionInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct SharedSessionEndNode {
    unsigned long long EndNodeId;
    struct WeaveSessionKey *SessionKey;
};

struct SinkPair;

struct SkipInterpCounter {
    int currentMode;
    float currentSpeed;
    float accumulator;
    float delta;
};

struct SocketServer;

struct SortedDeque<JBPacket> {
    struct deque<JBPacket, std::__1::allocator<JBPacket>> _field1;
};

struct SortedDeque<TimingInfo> {
    struct deque<TimingInfo, std::__1::allocator<TimingInfo>> _field1;
};

struct SpatialLayer {
    unsigned short _field1;
    unsigned short _field2;
    float _field3;
    unsigned char _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
};

struct SpeexBits {
    char *chars;
    int nbBits;
    int charPtr;
    int bitPtr;
    int owner;
    int overflow;
    int buf_size;
    int reserved1;
    void *reserved2;
};

struct SpeexMode {
    void *_field1;
    CDUnknownFunctionPointerType _field2;
    char *_field3;
    int _field4;
    int _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    CDUnknownFunctionPointerType _field13;
};

struct SpotlightParams {
    _Bool tactile_styler_enabled;
    _Bool spotlight_labels_visible;
    _Bool secondary_clickability_enabled;
};

struct SpsState {
    unsigned int width;
    unsigned int height;
    unsigned int delta_pic_order_always_zero_flag;
    unsigned int separate_colour_plane_flag;
    unsigned int frame_mbs_only_flag;
    unsigned int log2_max_frame_num;
    unsigned int log2_max_pic_order_cnt_lsb;
    unsigned int pic_order_cnt_type;
    unsigned int max_num_ref_frames;
    unsigned int vui_params_present;
    unsigned int id;
};

struct Srtp {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
};

struct Stats {
    int _field1;
    int _field2;
};

struct StatsReport {
    struct scoped_refptr<webrtc::StatsReport::IdBase> _field1;
    double _field2;
    struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> _field3;
};

struct StencilState;

struct StickerBehavior;

struct Storage<int, 10, std::__1::allocator<int>> {
    struct CompressedTuple<std::__1::allocator<int>, unsigned long> _field1;
    union Data {
        struct Allocated {
            int *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<int, 4, std::__1::allocator<int>> {
    struct CompressedTuple<std::__1::allocator<int>, unsigned long> _field1;
    union Data {
        struct Allocated {
            int *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage>> {
    struct CompressedTuple<std::__1::allocator<webrtc::CodecBufferUsage>, unsigned long> _field1;
    union Data {
        struct Allocated {
            struct CodecBufferUsage *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication>> {
    struct CompressedTuple<std::__1::allocator<webrtc::DecodeTargetIndication>, unsigned long> _field1;
    union Data {
        struct Allocated {
            int *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution>> {
    struct CompressedTuple<std::__1::allocator<webrtc::RenderResolution>, unsigned long> _field1;
    union Data {
        struct Allocated {
            struct RenderResolution *_field1;
            unsigned long long _field2;
        } _field1;
        struct Inlined _field2;
    } _field2;
};

struct StreamBuffer<float> {
    vector_7584168e _field1;
    int _field2;
};

struct StringTableEntry;

struct Stroke {
    unsigned int color_;
    unsigned int end_color_;
    unsigned short width_eighths_;
    struct vector<short, std::__1::allocator<short>> dashes_;
    float width_;
    int orthogonal_offset_eighths_;
    basic_string_90719d97 texture_url_;
    basic_string_90719d97 start_cap_url_;
    basic_string_90719d97 end_cap_url_;
    float animation_duration_;
};

struct StyleID {
    long long styleID;
    unsigned long long type;
};

struct SymbolWaveCoder {
    CDUnknownFunctionPointerType *_field1;
    struct SymbolWaveCoderParams _field2;
    int _field3;
    int _field4;
    int _field5;
    vector_7584168e _field6;
    struct Matrix<float, -1, -1, 0, -1, -1> _field7;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field8;
};

struct SymbolWaveCoderParams {
    vector_7584168e _field1;
    float _field2;
    int _field3;
    float _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    float _field9;
};

struct TAGPBExtensionDescription {
    char *_field1;
    int _field2;
    char *_field3;
    int _field4;
    CDUnion_3de46016 _field5;
    char *_field6;
    unsigned int _field7;
    char *_field8;
};

struct TAGPBInputBufferState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
};

struct TAGPBMessageEnumDescription {
    char *_field1;
};

struct TAGPBMessageEnumValueDescription {
    char *_field1;
    int _field2;
};

struct TAGPBMessageExtensionRangeDescription {
    unsigned int _field1;
    unsigned int _field2;
};

struct TAGPBMessageFieldDescription {
    char *_field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    unsigned long long _field6;
    char *_field7;
    CDUnion_3de46016 _field8;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
    } _field9;
};

struct TAGPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct TCPEndPoint;

struct TachyonCallManagerBuilder;

struct TaclContext;

struct TappableMapItemQueue {
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> items_;
    struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> inactive_items_;
    struct GMSEntityTapClassStatusSet active_tap_classes_;
};

struct TextBoxStyle {
    unsigned int fill_color_;
    struct Stroke stroke_;
    GMSModelStyleIcon *box_icon_;
};

struct TextStyle {
    unsigned int color_;
    unsigned int outline_color_;
    float outline_width_;
    unsigned char size_;
    float leading_ratio_;
    float tracking_ratio_;
    int attributes_;
};

struct TextureAtlasesContext;

struct TextureCache;

struct TextureShaderState;

struct TextureState;

struct Thread {
    CDUnknownFunctionPointerType *_field1;
    struct signal_with_thread_policy<sigslot::single_threaded> _field2;
    _Bool _field3;
    struct Message _field4;
    struct list<rtc::Message, std::__1::allocator<rtc::Message>> _field5;
    struct PriorityQueue _field6;
    unsigned int _field7;
    struct CriticalSection _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct SocketServer *_field12;
    struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> _field13;
    struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> _field14;
    basic_string_90719d97 _field15;
    struct _opaque_pthread_t *_field16;
    _Bool _field17;
    _Bool _field18;
    struct QueuedTaskHandler _field19;
};

struct TileLabelProvider;

struct TilePreppingInfo {
    id _field1;
    id _field2;
    _Bool _field3;
    _Bool _field4;
};

struct TileTemplate;

struct TileUpdaterBehavior;

struct Time {
    CDUnknownFunctionPointerType *_field1;
};

struct TimestampAligner {
    int _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct Timing {
    unsigned char _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
};

struct TimingFrameTriggerThresholds {
    long long _field1;
    unsigned short _field2;
};

struct TimingInfo;

struct TokenSelector {
    struct TokenSelectorParams _field1;
    int _field2;
};

struct TokenSelectorParams {
    int _field1;
    int _field2;
    int _field3;
    _Bool _field4;
    int _field5;
    int _field6;
    int _field7;
    float _field8;
};

struct TokenSymbolConverter;

struct ToneNormalizationParams {
    float _field1;
    float _field2;
    float _field3;
};

struct ToneStrengthFilter;

struct Triangle2D;

struct TriangleList2D {
    struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> triangles_;
};

struct TurnCustomizer {
    CDUnknownFunctionPointerType *_field1;
};

struct UDPEndPoint;

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UnicodeString {
    CDUnknownFunctionPointerType *_field1;
    union StackBufferOrFields _field2;
};

struct UnitBezier {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct UnsolicitedMessageHandler {
    CDUnknownFunctionPointerType Handler;
    void *AppState;
    unsigned int ProfileId;
    struct WeaveConnection *Con;
    short MessageType;
    _Bool AllowDuplicateMsgs;
};

struct UpdateMyLocationBehaviorInternal;

struct Vec2 {
    float x;
    float y;
};

struct Vector2f;

struct Vector4f;

struct Vector<3, double> {
    double elem_[3];
};

struct VelocityItem;

struct VertexData;

struct Video {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoAdapter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
    int _field9;
    int _field10;
    struct optional<long long> _field11;
    struct optional<std::__1::pair<int, int>> _field12;
    struct optional<int> _field13;
    struct optional<std::__1::pair<int, int>> _field14;
    struct optional<int> _field15;
    struct optional<int> _field16;
    int _field17;
    int _field18;
    int _field19;
    struct CriticalSection _field20;
};

struct VideoBroadcaster {
    CDUnknownFunctionPointerType *_field1;
    struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct CriticalSection _field4;
    struct VideoSinkWants _field5;
    struct scoped_refptr<webrtc::VideoFrameBuffer> _field6;
    _Bool _field7;
};

struct VideoCodec {
    int _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned char _field11;
    struct SpatialLayer _field12[3];
    struct SpatialLayer _field13[5];
    int _field14;
    _Bool _field15;
    struct optional<int> _field16;
    struct TimingFrameTriggerThresholds _field17;
    union VideoCodecUnion _field18;
};

struct VideoCodecH264 {
    _Bool _field1;
    int _field2;
    unsigned char _field3;
};

struct VideoCodecVP8 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoCodecVP9 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    _Bool _field9;
    int _field10;
};

struct VideoDecoder;

struct VideoDecoderFactory;

struct VideoEncoder;

struct VideoEncoderFactory;

struct VideoFrame;

struct VideoFrameBuffer;

struct VideoRendererAdapter;

struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoSinkWants {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    struct optional<int> _field4;
    int _field5;
    int _field6;
};

struct VideoTrackInterface;

struct VideoTrackSourceInterface;

struct ViewRenderTargetChangedSizeListener;

struct WFSegmentEndpoints {
    struct Point2D _field1;
    struct Point2D _field2;
};

struct WRMPConfig {
    unsigned int mInitialRetransTimeout;
    unsigned int mActiveRetransTimeout;
    unsigned short mAckPiggybackTimeout;
    unsigned char mMaxRetrans;
};

struct WeaveCASEAuthDelegate;

struct WeaveCASEEngine;

struct WeaveConnection {
    unsigned long long PeerNodeId;
    struct IPAddress PeerAddr;
    struct WeaveMessageLayer *MessageLayer;
    void *AppState;
    unsigned short PeerPort;
    unsigned short DefaultKeyId;
    unsigned short AuthMode;
    unsigned char DefaultEncryptionType;
    unsigned char State;
    unsigned char NetworkType;
    _Bool ReceiveEnabled;
    _Bool SendSourceNodeId;
    _Bool SendDestNodeId;
    CDUnknownFunctionPointerType OnConnectionComplete;
    CDUnknownFunctionPointerType OnConnectionClosed;
    CDUnknownFunctionPointerType OnMessageReceived;
    CDUnknownFunctionPointerType OnReceiveError;
    int DoCloseFlags;
    struct IPAddress mPeerAddrs[4];
    struct TCPEndPoint *mTcpEndPoint;
    struct HostPortList mPeerHostPortList;
    unsigned int mTargetInterface;
    unsigned int mConnectTimeout;
    unsigned char mRefCount;
    unsigned char mDNSOptions;
    unsigned char mFlags;
    struct BLEEndPoint *mBleEndPoint;
};

struct WeaveConnectionTunnel {
    CDUnknownFunctionPointerType OnShutdown;
    void *AppState;
    struct WeaveMessageLayer *mMessageLayer;
    struct TCPEndPoint *mEPOne;
    struct TCPEndPoint *mEPTwo;
};

struct WeaveDeviceDescriptor {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned int _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    struct {
        unsigned short _field1;
        unsigned char _field2;
        unsigned char _field3;
    } _field7;
    unsigned char _field8[8];
    unsigned char _field9[6];
    char _field10[33];
    char _field11[33];
    char _field12[33];
    char _field13[17];
    unsigned short _field14;
    unsigned short _field15;
    unsigned char _field16;
};

struct WeaveDeviceManager {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    void *_field3;
    struct Layer *_field4;
    struct WeaveMessageLayer *_field5;
    struct WeaveExchangeManager *_field6;
    struct WeaveSecurityManager *_field7;
    int _field8;
    struct WeaveConnection *_field9;
    int _field10;
    void *_field11;
    union {
        CDUnknownFunctionPointerType _field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
        CDUnknownFunctionPointerType _field4;
        CDUnknownFunctionPointerType _field5;
        CDUnknownFunctionPointerType _field6;
        CDUnknownFunctionPointerType _field7;
        CDUnknownFunctionPointerType _field8;
        CDUnknownFunctionPointerType _field9;
        CDUnknownFunctionPointerType _field10;
        CDUnknownFunctionPointerType _field11;
        CDUnknownFunctionPointerType _field12;
    } _field12;
    CDUnknownFunctionPointerType _field13;
    CDUnknownFunctionPointerType _field14;
    CDUnknownFunctionPointerType _field15;
    CDUnknownFunctionPointerType _field16;
    void *_field17;
    struct ExchangeContext *_field18;
    unsigned int _field19;
    unsigned short _field20;
    struct PacketBuffer *_field21;
    struct PacketBuffer *_field22;
    _Bool _field23;
    CDUnknownFunctionPointerType _field24;
    struct IPAddress _field25;
    struct IPAddress _field26;
    struct IPAddress _field27;
    struct IPAddress _field28;
    unsigned int _field29;
    unsigned int _field30;
    struct IdentifyDeviceCriteria _field31;
    unsigned long long _field32;
    unsigned long long _field33;
    unsigned int _field34;
    unsigned int _field35;
    unsigned short _field36;
    unsigned char _field37;
    unsigned char _field38;
    unsigned char _field39;
    unsigned char _field40;
    char *_field41;
    void *_field42;
    void *_field43;
    void *_field44;
    unsigned int _field45;
    unsigned int _field46;
    unsigned int _field47;
    unsigned int _field48;
    unsigned int _field49;
    unsigned int _field50;
    unsigned int _field51;
    _Bool _field52;
    _Bool _field53;
    _Bool _field54;
    _Bool _field55;
    _Bool _field56;
    _Bool _field57;
    _Bool _field58;
    unsigned int _field59;
    char *_field60;
    unsigned int _field61;
    unsigned long long *_field62;
    unsigned int _field63;
    unsigned int _field64;
};

struct WeaveEncryptionKey_AES128CTRSHA1 {
    union {
        unsigned char DataKey[16];
        unsigned int DataKeyWords[4];
    } ;
    unsigned char IntegrityKey[20];
};

struct WeaveExchangeManager {
    struct WeaveMessageLayer *MessageLayer;
    struct WeaveFabricState *FabricState;
    unsigned char State;
    unsigned short NextExchangeId;
    unsigned long long mWRMPTimeStampBase;
    unsigned long long mWRMPCurrentTimerExpiry;
    unsigned short mWRMPTimerInterval;
    struct RetransTableEntry RetransTable[15];
    struct ExchangeContext ContextPool[16];
    unsigned long long mContextsInUse;
    struct Binding BindingPool[6];
    unsigned long long mBindingsInUse;
    struct UnsolicitedMessageHandler UMHandlerPool[32];
    CDUnknownFunctionPointerType OnExchangeContextChanged;
};

struct WeaveFabricState {
    struct WeaveMessageLayer *MessageLayer;
    unsigned long long FabricId;
    unsigned long long LocalNodeId;
    char *PairingCode;
    unsigned short DefaultSubnet;
    unsigned char State;
    struct GroupKeyStoreBase *GroupKeyStore;
    struct IPAddress ListenIPv4Addr;
    struct IPAddress ListenIPv6Addr;
    unsigned char PeerCount;
    struct MonotonicallyIncreasingCounter NextUnencUDPMsgId;
    struct MonotonicallyIncreasingCounter NextUnencTCPMsgId;
    struct WeaveSessionKey SessionKeys[64];
    struct PersistedCounter NextGroupKeyMsgId;
    unsigned int GroupKeyMsgIdFreshWindowStart;
    unsigned short MsgCounterSyncStatus;
    struct WeaveMsgEncryptionKeyCache AppKeyCache;
    struct {
        unsigned long long NodeId[128];
        unsigned int MaxUnencUDPMsgIdRcvd[128];
        unsigned int MaxGroupKeyMsgIdRcvd[128];
        unsigned short GroupKeyRcvFlags[128];
        unsigned short UnencRcvFlags[128];
        unsigned char MostRecentlyUsedIndexes[128];
    } PeerStates;
    struct FabricStateDelegate *Delegate;
    struct SharedSessionEndNode SharedSessionsNodes[10];
};

struct WeaveKeyExport {
    struct WeaveKeyExportDelegate *_field1;
    struct GroupKeyStoreBase *_field2;
    unsigned int _field3;
    struct WeaveMessageInfo *_field4;
    union {
        struct {
            unsigned short _field1;
            unsigned char _field2[65];
            unsigned char _field3[33];
        } _field1;
        struct {
            unsigned short _field1;
            unsigned char _field2[32];
        } _field2;
        struct {
            unsigned char _field1[48];
        } _field3;
    } _field5;
    unsigned char _field6;
    unsigned char _field7;
    unsigned char _field8;
    unsigned char _field9;
    unsigned char _field10[7];
    _Bool _field11;
};

struct WeaveKeyExportDelegate;

struct WeaveMessageInfo;

struct WeaveMessageLayer {
    struct Layer *SystemLayer;
    struct InetLayer *Inet;
    struct WeaveFabricState *FabricState;
    void *AppState;
    struct WeaveExchangeManager *ExchangeMgr;
    struct WeaveSecurityManager *SecurityMgr;
    unsigned int IncomingConIdleTimeout;
    unsigned char State;
    _Bool IsListening;
    _Bool mDropMessage;
    CDUnknownFunctionPointerType OnMessageReceived;
    CDUnknownFunctionPointerType OnReceiveError;
    CDUnknownFunctionPointerType OnConnectionReceived;
    CDUnknownFunctionPointerType OnAcceptError;
    struct TCPEndPoint *mIPv6TCPListen;
    struct UDPEndPoint *mIPv6UDP;
    struct UDPEndPoint *mIPv6UDPLocalAddr[32];
    unsigned int mInterfaces[20];
    struct WeaveConnection mConPool[64];
    struct WeaveConnectionTunnel mTunnelPool[1];
    unsigned char mFlags;
    struct UDPEndPoint *mIPv6UDPMulticastRcv;
    struct UDPEndPoint *mIPv4UDP;
    struct TCPEndPoint *mIPv4TCPListen;
    CDUnknownFunctionPointerType OnUnsecuredConnectionReceived;
    CDUnknownFunctionPointerType OnUnsecuredConnectionCallbacksRemoved;
    void *UnsecuredConnectionReceivedAppState;
    CDUnknownFunctionPointerType OnMessageLayerActivityChange;
    struct BleLayer *mBle;
};

struct WeaveMsgEncryptionKey {
    unsigned short KeyId;
    unsigned char EncType;
    union WeaveEncryptionKey EncKey;
};

struct WeaveMsgEncryptionKeyCache {
    struct WeaveMsgEncryptionKey mKeyCache[9];
    unsigned char mMostRecentlyUsedKeyEntries[9];
};

struct WeavePASEEngine;

struct WeaveSecurityManager {
    struct WeaveFabricState *FabricState;
    struct WeaveExchangeManager *ExchangeManager;
    unsigned char State;
    unsigned int InitiatorCASEConfig;
    unsigned int InitiatorCASECurveId;
    unsigned char InitiatorAllowedCASEConfigs;
    unsigned char InitiatorAllowedCASECurves;
    unsigned char ResponderAllowedCASEConfigs;
    unsigned char ResponderAllowedCASECurves;
    unsigned char InitiatorKeyExportConfig;
    unsigned char InitiatorAllowedKeyExportConfigs;
    unsigned char ResponderAllowedKeyExportConfigs;
    unsigned int SessionEstablishTimeout;
    unsigned int IdleSessionTimeout;
    CDUnknownFunctionPointerType OnSessionEstablished;
    CDUnknownFunctionPointerType OnSessionError;
    CDUnknownFunctionPointerType OnKeyErrorMsgRcvd;
    struct ExchangeContext *mEC;
    struct WeaveConnection *mCon;
    union {
        struct WeavePASEEngine *mPASEEngine;
        struct WeaveCASEEngine *mCASEEngine;
        struct WeaveKeyExport *mKeyExport;
    } ;
    union {
        CDUnknownFunctionPointerType mStartSecureSession_OnComplete;
        CDUnknownFunctionPointerType mStartKeyExport_OnComplete;
    } ;
    union {
        CDUnknownFunctionPointerType mStartSecureSession_OnError;
        CDUnknownFunctionPointerType mStartKeyExport_OnError;
    } ;
    union {
        void *mStartSecureSession_ReqState;
        void *mStartKeyExport_ReqState;
    } ;
    unsigned int mPASERateLimiterTimeout;
    unsigned char mPASERateLimiterCount;
    struct WeaveCASEAuthDelegate *mDefaultAuthDelegate;
    struct WeaveKeyExportDelegate *mDefaultKeyExportDelegate;
    unsigned short mSessionKeyId;
    unsigned short mRequestedAuthMode;
    unsigned char mEncType;
    struct Layer *mSystemLayer;
    unsigned char mFlags;
};

struct WeaveSessionKey {
    unsigned long long NodeId;
    struct MonotonicallyIncreasingCounter NextMsgId;
    unsigned int MaxRcvdMsgId;
    struct WeaveConnection *BoundCon;
    unsigned short RcvFlags;
    unsigned short AuthMode;
    struct WeaveMsgEncryptionKey MsgEncKey;
    unsigned char ReserveCount;
    unsigned char Flags;
};

struct WeaveStandAloneKeyExportClient {
    CDUnknownFunctionPointerType *_field1;
    struct WeaveKeyExport _field2;
    unsigned int _field3;
    unsigned long long _field4;
    char *_field5;
    unsigned short _field6;
    char *_field7;
    unsigned short _field8;
    char *_field9;
    unsigned short _field10;
    unsigned char _field11;
    _Bool _field12;
    _Bool _field13;
};

struct WhispernetDecoder {
    struct unique_ptr<audio_whispernet::SymbolWaveCoder, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> _field1;
    struct WhispernetDecoderParams _field2;
    struct TokenSelector _field3;
    struct unique_ptr<audio_whispernet::TokenSymbolConverter, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> _field4;
    float _field5;
    vector_7584168e _field6;
    vector_7584168e _field7;
    struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> _field8;
    int _field9;
    int _field10;
    struct Array<float, -1, 1, 0, -1, 1> _field11;
    vector_7584168e _field12;
    struct Matrix<std::__1::complex<float>, -1, -1, 1, -1, -1> _field13;
    struct Array<float, -1, 1, 0, -1, 1> _field14;
    struct StreamBuffer<float> _field15;
    struct complex<float> _field16;
    struct complex<float> _field17;
    struct unique_ptr<audio_dsp::Resampler<std::__1::complex<float>>, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> _field18;
    struct FIRFilter<std::__1::complex<float>, std::__1::complex<float>> _field19;
    struct StreamBuffer<float> _field20[2];
    struct unique_ptr<audio_whispernet::AcquisitionScorer, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> _field21;
    struct StreamBuffer<float> _field22;
    struct map<int, Eigen::Array<float, -1, 1, 0, -1, 1>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> _field23;
    int _field24;
    int _field25;
    int _field26;
    int _field27;
    float _field28;
    float _field29;
    int _field30;
    _Bool _field31;
};

struct WhispernetDecoderParams {
    float _field1;
    _Bool _field2;
    struct AcquisitionParams _field3;
    struct PostprocessAcquisitionParams _field4;
    struct DecodeTokenParams _field5;
};

struct WrappedFrustum2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Point2D _field5;
    struct Point2D _field6;
    struct Frustum2D _field7;
    struct WFSegmentEndpoints _field8[6];
};

struct WrappedRectangle2D {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Point2D _field3;
    struct Point2D _field4;
    struct Rectangle2D _field5;
    int _field6;
    int _field7;
    int _field8;
};

struct _EAGLContextPrivate;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _SRLAPIRegistrationData {
    char *_field1;
    struct _SRLImplementationRegistrationData **_field2;
    union SRLAPIInstanceType _field3;
    unsigned short _field4;
    unsigned char _field5;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct _SRLBindingsRegistrationData;

struct _SRLImplementationRegistrationData {
    union SRLImplementationInstanceType _field1;
    union SRLImplementationInstanceType _field2;
    CDUnknownFunctionPointerType _field3;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> *__next_;
};

struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__prev_;
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> *__next_;
};

struct __list_node_base<rtc::Message, void *> {
    struct __list_node_base<rtc::Message, void *> *_field1;
    struct __list_node_base<rtc::Message, void *> *_field2;
};

struct __list_node_base<rtc::_SendMessage, void *> {
    struct __list_node_base<rtc::_SendMessage, void *> *_field1;
    struct __list_node_base<rtc::_SendMessage, void *> *_field2;
};

struct __list_node_base<sigslot::_opaque_connection, void *> {
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field2;
};

struct __list_node_base<webrtc::ObserverInterface *, void *> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field1;
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field2;
};

struct __sFILE {
    char *_field1;
    int _field2;
    int _field3;
    short _field4;
    short _field5;
    struct __sbuf _field6;
    int _field7;
    void *_field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
    CDUnknownFunctionPointerType _field11;
    CDUnknownFunctionPointerType _field12;
    struct __sbuf _field13;
    struct __sFILEX *_field14;
    int _field15;
    unsigned char _field16[3];
    unsigned char _field17[1];
    struct __sbuf _field18;
    int _field19;
    long long _field20;
};

struct __sbuf {
    char *_field1;
    int _field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct __wrap_iter<const gmscore::model::AbsolutePosition *> {
    struct AbsolutePosition *_field1;
};

struct __wrap_iter<const gmscore::model::Alignment *> {
    struct Alignment *_field1;
};

struct __wrap_iter<const gmscore::model::LabelGroup *> {
    struct LabelGroup *_field1;
};

struct __wrap_iter<const gmscore::model::Point2D *> {
    struct Point2D *_field1;
};

struct __wrap_iter<const gmscore::model::Point3D *> {
    struct Point3D *_field1;
};

struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> {
    struct NormalVector *_field1;
};

struct __wrap_iter<const gmscore::vector::ColoredPoint *> {
    struct ColoredPoint *_field1;
};

struct __wrap_iter<const int *> {
    int *_field1;
};

struct __wrap_iter<const unsigned int *> {
    unsigned int *_field1;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct _xmlAttr;

struct _xmlDoc;

struct _xmlHashTable;

struct _xmlNode {
    void *_field1;
    int _field2;
    char *_field3;
    struct _xmlNode *_field4;
    struct _xmlNode *_field5;
    struct _xmlNode *_field6;
    struct _xmlNode *_field7;
    struct _xmlNode *_field8;
    struct _xmlDoc *_field9;
    struct _xmlNs *_field10;
    char *_field11;
    struct _xmlAttr *_field12;
    struct _xmlNs *_field13;
    void *_field14;
    unsigned short _field15;
    unsigned short _field16;
};

struct _xmlNs;

struct _xmlParserInput;

struct _xmlParserNodeInfo;

struct _xmlSAXHandler {
    CDUnknownFunctionPointerType internalSubset;
    CDUnknownFunctionPointerType isStandalone;
    CDUnknownFunctionPointerType hasInternalSubset;
    CDUnknownFunctionPointerType hasExternalSubset;
    CDUnknownFunctionPointerType resolveEntity;
    CDUnknownFunctionPointerType getEntity;
    CDUnknownFunctionPointerType entityDecl;
    CDUnknownFunctionPointerType notationDecl;
    CDUnknownFunctionPointerType attributeDecl;
    CDUnknownFunctionPointerType elementDecl;
    CDUnknownFunctionPointerType unparsedEntityDecl;
    CDUnknownFunctionPointerType setDocumentLocator;
    CDUnknownFunctionPointerType startDocument;
    CDUnknownFunctionPointerType endDocument;
    CDUnknownFunctionPointerType startElement;
    CDUnknownFunctionPointerType endElement;
    CDUnknownFunctionPointerType reference;
    CDUnknownFunctionPointerType characters;
    CDUnknownFunctionPointerType ignorableWhitespace;
    CDUnknownFunctionPointerType processingInstruction;
    CDUnknownFunctionPointerType comment;
    CDUnknownFunctionPointerType warning;
    CDUnknownFunctionPointerType error;
    CDUnknownFunctionPointerType fatalError;
    CDUnknownFunctionPointerType getParameterEntity;
    CDUnknownFunctionPointerType cdataBlock;
    CDUnknownFunctionPointerType externalSubset;
    unsigned int initialized;
    void *_private;
    CDUnknownFunctionPointerType startElementNs;
    CDUnknownFunctionPointerType endElementNs;
    CDUnknownFunctionPointerType serror;
};

struct _xmlValidState;

struct array<gmscore::base::reffed_ptr<gmscore::renderer::StencilState>, 8> {
    reffed_ptr_b6b7b6c6 __elems_[8];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct bitset<16> {
    unsigned long long _field1;
};

struct complex<float> {
    float _field1;
    float _field2;
};

struct deque<(anonymous namespace)::VelocityItem, std::__1::allocator<(anonymous namespace)::VelocityItem>> {
    struct __split_buffer<(anonymous namespace)::VelocityItem *, std::__1::allocator<(anonymous namespace)::VelocityItem *>> {
        struct VelocityItem **__first_;
        struct VelocityItem **__begin_;
        struct VelocityItem **__end_;
        struct __compressed_pair<(anonymous namespace)::VelocityItem **, std::__1::allocator<(anonymous namespace)::VelocityItem *>> {
            struct VelocityItem **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<(anonymous namespace)::VelocityItem>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> {
    struct __split_buffer<GMSEntityTapClassStatusSet *, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
        struct GMSEntityTapClassStatusSet **__first_;
        struct GMSEntityTapClassStatusSet **__begin_;
        struct GMSEntityTapClassStatusSet **__end_;
        struct __compressed_pair<GMSEntityTapClassStatusSet **, std::__1::allocator<GMSEntityTapClassStatusSet *>> {
            struct GMSEntityTapClassStatusSet **__value_;
        } __end_cap_;
    } __map_;
    unsigned long long __start_;
    struct __compressed_pair<unsigned long, std::__1::allocator<GMSEntityTapClassStatusSet>> {
        unsigned long long __value_;
    } __size_;
};

struct deque<JBPacket, std::__1::allocator<JBPacket>> {
    struct __split_buffer<JBPacket *, std::__1::allocator<JBPacket *>> {
        struct JBPacket **_field1;
        struct JBPacket **_field2;
        struct JBPacket **_field3;
        struct __compressed_pair<JBPacket **, std::__1::allocator<JBPacket *>> {
            struct JBPacket **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<JBPacket>> {
        unsigned long long _field1;
    } _field3;
};

struct deque<TimingInfo, std::__1::allocator<TimingInfo>> {
    struct __split_buffer<TimingInfo *, std::__1::allocator<TimingInfo *>> {
        struct TimingInfo **_field1;
        struct TimingInfo **_field2;
        struct TimingInfo **_field3;
        struct __compressed_pair<TimingInfo **, std::__1::allocator<TimingInfo *>> {
            struct TimingInfo **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<TimingInfo>> {
        unsigned long long _field1;
    } _field3;
};

struct dummy_type {
    struct empty_struct data[8];
};

struct empty_struct;

struct grpc_byte_buffer {
    void *_field1;
    int _field2;
    union grpc_byte_buffer_data _field3;
};

struct grpc_compressed_buffer {
    int _field1;
    struct grpc_slice_buffer _field2;
};

struct grpc_metadata {
    struct grpc_slice _field1;
    struct grpc_slice _field2;
    unsigned int _field3;
    struct {
        void *_field1[4];
    } _field4;
};

struct grpc_op {
    int op;
    unsigned int flags;
    void *reserved;
    union grpc_op_data data;
};

struct grpc_op_recv_close_on_server {
    int *cancelled;
};

struct grpc_op_recv_initial_metadata {
    CDStruct_183601bc *recv_initial_metadata;
};

struct grpc_op_recv_message {
    struct grpc_byte_buffer **recv_message;
};

struct grpc_op_recv_status_on_client {
    CDStruct_183601bc *trailing_metadata;
    int *status;
    struct grpc_slice *status_details;
    char **error_string;
};

struct grpc_op_send_initial_metadata {
    unsigned long long count;
    struct grpc_metadata *metadata;
    struct grpc_op_send_initial_metadata_maybe_compression_level maybe_compression_level;
};

struct grpc_op_send_initial_metadata_maybe_compression_level {
    unsigned char is_set;
    int level;
};

struct grpc_op_send_message {
    struct grpc_byte_buffer *send_message;
};

struct grpc_op_send_status_from_server {
    unsigned long long trailing_metadata_count;
    struct grpc_metadata *trailing_metadata;
    int status;
    struct grpc_slice *status_details;
};

struct grpc_slice {
    struct grpc_slice_refcount *refcount;
    union grpc_slice_data data;
};

struct grpc_slice_buffer {
    struct grpc_slice *_field1;
    struct grpc_slice *_field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    struct grpc_slice _field6[8];
};

struct grpc_slice_inlined {
    unsigned char length;
    unsigned char bytes[23];
};

struct grpc_slice_refcount;

struct grpc_slice_refcounted {
    unsigned long long length;
    char *bytes;
};

struct ifaddrs {
    struct ifaddrs *_field1;
    char *_field2;
    unsigned int _field3;
    struct sockaddr *_field4;
    struct sockaddr *_field5;
    struct sockaddr *_field6;
    void *_field7;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int _field1;
};

struct less<rtc::Thread::DelayedMessage>;

struct list<gmscore::renderer::ImageDataSignature, std::__1::allocator<gmscore::renderer::ImageDataSignature>> {
    struct __list_node_base<gmscore::renderer::ImageDataSignature, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<gmscore::renderer::ImageDataSignature, void *>>> {
        unsigned long long __value_;
    } __size_alloc_;
};

struct list<rtc::Message, std::__1::allocator<rtc::Message>> {
    struct __list_node_base<rtc::Message, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::Message, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> {
    struct __list_node_base<rtc::_SendMessage, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::_SendMessage, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> {
    struct __list_node_base<sigslot::_opaque_connection, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<webrtc::ObserverInterface *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct mach_timebase_info {
    unsigned int numer;
    unsigned int denom;
};

struct map<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, std::__1::allocator<std::__1::pair<const GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>, std::__1::allocator<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMPStyleTableMapping_VersatileMapStyle, std::__1::__value_type<GMPStyleTableMapping_VersatileMapStyle, GMSMultiZoomStyle *>, std::__1::less<GMPStyleTableMapping_VersatileMapStyle>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>, std::__1::less<GMSFeatureType>, std::__1::allocator<std::__1::pair<const GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
    struct __tree<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::__map_value_compare<GMSFeatureType, std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<GMSFeatureType>, true>, std::__1::allocator<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSFeatureType, std::__1::__value_type<GMSFeatureType, std::__1::__tree_const_iterator<id<GMSFeature>, std::__1::__tree_node<id<GMSFeature>, void *>*, long>>, std::__1::less<GMSFeatureType>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<GMSMarker *, GMSMarkerRenderInfo *, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, GMSMarkerRenderInfo *>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, GMSMarkerRenderInfo *>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSMarker *, long long, std::__1::less<GMSMarker *>, std::__1::allocator<std::__1::pair<GMSMarker *const, long long>>> {
    struct __tree<std::__1::__value_type<GMSMarker *, long long>, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>, std::__1::allocator<std::__1::__value_type<GMSMarker *, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSMarker *, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSMarker *, std::__1::__value_type<GMSMarker *, long long>, std::__1::less<GMSMarker *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSOverlay *, GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<std::__1::pair<GMSOverlay *const, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>, std::__1::allocator<std::__1::__value_type<GMSOverlay *, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSOverlay *, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSOverlay *, std::__1::__value_type<GMSOverlay *, GMSOverlay *>, std::__1::less<GMSOverlay *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSRenderTileProvider *, unsigned int, std::__1::less<GMSRenderTileProvider *>, std::__1::allocator<std::__1::pair<GMSRenderTileProvider *const, unsigned int>>> {
    struct __tree<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::__map_value_compare<GMSRenderTileProvider *, std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::less<GMSRenderTileProvider *>, true>, std::__1::allocator<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSRenderTileProvider *, std::__1::__value_type<GMSRenderTileProvider *, unsigned int>, std::__1::less<GMSRenderTileProvider *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSStyleType, NSMutableArray<GMSModelStyle *>*, std::__1::less<GMSStyleType>, std::__1::allocator<std::__1::pair<const GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
    struct __tree<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>, std::__1::allocator<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSStyleType, std::__1::__value_type<GMSStyleType, NSMutableArray<GMSModelStyle *>*>, std::__1::less<GMSStyleType>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<GMSTileLayer *, GMSRenderTileProvider *, std::__1::less<GMSTileLayer *>, std::__1::allocator<std::__1::pair<GMSTileLayer *const, GMSRenderTileProvider *>>> {
    struct __tree<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::less<GMSTileLayer *>, true>, std::__1::allocator<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<GMSTileLayer *, std::__1::__value_type<GMSTileLayer *, GMSRenderTileProvider *>, std::__1::less<GMSTileLayer *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<UIView *, GMSOffscreenEntityView *, std::__1::less<UIView *>, std::__1::allocator<std::__1::pair<UIView *const, GMSOffscreenEntityView *>>> {
    struct __tree<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>, std::__1::allocator<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<UIView *, std::__1::__value_type<UIView *, GMSOffscreenEntityView *>, std::__1::less<UIView *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, std::__1::allocator<std::__1::pair<const gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>>> {
    struct __tree<std::__1::__value_type<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>, std::__1::__map_value_compare<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::__value_type<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, true>, std::__1::allocator<std::__1::__value_type<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::__value_type<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, GMSMarker *>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>, std::__1::less<gmscore::renderer::ImageDataSignature>, std::__1::allocator<std::__1::pair<const gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
    struct __tree<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>, std::__1::allocator<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<gmscore::renderer::ImageDataSignature, std::__1::__value_type<gmscore::renderer::ImageDataSignature, std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>>, std::__1::less<gmscore::renderer::ImageDataSignature>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<google_audio_kit::EpStatus, long long, std::__1::less<google_audio_kit::EpStatus>, std::__1::allocator<std::__1::pair<const google_audio_kit::EpStatus, long long>>> {
    struct __tree<std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::__map_value_compare<google_audio_kit::EpStatus, std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::less<google_audio_kit::EpStatus>, true>, std::__1::allocator<std::__1::__value_type<google_audio_kit::EpStatus, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<google_audio_kit::EpStatus, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<google_audio_kit::EpStatus, std::__1::__value_type<google_audio_kit::EpStatus, long long>, std::__1::less<google_audio_kit::EpStatus>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, Eigen::Array<float, -1, 1, 0, -1, 1>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> {
    struct __tree<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::__map_value_compare<int, std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, Eigen::Array<float, -1, 1, 0, -1, 1>>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, unsigned long, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, unsigned long>>> {
    struct __tree<std::__1::__value_type<int, unsigned long>, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, unsigned long>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<long long, GMSMarker *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMarker *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMarker *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMarker *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMarker *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMarker *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>>> {
    struct __tree<std::__1::__value_type<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, std::__1::vector<GMSMarker *, std::__1::allocator<GMSMarker *>>>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<speech::EpStatus, long long, std::__1::less<speech::EpStatus>, std::__1::allocator<std::__1::pair<const speech::EpStatus, long long>>> {
    struct __tree<std::__1::__value_type<speech::EpStatus, long long>, std::__1::__map_value_compare<speech::EpStatus, std::__1::__value_type<speech::EpStatus, long long>, std::__1::less<speech::EpStatus>, true>, std::__1::allocator<std::__1::__value_type<speech::EpStatus, long long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<speech::EpStatus, long long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<speech::EpStatus, std::__1::__value_type<speech::EpStatus, long long>, std::__1::less<speech::EpStatus>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, gmscore::base::reffed_ptr<gmscore::renderer::ShaderProgram>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::weak_ptr<GMSRocketIconService::Holder>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, std::__1::allocator<std::__1::pair<const std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
    struct __tree<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::pair<std::__1::basic_string<char>, int>, std::__1::__value_type<std::__1::pair<std::__1::basic_string<char>, int>, gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>, std::__1::less<std::__1::pair<std::__1::basic_string<char>, int>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, std::__1::allocator<std::__1::pair<const std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>>> {
    struct __tree<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::tuple<gmscore::model::StyleID, int>, std::__1::__value_type<std::__1::tuple<gmscore::model::StyleID, int>, GMSModelStyle *>, std::__1::less<std::__1::tuple<gmscore::model::StyleID, int>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, (anonymous namespace)::PooledTextureState, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, (anonymous namespace)::PooledTextureState>>> {
    struct __tree<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, (anonymous namespace)::PooledTextureState>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
    struct __tree<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, gmscore::base::reffed_ptr<gmscore::vector::LabelBucketRestriction>>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, GMSOverlay *, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, GMSOverlay *>>> {
    struct __tree<std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, GMSOverlay *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, GMSOverlay *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, GMSOverlay *>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned long, unsigned long, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, unsigned long>>> {
    struct __tree<std::__1::__value_type<unsigned long, unsigned long>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, unsigned long>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, unsigned long>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, unsigned long>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
    struct __tree<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>, std::__1::allocator<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct multiset<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
    struct __tree<id<GMSFeature>, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering, std::__1::allocator<id<GMSFeature>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSFeature>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmscore::vector::detail::LayeredFeatureGroup::TypeOrdering> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct objc_metadata_hider_ptr<const _SRLBindingsRegistrationData> {
    struct _SRLBindingsRegistrationData *_field1;
};

struct objc_metadata_hider_ptr<gmscore::renderer::EntityRenderer> {
    struct EntityRenderer *p_;
};

struct objc_metadata_hider_ptr<gmscore::vector::TextureCache> {
    struct TextureCache *_field1;
};

struct opaqueCMSampleBuffer;

struct optional<RTCVideoRotation> {
    _Bool engaged_;
    CDUnion_c65e931c ;
};

struct optional<bool> {
    _Bool _field1;
    union {
        _Bool _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<double> {
    _Bool _field1;
    union {
        double _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<int> {
    _Bool engaged_;
    CDUnion_130d44d2 ;
};

struct optional<long long> {
    _Bool _field1;
    CDUnion_c65e931c _field2;
};

struct optional<rtc::AdapterType> {
    _Bool _field1;
    CDUnion_130d44d2 _field2;
};

struct optional<std::__1::pair<int, int>> {
    _Bool _field1;
    union {
        struct pair<int, int> _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<unsigned int> {
    _Bool _field1;
    union {
        unsigned int _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::ColorSpace> {
    _Bool _field1;
    union {
        struct ColorSpace _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::CryptoOptions> {
    _Bool _field1;
    union {
        struct CryptoOptions _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::FrameDependencyStructure> {
    _Bool _field1;
    union {
        struct FrameDependencyStructure _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::GenericFrameInfo> {
    _Bool _field1;
    union {
        struct GenericFrameInfo _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct ProfileLevelId data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<webrtc::HdrMetadata> {
    _Bool _field1;
    union {
        struct HdrMetadata _field1;
        struct dummy_type _field2;
    } _field2;
};

struct optional<webrtc::PpsParser::PpsState> {
    _Bool engaged_;
    union {
        struct PpsState data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<webrtc::SpsParser::SpsState> {
    _Bool engaged_;
    union {
        struct SpsState data_;
        struct dummy_type dummy_;
    } ;
};

struct optional<webrtc::VideoTrackSourceInterface::Stats> {
    _Bool _field1;
    union {
        struct Stats _field1;
        struct dummy_type _field2;
    } _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct reffed_ptr<(anonymous namespace)::BubbleBehavior> {
    struct BubbleBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::ColoredOverlayBehavior> {
    struct ColoredOverlayBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::IndoorTileAnimationBehavior> {
    struct IndoorTileAnimationBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::LabelingUpdateListener> {
    struct LabelingUpdateListener *ptr_;
};

struct reffed_ptr<(anonymous namespace)::PointsBehavior> {
    struct PointsBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::StickerBehavior> {
    struct StickerBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::TileUpdaterBehavior> {
    struct TileUpdaterBehavior *ptr_;
};

struct reffed_ptr<(anonymous namespace)::UpdateMyLocationBehaviorInternal> {
    struct UpdateMyLocationBehaviorInternal *ptr_;
};

struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::BaseEntity> {
    struct BaseEntity *ptr_;
};

struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *_field1;
};

struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
};

struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
};

struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
};

struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
};

struct reffed_ptr<gmscore::renderer::PolygonState>;

struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
};

struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
};

struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
};

struct reffed_ptr<gmscore::renderer::ios::BlockBasedBehavior> {
    struct BlockBasedBehavior *ptr_;
};

struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
};

struct reffed_ptr<gmscore::vector::AreaGroup> {
    struct AreaGroup *ptr_;
};

struct reffed_ptr<gmscore::vector::BuildingGroupFadeBehavior> {
    struct BuildingGroupFadeBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
};

struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
};

struct reffed_ptr<gmscore::vector::CategorizedLabelProvider> {
    struct CategorizedLabelProvider *ptr_;
};

struct reffed_ptr<gmscore::vector::ClientVectorOpsBehavior> {
    struct ClientVectorOpsBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::FeatureGroup>;

struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
};

struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
};

struct reffed_ptr<gmscore::vector::IconTextureCache> {
    struct IconTextureCache *_field1;
};

struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
};

struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
};

struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
};

struct reffed_ptr<gmscore::vector::LabelingBehavior> {
    struct LabelingBehavior *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<bool>> {
    struct ModelRendererValue<bool> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<float>> {
    struct ModelRendererValue<float> *ptr_;
};

struct reffed_ptr<gmscore::vector::ModelRendererValue<unsigned int>> {
    struct ModelRendererValue<unsigned int> *ptr_;
};

struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
};

struct reffed_ptr<gmscore::vector::MyLocationIndicator> {
    struct MyLocationIndicator *_field1;
};

struct reffed_ptr<gmscore::vector::RenderLabel> {
    struct RenderLabel *ptr_;
};

struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
};

struct reffed_ptr<gmscore::vector::TileLabelProvider> {
    struct TileLabelProvider *ptr_;
};

struct scoped_refptr<rtc::RTCCertificate>;

struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> {
    struct RefCountedObject<rtc::BufferT<unsigned char, false>> *_field1;
};

struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
};

struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
};

struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
};

struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
};

struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::EncodedImageBufferInterface> {
    struct EncodedImageBufferInterface *ptr_;
};

struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
};

struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
};

struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpPacketInfos::Data> {
    struct Data *_field1;
};

struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::StatsReport::IdBase> {
    struct IdBase *_field1;
};

struct scoped_refptr<webrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *_field1;
};

struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
};

struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
};

struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<GMSFeatureID, gmsbase::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
    struct __tree<GMSFeatureID, gmsbase::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmsbase::model::GMSFeatureIDLessFunc> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
    struct __tree<GMSOverlay *, std::__1::less<GMSOverlay *>, std::__1::allocator<GMSOverlay *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSOverlay *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<GMSOverlay *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::renderer::Behavior>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelDedupingRule>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelProvider>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::LabelingBehavior::Listener>>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
    struct __tree<id<GMSEntityTappableUIItem>, gmscore::vector::TappableMapItemQueue::TappableItemsCompare, std::__1::allocator<id<GMSEntityTappableUIItem>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<id<GMSEntityTappableUIItem>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, gmscore::vector::TappableMapItemQueue::TappableItemsCompare> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __tree<std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::basic_string<char>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct set<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
    struct __tree<unsigned short, std::__1::less<unsigned short>, std::__1::allocator<unsigned short>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned short, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned short>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> {
    struct Pimpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<iosguard::ErrorLogger> {
    struct ErrorLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<iosguard::JSFunctionProxy> {
    struct JSFunctionProxy *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<iosguard::JavaScriptExecutor> {
    struct JavaScriptExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbCommitHook> {
    struct DbCommitHook *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbWrapperFactory> {
    struct DbWrapperFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbWrapperFactoryFactory> {
    struct DbWrapperFactoryFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbWrapperInterface> {
    struct DbWrapperInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbWrapperParams> {
    struct DbWrapperParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::DbWrapperParamsBuilder> {
    struct DbWrapperParamsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::EventPublisher> {
    struct EventPublisher *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::KeyTransparencyIdConverter> {
    struct KeyTransparencyIdConverter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::KeyTransparencyRpcInterface> {
    struct KeyTransparencyRpcInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::KeyTransparencyStateStore> {
    struct KeyTransparencyStateStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::MediaEncryptor> {
    struct MediaEncryptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::MessageEncryptor> {
    struct MessageEncryptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::MessageEncryptorParamsBuilder> {
    struct MessageEncryptorParamsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<scytale::PrekeyRpcInterface> {
    struct PrekeyRpcInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::AppContactRequester> {
    struct AppContactRequester *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::AudioFrame> {
    struct AudioFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::BindWatcher> {
    struct BindWatcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::Call> {
    struct Call *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::CallInfoCallback> {
    struct CallInfoCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::CallManager> {
    struct CallManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::CallOptionsBuilder> {
    struct CallOptionsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::ClientConfigBuilder> {
    struct ClientConfigBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::ContactManager> {
    struct ContactManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::EventLogger> {
    struct EventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::FragmentDownload> {
    struct FragmentDownload *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::FragmentStore> {
    struct FragmentStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::FragmentUpload> {
    struct FragmentUpload *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::GaiaOauthTokenGetter> {
    struct GaiaOauthTokenGetter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::GroupCallManager> {
    struct GroupCallManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::IceConfigFetcher> {
    struct IceConfigFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::IdHelpers> {
    struct IdHelpers *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::LocalSession> {
    struct LocalSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::LoggingControl> {
    struct LoggingControl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageReceiver> {
    struct MessageReceiver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageReceiverAsync> {
    struct MessageReceiverAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageSender> {
    struct MessageSender *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageSenderAsync> {
    struct MessageSenderAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageTransport> {
    struct MessageTransport *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::MessageTransportAsync> {
    struct MessageTransportAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::PiiAuditor> {
    struct PiiAuditor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::ServerSession> {
    struct ServerSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::TachyonCallManagerBuilder> {
    struct TachyonCallManagerBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::TaclContext> {
    struct TaclContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::VideoDecoder> {
    struct VideoDecoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::VideoEncoder> {
    struct VideoEncoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<tacl::VideoFrame> {
    struct VideoFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<thread::Executor> {
    struct Executor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct signal_with_thread_policy<sigslot::single_threaded> {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> _field3;
    struct __list_iterator<sigslot::_opaque_connection, void *> {
        struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    } _field4;
    _Bool _field5;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct stack<GMSEntityTapClassStatusSet, std::__1::deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>>> {
    struct deque<GMSEntityTapClassStatusSet, std::__1::allocator<GMSEntityTapClassStatusSet>> c;
};

struct stat {
    int st_dev;
    unsigned short st_mode;
    unsigned short st_nlink;
    unsigned long long st_ino;
    unsigned int st_uid;
    unsigned int st_gid;
    int st_rdev;
    struct timespec st_atimespec;
    struct timespec st_mtimespec;
    struct timespec st_ctimespec;
    struct timespec st_birthtimespec;
    long long st_size;
    long long st_blocks;
    int st_blksize;
    unsigned int st_flags;
    unsigned int st_gen;
    int st_lspare;
    long long st_qspare[2];
};

struct timespec {
    long long tv_sec;
    long long tv_nsec;
};

struct timeval {
    long long _field1;
    int _field2;
};

struct tuple<int, int, unsigned int> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2>, int, int, unsigned int> {
        int __value_;
        int __value_;
        unsigned int __value_;
    } __base_;
};

struct unique_ptr<(anonymous namespace)::ViewRenderTargetChangedSizeListener, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
    struct __compressed_pair<(anonymous namespace)::ViewRenderTargetChangedSizeListener *, std::__1::default_delete<(anonymous namespace)::ViewRenderTargetChangedSizeListener>> {
        struct ViewRenderTargetChangedSizeListener *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::IconRenderer, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::IconRenderer *, std::__1::default_delete<GMSx_gmm_photo::api::IconRenderer>> {
        struct IconRenderer *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::Renderer, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Renderer *, std::__1::default_delete<GMSx_gmm_photo::api::Renderer>> {
        struct Renderer *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::api::SchedulingService, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
    struct __compressed_pair<GMSx_gmm_photo::api::SchedulingService *, std::__1::default_delete<GMSx_gmm_photo::api::SchedulingService>> {
        struct SchedulingService *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse>>> {
        struct Service<GMSx_gmm_photo::api::AreaConnectivityRequest, GMSx_gmm_photo::api::AreaConnectivityResponse> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::IconSource, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Text, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
    struct __compressed_pair<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>*, std::__1::default_delete<GMSx_gmm_photo::api::Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image>>> {
        struct Service<GMSx_gmm_photo::api::Tile, GMSx_gmm_photo::api::Image> *_field1;
    } _field1;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__value_;
    } __ptr_;
};

struct unique_ptr<GMSx_gmm_photo::platform_ios::IVIOSGLContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IVIOSGLContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IVIOSGLContext>> {
        struct IVIOSGLContext *__value_;
    } __ptr_;
};

struct unique_ptr<SRLMemoizingScopeIvars, std::__1::default_delete<SRLMemoizingScopeIvars>> {
    struct __compressed_pair<SRLMemoizingScopeIvars *, std::__1::default_delete<SRLMemoizingScopeIvars>> {
        struct SRLMemoizingScopeIvars *__value_;
    } __ptr_;
};

struct unique_ptr<SRLRegistryIvars, std::__1::default_delete<SRLRegistryIvars>> {
    struct __compressed_pair<SRLRegistryIvars *, std::__1::default_delete<SRLRegistryIvars>> {
        struct SRLRegistryIvars *__value_;
    } __ptr_;
};

struct unique_ptr<audio_dsp::Resampler<float>, std::__1::default_delete<audio_dsp::Resampler<float>>> {
    struct __compressed_pair<audio_dsp::Resampler<float>*, std::__1::default_delete<audio_dsp::Resampler<float>>> {
        struct Resampler<float> *_field1;
    } _field1;
};

struct unique_ptr<audio_dsp::Resampler<std::__1::complex<float>>, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> {
    struct __compressed_pair<audio_dsp::Resampler<std::__1::complex<float>>*, std::__1::default_delete<audio_dsp::Resampler<std::__1::complex<float>>>> {
        struct Resampler<std::__1::complex<float>> *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::AcquisitionScorer, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> {
    struct __compressed_pair<audio_whispernet::AcquisitionScorer *, std::__1::default_delete<audio_whispernet::AcquisitionScorer>> {
        struct AcquisitionScorer *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::SymbolWaveCoder, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> {
    struct __compressed_pair<audio_whispernet::SymbolWaveCoder *, std::__1::default_delete<audio_whispernet::SymbolWaveCoder>> {
        struct SymbolWaveCoder *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::TokenSymbolConverter, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> {
    struct __compressed_pair<audio_whispernet::TokenSymbolConverter *, std::__1::default_delete<audio_whispernet::TokenSymbolConverter>> {
        struct TokenSymbolConverter *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet::WhispernetDecoder, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> {
    struct __compressed_pair<audio_whispernet::WhispernetDecoder *, std::__1::default_delete<audio_whispernet::WhispernetDecoder>> {
        struct WhispernetDecoder *_field1;
    } _field1;
};

struct unique_ptr<audio_whispernet_dtmf::DtmfDecoder, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> {
    struct __compressed_pair<audio_whispernet_dtmf::DtmfDecoder *, std::__1::default_delete<audio_whispernet_dtmf::DtmfDecoder>> {
        struct DtmfDecoder *_field1;
    } _field1;
};

struct unique_ptr<crypto::tink::Aead, std::__1::default_delete<crypto::tink::Aead>> {
    struct __compressed_pair<crypto::tink::Aead *, std::__1::default_delete<crypto::tink::Aead>> {
        struct Aead *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::DeterministicAead, std::__1::default_delete<crypto::tink::DeterministicAead>> {
    struct __compressed_pair<crypto::tink::DeterministicAead *, std::__1::default_delete<crypto::tink::DeterministicAead>> {
        struct DeterministicAead *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::HybridDecrypt, std::__1::default_delete<crypto::tink::HybridDecrypt>> {
    struct __compressed_pair<crypto::tink::HybridDecrypt *, std::__1::default_delete<crypto::tink::HybridDecrypt>> {
        struct HybridDecrypt *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::HybridEncrypt, std::__1::default_delete<crypto::tink::HybridEncrypt>> {
    struct __compressed_pair<crypto::tink::HybridEncrypt *, std::__1::default_delete<crypto::tink::HybridEncrypt>> {
        struct HybridEncrypt *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::KeysetHandle, std::__1::default_delete<crypto::tink::KeysetHandle>> {
    struct __compressed_pair<crypto::tink::KeysetHandle *, std::__1::default_delete<crypto::tink::KeysetHandle>> {
        struct KeysetHandle *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::KeysetReader, std::__1::default_delete<crypto::tink::KeysetReader>> {
    struct __compressed_pair<crypto::tink::KeysetReader *, std::__1::default_delete<crypto::tink::KeysetReader>> {
        struct KeysetReader *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::Mac, std::__1::default_delete<crypto::tink::Mac>> {
    struct __compressed_pair<crypto::tink::Mac *, std::__1::default_delete<crypto::tink::Mac>> {
        struct Mac *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::PublicKeySign, std::__1::default_delete<crypto::tink::PublicKeySign>> {
    struct __compressed_pair<crypto::tink::PublicKeySign *, std::__1::default_delete<crypto::tink::PublicKeySign>> {
        struct PublicKeySign *__value_;
    } __ptr_;
};

struct unique_ptr<crypto::tink::PublicKeyVerify, std::__1::default_delete<crypto::tink::PublicKeyVerify>> {
    struct __compressed_pair<crypto::tink::PublicKeyVerify *, std::__1::default_delete<crypto::tink::PublicKeyVerify>> {
        struct PublicKeyVerify *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::dash::CookieStore, std::__1::default_delete<gmscore::dash::CookieStore>> {
    struct __compressed_pair<gmscore::dash::CookieStore *, std::__1::default_delete<gmscore::dash::CookieStore>> {
        struct CookieStore *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::model::CollidableSet2D, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
    struct __compressed_pair<gmscore::model::CollidableSet2D *, std::__1::default_delete<gmscore::model::CollidableSet2D>> {
        struct CollidableSet2D *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::EntityRenderer, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
    struct __compressed_pair<gmscore::renderer::EntityRenderer *, std::__1::default_delete<gmscore::renderer::EntityRenderer>> {
        struct EntityRenderer *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
};

struct unique_ptr<gmscore::renderer::Time, std::__1::default_delete<gmscore::renderer::Time>> {
    struct __compressed_pair<gmscore::renderer::Time *, std::__1::default_delete<gmscore::renderer::Time>> {
        struct Time *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::renderer::ios::IOSGLState, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
    struct __compressed_pair<gmscore::renderer::ios::IOSGLState *, std::__1::default_delete<gmscore::renderer::ios::IOSGLState>> {
        struct IOSGLState *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false>, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false>*, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false>>> {
        struct LRUCache<GMSFeatureID, GMSFeatureID, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmsbase::model::GMSFeatureIDMissingValueFunc, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false>, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false>*, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false>>> {
        struct LRUCache<GMSFeatureID, GMSIndoorBuilding *, gmsbase::model::GMSFeatureIDHashFunc, gmsbase::model::GMSFeatureIDEqualFunc, gmscore::utils::LRUCacheMissingValueFunc<GMSIndoorBuilding *>, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false>, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false>>> {
    struct __compressed_pair<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false>*, std::__1::default_delete<gmscore::utils::LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false>>> {
        struct LRUCache<GMSFeatureID, GMSIndoorLevel *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, gmscore::utils::LRUCacheObjCMissingValueFunc<GMSIndoorLevel>, false> *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::MutableStateTracker, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
    struct __compressed_pair<gmscore::vector::MutableStateTracker *, std::__1::default_delete<gmscore::vector::MutableStateTracker>> {
        struct MutableStateTracker *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::TextureCache, std::__1::default_delete<gmscore::vector::TextureCache>> {
    struct __compressed_pair<gmscore::vector::TextureCache *, std::__1::default_delete<gmscore::vector::TextureCache>> {
        struct TextureCache *__value_;
    } __ptr_;
};

struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__value_;
    } __ptr_;
};

struct unique_ptr<icu::MessageFormat, std::__1::default_delete<icu::MessageFormat>> {
    struct __compressed_pair<icu::MessageFormat *, std::__1::default_delete<icu::MessageFormat>> {
        struct MessageFormat *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ChallengeImpl, std::__1::default_delete<iosguard::ChallengeImpl>> {
    struct __compressed_pair<iosguard::ChallengeImpl *, std::__1::default_delete<iosguard::ChallengeImpl>> {
        struct ChallengeImpl *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ContainerImpl, std::__1::default_delete<iosguard::ContainerImpl>> {
    struct __compressed_pair<iosguard::ContainerImpl *, std::__1::default_delete<iosguard::ContainerImpl>> {
        struct ContainerImpl *__value_;
    } __ptr_;
};

struct unique_ptr<iosguard::ManagerImpl, std::__1::default_delete<iosguard::ManagerImpl>> {
    struct __compressed_pair<iosguard::ManagerImpl *, std::__1::default_delete<iosguard::ManagerImpl>> {
        struct ManagerImpl *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> {
    struct __compressed_pair<rtc::SocketServer *, std::__1::default_delete<rtc::SocketServer>> {
        struct SocketServer *_field1;
    } _field1;
};

struct unique_ptr<rtc::Thread, std::__1::default_delete<rtc::Thread>> {
    struct __compressed_pair<rtc::Thread *, std::__1::default_delete<rtc::Thread>> {
        struct Thread *__value_;
    } __ptr_;
};

struct unique_ptr<securemessage::CryptoOps::KeyPair, std::__1::default_delete<securemessage::CryptoOps::KeyPair>> {
    struct __compressed_pair<securemessage::CryptoOps::KeyPair *, std::__1::default_delete<securemessage::CryptoOps::KeyPair>> {
        struct KeyPair *_field1;
    } _field1;
};

struct unique_ptr<securemessage::CryptoOps::PrivateKey, std::__1::default_delete<securemessage::CryptoOps::PrivateKey>> {
    struct __compressed_pair<securemessage::CryptoOps::PrivateKey *, std::__1::default_delete<securemessage::CryptoOps::PrivateKey>> {
        struct PrivateKey *_field1;
    } _field1;
};

struct unique_ptr<securemessage::CryptoOps::PublicKey, std::__1::default_delete<securemessage::CryptoOps::PublicKey>> {
    struct __compressed_pair<securemessage::CryptoOps::PublicKey *, std::__1::default_delete<securemessage::CryptoOps::PublicKey>> {
        struct PublicKey *_field1;
    } _field1;
};

struct unique_ptr<securemessage::CryptoOps::SecretKey, std::__1::default_delete<securemessage::CryptoOps::SecretKey>> {
    struct __compressed_pair<securemessage::CryptoOps::SecretKey *, std::__1::default_delete<securemessage::CryptoOps::SecretKey>> {
        struct SecretKey *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<visionkit::FaceDetector, std::__1::default_delete<visionkit::FaceDetector>> {
    struct __compressed_pair<visionkit::FaceDetector *, std::__1::default_delete<visionkit::FaceDetector>> {
        struct FaceDetector *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::BitrateAdjuster, std::__1::default_delete<webrtc::BitrateAdjuster>> {
    struct __compressed_pair<webrtc::BitrateAdjuster *, std::__1::default_delete<webrtc::BitrateAdjuster>> {
        struct BitrateAdjuster *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataBuffer, std::__1::default_delete<webrtc::DataBuffer>> {
    struct __compressed_pair<webrtc::DataBuffer *, std::__1::default_delete<webrtc::DataBuffer>> {
        struct DataBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataChannelDelegateAdapter, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
    struct __compressed_pair<webrtc::DataChannelDelegateAdapter *, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
        struct DataChannelDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
};

struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::NetworkControllerFactoryInterface, std::__1::default_delete<webrtc::NetworkControllerFactoryInterface>> {
    struct __compressed_pair<webrtc::NetworkControllerFactoryInterface *, std::__1::default_delete<webrtc::NetworkControllerFactoryInterface>> {
        struct NetworkControllerFactoryInterface *_field1;
    } _field1;
};

struct unique_ptr<webrtc::PeerConnectionDelegateAdapter, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
    struct __compressed_pair<webrtc::PeerConnectionDelegateAdapter *, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
        struct PeerConnectionDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::PeerConnectionDependencies, std::__1::default_delete<webrtc::PeerConnectionDependencies>> {
    struct __compressed_pair<webrtc::PeerConnectionDependencies *, std::__1::default_delete<webrtc::PeerConnectionDependencies>> {
        struct PeerConnectionDependencies *_field1;
    } _field1;
};

struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
};

struct unique_ptr<webrtc::RtpReceiverDelegateAdapter, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
    struct __compressed_pair<webrtc::RtpReceiverDelegateAdapter *, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
        struct RtpReceiverDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoRendererAdapter, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
    struct __compressed_pair<webrtc::VideoRendererAdapter *, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
        struct VideoRendererAdapter *__value_;
    } __ptr_;
};

struct unordered_map<GMSFeatureID, GMSIndoorBuildingState *, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, std::__1::allocator<std::__1::pair<const GMSFeatureID, GMSIndoorBuildingState *>>> {
    struct __hash_table<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDHashFunc, true>, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDEqualFunc, true>, std::__1::allocator<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDHashFunc, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, GMSIndoorBuildingState *>, gmsbase::model::GMSIndoorIDEqualFunc, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, gmsbase::model::GMSIndoorIDHashFunc, gmsbase::model::GMSIndoorIDEqualFunc, std::__1::allocator<std::__1::pair<const GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
    struct __hash_table<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, gmsbase::model::GMSIndoorIDHashFunc, true>, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, gmsbase::model::GMSIndoorIDEqualFunc, true>, std::__1::allocator<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, gmsbase::model::GMSIndoorIDHashFunc, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<GMSFeatureID, std::__1::__hash_value_type<GMSFeatureID, gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>, gmsbase::model::GMSIndoorIDEqualFunc, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<int, unsigned long long>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, unsigned long long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, unsigned long long>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, unsigned long, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, unsigned long>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, unsigned long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, unsigned long>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, unsigned long>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<(anonymous namespace)::StringTableEntry, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
    struct StringTableEntry *__begin_;
    struct StringTableEntry *__end_;
    struct __compressed_pair<(anonymous namespace)::StringTableEntry *, std::__1::allocator<(anonymous namespace)::StringTableEntry>> {
        struct StringTableEntry *__value_;
    } __end_cap_;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
};

struct vector<GIPPerformanceSimpleSample, std::__1::allocator<GIPPerformanceSimpleSample>> {
    struct GIPPerformanceSimpleSample *__begin_;
    struct GIPPerformanceSimpleSample *__end_;
    struct __compressed_pair<GIPPerformanceSimpleSample *, std::__1::allocator<GIPPerformanceSimpleSample>> {
        struct GIPPerformanceSimpleSample *__value_;
    } __end_cap_;
};

struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
};

struct vector<GMSFeatureID, std::__1::allocator<GMSFeatureID>> {
    struct GMSFeatureID *__begin_;
    struct GMSFeatureID *__end_;
    struct __compressed_pair<GMSFeatureID *, std::__1::allocator<GMSFeatureID>> {
        struct GMSFeatureID *__value_;
    } __end_cap_;
};

struct vector<GMSLazyMultiZoomStyle, std::__1::allocator<GMSLazyMultiZoomStyle>> {
    struct GMSLazyMultiZoomStyle *__begin_;
    struct GMSLazyMultiZoomStyle *__end_;
    struct __compressed_pair<GMSLazyMultiZoomStyle *, std::__1::allocator<GMSLazyMultiZoomStyle>> {
        struct GMSLazyMultiZoomStyle *__value_;
    } __end_cap_;
};

struct vector<GMSOffscreenEntityView *, std::__1::allocator<GMSOffscreenEntityView *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<GMSOffscreenEntityView *__strong *, std::__1::allocator<GMSOffscreenEntityView *>> {
        id *__value_;
    } __end_cap_;
};

struct vector<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
    struct TileTemplate *__begin_;
    struct TileTemplate *__end_;
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate *, std::__1::allocator<GMSx_gmm_photo::platform_ios::ServicesConfig::TileTemplate>> {
        struct TileTemplate *__value_;
    } __end_cap_;
};

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<audio_whispernet::StreamBuffer<float>, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> {
    struct StreamBuffer<float> *_field1;
    struct StreamBuffer<float> *_field2;
    struct __compressed_pair<audio_whispernet::StreamBuffer<float>*, std::__1::allocator<audio_whispernet::StreamBuffer<float>>> {
        struct StreamBuffer<float> *_field1;
    } _field3;
};

struct vector<audio_whispernet_dtmf::ToneStrengthFilter, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> {
    struct ToneStrengthFilter *_field1;
    struct ToneStrengthFilter *_field2;
    struct __compressed_pair<audio_whispernet_dtmf::ToneStrengthFilter *, std::__1::allocator<audio_whispernet_dtmf::ToneStrengthFilter>> {
        struct ToneStrengthFilter *_field1;
    } _field3;
};

struct vector<const gmscore::vector::MarkupPolyline, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
    struct MarkupPolyline *_field1;
    struct MarkupPolyline *_field2;
    struct __compressed_pair<const gmscore::vector::MarkupPolyline *, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
        struct MarkupPolyline *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::FeatureGroup> *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
    reffed_ptr_799bd618 *_field1;
    reffed_ptr_799bd618 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelSource>>> {
        reffed_ptr_799bd618 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_77f24e90 *__begin_;
    reffed_ptr_77f24e90 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_77f24e90 *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>>> {
    reffed_ptr_c6b907f4 *__begin_;
    reffed_ptr_c6b907f4 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MyLocationIndicator>>> {
        reffed_ptr_c6b907f4 *__value_;
    } __end_cap_;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
    reffed_ptr_49fb12e5 *_field1;
    reffed_ptr_49fb12e5 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
        reffed_ptr_49fb12e5 *_field1;
    } _field3;
};

struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>;

struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelElement, std::__1::allocator<gmscore::model::LabelElement>> {
    struct LabelElement *__begin_;
    struct LabelElement *__end_;
    struct __compressed_pair<gmscore::model::LabelElement *, std::__1::allocator<gmscore::model::LabelElement>> {
        struct LabelElement *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Rectangle2D, std::__1::allocator<gmscore::model::Rectangle2D>> {
    struct Rectangle2D *__begin_;
    struct Rectangle2D *__end_;
    struct __compressed_pair<gmscore::model::Rectangle2D *, std::__1::allocator<gmscore::model::Rectangle2D>> {
        struct Rectangle2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::Triangle2D, std::__1::allocator<gmscore::model::Triangle2D>> {
    struct Triangle2D *__begin_;
    struct Triangle2D *__end_;
    struct __compressed_pair<gmscore::model::Triangle2D *, std::__1::allocator<gmscore::model::Triangle2D>> {
        struct Triangle2D *__value_;
    } __end_cap_;
};

struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__value_;
    } __end_cap_;
};

struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
};

struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__value_;
    } __end_cap_;
};

struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__value_;
    } __end_cap_;
};

struct vector<gmscore::vector::MutableStateTracker *, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
    struct MutableStateTracker **__begin_;
    struct MutableStateTracker **__end_;
    struct __compressed_pair<gmscore::vector::MutableStateTracker **, std::__1::allocator<gmscore::vector::MutableStateTracker *>> {
        struct MutableStateTracker **__value_;
    } __end_cap_;
};

struct vector<gmscore::vector::PlaceholderUpdate, std::__1::allocator<gmscore::vector::PlaceholderUpdate>> {
    struct PlaceholderUpdate *_field1;
    struct PlaceholderUpdate *_field2;
    struct __compressed_pair<gmscore::vector::PlaceholderUpdate *, std::__1::allocator<gmscore::vector::PlaceholderUpdate>> {
        struct PlaceholderUpdate *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
};

struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<long, std::__1::allocator<long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long *, std::__1::allocator<long>> {
        long long *__value_;
    } __end_cap_;
};

struct vector<rtc::Thread::DelayedMessage, std::__1::allocator<rtc::Thread::DelayedMessage>> {
    struct DelayedMessage *_field1;
    struct DelayedMessage *_field2;
    struct __compressed_pair<rtc::Thread::DelayedMessage *, std::__1::allocator<rtc::Thread::DelayedMessage>> {
        struct DelayedMessage *_field1;
    } _field3;
};

struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
    struct SinkPair *_field1;
    struct SinkPair *_field2;
    struct __compressed_pair<rtc::VideoSourceBase::SinkPair *, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
        struct SinkPair *_field1;
    } _field3;
};

struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
    struct scoped_refptr<rtc::RTCCertificate> *_field1;
    struct scoped_refptr<rtc::RTCCertificate> *_field2;
    struct __compressed_pair<rtc::scoped_refptr<rtc::RTCCertificate>*, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
        struct scoped_refptr<rtc::RTCCertificate> *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
};

struct vector<std::__1::complex<float>, std::__1::allocator<std::__1::complex<float>>> {
    struct complex<float> *_field1;
    struct complex<float> *_field2;
    struct __compressed_pair<std::__1::complex<float>*, std::__1::allocator<std::__1::complex<float>>> {
        struct complex<float> *_field1;
    } _field3;
};

struct vector<std::__1::shared_ptr<iosguard::JSFunctionProxy>, std::__1::allocator<std::__1::shared_ptr<iosguard::JSFunctionProxy>>> {
    shared_ptr_7919607d *__begin_;
    shared_ptr_7919607d *__end_;
    struct __compressed_pair<std::__1::shared_ptr<iosguard::JSFunctionProxy>*, std::__1::allocator<std::__1::shared_ptr<iosguard::JSFunctionProxy>>> {
        shared_ptr_7919607d *__value_;
    } __end_cap_;
};

struct vector<std::__1::unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>>, std::__1::allocator<std::__1::unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>>>> {
    struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> *__begin_;
    struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> *__end_;
    struct __compressed_pair<std::__1::unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>>*, std::__1::allocator<std::__1::unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>>>> {
        struct unordered_map<int, unsigned long long, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, unsigned long long>>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    vector_7584168e *_field1;
    vector_7584168e *_field2;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        vector_7584168e *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>>> {
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>> *_field1;
    struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>> *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>*, std::__1::allocator<std::__1::vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>>>> {
        struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabelElement>>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_52d06928 *_field1;
    vector_52d06928 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_52d06928 *_field1;
    } _field3;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    vector_12bd641b *_field1;
    vector_12bd641b *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        vector_12bd641b *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
};

struct vector<unsigned long, std::__1::allocator<unsigned long>> {
    unsigned long long *__begin_;
    unsigned long long *__end_;
    struct __compressed_pair<unsigned long *, std::__1::allocator<unsigned long>> {
        unsigned long long *__value_;
    } __end_cap_;
};

struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
};

struct vector<webrtc::FrameDependencyTemplate, std::__1::allocator<webrtc::FrameDependencyTemplate>> {
    struct FrameDependencyTemplate *_field1;
    struct FrameDependencyTemplate *_field2;
    struct __compressed_pair<webrtc::FrameDependencyTemplate *, std::__1::allocator<webrtc::FrameDependencyTemplate>> {
        struct FrameDependencyTemplate *_field1;
    } _field3;
};

struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
    struct IceServer *_field1;
    struct IceServer *_field2;
    struct __compressed_pair<webrtc::PeerConnectionInterface::IceServer *, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
        struct IceServer *_field1;
    } _field3;
};

struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> {
    struct RtcpFeedback *_field1;
    struct RtcpFeedback *_field2;
    struct __compressed_pair<webrtc::RtcpFeedback *, std::__1::allocator<webrtc::RtcpFeedback>> {
        struct RtcpFeedback *_field1;
    } _field3;
};

struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> {
    struct RtpCodecParameters *_field1;
    struct RtpCodecParameters *_field2;
    struct __compressed_pair<webrtc::RtpCodecParameters *, std::__1::allocator<webrtc::RtpCodecParameters>> {
        struct RtpCodecParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> {
    struct RtpEncodingParameters *_field1;
    struct RtpEncodingParameters *_field2;
    struct __compressed_pair<webrtc::RtpEncodingParameters *, std::__1::allocator<webrtc::RtpEncodingParameters>> {
        struct RtpEncodingParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> {
    struct RtpExtension *_field1;
    struct RtpExtension *_field2;
    struct __compressed_pair<webrtc::RtpExtension *, std::__1::allocator<webrtc::RtpExtension>> {
        struct RtpExtension *_field1;
    } _field3;
};

#if 0
// Names with conflicting types:
typedef struct {
    union {
        _Bool _field1;
        int _field2;
        long long _field3;
        unsigned int _field4;
        unsigned long long _field5;
        float _field6;
        double _field7;
        id _field8;
        id _field9;
        id _field10;
        int _field11;
    } _field1;
    char *_field2;
    CDUnion_55fa2897 _field3;
    CDUnion_55fa2897 _field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
} GPBExtensionDescription_b2840997;

typedef struct {
    union {
        _Bool _field1;
        int _field2;
        long long _field3;
        unsigned int _field4;
        unsigned long long _field5;
        float _field6;
        double _field7;
        id _field8;
        id _field9;
        id _field10;
        int _field11;
    } _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
} GPBExtensionDescription_dbd59242;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    unsigned short _field2;
} CDStruct_6a59ab51;

typedef struct {
    unsigned int x;
    unsigned int y;
    unsigned int width;
    unsigned int height;
} CDStruct_0a4f9365;

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
} CDStruct_4bcfbbae;

typedef struct {
    unsigned long long state;
    id *itemsPtr;
    unsigned long long *mutationsPtr;
    unsigned long long extra[5];
} CDStruct_58648341;

typedef struct {
    unsigned char _field1[16];
} CDStruct_60067b7e;

typedef struct {
    void *reserved[8];
} CDStruct_d7a492ad;

typedef struct {
    void **_field1;
    int *_field2;
    char *_field3;
} CDStruct_e1a27b1c;

typedef struct {
    void *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
} CDStruct_9d607ac6;

typedef struct {
    void *buffer;
    int length;
    int tail;
    int head;
    int fillCount;
    _Bool atomic;
} CDStruct_c5d49230;

typedef struct {
    double _field1;
    double _field2;
    double _field3[4];
} CDStruct_b1bacac9;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    int veID;
    _Bool rootPage;
    short classID;
} CDStruct_a9c8ee48;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
    long long _field3;
} CDStruct_2ec95fd7;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long count;
    unsigned long long capacity;
    struct grpc_metadata *metadata;
} CDStruct_6f820e53;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
} CDStruct_e3b9714e;

typedef struct {
    struct CGSize _field1;
    struct CGSize _field2;
} CDStruct_90e057aa;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
} CDStruct_165487e6;

typedef struct {
    CDUnion_93fc948c c1;
    CDUnion_93fc948c c2;
} CDStruct_2a265b6d;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
} CDStruct_60d9add8;

typedef struct {
    CDStruct_45f2ef97 segment;
    CDStruct_2a265b6d curve;
} CDStruct_e33e4b34;

typedef struct {
    CDStruct_e33e4b34 present;
    CDStruct_e33e4b34 dismiss;
} CDStruct_d4d0c834;

// Ambiguous groups
typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double minimum;
    double maximum;
} CDStruct_ef18196a;

typedef struct {
    float _field1;
    float _field2;
} CDStruct_b2fbf00d;

typedef struct {
    float from;
    float to;
} CDStruct_45f2ef97;

typedef struct Mat<unsigned char> {
    int _field1;
    int _field2;
    char *_field3;
} Mat_c4fc5366;

typedef struct RepeatedField<float> {
    int _field1;
    int _field2;
    void *_field3;
} RepeatedField_0cba3201;

typedef struct STLRange<const std::__1::vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>>> {
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field1;
    struct __wrap_iter<const gmscore::model::AbsolutePosition *> _field2;
} STLRange_5fcae3ea;

typedef struct STLRange<const std::__1::vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>>> {
    struct __wrap_iter<const gmscore::model::Alignment *> _field1;
    struct __wrap_iter<const gmscore::model::Alignment *> _field2;
} STLRange_34380436;

typedef struct STLRange<const std::__1::vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>>> {
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field1;
    struct __wrap_iter<const gmscore::model::LabelGroup *> _field2;
} STLRange_9ddfc5e7;

typedef struct STLRange<const std::__1::vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>>> {
    struct __wrap_iter<const gmscore::model::Point3D *> _field1;
    struct __wrap_iter<const gmscore::model::Point3D *> _field2;
} STLRange_4dbe973e;

typedef struct STLRange<const std::__1::vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>>> {
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field1;
    struct __wrap_iter<const gmscore::model::stripified_mesh::NormalVector *> _field2;
} STLRange_5078e726;

typedef struct STLRange<const std::__1::vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>>> {
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field1;
    struct __wrap_iter<const gmscore::vector::ColoredPoint *> _field2;
} STLRange_20c09f2e;

typedef struct STLRange<const std::__1::vector<int, std::__1::allocator<int>>> {
    struct __wrap_iter<const int *> _field1;
    struct __wrap_iter<const int *> _field2;
} STLRange_9491c893;

typedef struct STLRange<const std::__1::vector<unsigned int, std::__1::allocator<unsigned int>>> {
    struct __wrap_iter<const unsigned int *> _field1;
    struct __wrap_iter<const unsigned int *> _field2;
} STLRange_c62eef92;

typedef struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
} VideoSinkInterface_a6f4a563;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct bitset<16> {
    unsigned long long _field1;
} bitset_5aefb80d;

typedef struct map<long long, GMSMultiZoomStyle *, std::__1::less<long long>, std::__1::allocator<std::__1::pair<const long long, GMSMultiZoomStyle *>>> {
    struct __tree<std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>, std::__1::allocator<std::__1::__value_type<long long, GMSMultiZoomStyle *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<long long, GMSMultiZoomStyle *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<long long, std::__1::__value_type<long long, GMSMultiZoomStyle *>, std::__1::less<long long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_f929ff81;

typedef struct objc_metadata_hider_ptr<const _SRLBindingsRegistrationData> {
    struct _SRLBindingsRegistrationData *_field1;
} objc_metadata_hider_ptr_8b19f256;

typedef struct objc_metadata_hider_ptr<gmscore::renderer::EntityRenderer> {
    struct EntityRenderer *p_;
} objc_metadata_hider_ptr_a1c2b231;

typedef struct objc_metadata_hider_ptr<gmscore::vector::TextureCache> {
    struct TextureCache *_field1;
} objc_metadata_hider_ptr_ab527736;

typedef struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct ProfileLevelId data_;
        struct dummy_type dummy_;
    } ;
} optional_9f2cf8d4;

typedef struct reffed_ptr<(anonymous namespace)::TileUpdaterBehavior> {
    struct TileUpdaterBehavior *ptr_;
} reffed_ptr_9b434489;

typedef struct reffed_ptr<gmscore::renderer::AdjustableTextureShaderState> {
    struct AdjustableTextureShaderState *ptr_;
} reffed_ptr_737cd738;

typedef struct reffed_ptr<gmscore::renderer::BaseEntity> {
    struct BaseEntity *ptr_;
} reffed_ptr_757df3c3;

typedef struct reffed_ptr<gmscore::renderer::Behavior> {
    struct Behavior *_field1;
} reffed_ptr_d6c13506;

typedef struct reffed_ptr<gmscore::renderer::BlendState> {
    struct BlendState *ptr_;
} reffed_ptr_9dddd61a;

typedef struct reffed_ptr<gmscore::renderer::ColorMaskState> {
    struct ColorMaskState *ptr_;
} reffed_ptr_5b7b7427;

typedef struct reffed_ptr<gmscore::renderer::DefaultAlphaShaderState> {
    struct DefaultAlphaShaderState *ptr_;
} reffed_ptr_23a2d03e;

typedef struct reffed_ptr<gmscore::renderer::DefaultShaderState> {
    struct DefaultShaderState *ptr_;
} reffed_ptr_36a6b36a;

typedef struct reffed_ptr<gmscore::renderer::DepthBufferState> {
    struct DepthBufferState *ptr_;
} reffed_ptr_4c2746c7;

typedef struct reffed_ptr<gmscore::renderer::EntityState> {
    struct EntityState *ptr_;
} reffed_ptr_c8344b08;

typedef struct reffed_ptr<gmscore::renderer::ImageData> {
    struct ImageData *ptr_;
} reffed_ptr_5e8a2241;

typedef struct reffed_ptr<gmscore::renderer::LineState> {
    struct LineState *ptr_;
} reffed_ptr_08be8c30;

typedef struct reffed_ptr<gmscore::renderer::RenderTarget> {
    struct RenderTarget *ptr_;
} reffed_ptr_e23c8d60;

typedef struct reffed_ptr<gmscore::renderer::StencilState> {
    struct StencilState *ptr_;
} reffed_ptr_b6b7b6c6;

typedef struct reffed_ptr<gmscore::renderer::TextureShaderState> {
    struct TextureShaderState *ptr_;
} reffed_ptr_54a4db53;

typedef struct reffed_ptr<gmscore::renderer::TextureState> {
    struct TextureState *ptr_;
} reffed_ptr_7371fe81;

typedef struct reffed_ptr<gmscore::renderer::VertexData> {
    struct VertexData *ptr_;
} reffed_ptr_6df9c1dc;

typedef struct reffed_ptr<gmscore::streetview::Camera> {
    struct Camera *_field1;
} reffed_ptr_a9a59d6a;

typedef struct reffed_ptr<gmscore::vector::AreaGroup> {
    struct AreaGroup *ptr_;
} reffed_ptr_d682b345;

typedef struct reffed_ptr<gmscore::vector::CalloutStrategy> {
    struct CalloutStrategy *ptr_;
} reffed_ptr_33d7f2af;

typedef struct reffed_ptr<gmscore::vector::Camera> {
    struct Camera *ptr_;
} reffed_ptr_329922e5;

typedef struct reffed_ptr<gmscore::vector::CategorizedLabelProvider> {
    struct CategorizedLabelProvider *ptr_;
} reffed_ptr_5e025927;

typedef struct reffed_ptr<gmscore::vector::GLAlphaOnlyTextureShaderState> {
    struct GLAlphaOnlyTextureShaderState *ptr_;
} reffed_ptr_331440ca;

typedef struct reffed_ptr<gmscore::vector::GLAlphaShaderState> {
    struct GLAlphaShaderState *ptr_;
} reffed_ptr_33eccd4f;

typedef struct reffed_ptr<gmscore::vector::GLBasicShaderState> {
    struct GLBasicShaderState *ptr_;
} reffed_ptr_e65f5ec8;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingAlphaShaderState> {
    struct GLBuildingFadingAlphaShaderState *ptr_;
} reffed_ptr_ee68e0a3;

typedef struct reffed_ptr<gmscore::vector::GLBuildingFadingShaderState> {
    struct GLBuildingFadingShaderState *ptr_;
} reffed_ptr_4233df6d;

typedef struct reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas> {
    struct GMSGeneratedTextureAtlas *_field1;
} reffed_ptr_eca42765;

typedef struct reffed_ptr<gmscore::vector::GMSMarkupBehavior> {
    struct GMSMarkupBehavior *ptr_;
} reffed_ptr_913e2e02;

typedef struct reffed_ptr<gmscore::vector::GMSStippleTexturePool> {
    struct GMSStippleTexturePool *ptr_;
} reffed_ptr_484c2754;

typedef struct reffed_ptr<gmscore::vector::LabelBucketRestriction> {
    struct LabelBucketRestriction *_field1;
} reffed_ptr_63fdb79c;

typedef struct reffed_ptr<gmscore::vector::LabelDedupingRule> {
    struct LabelDedupingRule *ptr_;
} reffed_ptr_e654501b;

typedef struct reffed_ptr<gmscore::vector::LabelProvider> {
    struct LabelProvider *_field1;
} reffed_ptr_03f800df;

typedef struct reffed_ptr<gmscore::vector::LabelSource> {
    struct LabelSource *ptr_;
} reffed_ptr_799bd618;

typedef struct reffed_ptr<gmscore::vector::LabelUpdateDelegate> {
    struct LabelUpdateDelegate *ptr_;
} reffed_ptr_64032976;

typedef struct reffed_ptr<gmscore::vector::LabelableFeature> {
    struct LabelableFeature *ptr_;
} reffed_ptr_77f24e90;

typedef struct reffed_ptr<gmscore::vector::LabelableFeatureSelector> {
    struct LabelableFeatureSelector *ptr_;
} reffed_ptr_d5e81332;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::LabelSnapshot> {
    struct LabelSnapshot *_field1;
} reffed_ptr_fe03a69a;

typedef struct reffed_ptr<gmscore::vector::LabelingBehavior::Listener> {
    struct Listener *_field1;
} reffed_ptr_1c161f82;

typedef struct reffed_ptr<gmscore::vector::MutableState> {
    struct MutableState *ptr_;
} reffed_ptr_57016b98;

typedef struct reffed_ptr<gmscore::vector::MyLocationIndicator> {
    struct MyLocationIndicator *_field1;
} reffed_ptr_c6b907f4;

typedef struct reffed_ptr<gmscore::vector::RenderLabel> {
    struct RenderLabel *ptr_;
} reffed_ptr_49fb12e5;

typedef struct reffed_ptr<gmscore::vector::TextureAtlasesContext> {
    struct TextureAtlasesContext *ptr_;
} reffed_ptr_933c1cb6;

typedef struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
} scoped_refptr_4605340c;

typedef struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
} scoped_refptr_0271d9ef;

typedef struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
} scoped_refptr_3a9e6b6a;

typedef struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
} scoped_refptr_9ba5b87d;

typedef struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
} scoped_refptr_8b29514b;

typedef struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
} scoped_refptr_833c0867;

typedef struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
} scoped_refptr_09a33b10;

typedef struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
} scoped_refptr_25177f94;

typedef struct scoped_refptr<webrtc::EncodedImageBufferInterface> {
    struct EncodedImageBufferInterface *ptr_;
} scoped_refptr_05c3cd2c;

typedef struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
} scoped_refptr_976466dd;

typedef struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
} scoped_refptr_01237151;

typedef struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
} scoped_refptr_b674d2a6;

typedef struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
} scoped_refptr_74f9e477;

typedef struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
} scoped_refptr_6217ee82;

typedef struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
} scoped_refptr_7d7e84a9;

typedef struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
} scoped_refptr_1eaeeec2;

typedef struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
} scoped_refptr_1f0d680a;

typedef struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
} scoped_refptr_92bf499b;

typedef struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
} scoped_refptr_3635276f;

typedef struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
} scoped_refptr_f1ddbb35;

typedef struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
} scoped_refptr_cae59c25;

typedef struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
} scoped_refptr_a41c3e90;

typedef struct set<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
    struct __tree<GMSFeatureEntityUIItem *, (anonymous namespace)::TappableItemSetOrdering, std::__1::allocator<GMSFeatureEntityUIItem *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureEntityUIItem *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, (anonymous namespace)::TappableItemSetOrdering> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_2c07e213;

typedef struct set<GMSFeatureID, gmsbase::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
    struct __tree<GMSFeatureID, gmsbase::model::GMSFeatureIDLessFunc, std::__1::allocator<GMSFeatureID>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<GMSFeatureID, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, gmsbase::model::GMSFeatureIDLessFunc> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_5058a18c;

typedef struct set<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
    struct __tree<UIView *, std::__1::less<UIView *>, std::__1::allocator<UIView *>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<UIView *, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::less<UIView *>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} set_54585b72;

typedef struct set<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
    struct __tree<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_fa8f8985;

typedef struct set<int, std::__1::less<int>, std::__1::allocator<int>> {
    struct __tree<int, std::__1::less<int>, std::__1::allocator<int>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<int, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<int>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_7b7d70f4;

typedef struct set<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
    struct __tree<unsigned long long, std::__1::less<unsigned long long>, std::__1::allocator<unsigned long long>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<unsigned long long, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<unsigned long long>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
} set_b4d22a2d;

typedef struct shared_ptr<GMSRocketIconService::Holder> {
    struct Holder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f23710bc;

typedef struct shared_ptr<gmscore::vector::CalloutSharedState> {
    struct CalloutSharedState *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a67c817a;

typedef struct shared_ptr<iosguard::ErrorLogger> {
    struct ErrorLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e3a252de;

typedef struct shared_ptr<iosguard::JSFunctionProxy> {
    struct JSFunctionProxy *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7919607d;

typedef struct shared_ptr<iosguard::JavaScriptExecutor> {
    struct JavaScriptExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_cb29a6c0;

typedef struct shared_ptr<scytale::DbCommitHook> {
    struct DbCommitHook *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ff15fcd9;

typedef struct shared_ptr<scytale::DbWrapperFactory> {
    struct DbWrapperFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f80c3c8c;

typedef struct shared_ptr<scytale::DbWrapperFactoryFactory> {
    struct DbWrapperFactoryFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e8ad2cb3;

typedef struct shared_ptr<scytale::DbWrapperInterface> {
    struct DbWrapperInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7e67c2ee;

typedef struct shared_ptr<scytale::DbWrapperParams> {
    struct DbWrapperParams *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8a11b7a7;

typedef struct shared_ptr<scytale::DbWrapperParamsBuilder> {
    struct DbWrapperParamsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fc0be075;

typedef struct shared_ptr<scytale::EventPublisher> {
    struct EventPublisher *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3cc9791c;

typedef struct shared_ptr<scytale::KeyTransparencyIdConverter> {
    struct KeyTransparencyIdConverter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ea6f61b9;

typedef struct shared_ptr<scytale::KeyTransparencyRpcInterface> {
    struct KeyTransparencyRpcInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e88d954e;

typedef struct shared_ptr<scytale::KeyTransparencyStateStore> {
    struct KeyTransparencyStateStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_374389ed;

typedef struct shared_ptr<scytale::MediaEncryptor> {
    struct MediaEncryptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ec984a06;

typedef struct shared_ptr<scytale::MessageEncryptor> {
    struct MessageEncryptor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_17c8e493;

typedef struct shared_ptr<scytale::MessageEncryptorParamsBuilder> {
    struct MessageEncryptorParamsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_28c3a632;

typedef struct shared_ptr<scytale::PrekeyRpcInterface> {
    struct PrekeyRpcInterface *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_265272b0;

typedef struct shared_ptr<tacl::AppContactRequester> {
    struct AppContactRequester *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e53e7d0a;

typedef struct shared_ptr<tacl::AudioFrame> {
    struct AudioFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8a2c361d;

typedef struct shared_ptr<tacl::BindWatcher> {
    struct BindWatcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_1949bd9b;

typedef struct shared_ptr<tacl::Call> {
    struct Call *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_04f72ccf;

typedef struct shared_ptr<tacl::CallInfoCallback> {
    struct CallInfoCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a89686a2;

typedef struct shared_ptr<tacl::CallManager> {
    struct CallManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_91d50efb;

typedef struct shared_ptr<tacl::CallOptionsBuilder> {
    struct CallOptionsBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ff8aba6a;

typedef struct shared_ptr<tacl::Client> {
    struct Client *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5e63cda4;

typedef struct shared_ptr<tacl::ClientConfigBuilder> {
    struct ClientConfigBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b777b387;

typedef struct shared_ptr<tacl::ContactManager> {
    struct ContactManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_06f1f349;

typedef struct shared_ptr<tacl::EventLogger> {
    struct EventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_00effa6a;

typedef struct shared_ptr<tacl::FragmentDownload> {
    struct FragmentDownload *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b2309849;

typedef struct shared_ptr<tacl::FragmentStore> {
    struct FragmentStore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4b2fe5b7;

typedef struct shared_ptr<tacl::FragmentUpload> {
    struct FragmentUpload *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ec3c5ba7;

typedef struct shared_ptr<tacl::GaiaOauthTokenGetter> {
    struct GaiaOauthTokenGetter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ca22b750;

typedef struct shared_ptr<tacl::GroupCallManager> {
    struct GroupCallManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_4bd11637;

typedef struct shared_ptr<tacl::IceConfigFetcher> {
    struct IceConfigFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9f7a6f5f;

typedef struct shared_ptr<tacl::IdHelpers> {
    struct IdHelpers *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_cc942ccc;

typedef struct shared_ptr<tacl::LocalSession> {
    struct LocalSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_07464c9e;

typedef struct shared_ptr<tacl::LoggingControl> {
    struct LoggingControl *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_01893b99;

typedef struct shared_ptr<tacl::MessageReceiver> {
    struct MessageReceiver *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7932248f;

typedef struct shared_ptr<tacl::MessageReceiverAsync> {
    struct MessageReceiverAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_50194512;

typedef struct shared_ptr<tacl::MessageSender> {
    struct MessageSender *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_87c945a9;

typedef struct shared_ptr<tacl::MessageSenderAsync> {
    struct MessageSenderAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_20dcb7f5;

typedef struct shared_ptr<tacl::MessageTransport> {
    struct MessageTransport *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_bd1640f3;

typedef struct shared_ptr<tacl::MessageTransportAsync> {
    struct MessageTransportAsync *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6dc9108f;

typedef struct shared_ptr<tacl::PiiAuditor> {
    struct PiiAuditor *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6b867711;

typedef struct shared_ptr<tacl::ServerSession> {
    struct ServerSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3154ea20;

typedef struct shared_ptr<tacl::TachyonCallManagerBuilder> {
    struct TachyonCallManagerBuilder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2ba276e8;

typedef struct shared_ptr<tacl::TaclContext> {
    struct TaclContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0defdf4f;

typedef struct shared_ptr<tacl::VideoDecoder> {
    struct VideoDecoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_37ed66e6;

typedef struct shared_ptr<tacl::VideoEncoder> {
    struct VideoEncoder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_69cff784;

typedef struct shared_ptr<tacl::VideoFrame> {
    struct VideoFrame *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f95e7129;

typedef struct shared_ptr<void> {
    void *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b60d0e1e;

typedef struct unique_ptr<GMSx_gmm_photo::platform_ios::IOSPlatformContext, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
    struct __compressed_pair<GMSx_gmm_photo::platform_ios::IOSPlatformContext *, std::__1::default_delete<GMSx_gmm_photo::platform_ios::IOSPlatformContext>> {
        struct IOSPlatformContext *__value_;
    } __ptr_;
} unique_ptr_4729c435;

typedef struct unique_ptr<crypto::tink::Aead, std::__1::default_delete<crypto::tink::Aead>> {
    struct __compressed_pair<crypto::tink::Aead *, std::__1::default_delete<crypto::tink::Aead>> {
        struct Aead *__value_;
    } __ptr_;
} unique_ptr_a62948c5;

typedef struct unique_ptr<crypto::tink::DeterministicAead, std::__1::default_delete<crypto::tink::DeterministicAead>> {
    struct __compressed_pair<crypto::tink::DeterministicAead *, std::__1::default_delete<crypto::tink::DeterministicAead>> {
        struct DeterministicAead *__value_;
    } __ptr_;
} unique_ptr_3009830b;

typedef struct unique_ptr<crypto::tink::HybridDecrypt, std::__1::default_delete<crypto::tink::HybridDecrypt>> {
    struct __compressed_pair<crypto::tink::HybridDecrypt *, std::__1::default_delete<crypto::tink::HybridDecrypt>> {
        struct HybridDecrypt *__value_;
    } __ptr_;
} unique_ptr_e25db3c6;

typedef struct unique_ptr<crypto::tink::HybridEncrypt, std::__1::default_delete<crypto::tink::HybridEncrypt>> {
    struct __compressed_pair<crypto::tink::HybridEncrypt *, std::__1::default_delete<crypto::tink::HybridEncrypt>> {
        struct HybridEncrypt *__value_;
    } __ptr_;
} unique_ptr_0d48696f;

typedef struct unique_ptr<crypto::tink::KeysetHandle, std::__1::default_delete<crypto::tink::KeysetHandle>> {
    struct __compressed_pair<crypto::tink::KeysetHandle *, std::__1::default_delete<crypto::tink::KeysetHandle>> {
        struct KeysetHandle *__value_;
    } __ptr_;
} unique_ptr_41b3093e;

typedef struct unique_ptr<crypto::tink::KeysetReader, std::__1::default_delete<crypto::tink::KeysetReader>> {
    struct __compressed_pair<crypto::tink::KeysetReader *, std::__1::default_delete<crypto::tink::KeysetReader>> {
        struct KeysetReader *__value_;
    } __ptr_;
} unique_ptr_c29adcce;

typedef struct unique_ptr<crypto::tink::Mac, std::__1::default_delete<crypto::tink::Mac>> {
    struct __compressed_pair<crypto::tink::Mac *, std::__1::default_delete<crypto::tink::Mac>> {
        struct Mac *__value_;
    } __ptr_;
} unique_ptr_ed47e742;

typedef struct unique_ptr<crypto::tink::PublicKeySign, std::__1::default_delete<crypto::tink::PublicKeySign>> {
    struct __compressed_pair<crypto::tink::PublicKeySign *, std::__1::default_delete<crypto::tink::PublicKeySign>> {
        struct PublicKeySign *__value_;
    } __ptr_;
} unique_ptr_f6599247;

typedef struct unique_ptr<crypto::tink::PublicKeyVerify, std::__1::default_delete<crypto::tink::PublicKeyVerify>> {
    struct __compressed_pair<crypto::tink::PublicKeyVerify *, std::__1::default_delete<crypto::tink::PublicKeyVerify>> {
        struct PublicKeyVerify *__value_;
    } __ptr_;
} unique_ptr_04fe4415;

typedef struct unique_ptr<gmscore::renderer::ResourceFinder, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
    struct __compressed_pair<gmscore::renderer::ResourceFinder *, std::__1::default_delete<gmscore::renderer::ResourceFinder>> {
        struct ResourceFinder *_field1;
    } _field1;
} unique_ptr_c2a19896;

typedef struct unique_ptr<gmscore::vector::detail::FeatureData, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
    struct __compressed_pair<gmscore::vector::detail::FeatureData *, std::__1::default_delete<gmscore::vector::detail::FeatureData>> {
        struct FeatureData *__value_;
    } __ptr_;
} unique_ptr_037ffa1e;

typedef struct unique_ptr<securemessage::CryptoOps::KeyPair, std::__1::default_delete<securemessage::CryptoOps::KeyPair>> {
    struct __compressed_pair<securemessage::CryptoOps::KeyPair *, std::__1::default_delete<securemessage::CryptoOps::KeyPair>> {
        struct KeyPair *_field1;
    } _field1;
} unique_ptr_da06165a;

typedef struct unique_ptr<securemessage::CryptoOps::PrivateKey, std::__1::default_delete<securemessage::CryptoOps::PrivateKey>> {
    struct __compressed_pair<securemessage::CryptoOps::PrivateKey *, std::__1::default_delete<securemessage::CryptoOps::PrivateKey>> {
        struct PrivateKey *_field1;
    } _field1;
} unique_ptr_93c0ea71;

typedef struct unique_ptr<securemessage::CryptoOps::PublicKey, std::__1::default_delete<securemessage::CryptoOps::PublicKey>> {
    struct __compressed_pair<securemessage::CryptoOps::PublicKey *, std::__1::default_delete<securemessage::CryptoOps::PublicKey>> {
        struct PublicKey *_field1;
    } _field1;
} unique_ptr_915c4f5f;

typedef struct unique_ptr<securemessage::CryptoOps::SecretKey, std::__1::default_delete<securemessage::CryptoOps::SecretKey>> {
    struct __compressed_pair<securemessage::CryptoOps::SecretKey *, std::__1::default_delete<securemessage::CryptoOps::SecretKey>> {
        struct SecretKey *_field1;
    } _field1;
} unique_ptr_1fe6c1d1;

typedef struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
} unique_ptr_eddc2ff2;

typedef struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
} unique_ptr_9751165c;

typedef struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
} unique_ptr_20e123b6;

typedef struct unique_ptr<webrtc::NetworkControllerFactoryInterface, std::__1::default_delete<webrtc::NetworkControllerFactoryInterface>> {
    struct __compressed_pair<webrtc::NetworkControllerFactoryInterface *, std::__1::default_delete<webrtc::NetworkControllerFactoryInterface>> {
        struct NetworkControllerFactoryInterface *_field1;
    } _field1;
} unique_ptr_e122867b;

typedef struct unique_ptr<webrtc::PeerConnectionDependencies, std::__1::default_delete<webrtc::PeerConnectionDependencies>> {
    struct __compressed_pair<webrtc::PeerConnectionDependencies *, std::__1::default_delete<webrtc::PeerConnectionDependencies>> {
        struct PeerConnectionDependencies *_field1;
    } _field1;
} unique_ptr_f3d5ae95;

typedef struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
} unique_ptr_91070b9b;

typedef struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
} unique_ptr_28850a1b;

typedef struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
} unique_ptr_6d0f5cf1;

typedef struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
} unique_ptr_2722152f;

typedef struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
} unique_ptr_5191721b;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__value_;
    } __end_cap_;
} vector_896d67e1;

typedef struct vector<GMSCoordinate, std::__1::allocator<GMSCoordinate>> {
    struct GMSCoordinate *_field1;
    struct GMSCoordinate *_field2;
    struct __compressed_pair<GMSCoordinate *, std::__1::allocator<GMSCoordinate>> {
        struct GMSCoordinate *_field1;
    } _field3;
} vector_04a19197;

typedef struct vector<GMSFeatureID, std::__1::allocator<GMSFeatureID>> {
    struct GMSFeatureID *__begin_;
    struct GMSFeatureID *__end_;
    struct __compressed_pair<GMSFeatureID *, std::__1::allocator<GMSFeatureID>> {
        struct GMSFeatureID *__value_;
    } __end_cap_;
} vector_cdd17bd2;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_03b67401;

typedef struct vector<const gmscore::vector::MarkupPolyline, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
    struct MarkupPolyline *_field1;
    struct MarkupPolyline *_field2;
    struct __compressed_pair<const gmscore::vector::MarkupPolyline *, std::__1::allocator<const gmscore::vector::MarkupPolyline>> {
        struct MarkupPolyline *_field1;
    } _field3;
} vector_78334dae;

typedef struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
} vector_b67dfe3a;

typedef struct vector<float, std::__1::allocator<float>> {
    float *__begin_;
    float *__end_;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *__value_;
    } __end_cap_;
} vector_7584168e;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
    struct reffed_ptr<gmscore::renderer::PolygonState> *__begin_;
    struct reffed_ptr<gmscore::renderer::PolygonState> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::renderer::PolygonState>>> {
        struct reffed_ptr<gmscore::renderer::PolygonState> *__value_;
    } __end_cap_;
} vector_69d5a305;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__begin_;
    struct reffed_ptr<gmscore::vector::FeatureGroup> *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::FeatureGroup>>> {
        struct reffed_ptr<gmscore::vector::FeatureGroup> *__value_;
    } __end_cap_;
} vector_0c816959;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
    reffed_ptr_eca42765 *_field1;
    reffed_ptr_eca42765 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::GMSGeneratedTextureAtlas>>> {
        reffed_ptr_eca42765 *_field1;
    } _field3;
} vector_8e13786b;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
    reffed_ptr_77f24e90 *__begin_;
    reffed_ptr_77f24e90 *__end_;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::LabelableFeature>>> {
        reffed_ptr_77f24e90 *__value_;
    } __end_cap_;
} vector_47b6fe56;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::MutableState>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
    reffed_ptr_57016b98 *_field1;
    reffed_ptr_57016b98 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::MutableState>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::MutableState>>> {
        reffed_ptr_57016b98 *_field1;
    } _field3;
} vector_4b334fea;

typedef struct vector<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
    reffed_ptr_49fb12e5 *_field1;
    reffed_ptr_49fb12e5 *_field2;
    struct __compressed_pair<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>*, std::__1::allocator<gmscore::base::reffed_ptr<gmscore::vector::RenderLabel>>> {
        reffed_ptr_49fb12e5 *_field1;
    } _field3;
} vector_48b72b97;

typedef struct vector<gmscore::math::Vector2f, std::__1::allocator<gmscore::math::Vector2f>> {
    struct Vector2f *__begin_;
    struct Vector2f *__end_;
    struct __compressed_pair<gmscore::math::Vector2f *, std::__1::allocator<gmscore::math::Vector2f>> {
        struct Vector2f *__value_;
    } __end_cap_;
} vector_c5a5cb90;

typedef struct vector<gmscore::model::AbsolutePosition, std::__1::allocator<gmscore::model::AbsolutePosition>> {
    struct AbsolutePosition *__begin_;
    struct AbsolutePosition *__end_;
    struct __compressed_pair<gmscore::model::AbsolutePosition *, std::__1::allocator<gmscore::model::AbsolutePosition>> {
        struct AbsolutePosition *__value_;
    } __end_cap_;
} vector_adfa1f2f;

typedef struct vector<gmscore::model::Alignment, std::__1::allocator<gmscore::model::Alignment>> {
    struct Alignment *__begin_;
    struct Alignment *__end_;
    struct __compressed_pair<gmscore::model::Alignment *, std::__1::allocator<gmscore::model::Alignment>> {
        struct Alignment *__value_;
    } __end_cap_;
} vector_0dce662e;

typedef struct vector<gmscore::model::LabelGroup, std::__1::allocator<gmscore::model::LabelGroup>> {
    struct LabelGroup *__begin_;
    struct LabelGroup *__end_;
    struct __compressed_pair<gmscore::model::LabelGroup *, std::__1::allocator<gmscore::model::LabelGroup>> {
        struct LabelGroup *__value_;
    } __end_cap_;
} vector_99d15d9f;

typedef struct vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>> {
    struct Point2D *__begin_;
    struct Point2D *__end_;
    struct __compressed_pair<gmscore::model::Point2D *, std::__1::allocator<gmscore::model::Point2D>> {
        struct Point2D *__value_;
    } __end_cap_;
} vector_52d06928;

typedef struct vector<gmscore::model::Point3D, std::__1::allocator<gmscore::model::Point3D>> {
    struct Point3D *__begin_;
    struct Point3D *__end_;
    struct __compressed_pair<gmscore::model::Point3D *, std::__1::allocator<gmscore::model::Point3D>> {
        struct Point3D *__value_;
    } __end_cap_;
} vector_5a6265c0;

typedef struct vector<gmscore::model::Stroke, std::__1::allocator<gmscore::model::Stroke>> {
    struct Stroke *__begin_;
    struct Stroke *__end_;
    struct __compressed_pair<gmscore::model::Stroke *, std::__1::allocator<gmscore::model::Stroke>> {
        struct Stroke *__value_;
    } __end_cap_;
} vector_05d103ca;

typedef struct vector<gmscore::model::stripified_mesh::NormalVector, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
    struct NormalVector *__begin_;
    struct NormalVector *__end_;
    struct __compressed_pair<gmscore::model::stripified_mesh::NormalVector *, std::__1::allocator<gmscore::model::stripified_mesh::NormalVector>> {
        struct NormalVector *__value_;
    } __end_cap_;
} vector_42289879;

typedef struct vector<gmscore::renderer::RenderBin *, std::__1::allocator<gmscore::renderer::RenderBin *>> {
    struct RenderBin **_field1;
    struct RenderBin **_field2;
    struct __compressed_pair<gmscore::renderer::RenderBin **, std::__1::allocator<gmscore::renderer::RenderBin *>> {
        struct RenderBin **_field1;
    } _field3;
} vector_ef47c132;

typedef struct vector<gmscore::vector::ColorSpan, std::__1::allocator<gmscore::vector::ColorSpan>> {
    struct ColorSpan *__begin_;
    struct ColorSpan *__end_;
    struct __compressed_pair<gmscore::vector::ColorSpan *, std::__1::allocator<gmscore::vector::ColorSpan>> {
        struct ColorSpan *__value_;
    } __end_cap_;
} vector_c36147bd;

typedef struct vector<gmscore::vector::ColoredPoint, std::__1::allocator<gmscore::vector::ColoredPoint>> {
    struct ColoredPoint *__begin_;
    struct ColoredPoint *__end_;
    struct __compressed_pair<gmscore::vector::ColoredPoint *, std::__1::allocator<gmscore::vector::ColoredPoint>> {
        struct ColoredPoint *__value_;
    } __end_cap_;
} vector_79ffaa35;

typedef struct vector<gmscore::vector::PlaceholderUpdate, std::__1::allocator<gmscore::vector::PlaceholderUpdate>> {
    struct PlaceholderUpdate *_field1;
    struct PlaceholderUpdate *_field2;
    struct __compressed_pair<gmscore::vector::PlaceholderUpdate *, std::__1::allocator<gmscore::vector::PlaceholderUpdate>> {
        struct PlaceholderUpdate *_field1;
    } _field3;
} vector_cf2e4e34;

typedef struct vector<int, std::__1::allocator<int>> {
    int *__begin_;
    int *__end_;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *__value_;
    } __end_cap_;
} vector_12bd641b;

typedef struct vector<long long, std::__1::allocator<long long>> {
    long long *__begin_;
    long long *__end_;
    struct __compressed_pair<long long *, std::__1::allocator<long long>> {
        long long *__value_;
    } __end_cap_;
} vector_bbba3654;

typedef struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *__begin_;
    basic_string_90719d97 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *__value_;
    } __end_cap_;
} vector_ebb6ef3e;

typedef struct vector<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
    vector_52d06928 *_field1;
    vector_52d06928 *_field2;
    struct __compressed_pair<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>*, std::__1::allocator<std::__1::vector<gmscore::model::Point2D, std::__1::allocator<gmscore::model::Point2D>>>> {
        vector_52d06928 *_field1;
    } _field3;
} vector_f04d5db1;

typedef struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
} vector_aab22ae2;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__value_;
    } __end_cap_;
} vector_12da65de;

typedef struct vector<unsigned short, std::__1::allocator<unsigned short>> {
    unsigned short *__begin_;
    unsigned short *__end_;
    struct __compressed_pair<unsigned short *, std::__1::allocator<unsigned short>> {
        unsigned short *__value_;
    } __end_cap_;
} vector_8d85e9cb;

#pragma mark Named Unions

union CodecSpecificInfoUnion {
    struct CodecSpecificInfoVP8 _field1;
    struct CodecSpecificInfoVP9 _field2;
    struct CodecSpecificInfoH264 _field3;
};

union SRLAPIInstanceType {
    struct {
        char *_field1;
        char *_field2;
    } _field1;
    CDUnknownFunctionPointerType _field2;
};

union SRLImplementationInstanceType {
    char *_field1;
    CDUnknownFunctionPointerType _field2;
};

union StackBufferOrFields {
    struct {
        short _field1;
        unsigned short _field2[27];
    } _field1;
    struct {
        short _field1;
        int _field2;
        int _field3;
        unsigned short *_field4;
    } _field2;
};

union VideoCodecUnion {
    struct VideoCodecVP8 _field1;
    struct VideoCodecVP9 _field2;
    struct VideoCodecH264 _field3;
};

union WeaveEncryptionKey {
    struct WeaveEncryptionKey_AES128CTRSHA1 AES128CTRSHA1;
};

union grpc_byte_buffer_data {
    CDStruct_d7a492ad _field1;
    struct grpc_compressed_buffer _field2;
};

union grpc_op_data {
    CDStruct_d7a492ad reserved;
    struct grpc_op_send_initial_metadata send_initial_metadata;
    struct grpc_op_send_message send_message;
    struct grpc_op_send_status_from_server send_status_from_server;
    struct grpc_op_recv_initial_metadata recv_initial_metadata;
    struct grpc_op_recv_message recv_message;
    struct grpc_op_recv_status_on_client recv_status_on_client;
    struct grpc_op_recv_close_on_server recv_close_on_server;
};

union grpc_slice_data {
    struct grpc_slice_refcounted refcounted;
    struct grpc_slice_inlined inlined;
};

#if 0
// Names with conflicting types:
typedef union {
    struct Allocated {
        int *_field1;
        unsigned long long _field2;
    } _field1;
    struct Inlined _field2;
} Data_4d3a847a;

#endif

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    unsigned int valueFixed32;
    int valueSFixed32;
    float valueFloat;
    unsigned long long valueFixed64;
    long long valueSFixed64;
    double valueDouble;
    int valueInt32;
    long long valueInt64;
    int valueSInt32;
    long long valueSInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    NSData *valueData;
    NSString *valueString;
    TAGPBGeneratedMessage *valueMessage;
    TAGPBGeneratedMessage *valueGroup;
    int valueEnum;
    TAGPBArray *valueArray;
    id valueObject;
} CDUnion_3de46016;

typedef union {
    char *_field1;
    Class _field2;
} CDUnion_55fa2897;

typedef union {
    struct {
        float x;
        float y;
    } pt;
    float vals[2];
} CDUnion_93fc948c;

typedef union {
    int data_;
    struct dummy_type dummy_;
} CDUnion_130d44d2;

typedef union {
    long long data_;
    struct dummy_type dummy_;
} CDUnion_c65e931c;

// Ambiguous groups
typedef union {
    _Bool _field1;
    int _field2;
    long long _field3;
    unsigned int _field4;
    unsigned long long _field5;
    float _field6;
    double _field7;
    id _field8;
    id _field9;
    id _field10;
    int _field11;
} CDUnion_cf1021d0;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GMSx_GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_7ae79ea2;

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;

