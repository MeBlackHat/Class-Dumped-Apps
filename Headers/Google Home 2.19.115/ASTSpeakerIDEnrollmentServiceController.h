//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GCKDiscoveryManagerListener-Protocol.h"

@class ASTAssistantDeviceScanner, ASTImpersonationParameters, ASTSettingsMenuService, ASTSpeakerIDEnrollmentParameters, ASTTextIndependentSpeakerIDUpdateRequester, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString;

@interface ASTSpeakerIDEnrollmentServiceController : NSObject <GCKDiscoveryManagerListener>
{
    ASTSettingsMenuService *_settingsMenuService;
    ASTAssistantDeviceScanner *_libAssistantDeviceScanner;
    ASTSpeakerIDEnrollmentParameters *_enrollmentParameters;
    ASTImpersonationParameters *_impersonationParameters;
    NSMutableDictionary *_appDeviceIDToDeviceIDDictionary;
    NSMutableDictionary *_voiceMatchDeviceInfoDictionary;
    NSDictionary *_appDeviceIDToAssistantDeviceDictionary;
    NSString *_enrollmentLocaleID;
    ASTTextIndependentSpeakerIDUpdateRequester *_textIndependentSpeakerIDUpdateRequester;
    NSMutableArray *_supportedDeviceInfoArray;
    NSMutableArray *_unsupportedDeviceInfoArray;
    NSMutableSet *_eurekaInfoFetchers;
    NSMutableSet *_appDeviceIDFetchers;
    NSMutableSet *_linkAccountRequesters;
    NSMutableSet *_speakerIDUpdateRequesters;
    NSMutableSet *_personalReadoutUpdateRequesters;
    NSMutableSet *_readyStatusCheckers;
    NSMutableSet *_arbiterRequesters;
    NSMutableSet *_enrollmentFetchers;
    NSMutableSet *_audioDataLoggers;
    NSMutableSet *_enrollmentStatusCheckers;
}

+ (id)requestForLinkingStandaloneLibAssistantDeviceWithInfo:(id)arg1;
+ (id)voiceMatchDeviceInfoDictionaryWithCloudScanningDeviceIDs:(id)arg1 deviceType:(int)arg2;
+ (id)voiceMatchDeviceInfoDictionaryWithStandaloneLibAssistantDeviceIDs:(id)arg1;
+ (id)voiceMatchDeviceInfoDictionaryWithCastAppDeviceIDs:(id)arg1 ipAddresses:(id)arg2;
- (void).cxx_destruct;
- (id)partitionDeviceIDs:(id)arg1;
- (_Bool)isHTTPSRequiredForDeviceWithID:(id)arg1;
- (id)assistantDeviceSettingsForDeviceWithAppDeviceID:(id)arg1;
- (id)assistantDeviceTypeFromVoiceMatchDeviceInfo:(id)arg1;
- (id)deviceTypeFromNotLinkedAppDeviceID:(id)arg1;
- (id)deviceTypeFromLinkedAppDeviceID:(id)arg1;
- (id)assistantDeviceTypesWithAppDeviceIDs:(id)arg1;
- (void)removeDeviceInfoForCastDevice:(id)arg1;
- (void)addVoiceMatchDeviceInfo:(id)arg1 forDeviceWithID:(id)arg2;
- (void)addCastDeviceInfo:(id)arg1 forDevice:(id)arg2;
- (id)voiceMatchDeviceInfoForDeviceWithID:(id)arg1;
- (id)certificatesForCastDevicesWithIDs:(id)arg1;
- (id)cloudDeviceIDStringsForDevicesWithIDs:(id)arg1;
- (id)ipAddressesForDevicesWithIDs:(id)arg1;
- (id)cachedCastAppDeviceIDForDeviceWithID:(id)arg1;
- (void)checkVoiceEnrollmentStatusWithAppDeviceIDs:(id)arg1 retryCount:(unsigned long long)arg2 retryDelay:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)performGroupDispatchWithDeviceIDs:(id)arg1 dispatchBlock:(CDUnknownBlockType)arg2 notificationBlock:(CDUnknownBlockType)arg3;
- (void)logUtterance:(id)arg1 withLocaleID:(id)arg2 accessToken:(id)arg3 preambleType:(int)arg4 completion:(CDUnknownBlockType)arg5;
- (void)sendPersonalReadoutUpdateForDevicesWithAppDeviceIDs:(id)arg1 enablePersonalReadout:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendSpeakerIDUpdateForDevicesWithAppDeviceIDs:(id)arg1 enableSpeakerID:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)sendSpeakerIDUpdateForDevicesWithIDs:(id)arg1 enableSpeakerID:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)linkAccountWithLibAssistantDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)linkAccountWithCastDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkDeviceReadyStatusForDeviceWithID:(id)arg1 checkType:(long long)arg2 retryCount:(long long)arg3 treatErrorAsSuccess:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)checkDeviceReadyStatusForDevicesWithIDs:(id)arg1 checkType:(long long)arg2 treatErrorAsSuccess:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchAssistantDeviceSettingsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchEurekaInfoForDeviceWithID:(id)arg1 ipAddress:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAppDeviceIDForDeviceWithID:(id)arg1 ipAddress:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchCertificateForDeviceWithID:(id)arg1 ipAddress:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAppDeviceIDStringForDeviceWithID:(id)arg1 ipAddress:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchCertificatesForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchAppDeviceIDStringsForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchCastDeviceInfoForDeviceWithID:(id)arg1 ipAddress:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)populateCloudDeviceInfoForDevicesWithSettings:(id)arg1;
- (void)populateLibAssistantDeviceInfoForDevices:(id)arg1;
- (void)fetchCastDeviceInfoForDevicesWithIDs:(id)arg1 ipAddresses:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAccessTokenWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isEnrollmentEligibleForDevicesWithIDs:(id)arg1;
- (void)didRemoveDevice:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)didUpdateDevice:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)didInsertDevice:(id)arg1 atIndex:(unsigned long long)arg2;
- (void)checkVoiceEnrollmentStatusWithDeviceIDs:(id)arg1 retryCount:(unsigned long long)arg2 retryDelay:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchAudioLoggingSessionConfigForLocaleID:(id)arg1 expectedPhrase:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAudioLoggingSessionConfigForDevicesWithIDs:(id)arg1 expectedPhrase:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchAssistantSettingsForVoiceMatchEnrollment:(CDUnknownBlockType)arg1;
- (id)assistantDeviceTypesForDevicesWithIDs:(id)arg1;
- (void)uploadUtterancesWithCompletion:(CDUnknownBlockType)arg1;
- (void)logUtterance:(id)arg1 withLocaleID:(id)arg2 preambleType:(int)arg3 completion:(CDUnknownBlockType)arg4;
- (void)logUtterance:(id)arg1 withDeviceIDs:(id)arg2 preambleType:(int)arg3 completion:(CDUnknownBlockType)arg4;
- (void)sendArbiterRequestWithCompletion:(CDUnknownBlockType)arg1;
- (void)enablePersonalReadoutForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)enableTextIndependentSpeakerID:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)disableSpeakerIDForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)enableSpeakerIDForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchExistingCloudUtterancesForLocaleID:(id)arg1 preambleType:(int)arg2 freshOnly:(_Bool)arg3 minAudioCount:(int)arg4 maxRetryCount:(int)arg5 fillAudio:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;
- (void)checkExistingCloudUtterancesForLocaleID:(id)arg1 preambleType:(int)arg2 freshOnly:(_Bool)arg3 minAudioCount:(int)arg4 maxRetryCount:(int)arg5 completion:(CDUnknownBlockType)arg6;
- (void)checkExistingCloudUtterancesForDevicesWithIDs:(id)arg1 preambleType:(int)arg2 freshOnly:(_Bool)arg3 minAudioCount:(int)arg4 maxRetryCount:(int)arg5 completion:(CDUnknownBlockType)arg6;
- (void)sendRetrainingNotificationToSpeakerIDEnabledDevicesWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchEnrollmentUtterancesOverWiFiForDevicesWithIDs:(id)arg1 treatErrorAsSuccess:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)checkDeviceReadyStatusForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)linkAccountWithDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startDeviceScanningForDuration:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchEnrollmentLocaleIDForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkEligibilityForDevicesWithIDs:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isLocaleIdenticalForDevicesWithIDs:(id)arg1;
- (void)addCastDevices:(id)arg1;
@property(readonly, nonatomic) NSArray *unsupportedDeviceInfoArray;
@property(readonly, nonatomic) NSArray *supportedDeviceInfoArray;
- (void)setEnrollmentLocaleID:(id)arg1;
- (id)initWithSettingsMenuService:(id)arg1 appDeviceIDs:(id)arg2 ipAddresses:(id)arg3 enrollmentParameters:(id)arg4 impersonationParameters:(id)arg5;
- (id)initWithSettingsMenuService:(id)arg1 assistantDeviceSettings:(id)arg2 impersonationParameters:(id)arg3;
- (id)initWithSettingsMenuService:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

