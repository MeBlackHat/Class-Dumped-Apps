//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMEChooseStructureCoordinatorDelegate-Protocol.h"
#import "HMEModelObserver-Protocol.h"
#import "HMESetupCustomRoomViewControllerDelegate-Protocol.h"
#import "HMEStereoPairingSetupNameEntryDelegate-Protocol.h"
#import "HMEStereoPairingSetupPairSelectionDelegate-Protocol.h"
#import "HMEStereoPairingSetupSideSelectionDelegate-Protocol.h"
#import "SequentialAsyncOperationQueueDelegate-Protocol.h"

@class DeviceAuthenticationInfo, HMEChooseStructureCoordinator, HMEModel, HMESetupAnimationLayoutViewController, HMESetupChooseRoomViewController, HMESetupCustomRoomViewController, HMESetupNavigationController, HMESetupRoomRequestDraft, HMESpaceMO, HMEStatusViewController, HMEStereoPairingSetupNameEntryViewController, HMEStereoPairingSetupPairSelectionViewController, HMEStereoPairingSetupSideSelectionViewController, NSString, SequentialAsyncOperationQueue, SetupCastDevice, SetupDeviceScanner;
@protocol AnalyticsLogger, GCAConfigurationFlags, HMEDeviceData, HMESpaceData, HMEStereoPairingSetupTaskCoordinatorDelegate, HMEStructureData, HMETAGContainer, LinkedDevicesManager;

@interface HMEStereoPairingSetupTaskCoordinator : NSObject <HMEStereoPairingSetupPairSelectionDelegate, HMEStereoPairingSetupSideSelectionDelegate, HMEStereoPairingSetupNameEntryDelegate, HMESetupCustomRoomViewControllerDelegate, SequentialAsyncOperationQueueDelegate, HMEModelObserver, HMEChooseStructureCoordinatorDelegate>
{
    _Bool _shouldRestrictToDeviceType;
    _Bool _shouldMoveLeftDeviceIntoRoom;
    _Bool _leftSpeakerSuccessfullyPaired;
    _Bool _rightSpeakerSuccessfullyPaired;
    _Bool _errorOccurredPairingLeftSpeaker;
    _Bool _errorOccurredPairingRightSpeaker;
    _Bool _waitingForFoyerToCompleteLeftSpeakerRoomChange;
    _Bool _leftSpeakerSuccessfullyMovedRoom;
    id <HMEStereoPairingSetupTaskCoordinatorDelegate> _delegate;
    HMESetupNavigationController *_navigationController;
    id <AnalyticsLogger> _analyticsLogger;
    id <GCAConfigurationFlags> _experimentFlags;
    id <HMETAGContainer> _TAGContainer;
    SetupDeviceScanner *_deviceScanner;
    id <LinkedDevicesManager> _linkedDevicesManager;
    NSString *_structureID;
    id <HMEStructureData> _structureData;
    id <HMESpaceData> _spaceData;
    id <HMEDeviceData> _deviceData;
    long long _restrictedDeviceType;
    HMEModel *_leftDeviceModel;
    HMEModel *_spaceTypesModel;
    HMEModel *_existingRoomsModel;
    HMESetupRoomRequestDraft *_chooseRoomDraft;
    HMESpaceMO *_previousRoomToBeRemoved;
    SetupCastDevice *_leftDevice;
    SetupCastDevice *_rightDevice;
    DeviceAuthenticationInfo *_leftDeviceAuthenticationInfo;
    NSString *_pairName;
    HMESetupAnimationLayoutViewController *_introViewController;
    HMEStereoPairingSetupPairSelectionViewController *_pairSelectionViewController;
    HMEStereoPairingSetupSideSelectionViewController *_sideSelectionViewController;
    HMESetupChooseRoomViewController *_chooseRoomViewController;
    HMESetupCustomRoomViewController *_customRoomViewController;
    HMEStereoPairingSetupNameEntryViewController *_nameEntryViewController;
    HMESetupAnimationLayoutViewController *_progressViewController;
    HMEStatusViewController *_whereIsYourPairWaitingViewController;
    SequentialAsyncOperationQueue *_leftSpeakerAsyncGroupRequestsOperationExecutor;
    SequentialAsyncOperationQueue *_rightSpeakerAsyncGroupRequestsOperationExecutor;
    long long _loggingStereoPairCreationLocation;
    CDUnknownBlockType _chooseStructureCoordinatorFactory;
    HMEChooseStructureCoordinator *_chooseStructureCoordinator;
}

@property(retain, nonatomic) HMEChooseStructureCoordinator *chooseStructureCoordinator; // @synthesize chooseStructureCoordinator=_chooseStructureCoordinator;
@property(readonly, nonatomic) CDUnknownBlockType chooseStructureCoordinatorFactory; // @synthesize chooseStructureCoordinatorFactory=_chooseStructureCoordinatorFactory;
@property(nonatomic) long long loggingStereoPairCreationLocation; // @synthesize loggingStereoPairCreationLocation=_loggingStereoPairCreationLocation;
@property(nonatomic) _Bool leftSpeakerSuccessfullyMovedRoom; // @synthesize leftSpeakerSuccessfullyMovedRoom=_leftSpeakerSuccessfullyMovedRoom;
@property(nonatomic) _Bool waitingForFoyerToCompleteLeftSpeakerRoomChange; // @synthesize waitingForFoyerToCompleteLeftSpeakerRoomChange=_waitingForFoyerToCompleteLeftSpeakerRoomChange;
@property(nonatomic) _Bool errorOccurredPairingRightSpeaker; // @synthesize errorOccurredPairingRightSpeaker=_errorOccurredPairingRightSpeaker;
@property(nonatomic) _Bool errorOccurredPairingLeftSpeaker; // @synthesize errorOccurredPairingLeftSpeaker=_errorOccurredPairingLeftSpeaker;
@property(nonatomic) _Bool rightSpeakerSuccessfullyPaired; // @synthesize rightSpeakerSuccessfullyPaired=_rightSpeakerSuccessfullyPaired;
@property(nonatomic) _Bool leftSpeakerSuccessfullyPaired; // @synthesize leftSpeakerSuccessfullyPaired=_leftSpeakerSuccessfullyPaired;
@property(retain, nonatomic) SequentialAsyncOperationQueue *rightSpeakerAsyncGroupRequestsOperationExecutor; // @synthesize rightSpeakerAsyncGroupRequestsOperationExecutor=_rightSpeakerAsyncGroupRequestsOperationExecutor;
@property(retain, nonatomic) SequentialAsyncOperationQueue *leftSpeakerAsyncGroupRequestsOperationExecutor; // @synthesize leftSpeakerAsyncGroupRequestsOperationExecutor=_leftSpeakerAsyncGroupRequestsOperationExecutor;
@property(retain, nonatomic) HMEStatusViewController *whereIsYourPairWaitingViewController; // @synthesize whereIsYourPairWaitingViewController=_whereIsYourPairWaitingViewController;
@property(retain, nonatomic) HMESetupAnimationLayoutViewController *progressViewController; // @synthesize progressViewController=_progressViewController;
@property(retain, nonatomic) HMEStereoPairingSetupNameEntryViewController *nameEntryViewController; // @synthesize nameEntryViewController=_nameEntryViewController;
@property(retain, nonatomic) HMESetupCustomRoomViewController *customRoomViewController; // @synthesize customRoomViewController=_customRoomViewController;
@property(retain, nonatomic) HMESetupChooseRoomViewController *chooseRoomViewController; // @synthesize chooseRoomViewController=_chooseRoomViewController;
@property(retain, nonatomic) HMEStereoPairingSetupSideSelectionViewController *sideSelectionViewController; // @synthesize sideSelectionViewController=_sideSelectionViewController;
@property(retain, nonatomic) HMEStereoPairingSetupPairSelectionViewController *pairSelectionViewController; // @synthesize pairSelectionViewController=_pairSelectionViewController;
@property(retain, nonatomic) HMESetupAnimationLayoutViewController *introViewController; // @synthesize introViewController=_introViewController;
@property(retain, nonatomic) NSString *pairName; // @synthesize pairName=_pairName;
@property(retain, nonatomic) DeviceAuthenticationInfo *leftDeviceAuthenticationInfo; // @synthesize leftDeviceAuthenticationInfo=_leftDeviceAuthenticationInfo;
@property(retain, nonatomic) SetupCastDevice *rightDevice; // @synthesize rightDevice=_rightDevice;
@property(retain, nonatomic) SetupCastDevice *leftDevice; // @synthesize leftDevice=_leftDevice;
@property(retain, nonatomic) HMESpaceMO *previousRoomToBeRemoved; // @synthesize previousRoomToBeRemoved=_previousRoomToBeRemoved;
@property(nonatomic) _Bool shouldMoveLeftDeviceIntoRoom; // @synthesize shouldMoveLeftDeviceIntoRoom=_shouldMoveLeftDeviceIntoRoom;
@property(retain, nonatomic) HMESetupRoomRequestDraft *chooseRoomDraft; // @synthesize chooseRoomDraft=_chooseRoomDraft;
@property(retain, nonatomic) HMEModel *existingRoomsModel; // @synthesize existingRoomsModel=_existingRoomsModel;
@property(retain, nonatomic) HMEModel *spaceTypesModel; // @synthesize spaceTypesModel=_spaceTypesModel;
@property(retain, nonatomic) HMEModel *leftDeviceModel; // @synthesize leftDeviceModel=_leftDeviceModel;
@property(nonatomic) long long restrictedDeviceType; // @synthesize restrictedDeviceType=_restrictedDeviceType;
@property(nonatomic) _Bool shouldRestrictToDeviceType; // @synthesize shouldRestrictToDeviceType=_shouldRestrictToDeviceType;
@property(readonly, nonatomic) id <HMEDeviceData> deviceData; // @synthesize deviceData=_deviceData;
@property(readonly, nonatomic) id <HMESpaceData> spaceData; // @synthesize spaceData=_spaceData;
@property(readonly, nonatomic) id <HMEStructureData> structureData; // @synthesize structureData=_structureData;
@property(retain, nonatomic) NSString *structureID; // @synthesize structureID=_structureID;
@property(readonly, nonatomic) id <LinkedDevicesManager> linkedDevicesManager; // @synthesize linkedDevicesManager=_linkedDevicesManager;
@property(readonly, nonatomic) SetupDeviceScanner *deviceScanner; // @synthesize deviceScanner=_deviceScanner;
@property(readonly, nonatomic) id <HMETAGContainer> TAGContainer; // @synthesize TAGContainer=_TAGContainer;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <AnalyticsLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(nonatomic) __weak id <HMEStereoPairingSetupTaskCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)errorMessageForCustomRoomName:(id)arg1 inCustomRoomViewController:(id)arg2;
- (void)modelDidChange:(id)arg1;
- (void)operationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)stereoPairingSetupNameEntryController:(id)arg1 didSelectPairName:(id)arg2;
- (void)stereoPairingSetupSideSelectionController:(id)arg1 didSelectLeftDevice:(id)arg2 rightDevice:(id)arg3;
- (void)stereoPairingSetupPairSelectionController:(id)arg1 didSelectDevice:(id)arg2 otherDevice:(id)arg3;
- (void)didRemoveLeftDevicePreviousSpaceWithError:(id)arg1;
- (void)removeLeftDevicePreviousSpaceIfNeeded;
- (void)didCreateLeftDeviceWithError:(id)arg1;
- (void)didMoveLeftDeviceWithError:(id)arg1;
- (void)didEnsureCertificateIsSetForDeviceWithError:(id)arg1;
- (void)startMovingLeftSpeakerToNewRoom;
- (void)didFinishPairingSuccessOrFailureAnimation;
- (void)checkPairingCompletionStatus;
- (void)didComplete;
- (void)didTapDone:(id)arg1;
- (void)showPairingDevicesProgressScreen;
- (void)showPairNameEntryScreen;
- (void)didChooseToRemovePreviousSpace:(id)arg1;
- (void)didChooseToKeepPreviousSpace;
- (void)didChooseRoomWithDraft:(id)arg1;
- (void)didEnterCustomRoom;
- (void)presentCustomRoomWithDraft:(id)arg1;
- (void)didRequestBackFromCustomRoom;
- (void)didChooseRoom;
- (void)refreshChooseRoomContent;
- (void)displayRoomPicker;
- (void)checkLeftDeviceModelStatus;
- (void)didRetrieveLeftDeviceLinkedUsers:(id)arg1 error:(id)arg2;
- (void)didRetrieveLeftDeviceAuthenticationInfo:(id)arg1 error:(id)arg2;
- (void)retrieveLeftDeviceAuthenticationInfo;
- (void)showWhereIsYourPair;
- (void)showWhichSpeakerIsFlashing;
- (void)showChooseYourPair;
- (void)didTapIntroNext:(id)arg1;
- (void)showIntro;
- (void)chooseStructureCoordinatorShouldShowZeroStructure:(id)arg1;
- (void)chooseStructureCoordinatorShouldExit:(id)arg1;
- (void)structureCoordinator:(id)arg1 didAcceptInvitationForStructureWithID:(id)arg2;
- (void)structureCoordinator:(id)arg1 didChooseStructureID:(id)arg2;
- (void)continueSetupAfterStructureChooser;
- (void)startStructureChooser;
- (void)startRestrictedToDeviceType:(long long)arg1;
- (void)start;
- (void)dealloc;
- (id)initWithNavigationController:(id)arg1 device:(id)arg2 deviceScanner:(id)arg3 structureID:(id)arg4 structureData:(id)arg5 spaceData:(id)arg6 deviceData:(id)arg7 linkedDevicesManager:(id)arg8 analyticsLogger:(id)arg9 experimentFlags:(id)arg10 TAGContainer:(id)arg11 loggingStereoPairCreationLocation:(long long)arg12 chooseStructureCoordinatorFactory:(CDUnknownBlockType)arg13;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

