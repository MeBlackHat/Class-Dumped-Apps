//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Core/WADownloadOperationBridge-Protocol.h>

@class NSData, NSError, NSString, WAMMSBaseTaskResumePolicy, WAMMSMediaDownloadOperationMetrics, WAMMSMediaDownloadOperationRequest, WAMMSMediaDownloadOperationRequestEncrypted, WAMMSMediaDownloadOperationRequestPlaintextURL, WAMMSMediaDownloadOperationRequestPlaintextV4, WAMMSMediaTransferOperationAsset, WAMMSTimer, WamEventMediaDownload2;
@protocol OS_dispatch_queue, WAMMSMediaDownloadOperationDelegate;

@interface WAMMSMediaDownloadOperation : NSObject <WADownloadOperationBridge>
{
    id <WAMMSMediaDownloadOperationDelegate> _delegate;
    unsigned long long _currentRetryCount;
    WAMMSMediaDownloadOperationRequest *_request;
    NSObject<OS_dispatch_queue> *_queue;
    // Error parsing type: AB, name: _networkTransferSuspended
    // Error parsing type: AI, name: _currentPhase
    // Error parsing type: Ai, name: _progressPercentage
    // Error parsing type: AB, name: _upgradedToAllowCellularAccess
    // Error parsing type: AB, name: _upgradedToAllowConstrainedNetworkAccess
    _Bool _cancelAttempted;
    NSError *_error;
    _Bool _isTerminalError;
    unsigned long long _bytesTransferred;
    double _requestStarted;
    WAMMSMediaTransferOperationAsset *_resultAsset;
    WAMMSBaseTaskResumePolicy *_resumePolicyToUse;
    WAMMSMediaDownloadOperationMetrics *_metrics;
    WamEventMediaDownload2 *_downloadEvent;
    long long _downloadType;
    NSString *_loggingIdentifier;
    NSData *_mms3CiphertextHash;
    NSError *_downloadError;
}

+ (id)ciphertextHashFromMMS3Response:(id)arg1;
+ (id)downloadEventWithRequest:(id)arg1;
- (void).cxx_destruct;
@property(retain) NSError *downloadError; // @synthesize downloadError=_downloadError;
@property(copy) NSData *mms3CiphertextHash; // @synthesize mms3CiphertextHash=_mms3CiphertextHash;
@property(readonly) _Bool currentlyAllowsConstrainedNetworkAccess;
@property(readonly) _Bool currentlyAllowsCellular;
- (unsigned long long)currentRetryCount;
- (id)downloadEvent;
- (id)metrics;
- (void)handleRequestWithProgressiveRequestBlock:(CDUnknownBlockType)arg1 regularRequestBlock:(CDUnknownBlockType)arg2;
- (void)handleRequestWithEncryptedRequestBlock:(CDUnknownBlockType)arg1 plaintextRequestBlock:(CDUnknownBlockType)arg2;
- (void)handleRequestWithMMS3RequestBlock:(CDUnknownBlockType)arg1 mms4RequestBlock:(CDUnknownBlockType)arg2 plaintextURLRequestBlock:(CDUnknownBlockType)arg3 plaintextV4RequestBlock:(CDUnknownBlockType)arg4;
- (void)setAndRunCompletionPhaseWithError:(id)arg1 terminal:(_Bool)arg2;
- (_Bool)checkIfDownloadShouldStopAtPartialMedia;
- (void)performCompletionPhase;
- (void)performFetchingAssetPhase;
- (void)performDecryptingPhase;
- (_Bool)handleDownloadingPhaseErrorWithDownloadMetrics:(id)arg1 response:(id)arg2 error:(id)arg3;
- (void)performDownloadingPhase;
- (void)runPhase;
- (void)upgradeToAllowConstrainedNetworkAccess;
- (void)upgradeToAllowCellularAccess;
- (void)setNetworkTransferSuspended:(_Bool)arg1;
- (void)setCurrentPhase:(unsigned long long)arg1;
@property(readonly) WAMMSMediaDownloadOperationRequest *request;
@property(readonly) _Bool networkTransferSuspended;
@property(readonly) unsigned long long currentPhase;
@property(readonly) double progressPercentage;
- (void)cancel:(_Bool)arg1;
- (void)suspendNetworkTransfer;
- (void)resume;
- (void)queued;
- (id)initWithDownloadRequest:(id)arg1 queue:(id)arg2 delegate:(id)arg3;
- (void)fieldstatCompletionPhaseWithError:(id)arg1 downloadType:(long long)arg2;
- (void)fieldstatCompletionPhaseWithError:(id)arg1;
- (void)fieldstatFetchingAssetPhaseWithAsset:(id)arg1;
- (void)fieldstatDecryptingPhaseWithEncHashMatch:(_Bool)arg1 plaintextHashMatch:(_Bool)arg2;
- (void)fieldstatDownloadingPhaseSuccessWithMetrics:(id)arg1 response:(id)arg2 didStopAtPartialFile:(_Bool)arg3;
- (void)fieldstatDownloadingPhaseFailureWithMetrics:(id)arg1 response:(id)arg2 error:(id)arg3 downloadEventResult:(long long)arg4;
- (id)createDownloadingPhaseRetryEventWithMetrics:(id)arg1 response:(id)arg2 error:(id)arg3 downloadEventResult:(long long)arg4;
- (id)attachedPartialDownloadMergeInfo;
- (void)attachPartialDownloadMergeInfoWithEncHash:(id)arg1 mediaPath:(id)arg2;
- (id)attachedSticker;
- (void)attachSticker:(id)arg1;
- (void)updateAttachedMessagesContainAnimatedSticker;
- (void)setAttachedMessages:(id)arg1;
- (id)attachedMessagesInternal;
- (id)attachedMessages;
- (void)detachMessage:(id)arg1;
- (void)attachMessage:(id)arg1;
@property(readonly) _Bool allowsConstrainedNetworkAccess;
@property(readonly) _Bool allowsCellularAccess;
@property(readonly) _Bool userInitiated;
@property(readonly) unsigned long long mediaType;
@property(readonly, nonatomic) _Bool isAnimatedSticker;
@property(readonly, nonatomic) _Bool isExecuting;
@property(readonly, nonatomic) _Bool shouldShowNetworkActivity;
@property(retain, nonatomic) WAMMSTimer *timer;
@property(readonly, nonatomic) NSString *deduppingIdentifier;
- (void)start;
- (unsigned long long)priority;
@property(readonly, nonatomic) WAMMSMediaDownloadOperationRequestEncrypted *encryptedRequest;
@property(readonly, nonatomic) WAMMSMediaDownloadOperationRequestPlaintextURL *plaintextURLRequest;
@property(readonly, nonatomic) WAMMSMediaDownloadOperationRequestPlaintextV4 *plaintextV4Request;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

