//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WAChatStorageDelegate-Protocol.h"
#import "WAContactsStorageDelegate-Protocol.h"
#import "WAMessageNotificationCenterDelegate-Protocol.h"
#import "WASyncManagerDelegate-Protocol.h"
#import "WAWebClientDelegate-Protocol.h"
#import "XMPPConnectionDelegate-Protocol.h"
#import "XMPPConnectionMainPersistedMessageStanzaProcessingDelegate-Protocol.h"

@class CLLocation, NSDate, NSLock, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSMutableSet, NSString, WAAfterDateBlockTask, WABizManager, WABlockedContactsList, WAChatStorage, WAContactsStorage, WAExtensionMessageHandler, WAMediaUploaderMain, WAMessageMediaDownloader, WAMessageNotificationCenter, WAMessagingService, WANameDirectory, WAPeerNotificationManager, WAProfilePictureManager, WARegistrationManager, WASignalManager, WASyncManager, WATwoFactorManager, WAWebClient, XMPPConnectionMain;

@interface WAChatManager : NSObject <WAChatStorageDelegate, WAWebClientDelegate, XMPPConnectionDelegate, XMPPConnectionMainPersistedMessageStanzaProcessingDelegate, WASyncManagerDelegate, WAContactsStorageDelegate, WAMessageNotificationCenterDelegate>
{
    WAWebClient *_webClient;
    _Bool _didConnectCallbackRun;
    NSMutableOrderedSet *_outgoingMessagesToMerge;
    _Bool _serverBuildExpired;
    NSMutableDictionary *_outgoingChatStates;
    _Bool _needsRefreshChats;
    _Bool _isContactsSyncScheduled;
    _Bool _changeNumberIQRequired;
    NSLock *_timelockParametersLock;
    NSString *_statusPendingUpdate;
    NSString *_currentStatus;
    WAAfterDateBlockTask *_abPropsUpdateTask;
    long long _abPropsUpdateRetryCount;
    WARegistrationManager *_registrationManager;
    _Bool _changeNumberIQInProgress;
    _Bool _needsAddressBookReload;
    _Bool _addressBookReloadingInProgress;
    _Bool _ignoreAddressBookChangeNotifications;
    _Bool _timelocked;
    NSMutableArray *_statusList;
    NSMutableSet *_navigationBarHintHistory;
    unsigned long long _serverPropertiesStatus;
    NSMutableSet *_placeCache;
    CLLocation *_lastKnownLocation;
    NSDate *_timelockStartDate;
    NSDate *_timelockedUntil;
    long long _timelockReasonCode;
    NSString *_timelockURL;
    NSString *_timelockMessage;
    long long _addressBookReloadAttempts;
    WATwoFactorManager *_twoFactorManager;
    WAChatStorage *_chatStorage;
    WAContactsStorage *_contactsStorage;
    XMPPConnectionMain *_xmppConnection;
    WABizManager *_bizManager;
    WAMessageNotificationCenter *_messageNotificationCenter;
    WAProfilePictureManager *_profilePictureManager;
    WASignalManager *_signalManager;
    WASyncManager *_syncManager;
    WAMessageMediaDownloader *_messageMediaDownloader;
    WAMessagingService *_messagingService;
    WABlockedContactsList *_blockedContactsList;
    WAMediaUploaderMain *_mediaUploader;
    WANameDirectory *_nameDirectory;
    WAExtensionMessageHandler *_extensionMessageHandler;
    WAPeerNotificationManager *_peerNotificationManager;
    NSDate *_timelockRetryDate;
}

+ (id)alertTextForMessage:(id)arg1;
+ (id)kindsForMessageType:(int)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) NSDate *timelockRetryDate; // @synthesize timelockRetryDate=_timelockRetryDate;
@property(nonatomic, getter=isTimelocked) _Bool timelocked; // @synthesize timelocked=_timelocked;
@property(readonly, nonatomic) WAPeerNotificationManager *peerNotificationManager; // @synthesize peerNotificationManager=_peerNotificationManager;
@property(readonly, nonatomic) WAExtensionMessageHandler *extensionMessageHandler; // @synthesize extensionMessageHandler=_extensionMessageHandler;
@property(readonly, nonatomic) WANameDirectory *nameDirectory; // @synthesize nameDirectory=_nameDirectory;
@property(readonly, nonatomic) WAMediaUploaderMain *mediaUploader; // @synthesize mediaUploader=_mediaUploader;
@property(readonly, nonatomic) WABlockedContactsList *blockedContactsList; // @synthesize blockedContactsList=_blockedContactsList;
@property(readonly, nonatomic) WAMessagingService *messagingService; // @synthesize messagingService=_messagingService;
@property(readonly, nonatomic) WAMessageMediaDownloader *messageMediaDownloader; // @synthesize messageMediaDownloader=_messageMediaDownloader;
@property(readonly, nonatomic) WASyncManager *syncManager; // @synthesize syncManager=_syncManager;
@property(readonly, nonatomic) WASignalManager *signalManager; // @synthesize signalManager=_signalManager;
@property(readonly, nonatomic) WAProfilePictureManager *profilePictureManager; // @synthesize profilePictureManager=_profilePictureManager;
@property(readonly, nonatomic) WAMessageNotificationCenter *messageNotificationCenter; // @synthesize messageNotificationCenter=_messageNotificationCenter;
@property(readonly, nonatomic) WABizManager *bizManager; // @synthesize bizManager=_bizManager;
@property(readonly, nonatomic) XMPPConnectionMain *xmppConnection; // @synthesize xmppConnection=_xmppConnection;
@property(readonly, nonatomic) WAContactsStorage *contactsStorage; // @synthesize contactsStorage=_contactsStorage;
@property(readonly, nonatomic) WAChatStorage *chatStorage; // @synthesize chatStorage=_chatStorage;
@property(retain, nonatomic) WATwoFactorManager *twoFactorManager; // @synthesize twoFactorManager=_twoFactorManager;
@property(nonatomic) _Bool ignoreAddressBookChangeNotifications; // @synthesize ignoreAddressBookChangeNotifications=_ignoreAddressBookChangeNotifications;
@property(nonatomic) _Bool addressBookReloadingInProgress; // @synthesize addressBookReloadingInProgress=_addressBookReloadingInProgress;
@property(nonatomic) long long addressBookReloadAttempts; // @synthesize addressBookReloadAttempts=_addressBookReloadAttempts;
@property(nonatomic) _Bool needsAddressBookReload; // @synthesize needsAddressBookReload=_needsAddressBookReload;
@property(readonly, copy, nonatomic) NSString *timelockMessage; // @synthesize timelockMessage=_timelockMessage;
@property(readonly, copy, nonatomic) NSString *timelockURL; // @synthesize timelockURL=_timelockURL;
@property(nonatomic) long long timelockReasonCode; // @synthesize timelockReasonCode=_timelockReasonCode;
@property(copy, nonatomic) NSDate *timelockedUntil; // @synthesize timelockedUntil=_timelockedUntil;
@property(copy, nonatomic) NSDate *timelockStartDate; // @synthesize timelockStartDate=_timelockStartDate;
@property(retain, nonatomic) CLLocation *lastKnownLocation; // @synthesize lastKnownLocation=_lastKnownLocation;
@property(readonly, nonatomic) NSMutableSet *placeCache; // @synthesize placeCache=_placeCache;
@property(nonatomic) unsigned long long serverPropertiesStatus; // @synthesize serverPropertiesStatus=_serverPropertiesStatus;
@property(readonly, nonatomic) _Bool changeNumberIQInProgress; // @synthesize changeNumberIQInProgress=_changeNumberIQInProgress;
@property(readonly, nonatomic) NSMutableSet *navigationBarHintHistory; // @synthesize navigationBarHintHistory=_navigationBarHintHistory;
@property(readonly, nonatomic) NSMutableArray *statusList; // @synthesize statusList=_statusList;
- (void)messageNotificationCenter:(id)arg1 needsChatSessionMarkedAsRead:(id)arg2;
- (void)sendDisplayedMessageNotificationsToWebClientIfNeededForMessageNotificationCenter:(id)arg1;
- (_Bool)shouldDelayNotificationsForMessageNotificationCenter:(id)arg1;
- (void)blockedContactListDidChange:(id)arg1;
- (void)statusPrivacyPolicyDidChange:(id)arg1;
- (void)changeNumberFailedWithError:(id)arg1;
- (void)changeNumberFinished;
- (void)requestChangeNumberIfNecessary;
- (void)performOnConnect;
- (void)syncManager:(id)arg1 didFinishSyncWithResult:(int)arg2 failureReason:(int)arg3;
- (void)contactsStorage:(id)arg1 didModifyContacts:(id)arg2 removeMissingJIDs:(_Bool)arg3;
- (void)contactsStorageDidUpdateStatus:(id)arg1;
- (void)contactsStorageDidUpdateContacts:(id)arg1;
- (void)resetTimelockRetryDate;
- (void)checkTimelockExpiration;
- (void)loadTimelockParameters;
- (void)saveTimelockParameters;
- (void)setTimelockedUntil:(id)arg1 retryDate:(id)arg2 withReasonCode:(long long)arg3 tempBanURL:(id)arg4 tempBanMessage:(id)arg5;
- (void)resetTimelock;
- (id)localizedChatActivityStringForContactV2WithJID:(id)arg1;
- (id)localizedChatActivityStringForChatJID:(id)arg1;
- (id)localizedChatActivityStringForGroupWithJID:(id)arg1;
- (id)displayNameForParticipant:(id)arg1 inGroup:(id)arg2;
- (id)localizedChatActivityStringForContactWithJID:(id)arg1;
- (id)localizedChatActivityStringForContactWithNameOrFormattedPhoneNumber:(id)arg1 chatState:(unsigned long long)arg2;
- (void)updateChatStateIfNeededForJID:(id)arg1;
- (void)changeOutgoingChatState:(unsigned long long)arg1 forChatJID:(id)arg2;
- (unsigned long long)outgoingChatStateForChatJID:(id)arg1;
- (void)processIncomingMessageStatusChangeRequests:(id)arg1;
- (void)setJID:(id)arg1 mutedUntil:(id)arg2 notifyWebClient:(_Bool)arg3;
- (void)changeNameOfList:(id)arg1 to:(id)arg2;
- (void)markStatusAsSeen:(id)arg1 onWebClient:(_Bool)arg2;
- (void)sendReadReceiptsForMessagesBeforeAndIncludingMessage:(id)arg1 inChatSession:(id)arg2;
- (void)commitReadTransactions:(id)arg1;
- (id)internalSetChatSession:(id)arg1 unreadCount:(int)arg2 mostRecentReadMessage:(id)arg3 fromWebClient:(_Bool)arg4 sendReadReceipts:(_Bool)arg5;
- (void)peerDeviceDidReadMessages:(id)arg1 inChatSession:(id)arg2;
- (void)siriDidReadMessages:(id)arg1 inChatWithJID:(id)arg2;
- (int)markMessagesReadInChatSession:(id)arg1 mostRecentNewlyReadMessage:(id)arg2 fromWebClient:(_Bool)arg3;
- (void)markMessagesReadBySiri:(id)arg1 inChatSession:(id)arg2;
- (void)markChatSessions:(id)arg1 read:(_Bool)arg2 fromWebClient:(_Bool)arg3 sendReadReceipts:(_Bool)arg4;
- (void)verifiedNameDidUpdate:(id)arg1;
- (void)pushNameChanged:(id)arg1;
- (void)prepareChatSession:(id)arg1;
- (void)failedUploadNotifyForMessage:(id)arg1;
- (void)setUpABPropsUpdateTask;
- (void)didUpdateABProperties;
- (void)requestFreshABProps;
- (void)requestFreshServerProps;
- (void)didUpdateServerProps:(_Bool)arg1;
- (void)logAdvertisingIdentifierIfNeeded:(_Bool)arg1;
- (void)requestPropsIfNecessary;
- (void)resetAuthInfo;
- (void)refreshChats;
- (void)refreshChatSessionsForUnknownContacts:(id)arg1;
- (void)refreshChatSessionsForKnownContacts:(id)arg1;
- (id)allContactIdentifiersInChatSessions:(id)arg1;
- (id)refreshChatSessionsAfterAddressBookReloadWithContext:(id)arg1;
- (void)reset;
- (_Bool)saveChangesInContact:(id)arg1 fromViewController:(id)arg2;
- (void)reloadDataFromCNContact:(id)arg1 userJID:(id)arg2;
- (void)reloadUnknownChatsWithContacts:(id)arg1;
- (void)chatSessionTransactionDidUnhideChatSession:(id)arg1;
- (void)enableContactsSync;
- (void)reloadAddressBookWithCompletion:(CDUnknownBlockType)arg1;
- (void)reloadAddressBookIfNeeded;
- (void)setNeedsAddressBookReload;
- (void)notifyContactStoreDidChange;
- (id)initWithChatStorage:(id)arg1 contactsStorage:(id)arg2 bizManager:(id)arg3 messageNotificationCenter:(id)arg4 profilePictureManager:(id)arg5 signalManager:(id)arg6 messageMediaDownloader:(id)arg7 mediaUploader:(id)arg8 messagingService:(id)arg9 blockedContactsList:(id)arg10 xmppConnection:(id)arg11 nameDirectory:(id)arg12 syncManager:(id)arg13 registrationManager:(id)arg14 twoFactorManager:(id)arg15 webClient:(id)arg16 backedUpKeyValueStore:(id)arg17 peerNotificationManager:(id)arg18;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfNumberChangedFromChatSession:(id)arg2 toChatSession:(id)arg3;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfNameChangeInChatSessions:(id)arg2;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfModifyTagUpdateOfChatSession:(id)arg2;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfStarred:(_Bool)arg2 messages:(id)arg3 inChatSession:(id)arg4;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfAllChatSessionsArchived:(_Bool)arg2;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfUpdatedPinnedStateOfChatSession:(id)arg2;
- (void)chatStorageDidDeleteAllChatSessions:(id)arg1;
- (void)chatStorageDidClearAllChatSessions:(id)arg1;
- (void)chatStorage:(id)arg1 didBulkDeleteMessagesInChatSession:(id)arg2 beforeDate:(id)arg3 ofTypes:(id)arg4 shouldDeleteStarred:(_Bool)arg5;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfExpiredMessagesInChatSession:(id)arg2 beforeTimestamp:(double)arg3;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfDeletedMessages:(id)arg2 inChatSession:(id)arg3;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfClearedChatSession:(id)arg2;
- (void)chatStorage:(id)arg1 shouldNotifyWebClientOfDeletedChatSession:(id)arg2;
- (void)chatStorage:(id)arg1 shouldMarkStatusAsSeenInWebClient:(id)arg2;
- (void)chatStorage:(id)arg1 shouldShowUploadErrorForMessage:(id)arg2;
- (void)chatStorage:(id)arg1 shouldForwardAddedMessageToWebClient:(id)arg2;
- (id)predicateForChatListFetchRequest;
- (void)paymentsRequestFreshServerProps;
- (void)webclient:(id)arg1 didLogOutFromBrowserID:(id)arg2;
- (void)webClient:(id)arg1 didRevokeInvitesWithGroupJID:(id)arg2 participantJIDs:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didAcceptInviteWithGroupJID:(id)arg2 groupAddRequest:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didRequestRankingForStatusChatSessions:(id)arg2;
- (void)webClient:(id)arg1 didRequestStickerUploadForFileHash:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 didRequestTrayImageUploadForStickerPackId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 stickersForEventType:(long long)arg2 inRange:(struct _NSRange)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 stickersForStickerPackId:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 stickerPacksWithRange:(struct _NSRange)arg2 onlyFirstParty:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didEndCallWithCallID:(id)arg2 callEvent:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 recentCallOfferForCallID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (unsigned long long)webClientCallActionFromQueryAction:(id)arg1;
- (void)webClient:(id)arg1 didRequestAction:(id)arg2 onCall:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didRelayCallStanza:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 didDisableLocationSharingWithChatJID:(id)arg2 requestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didUnsubscribeFromLocationUpdatesFromChatJID:(id)arg2 requestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didSubscribeToLocationUpdatesFromChatJID:(id)arg2 reportParticipants:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 locationSendersInChatWithJID:(id)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)lastReportedOwnLocationForChat:(id)arg1;
- (void)webClient:(id)arg1 displayedMessageNotificationsWithCompletion:(CDUnknownBlockType)arg2;
- (void)webClient:(id)arg1 didDismissChangeNumberNotificationForUserJID:(id)arg2;
- (void)webClient:(id)arg1 didSetStatusPrivacyTo:(long long)arg2 userJIDs:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)webClient:(id)arg1 didPin:(_Bool)arg2 chatWithChatJID:(id)arg3 pinDate:(id)arg4;
- (long long)webClient:(id)arg1 didSetMute:(_Bool)arg2 ofStatusWithJID:(id)arg3;
- (void)webClient:(id)arg1 loadMostContactedChats:(CDUnknownBlockType)arg2;
- (void)webClient:(id)arg1 vCardsFromKnownContactsForUserJID:(id)arg2 context:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)webClient:(id)arg1 didAddContact:(id)arg2;
- (id)webClient:(id)arg1 starredMessagesInChatWithJID:(id)arg2 olderThanMessageID:(id)arg3 limit:(unsigned long long)arg4 gifOnly:(_Bool)arg5 context:(id)arg6;
- (void)webclient:(id)arg1 fetchMessagesMatchingSearchTerm:(id)arg2 inChatWithJID:(id)arg3 offset:(unsigned long long)arg4 limit:(unsigned long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)webClient:(id)arg1 allWhatsAppableContactsWithCompletion:(CDUnknownBlockType)arg2;
- (id)allPushNamesForWebClient:(id)arg1;
- (id)webClient:(id)arg1 allChatSessionsInContext:(id)arg2;
- (void)webClient:(id)arg1 didSetBlockedState:(_Bool)arg2 ofUserWithUserJID:(id)arg3 reason:(id)arg4 requestID:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)webClient:(id)arg1 didRequestResendMessage:(id)arg2;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toEphemeralDuration:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toFrequentlyForwardedRestricted:(_Bool)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toLockedState:(_Bool)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetGroupWithJID:(id)arg2 toAnnouncementOnly:(_Bool)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didCreateGroupWithSubject:(id)arg2 description:(id)arg3 descriptionID:(id)arg4 participants:(id)arg5 announcementOnly:(_Bool)arg6 locked:(_Bool)arg7 frequentlyForwardedRestricted:(_Bool)arg8 requestID:(id)arg9 completion:(CDUnknownBlockType)arg10;
- (void)webClient:(id)arg1 didChangeDescriptionOfGroupWithJID:(id)arg2 to:(id)arg3 descriptionID:(id)arg4 previousID:(id)arg5 requestID:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)webClient:(id)arg1 didChangeSubjectOfGroupWithJID:(id)arg2 to:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didLeaveGroupWithJID:(id)arg2 requestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didDemoteAdmins:(id)arg2 inChatWithGroupJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didPromoteParticipants:(id)arg2 inChatWithGroupJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didAddParticipants:(id)arg2 inChatWithGroupJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didRemoveParticipants:(id)arg2 inChatWithGroupJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didRequestMediaUploadForMessageID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClient:(id)arg1 didDeletePictureForChatWithChatJID:(id)arg2 requestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)webClient:(id)arg1 didSetPicture:(id)arg2 forChatWithChatJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)webClient:(id)arg1 didSetSpamStatus:(_Bool)arg2 ofChatWithChatJID:(id)arg3 requestID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (long long)webClient:(id)arg1 didUnstarAllMessagesInChatWithChatJID:(id)arg2;
- (long long)didUnstarAllMessagesInWebClient:(id)arg1;
- (long long)webClient:(id)arg1 didSetStarredState:(_Bool)arg2 ofMessageIDs:(id)arg3 inChatWithChatJID:(id)arg4;
- (long long)webClient:(id)arg1 didSetMuteDate:(id)arg2 fromMuteDate:(id)arg3 ofChatWithJID:(id)arg4;
- (long long)webClient:(id)arg1 didSetArchivedState:(_Bool)arg2 ofChatWithJID:(id)arg3 lastMessageID:(id)arg4;
- (long long)webClient:(id)arg1 didDeleteMessageIDs:(id)arg2 inChatWithChatJID:(id)arg3;
- (void)webClient:(id)arg1 didClearChatWithJID:(id)arg2 includingStarred:(_Bool)arg3 lastMessageID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (long long)webClient:(id)arg1 didDeleteChatWithJID:(id)arg2 lastMessageID:(id)arg3;
- (void)webClient:(id)arg1 didPlayIncomingMessageWithStanzaID:(id)arg2 participant:(id)arg3 inChatWithChatJID:(id)arg4;
- (void)webClient:(id)arg1 didUpdateStatus:(id)arg2 requestID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (long long)webClient:(id)arg1 didSeeStatus:(id)arg2 inChatWithJID:(id)arg3;
- (long long)webClient:(id)arg1 didReadUntilMessageID:(id)arg2 inChatWithJID:(id)arg3 readCount:(long long)arg4;
- (_Bool)webClient:(id)arg1 didRelayMessage:(id)arg2;
- (id)webClient:(id)arg1 profilePictureItemForJID:(id)arg2 context:(id)arg3;
- (id)webClient:(id)arg1 existingOutgoingMessageWithStanzaID:(id)arg2 inChatSessionWithJID:(id)arg3 context:(id)arg4;
- (id)webClient:(id)arg1 chatSessionForJID:(id)arg2 context:(id)arg3;
- (void)webClient:(id)arg1 didChangeOutgoingChatStateToJID:(id)arg2;
- (void)webClient:(id)arg1 didSubscribeToJID:(id)arg2;
- (id)webClient:(id)arg1 allMessagesWithOrAfterMessageID:(id)arg2 inChatSession:(id)arg3;
- (id)webClient:(id)arg1 statusMessagesInChatSession:(id)arg2;
- (id)webClient:(id)arg1 recentMessagesForChatSession:(id)arg2 activityLevel:(long long)arg3;
- (id)webClient:(id)arg1 existingChatSessionsForJIDs:(id)arg2 context:(id)arg3;
- (unsigned long long)webClient:(id)arg1 countMediaMessagesInChatSession:(id)arg2;
- (unsigned long long)webClient:(id)arg1 countMessagesInChatSession:(id)arg2 ofType:(int)arg3;
- (id)webClient:(id)arg1 mediaMessagesInChatSession:(id)arg2 count:(unsigned long long)arg3 withRelation:(unsigned long long)arg4 toMessageID:(id)arg5;
- (id)webClient:(id)arg1 messagesInChatSession:(id)arg2 ofType:(int)arg3 count:(unsigned long long)arg4 withRelation:(unsigned long long)arg5 toMessageID:(id)arg6;
- (id)webClient:(id)arg1 messagesInChatSession:(id)arg2 count:(unsigned long long)arg3 withRelation:(unsigned long long)arg4 toMessageID:(id)arg5;
- (void)securityIndicatorPreferenceChanged;
- (void)stickerStorageStickerStarredEvent:(id)arg1;
- (void)stickerStorageStickerSentEvent:(id)arg1;
- (void)stickerAssetManagerDidReorderStickerPacks:(id)arg1;
- (void)stickerAssetManagerDidUpdateStickerPack:(id)arg1;
- (void)stickerAssetManagerDidRemoveStickerPack:(id)arg1;
- (void)stickerAssetManagerDidAddStickerPack:(id)arg1;
- (void)notifyWebClientOfUpdatedStatusRanking:(id)arg1;
- (void)notifyWebClientOfDismissedChangeNumberNotificationForChatSession:(id)arg1;
- (void)notifyWebClientOfAddedOrUpdatedContactsWithJIDs:(id)arg1;
- (long long)unstarMessagesWithJID:(id)arg1;
- (void)forwardMostContactedChatsToWebClient;
- (void)forwardDecryptedCallStanzaToWebClient:(id)arg1;
- (void)notifyWebClientOfLiveLocationUpdateFromSenderJID:(id)arg1 message:(id)arg2 elapsed:(long long)arg3;
- (void)notifyWebClientOfResultCode:(long long)arg1 forRequestID:(id)arg2;
- (void)notifyWebClientOfUpdatesToMessage:(id)arg1;
- (void)notifyWebClientOfAddedMessage:(id)arg1;
- (void)notifyWebClientOfMessageStatusChangeInMessage:(id)arg1;
- (void)notifyWebClientOfModifyTagChangeForChatSession:(id)arg1;
- (void)clearCurrentWebClientSession;
- (void)removeAllWebClientSessions;
- (void)removeWebClientSessionWithData:(id)arg1;
- (id)beginNewWebClientSessionWithQRCode:(id)arg1 fromViewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)allSavedWebClientSessionDataObjects;
- (_Bool)hasActiveWebClientSession;
- (_Bool)isWebClientAvailable;
- (void)setupWebClientNotifications;
- (void)didReceiveOfflineMessage:(id)arg1;
- (id)processNextMessages;
- (void)deferMessageMessageStanzaHandling:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)processOutgoingExtensionMessagesIfPossibleWithState:(unsigned long long)arg1;
- (id)outgoingMessagesInOutboxes;
- (void)notificationHandlerDidEnqueueReply:(id)arg1;
- (unsigned long long)didReceivePhashMismatchAckForMessages:(id)arg1 deviceSyncNeeded:(_Bool)arg2 serverPhash:(id)arg3;
- (void)processIncomingGroupsDirtyBitWithConnection:(id)arg1 timestampDate:(id)arg2;
- (void)processIncomingMediaRetryNotification:(id)arg1;
- (void)processIncomingServerNotification:(id)arg1;
- (void)xmppConnection:(id)arg1 didReceiveCallRekeyReceipt:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallOfferReceipt:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallAck:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveIncomingCallStanza:(id)arg2;
- (void)xmppConnection:(id)arg1 callStanzaDidTimeOut:(id)arg2;
- (void)xmppConnection:(id)arg1 peerDevicePresenceChanged:(_Bool)arg2;
- (void)xmppConnectionDidReceiveOfflineMarker:(id)arg1;
- (_Bool)xmppConnection:(id)arg1 didReceiveMessages:(id)arg2 error:(out id *)arg3;
- (void)xmppConnection:(id)arg1 didReceiveOfflineReceiptWithStanzas:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)xmppConnection:(id)arg1 didReceiveRetryReceiptForMessageID:(id)arg2 fromActorJIDWrapper:(id)arg3 edit:(long long)arg4 registrationId:(id)arg5 retryCount:(unsigned int)arg6;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorForOutgoingMessageWithStanzaID:(id)arg2 receipt:(id)arg3;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorAckForIncomingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 edit:(long long)arg5;
- (void)xmppConnectionStopLocationSharing:(id)arg1;
- (_Bool)xmppConnection:(id)arg1 startLocationSharingForJID:(id)arg2 duration:(int)arg3;
- (void)xmppConnection:(id)arg1 didRequestIncomingMessageStatusChanges:(id)arg2;
- (void)xmppConnection:(id)arg1 didRequestOutgoingMessageStatusChangeWithRequest:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (unsigned long long)xmppConnection:(id)arg1 statusChanged:(int)arg2 forOutgoingMessagesWithStanzas:(id)arg3 chatJID:(id)arg4 actorJIDWrapper:(id)arg5 userData:(id)arg6;
- (void)submitPhashMismatchFieldStatsWithChatJID:(id)arg1 revoke:(_Bool)arg2;
- (void)xmppConnection:(id)arg1 chatStateChanged:(unsigned long long)arg2 forJID:(id)arg3 participantJID:(id)arg4;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2 forJID:(id)arg3;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2;
- (void)xmppConnectionDidFinishProcessingOfflineMessages:(id)arg1;
- (void)xmppConnectionDidDisconnect:(id)arg1;
- (void)xmppConnectionDidNotAuthenticate:(id)arg1 dataCenter:(id)arg2 failureCode:(long long)arg3 lockDuration:(double)arg4 retryAfter:(double)arg5 tempBanReasonCode:(long long)arg6 tempBanURL:(id)arg7 tempBanMessage:(id)arg8;
- (void)xmppConnectionDidAuthenticate:(id)arg1 dataCenter:(id)arg2;
- (void)xmppConnectionDidConnect:(id)arg1;
- (void)xmppConnection:(id)arg1 stateChanged:(unsigned long long)arg2;
- (void)setupXMPP;
- (void)refreshCurrentStatusAboutText:(CDUnknownBlockType)arg1;
- (void)updateStatus:(id)arg1 webClientRequestID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveStatusList;
- (void)deleteAllStatusMessages;
- (void)resetStatusMessages;
- (void)loadStatusMessages;
- (id)statusListFilePath;
@property(readonly, copy, nonatomic) NSString *statusPendingUpdate;
@property(copy, nonatomic) NSString *currentStatus;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

