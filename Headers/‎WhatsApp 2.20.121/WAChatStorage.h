//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Core/WACheckpointingStorage.h>

#import <Core/WAPersistentRequestManagerRegistering-Protocol.h>

@class NSDate, NSDictionary, NSMutableArray, NSMutableDictionary, NSMutableSet, NSObject, NSPointerArray, NSString, WABatchDispatcher, WAChatSession, WAChatSessionSpotlightIndexer, WAExactTimer, WAMessagePortSender, WAMessageSearchEngine, WAMessagesBySessionTask, WAMutableDictionary, WAPersistentKeyValueStore, WASpotlightManager, WAStatusChangeRequestManager, WAStickerStorage, WATask, WATaskManager, XMPPConnection;
@protocol OS_dispatch_queue;

@interface WAChatStorage : WACheckpointingStorage <WAPersistentRequestManagerRegistering>
{
    id _delegate;
    unsigned long long _failedSaveCounter;
    unsigned long long _unreadChatSessionCount;
    _Bool _allServerErrorReceiptsAcked;
    unsigned long long _errorReceiptsQueryStatus;
    NSMutableDictionary *_cachedPushNames;
    WAMessageSearchEngine *_searchEngine;
    WAStatusChangeRequestManager *_statusChangeRequestManager;
    _Bool _searchEngineIndexingRapidly;
    unsigned long long _searchEngineIndexingRapidlyCount;
    _Bool _searchEngineIsAvailable;
    WATask *_taskIndexMessages;
    WATask *_taskRetryIndexMessages;
    WAMessagesBySessionTask *_taskDeleteMessages;
    NSPointerArray *_idleRecurrentTasks;
    NSPointerArray *_userInitiatedRecurrentTasks;
    WAChatSessionSpotlightIndexer *_chatSessionSpotlightIndexer;
    NSMutableArray *_groupsPendingStateChanges;
    NSMutableSet *_pendingParticipantsRefreshRequestGroupJIDs;
    NSMutableDictionary *_participatingGroupsRequestCompletionsMap;
    WAChatSession *_statusChatSession;
    WAExactTimer *_statusPSATimer;
    WAExactTimer *_statusExpirationTimer;
    NSDictionary *_statusExpirationTasks;
    _Bool _statusBadgeVisible;
    _Bool _statusTabVisible;
    NSDictionary *_statusBadges;
    NSMutableDictionary *_statusMessageCounts;
    WAMutableDictionary *_liveLocationMessageUniqueKeyCache;
    NSObject<OS_dispatch_queue> *_liveLocationMessageUniqueKeyCacheQueue;
    WABatchDispatcher *_receiptsDispatcher;
    WAMessagePortSender *_todayMessagePortSender;
    NSDate *_statusMarkerDate;
    WASpotlightManager *_spotlightManager;
    WATaskManager *_taskManager;
    WAStickerStorage *_stickerStorage;
    XMPPConnection *_xmppConnection;
    WAPersistentKeyValueStore *_localKeyValueStore;
}

+ (id)primaryDatabaseContextConcurrencyType;
+ (double)statusVisibleIntervalFor:(short)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) WAStatusChangeRequestManager *statusChangeRequestManager; // @synthesize statusChangeRequestManager=_statusChangeRequestManager;
@property(readonly, nonatomic) WAMessageSearchEngine *searchEngine; // @synthesize searchEngine=_searchEngine;
@property(readonly, nonatomic) WAPersistentKeyValueStore *localKeyValueStore; // @synthesize localKeyValueStore=_localKeyValueStore;
@property(readonly, nonatomic) XMPPConnection *xmppConnection; // @synthesize xmppConnection=_xmppConnection;
@property(readonly, nonatomic) WAStickerStorage *stickerStorage; // @synthesize stickerStorage=_stickerStorage;
@property(readonly, nonatomic) WATaskManager *taskManager; // @synthesize taskManager=_taskManager;
@property(readonly, nonatomic) WASpotlightManager *spotlightManager; // @synthesize spotlightManager=_spotlightManager;
@property(retain) NSDate *statusMarkerDate; // @synthesize statusMarkerDate=_statusMarkerDate;
- (void)registerHandlersForPersistentRequestManager:(id)arg1;
- (id)sharedObjectKeyForPersistentRequestManager:(id)arg1;
- (void)setNeedsChatJIDVerification;
- (void)handleSaveOutcome:(id)arg1;
- (_Bool)save:(id *)arg1;
- (void)save;
@property(readonly, nonatomic) long long newMessageCountSinceEnteringBackground;
- (id)messagesWithUniqueKeys:(id)arg1 inContext:(id)arg2;
- (id)messageWithMessageID:(id)arg1 inContext:(id)arg2;
- (id)messageWithMessageID:(id)arg1;
- (id)existingChatSessionsWithTypes:(id)arg1 fetchBatchSize:(unsigned long long)arg2 error:(id *)arg3;
- (id)existingChatSessionsForJIDs:(id)arg1 prefetchRelationships:(id)arg2 context:(id)arg3 error:(id *)arg4;
- (id)existingChatSessionsForJIDs:(id)arg1 prefetchRelationships:(id)arg2 context:(id)arg3;
- (id)existingChatSessionsForJIDs:(id)arg1 prefetchRelationships:(id)arg2;
- (id)chatSessionForJID:(id)arg1 inContext:(id)arg2;
- (id)chatSessionForJID:(id)arg1;
- (id)profilePictureItemForJID:(id)arg1 inContext:(id)arg2;
- (id)profilePictureItemForJID:(id)arg1;
- (void)saveBackgroundContext:(id)arg1 identifier:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)saveDatabase:(id *)arg1;
- (_Bool)willSaveDatabaseContext:(id)arg1;
- (id)executeDatabaseFetchRequest:(id)arg1 context:(id)arg2 error:(id *)arg3;
- (void)didCreateDatabase;
- (void)willCreateDatabase;
- (_Bool)needsDatabaseMigrationForMetadata:(id)arg1;
- (_Bool)needsDatabaseRepairGetMetadata:(out id *)arg1;
- (void)handleDatabaseContext:(id)arg1 operation:(long long)arg2 error:(id)arg3;
- (_Bool)loadDatabase;
- (id)managedObjectContext;
- (id)initWithSpotlightManager:(id)arg1 stickerStorage:(id)arg2 taskManager:(id)arg3 xmppConnection:(id)arg4 localKeyValueStore:(id)arg5 model:(id)arg6 storeURL:(id)arg7 logIdentifier:(id)arg8 maximumBackgroundContextCount:(unsigned long long)arg9 blacklistBackup:(_Bool)arg10;
- (id)initWithSpotlightManager:(id)arg1 stickerStorage:(id)arg2 taskManager:(id)arg3 xmppConnection:(id)arg4 localKeyValueStore:(id)arg5;
- (void)searchStatusesWithNameMatchingSearchText:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)searchGroupsWithSubjectMatchingSearchText:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)searchChatsWithJIDs:(id)arg1 orName:(id)arg2 excludingJIDs:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)searchChatSessionsWithPredicate:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)predicateForStatusesWithName:(id)arg1;
- (id)predicateForChatsWithJIDs:(id)arg1 orName:(id)arg2 excludingJIDs:(id)arg3;
- (id)predicateForGroupsWithSubject:(id)arg1;
- (id)predicateForIndividualChatsWithName:(id)arg1;
- (id)predicateForChatsWithName:(id)arg1 sessionType:(short)arg2;
- (id)predicateForPartnerNameWithName:(id)arg1;
- (id)predicateForPartnerNameTokensWithName:(id)arg1;
- (id)predicateForChatsWithJIDs:(id)arg1;
- (id)predicateForIndividualChatsWithJIDs:(id)arg1;
- (id)predicateForCommonGroupsWithJID:(id)arg1;
- (id)mostContactedChatsWithPreferredContentTypes:(id)arg1 excludingJIDs:(id)arg2;
- (id)mostContactedChatsWithPreferredContentTypes:(id)arg1;
- (id)mostContactedChatsWithPreferredContentType:(long long)arg1 excludingJIDs:(id)arg2;
- (id)libraryPathToMediaItemWithFileHash:(id)arg1 returningSize:(struct CGSize *)arg2;
- (id)coreDataPaymentTransactionWithID:(id)arg1 messageID:(id)arg2 messageStanzaID:(id)arg3 userJID:(id)arg4;
- (id)coreDataPaymentTransactionWithMessageID:(id)arg1 context:(id)arg2 userJID:(id)arg3;
- (id)coreDataPaymentTransactionWithMessageID:(id)arg1 userJID:(id)arg2;
- (id)coreDataPaymentTransactionsWithStanzaID:(id)arg1 databaseFetchRequestBlock:(CDUnknownBlockType)arg2;
- (id)coreDataPaymentTransactionsWithStanzaID:(id)arg1 context:(id)arg2;
- (id)coreDataPaymentTransactionsWithStanzaID:(id)arg1;
- (id)coreDataPaymentTransactionWithID:(id)arg1;
- (id)fetchPushNames__SERVICE_EXT:(id)arg1;
- (void)fetchPushNamesIfNeeded;
- (void)updatePushNamesForJIDsIfNeeded:(id)arg1;
- (id)profilePushNameForJID:(id)arg1;
- (id)pushNameForJID:(id)arg1;
@property(readonly, copy, nonatomic) NSDictionary *allPushNames;
- (unsigned long long)statusMessageCountFor:(id)arg1;
- (id)statusOldestMessageDateForType:(short)arg1;
- (id)incomingStatusPredicateWithAdditionalPredicate:(id)arg1;
- (id)commonIncomingPredicate;
- (id)predicateForStatusChatSessionWithStatusJID:(id)arg1;
- (id)predicateForMutedStatusChatSessions;
- (id)predicateForRecentAndPreviousStatusChatSessions;
- (id)predicateForPreviousStatusChatSessions;
- (id)predicateForRecentStatusChatSessions;
- (id)predicateForIncomingStatusChatSessions;
- (id)predicateForOutgoingStatusChatSessions;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

