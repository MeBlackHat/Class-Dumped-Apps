//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AsyncDisplayKit/ASDisplayNode.h>

#import <Display/UIGestureRecognizerDelegate-Protocol.h>
#import <Display/UIScrollViewDelegate-Protocol.h>

@interface _TtC7Display24NavigationModalContainer : ASDisplayNode <UIScrollViewDelegate, UIGestureRecognizerDelegate>
{
    // Error parsing type: , name: theme
    // Error parsing type: , name: isFlat
    // Error parsing type: , name: dim
    // Error parsing type: , name: scrollNode
    // Error parsing type: , name: container
    // Error parsing type: , name: panRecognizer
    // Error parsing type: , name: isReady
    // Error parsing type: , name: dismissProgress
    // Error parsing type: , name: isReadyUpdated
    // Error parsing type: , name: updateDismissProgress
    // Error parsing type: , name: interactivelyDismissed
    // Error parsing type: , name: isUpdatingState
    // Error parsing type: , name: ignoreScrolling
    // Error parsing type: , name: isDismissed
    // Error parsing type: , name: isInteractiveDimissEnabled
    // Error parsing type: , name: validLayout
    // Error parsing type: , name: horizontalDismissOffset
    // Error parsing type: , name: keyboardViewManager
    // Error parsing type: , name: canHaveKeyboardFocus
    // Error parsing type: , name: endDraggingVelocity
}

- (void).cxx_destruct;
- (id)initWithLayerBlock:(CDUnknownBlockType)arg1 didLoadBlock:(CDUnknownBlockType)arg2;
- (id)initWithViewBlock:(CDUnknownBlockType)arg1 didLoadBlock:(CDUnknownBlockType)arg2;
- (id)init;
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)dimTapGesture:(id)arg1;
- (void)panGesture:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)didLoad;

@end

