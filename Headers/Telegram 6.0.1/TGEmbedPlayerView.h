//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import <TelegramUI/TGPIPAblePlayerView-Protocol.h>
#import <TelegramUI/UIWebViewDelegate-Protocol.h>
#import <TelegramUI/WKNavigationDelegate-Protocol.h>

@class NSObject, NSString, SPipe, SQueue, SVariable, TGEmbedPlayerControls, TGEmbedPlayerState, TGImageView, TGMessageImageViewOverlayView, TGWebPageMediaAttachment, UILabel, UIWebView, WKWebView;
@protocol OS_dispatch_semaphore, SDisposable;

@interface TGEmbedPlayerView : UIView <UIWebViewDelegate, WKNavigationDelegate, TGPIPAblePlayerView>
{
    TGWebPageMediaAttachment *_webPage;
    TGMessageImageViewOverlayView *_overlayView;
    struct CGSize _embedSize;
    double _embedScale;
    TGImageView *_coverView;
    UIView *_dimView;
    UILabel *_errorLabel;
    UIWebView *_uiWebView;
    WKWebView *_wkWebView;
    UIView *_interactionView;
    struct CGSize _maxPlayerSize;
    _Bool _loading;
    NSObject<OS_dispatch_semaphore> *_sema;
    SQueue *_jsQueue;
    SPipe *_statePipe;
    _Bool _pausedManually;
    _Bool _shouldResumePIPPlayback;
    id <SDisposable> _currentAudioSession;
    SVariable *_loadProgressValue;
    _Bool _disallowPIP;
    _Bool _disableWatermarkAction;
    _Bool _inhibitFullscreenButton;
    _Bool _disallowAutoplay;
    _Bool _disableControls;
    CDUnknownBlockType _requestPictureInPicture;
    TGEmbedPlayerState *_state;
    TGEmbedPlayerControls *_controlsView;
    UIView *_dimWrapperView;
    unsigned long long _roundCorners;
    CDUnknownBlockType _onWatermarkAction;
    CDUnknownBlockType _requestFullscreen;
    CDUnknownBlockType _onMetadataLoaded;
    CDUnknownBlockType _onBeganLoading;
    CDUnknownBlockType _onBeganPlaying;
    CDUnknownBlockType _onRealLoadProgress;
    struct CGRect _initialFrame;
}

+ (_Bool)hasNativeSupportForX:(id)arg1;
+ (id)makePlayerViewForWebPage:(id)arg1 thumbnailSignal:(id)arg2;
+ (Class)playerViewClassForWebPage:(id)arg1 onlySpecial:(_Bool)arg2;
+ (_Bool)_supportsWebPage:(id)arg1;
@property(copy, nonatomic) CDUnknownBlockType onRealLoadProgress; // @synthesize onRealLoadProgress=_onRealLoadProgress;
@property(copy, nonatomic) CDUnknownBlockType onBeganPlaying; // @synthesize onBeganPlaying=_onBeganPlaying;
@property(copy, nonatomic) CDUnknownBlockType onBeganLoading; // @synthesize onBeganLoading=_onBeganLoading;
@property(copy, nonatomic) CDUnknownBlockType onMetadataLoaded; // @synthesize onMetadataLoaded=_onMetadataLoaded;
@property(copy, nonatomic) CDUnknownBlockType requestFullscreen; // @synthesize requestFullscreen=_requestFullscreen;
@property(copy, nonatomic) CDUnknownBlockType onWatermarkAction; // @synthesize onWatermarkAction=_onWatermarkAction;
@property(nonatomic) _Bool disableControls; // @synthesize disableControls=_disableControls;
@property(nonatomic) _Bool disallowAutoplay; // @synthesize disallowAutoplay=_disallowAutoplay;
@property(nonatomic) unsigned long long roundCorners; // @synthesize roundCorners=_roundCorners;
@property(nonatomic) _Bool inhibitFullscreenButton; // @synthesize inhibitFullscreenButton=_inhibitFullscreenButton;
@property(nonatomic) _Bool disableWatermarkAction; // @synthesize disableWatermarkAction=_disableWatermarkAction;
@property(readonly, nonatomic) UIView *dimWrapperView; // @synthesize dimWrapperView=_dimWrapperView;
@property(readonly, nonatomic) TGEmbedPlayerControls *controlsView; // @synthesize controlsView=_controlsView;
@property(readonly, nonatomic) TGEmbedPlayerState *state; // @synthesize state=_state;
@property(nonatomic) struct CGRect initialFrame; // @synthesize initialFrame=_initialFrame;
@property(nonatomic) _Bool disallowPIP; // @synthesize disallowPIP=_disallowPIP;
@property(copy, nonatomic) CDUnknownBlockType requestPictureInPicture; // @synthesize requestPictureInPicture=_requestPictureInPicture;
- (void).cxx_destruct;
- (void)layoutSubviews;
- (void)_cleanWebView;
- (_Bool)_scaleViewToMaxSize;
- (id)_webView;
- (void)_notifyOfCallbackURL:(id)arg1;
- (_Bool)_applyViewportUserScript;
- (void)_setupUserScripts:(id)arg1;
- (id)_baseURL;
- (id)_embedURL;
- (id)_embedHTML;
- (void)_evaluateJS:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (int)_controlsType;
- (void)_prepareToLeaveFullscreen;
- (void)_prepareToEnterFullscreen;
- (void)_watermarkAction;
- (void)_onPanelAppearance;
- (void)_didBeginPlayback;
- (void)_onPageReady;
- (void)updateState:(id)arg1;
- (id)stateSignal;
- (void)_pictureInPicturePressed;
- (void)enterPictureInPicture:(int)arg1;
- (void)enterFullscreen:(double)arg1;
- (void)seekToFractPosition:(double)arg1;
- (void)seekToPosition:(double)arg1;
- (void)pauseVideo:(_Bool)arg1;
- (void)pauseVideo;
- (void)playVideo;
- (void)_openWebPage:(id)arg1;
- (void)commonSetupWithWebView:(id)arg1 useURL:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didFailLoadWithError:(id)arg2;
- (void)webViewDidFinishLoad:(id)arg1;
- (void)webViewDidStartLoad:(id)arg1;
- (_Bool)webView:(id)arg1 shouldStartLoadWithRequest:(id)arg2 navigationType:(long long)arg3;
- (void)setupUIWebView;
- (void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigation:(id)arg2;
- (void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(CDUnknownBlockType)arg3;
- (void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2;
- (void)setupWKWebView;
- (void)onLockInPlace;
- (void)finishedLeavingFullscreen;
- (void)beginLeavingFullscreen;
- (void)setCoverImage:(id)arg1;
- (_Bool)_useFakeLoadingProgress;
- (void)setLoadProgress:(double)arg1 duration:(double)arg2;
- (void)setDimmed:(_Bool)arg1 animated:(_Bool)arg2 shouldDelay:(_Bool)arg3;
- (void)setDimmed:(_Bool)arg1 animated:(_Bool)arg2;
- (_Bool)supportsPIP;
- (void)resumePIPPlayback;
- (void)pausePIPPlayback;
- (void)_requestSystemPictureInPictureMode;
- (void)switchToPictureInPicture;
- (void)hideControls;
- (id)loadProgress;
- (double)_compensationEdges;
- (void)setupWithEmbedSize:(struct CGSize)arg1;
- (void)_setupAudioSessionIfNeeded;
- (void)dealloc;
- (id)initWithWebPageAttachment:(id)arg1 thumbnailSignal:(id)arg2 alternateCachePathSignal:(id)arg3;
- (id)initWithWebPageAttachment:(id)arg1 thumbnailSignal:(id)arg2;
- (id)initWithWebPageAttachment:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

