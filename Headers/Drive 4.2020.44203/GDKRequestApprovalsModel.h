//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class GDKApprovalsLogger;
@protocol GDKACLFixing, GDKApprovalRequestAction, GDKApprovalsService, GDKRequestApprovalsModelDelegate, SSOIdentity;

@interface GDKRequestApprovalsModel : NSObject
{
    id <GDKRequestApprovalsModelDelegate> _delegate;
    id <GDKApprovalsService> _approvalsService;
    id <GDKACLFixing> _aclFixerService;
    id <GDKApprovalRequestAction> _action;
    id <SSOIdentity> _userIdentity;
    GDKApprovalsLogger *_sessionLogger;
}

+ (_Bool)isResolvableError:(id)arg1;
- (void).cxx_destruct;
@property(readonly, nonatomic) GDKApprovalsLogger *sessionLogger; // @synthesize sessionLogger=_sessionLogger;
@property(readonly, nonatomic) id <SSOIdentity> userIdentity; // @synthesize userIdentity=_userIdentity;
@property(readonly, nonatomic) id <GDKApprovalRequestAction> action; // @synthesize action=_action;
@property(readonly, nonatomic) id <GDKACLFixing> aclFixerService; // @synthesize aclFixerService=_aclFixerService;
@property(readonly, nonatomic) id <GDKApprovalsService> approvalsService; // @synthesize approvalsService=_approvalsService;
@property(nonatomic) __weak id <GDKRequestApprovalsModelDelegate> delegate; // @synthesize delegate=_delegate;
- (id)personIDsForEmails:(id)arg1 contacts:(id)arg2;
- (void)attemptApproversRequestErrorResolution:(id)arg1 failedRequest:(id)arg2 fileIDResourceKeyPair:(id)arg3 approvalID:(id)arg4;
- (void)attemptCreateRequestErrorResolution:(id)arg1 failedRequest:(id)arg2 fileIDResourceKeyPair:(id)arg3;
- (void)attemptRequestErrorResolution:(id)arg1 failedRequest:(id)arg2 fileIDResourceKeyPair:(id)arg3;
- (id)errorMessageForError:(id)arg1;
- (id)trimmedStringForRawInput:(id)arg1;
- (id)stateWithTrimmedMessageForState:(id)arg1;
- (void)sendRequestWithState:(id)arg1;
- (void)fixACLWithItem:(id)arg1 role:(int)arg2 completion:(CDUnknownBlockType)arg3;
- (void)checkACLForState:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)endSessionLoggingByClosing;
- (void)endSessionLoggingByConfirmingWithState:(id)arg1;
- (void)startSessionLogging;
- (id)initWithUserIdentity:(id)arg1 approvalsService:(id)arg2 aclFixerService:(id)arg3 action:(id)arg4 sessionLogger:(id)arg5;

@end

