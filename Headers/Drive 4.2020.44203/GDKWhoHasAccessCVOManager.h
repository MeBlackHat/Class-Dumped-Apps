//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKAutoSizablePresenter-Protocol.h"
#import "MDCBottomSheetControllerDelegate-Protocol.h"

@class GDKContentViewSizer, GDKSharingConfiguration, GDKTheme, GIPReachability, NSDictionary, NSString;
@protocol GDKAlertControlling, GDKCapabilityChecking, GDKContactManagerAPIClient, GDKFileFetcher, GDKHelpKitService, GDKSnackbarControlling, GDKWhoHasAccessCVOManagerDelegate, SSOIdentity;

@interface GDKWhoHasAccessCVOManager : NSObject <GDKAutoSizablePresenter, MDCBottomSheetControllerDelegate>
{
    _Bool _showCopyLinkButton;
    GDKContentViewSizer *_contentViewSizer;
    id <GDKWhoHasAccessCVOManagerDelegate> _delegate;
    id <GDKHelpKitService> _helpKitService;
    NSDictionary *_coalescedCVOs;
    id <GDKFileFetcher> _fileFetcher;
    id <SSOIdentity> _ssoIdentity;
    id <GDKSnackbarControlling> _snackbarController;
    id <GDKAlertControlling> _alertController;
    id <GDKContactManagerAPIClient> _contactManager;
    GDKSharingConfiguration *_sharingConfiguration;
    CDUnknownBlockType _updatePermissionCompletion;
    id <GDKCapabilityChecking> _capabilityChecker;
    GDKTheme *_theme;
    GIPReachability *_reachability;
}

+ (id)impressionNameForUpdateLatencyForPermission:(id)arg1 toRole:(long long)arg2;
+ (int)changeAncestorConfirmationTypeForPermission:(id)arg1 toRole:(long long)arg2;
+ (_Bool)isSharedWithSpecificPeople:(id)arg1;
+ (id)createParamsForLinkSharing:(id)arg1 file:(id)arg2 whoHasAccessParams:(id)arg3 domainAttributes:(id)arg4;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool showCopyLinkButton; // @synthesize showCopyLinkButton=_showCopyLinkButton;
@property(readonly, nonatomic) GIPReachability *reachability; // @synthesize reachability=_reachability;
@property(readonly, nonatomic) GDKTheme *theme; // @synthesize theme=_theme;
@property(readonly, nonatomic) id <GDKCapabilityChecking> capabilityChecker; // @synthesize capabilityChecker=_capabilityChecker;
@property(copy, nonatomic) CDUnknownBlockType updatePermissionCompletion; // @synthesize updatePermissionCompletion=_updatePermissionCompletion;
@property(readonly, nonatomic) GDKSharingConfiguration *sharingConfiguration; // @synthesize sharingConfiguration=_sharingConfiguration;
@property(readonly, nonatomic) id <GDKContactManagerAPIClient> contactManager; // @synthesize contactManager=_contactManager;
@property(readonly, nonatomic) id <GDKAlertControlling> alertController; // @synthesize alertController=_alertController;
@property(readonly, nonatomic) id <GDKSnackbarControlling> snackbarController; // @synthesize snackbarController=_snackbarController;
@property(retain, nonatomic) id <SSOIdentity> ssoIdentity; // @synthesize ssoIdentity=_ssoIdentity;
@property(retain, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(retain, nonatomic) NSDictionary *coalescedCVOs; // @synthesize coalescedCVOs=_coalescedCVOs;
@property(retain, nonatomic) id <GDKHelpKitService> helpKitService; // @synthesize helpKitService=_helpKitService;
@property(nonatomic) __weak id <GDKWhoHasAccessCVOManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (id)analyticsUserInfoForFile:(id)arg1 permission:(id)arg2;
- (void)stopLatencyMetricWithNotificationName:(id)arg1 file:(id)arg2 permission:(id)arg3;
- (void)startLatencyMetricWithNotificationName:(id)arg1 file:(id)arg2 permission:(id)arg3;
- (void)sendAnalyticsNotificationWithName:(id)arg1 file:(id)arg2 permission:(id)arg3;
- (void)sendAnalyticsNotificationWithName:(id)arg1;
- (id)warningForInapplicableReason:(id)arg1;
- (_Bool)isSiteLinkSharingPermission:(id)arg1 file:(id)arg2;
- (id)atariDraftWarningTextForPermissions:(id)arg1 file:(id)arg2;
- (_Bool)canFileBeShared:(id)arg1;
- (void)bottomSheetControllerDidDismissBottomSheet:(id)arg1;
@property(readonly, nonatomic) GDKContentViewSizer *contentViewSizer; // @synthesize contentViewSizer=_contentViewSizer;
- (double)heightForObject:(id)arg1 constrainedToWidth:(double)arg2;
- (void)changeAncestorParamsForPermission:(id)arg1 toRole:(long long)arg2 fromFile:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)showRoleSelectorForUserCVO:(id)arg1 actionView:(id)arg2 file:(id)arg3 blocosWarningsEnabled:(_Bool)arg4 roleSelectorDelegate:(id)arg5 presentingViewController:(id)arg6;
- (id)blocosSnackbarForRole:(long long)arg1 file:(id)arg2;
- (void)showBlocosToastForRole:(long long)arg1 file:(id)arg2;
- (void)changePermission:(id)arg1 toRole:(long long)arg2 scope:(long long)arg3 enablesDiscovery:(_Bool)arg4 file:(id)arg5 sharingClient:(id)arg6 presentingViewController:(id)arg7 completion:(CDUnknownBlockType)arg8;
- (_Bool)isLinkSharingEnabledForPermission:(id)arg1;
- (void)updateLinkPermission:(id)arg1 withRole:(long long)arg2 scope:(long long)arg3 enablesDiscovery:(_Bool)arg4 file:(id)arg5 sharingClient:(id)arg6 completion:(CDUnknownBlockType)arg7;
- (void)showLinkSharingConfirmationMessageForFile:(id)arg1 selectedRole:(long long)arg2 wasLinkSharingOn:(_Bool)arg3 linkSharingEnabled:(_Bool)arg4 error:(id)arg5;
- (void)updateLinkSharingForPermission:(id)arg1 file:(id)arg2 domainAttributes:(id)arg3 params:(id)arg4 anchorView:(id)arg5 rolePickerDelegate:(id)arg6 presentingViewController:(id)arg7 completion:(CDUnknownBlockType)arg8;
- (void)conditionallyCreateLinkSharingParams:(id)arg1 file:(id)arg2 domainAttributes:(id)arg3 params:(id)arg4 completionQueue:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)toggleGroupedCVO:(id)arg1 model:(id)arg2 collectionView:(id)arg3;
- (id)itemsForGroup:(id)arg1;
- (unsigned long long)numberOfItemsInGroup:(id)arg1;
- (void)fetchAvatarForUserCVO:(id)arg1 contactAvatarCache:(id)arg2;
- (void)addAtariSpecificLinkSharingCVOs:(id)arg1 file:(id)arg2 forPermission:(id)arg3 isSharedWithSpecificPeople:(_Bool)arg4 temakiLinkSharingCVODelegate:(id)arg5;
- (id)sharersWithInheritedPermissionsForTeamDrive:(id)arg1 themeColor:(id)arg2;
- (id)userCVOForPermission:(id)arg1 file:(id)arg2 showLinkSharingFirst:(_Bool)arg3;
- (id)contentViewObjectsForPermissions:(id)arg1 file:(id)arg2 themeColor:(id)arg3 teamDriveTitle:(id)arg4 contactAvatarCache:(id)arg5 shareUserCVODelegate:(id)arg6 temakiLinkSharingCVODelegate:(id)arg7 showLinkSharingFirst:(_Bool)arg8 readonly:(_Bool)arg9 copyLinkDelegate:(id)arg10;
- (void)fetchAvatarImagesForUrls:(id)arg1 imageFetcher:(id)arg2 imageFetcherCache:(id)arg3 completionQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)fetchAvatarImagesForCVO:(id)arg1 imageFetcher:(id)arg2 imageFetcherCache:(id)arg3 existingCVO:(id)arg4 updateBlock:(CDUnknownBlockType)arg5;
- (id)avatarCVOForPermissions:(id)arg1 domainAttributes:(id)arg2 imageFetcher:(id)arg3 imageFetcherCache:(id)arg4 updateBlock:(CDUnknownBlockType)arg5;
- (id)initWithDelegate:(id)arg1 ssoIdentity:(id)arg2 fileFetcher:(id)arg3 snackbarController:(id)arg4 alertController:(id)arg5 contactManager:(id)arg6 sharingConfiguration:(id)arg7 helpKitService:(id)arg8 capabilityChecker:(id)arg9 reachability:(id)arg10 theme:(id)arg11 showCopyLinkButton:(_Bool)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

