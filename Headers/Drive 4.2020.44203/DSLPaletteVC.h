//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "DSLSemiModalVCGestureProtocol-Protocol.h"
#import "DSLTabBarDelegate-Protocol.h"
#import "MDCElevationOverriding-Protocol.h"
#import "UIPageViewControllerDataSource-Protocol.h"
#import "UIPageViewControllerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class DSLTabBar, GDDNavigationTitleLabel, NSArray, NSString, UIControl, UIPageViewController;
@protocol DSLPaletteVCDelegate;

@interface DSLPaletteVC : UIViewController <DSLTabBarDelegate, DSLSemiModalVCGestureProtocol, UIPageViewControllerDataSource, UIPageViewControllerDelegate, UIScrollViewDelegate, MDCElevationOverriding>
{
    _Bool _showsNavigationBar;
    _Bool _hidesA11yExitButton;
    _Bool _hidesTabBar;
    _Bool _showCloseButton;
    double _mdc_overrideBaseElevation;
    id <DSLPaletteVCDelegate> _paletteDelegate;
    NSString *_componentTitle;
    DSLTabBar *_tabView;
    UIPageViewController *_pageViewController;
    UIControl *_exitButton;
    GDDNavigationTitleLabel *_titleLabel;
    NSArray *_pageControllers;
    unsigned long long _activeIndex;
}

- (void).cxx_destruct;
@property(nonatomic) unsigned long long activeIndex; // @synthesize activeIndex=_activeIndex;
@property(readonly, nonatomic) NSArray *pageControllers; // @synthesize pageControllers=_pageControllers;
@property(retain, nonatomic) GDDNavigationTitleLabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(readonly, nonatomic) _Bool showCloseButton; // @synthesize showCloseButton=_showCloseButton;
@property(readonly, nonatomic) UIControl *exitButton; // @synthesize exitButton=_exitButton;
@property(readonly, nonatomic) UIPageViewController *pageViewController; // @synthesize pageViewController=_pageViewController;
@property(retain, nonatomic) DSLTabBar *tabView; // @synthesize tabView=_tabView;
@property(nonatomic) _Bool hidesTabBar; // @synthesize hidesTabBar=_hidesTabBar;
@property(nonatomic) _Bool hidesA11yExitButton; // @synthesize hidesA11yExitButton=_hidesA11yExitButton;
@property(copy, nonatomic) NSString *componentTitle; // @synthesize componentTitle=_componentTitle;
@property(nonatomic) __weak id <DSLPaletteVCDelegate> paletteDelegate; // @synthesize paletteDelegate=_paletteDelegate;
@property(nonatomic) _Bool showsNavigationBar; // @synthesize showsNavigationBar=_showsNavigationBar;
@property(nonatomic) double mdc_overrideBaseElevation; // @synthesize mdc_overrideBaseElevation=_mdc_overrideBaseElevation;
- (id)enabledPageControllerTitles;
- (struct CGSize)popoverSize;
- (void)panGestureDidEndTrackingToDismissSemiModal;
- (void)panGestureTrackingToDismissSemiModal;
- (struct CGPoint)scrollViewContentOffset;
- (void)dismissMyself:(id)arg1;
- (void)tabViewDidPressClose:(id)arg1;
- (void)tabView:(id)arg1 didSelectTabAtIndex:(unsigned long long)arg2;
- (void)updateStateForPageAtIndex:(unsigned long long)arg1;
- (void)updateState;
- (_Bool)isPageControllerEnabled:(id)arg1;
- (_Bool)enabled;
- (id)enabledPageControllers;
- (void)refreshTabView;
- (void)triggerDismiss;
- (id)scrollViewAtIndex:(unsigned long long)arg1;
- (id)activeScrollView;
- (void)updateAccessiblePalettePage;
- (id)pageViewController:(id)arg1 viewControllerAfterViewController:(id)arg2;
- (id)pageViewController:(id)arg1 viewControllerBeforeViewController:(id)arg2;
- (void)pageViewController:(id)arg1 didFinishAnimating:(_Bool)arg2 previousViewControllers:(id)arg3 transitionCompleted:(_Bool)arg4;
- (void)setActiveIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillLayoutSubviews;
- (_Bool)accessibilityPerformEscape;
- (void)viewWillAppear:(_Bool)arg1;
- (void)loadView;
- (void)viewDidLoad;
- (void)setPaletteTitle:(id)arg1 a11yLabel:(id)arg2;
- (id)initWithPageControllers:(id)arg1 showCloseButton:(_Bool)arg2;
- (id)initWithPageControllers:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

