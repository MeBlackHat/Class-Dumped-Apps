//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization.h"

@interface ComGoogleCommonUtilConcurrentFutures : ComGoogleCommonUtilConcurrentGwtFuturesCatchingSpecialization
{
}

+ (void)propagateCancellationWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withJavaUtilConcurrentFuture:(id)arg2;
+ (id)getUncheckedWithJavaUtilConcurrentFuture:(id)arg1;
+ (id)getCheckedWithJavaUtilConcurrentFuture:(id)arg1 withIOSClass:(id)arg2 withLong:(long long)arg3 withJavaUtilConcurrentTimeUnit:(id)arg4;
+ (id)getCheckedWithJavaUtilConcurrentFuture:(id)arg1 withIOSClass:(id)arg2 withJavaTimeDuration:(id)arg3;
+ (id)getCheckedWithJavaUtilConcurrentFuture:(id)arg1 withIOSClass:(id)arg2;
+ (id)getDoneWithJavaUtilConcurrentFuture:(id)arg1;
+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withComGoogleCommonUtilConcurrentFutureCallback:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
+ (id)inCompletionOrderWithJavaLangIterable:(id)arg1;
+ (id)successfulAsMapWithJavaUtilMap:(id)arg1;
+ (id)allAsMapWithJavaUtilMap:(id)arg1;
+ (id)successfulAsListWithJavaLangIterable:(id)arg1;
+ (id)successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(id)arg1;
+ (id)nonCancellationPropagatingWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1;
+ (id)whenAllSucceedWithJavaLangIterable:(id)arg1;
+ (id)whenAllSucceedWithComGoogleCommonUtilConcurrentListenableFutureArray:(id)arg1;
+ (id)whenAllCompleteWithJavaLangIterable:(id)arg1;
+ (id)whenAllCompleteWithComGoogleCommonUtilConcurrentListenableFutureArray:(id)arg1;
+ (id)combineWithJavaUtilConcurrentCallable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2 withJavaLangIterable:(id)arg3;
+ (id)combineWithJavaUtilConcurrentCallable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2 withComGoogleCommonUtilConcurrentListenableFutureArray:(id)arg3;
+ (id)allAsListWithJavaLangIterable:(id)arg1;
+ (id)allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(id)arg1;
+ (id)lazyTransformWithJavaUtilConcurrentFuture:(id)arg1 withComGoogleCommonBaseFunction:(id)arg2;
+ (id)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withComGoogleCommonBaseFunction:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
+ (id)transformAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withComGoogleCommonUtilConcurrentAsyncFunction:(id)arg2 withJavaUtilConcurrentExecutor:(id)arg3;
+ (id)withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnit:(id)arg3 withJavaUtilConcurrentScheduledExecutorService:(id)arg4;
+ (id)withTimeoutWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withJavaTimeDuration:(id)arg2 withJavaUtilConcurrentScheduledExecutorService:(id)arg3;
+ (id)catchingAsyncWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withIOSClass:(id)arg2 withComGoogleCommonUtilConcurrentAsyncFunction:(id)arg3 withJavaUtilConcurrentExecutor:(id)arg4;
+ (id)catchingWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withIOSClass:(id)arg2 withComGoogleCommonBaseFunction:(id)arg3 withJavaUtilConcurrentExecutor:(id)arg4;
+ (id)scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id)arg1 withLong:(long long)arg2 withJavaUtilConcurrentTimeUnit:(id)arg3 withJavaUtilConcurrentScheduledExecutorService:(id)arg4;
+ (id)scheduleAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id)arg1 withJavaTimeDuration:(id)arg2 withJavaUtilConcurrentScheduledExecutorService:(id)arg3;
+ (id)submitAsyncWithComGoogleCommonUtilConcurrentAsyncCallable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
+ (id)submitWithJavaLangRunnable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
+ (id)submitWithJavaUtilConcurrentCallable:(id)arg1 withJavaUtilConcurrentExecutor:(id)arg2;
+ (id)immediateCancelledFuture;
+ (id)immediateFailedFutureWithJavaLangThrowable:(id)arg1;
+ (id)immediateVoidFuture;
+ (id)immediateFutureWithId:(id)arg1;
+ (id)transformExceptionsWithComGoogleCommonUtilConcurrentListenableFuture:(id)arg1 withComGoogleCommonBaseFunction:(id)arg2;

@end

