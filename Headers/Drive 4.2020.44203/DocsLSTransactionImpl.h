//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "DocsLSTransaction-Protocol.h"

@class NSMutableDictionary;
@protocol DocsLSApplicationStorage, DocsLSCrossDocumentStorage, DocsLSTemplateMetadataStorage, DocsLSTransactionDelegate;

@interface DocsLSTransactionImpl : NSObject <DocsLSTransaction>
{
    long long _transactionState;
    NSObject<DocsLSTransactionDelegate> *_delegate;
    NSObject<DocsLSApplicationStorage> *_appStorage;
    long long _commitOrder;
    NSObject<DocsLSCrossDocumentStorage> *_documentMetadataStorage;
    NSObject<DocsLSTemplateMetadataStorage> *_tplMetadataStorage;
    NSMutableDictionary *_documentStorages;
    NSMutableDictionary *_templateStorages;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSMutableDictionary *templateStorages; // @synthesize templateStorages=_templateStorages;
@property(retain, nonatomic) NSMutableDictionary *documentStorages; // @synthesize documentStorages=_documentStorages;
@property(retain, nonatomic) NSObject<DocsLSTemplateMetadataStorage> *tplMetadataStorage; // @synthesize tplMetadataStorage=_tplMetadataStorage;
@property(retain, nonatomic) NSObject<DocsLSCrossDocumentStorage> *documentMetadataStorage; // @synthesize documentMetadataStorage=_documentMetadataStorage;
@property(nonatomic) long long commitOrder; // @synthesize commitOrder=_commitOrder;
@property(retain, nonatomic) NSObject<DocsLSApplicationStorage> *appStorage; // @synthesize appStorage=_appStorage;
@property(nonatomic) __weak NSObject<DocsLSTransactionDelegate> *delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long transactionState; // @synthesize transactionState=_transactionState;
- (void)setTemplateStorage:(id)arg1 forTemplateId:(id)arg2;
- (id)templateStorageForTemplateId:(id)arg1;
- (void)setTemplateMetadataStorage:(id)arg1;
- (id)templateMetadataStorage;
- (void)setCrossDocumentStorage:(id)arg1 commitOrder:(long long)arg2;
- (id)applicationStorage;
- (void)setApplicationStorage:(id)arg1;
- (id)crossDocumentStorage;
- (void)setDocumentStorage:(id)arg1 forDocumentId:(id)arg2;
- (id)documentStorageForDocumentId:(id)arg1;
- (_Bool)rollbackWithError:(id *)arg1;
- (_Bool)commitWithError:(id *)arg1;
- (_Bool)beginWithError:(id *)arg1;
- (void)dealloc;
- (id)init;

@end

