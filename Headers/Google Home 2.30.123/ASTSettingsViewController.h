//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ASTThemableViewController.h"

#import "ASTSettingsErrorViewDelegate-Protocol.h"
#import "ASTSettingsUIAdapterDelegate-Protocol.h"
#import "ASTSettingsUIController-Protocol.h"
#import "ASTThemable-Protocol.h"
#import "ASTWebViewControllerDelegate-Protocol.h"
#import "GOOPopoverViewControllerDelegate-Protocol.h"
#import "MDCFlexibleHeaderViewLayoutDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class ASTFlexibleHeaderContentView, ASTMenuStreamController, ASTSettingsErrorView, ASTSettingsMenuService, ASTSettingsNavigationSearchView, ASTSettingsUIAdapter, ASTSpinnerView, ASTThemablePopoverViewController, ASTUISettingsUi, MDCAppBar, NSLayoutConstraint, NSString, QTMButton, UIRefreshControl, UIView;
@protocol ASTSettingsViewControllerDelegate;

@interface ASTSettingsViewController : ASTThemableViewController <ASTSettingsErrorViewDelegate, ASTSettingsUIController, ASTSettingsUIAdapterDelegate, ASTWebViewControllerDelegate, GOOPopoverViewControllerDelegate, MDCFlexibleHeaderViewLayoutDelegate, UIScrollViewDelegate, ASTThemable>
{
    ASTSettingsErrorView *_errorView;
    ASTMenuStreamController *_menuStreamController;
    UIView *_tabBar;
    ASTSpinnerView *_spinner;
    ASTThemablePopoverViewController *_popoverViewController;
    UIView *_customView;
    UIView *_footerView;
    UIRefreshControl *_refreshControl;
    ASTSettingsNavigationSearchView *_navigationSearchView;
    _Bool _needsToHighlightFloatingButton;
    double _customViewBottomMargin;
    ASTFlexibleHeaderContentView *_flexibleHeaderContentView;
    struct UIEdgeInsets _edgeInset;
    _Bool _loadingWebPage;
    _Bool _embedded;
    _Bool _enablesDarkMode;
    _Bool _enablesDynamicMode;
    _Bool _isConsentCheckInProgress;
    id <ASTSettingsViewControllerDelegate> _delegate;
    NSString *_detailsID;
    MDCAppBar *_appBar;
    ASTSettingsUIAdapter *_uiAdapter;
    QTMButton *_floatingButton;
    ASTUISettingsUi *_settingsUi;
    ASTSettingsMenuService *_settingsMenuService;
    NSLayoutConstraint *_headerContentViewLeadingConstraint;
    NSLayoutConstraint *_headerContentViewTrailingConstraint;
    NSLayoutConstraint *_errorViewTopConstraint;
    NSLayoutConstraint *_customViewTopConstraint;
    NSLayoutConstraint *_customViewTrailingConstraint;
    NSLayoutConstraint *_customViewBottomConstraint;
    NSLayoutConstraint *_customViewLeadingConstraint;
}

- (void).cxx_destruct;
@property(retain, nonatomic) NSLayoutConstraint *customViewLeadingConstraint; // @synthesize customViewLeadingConstraint=_customViewLeadingConstraint;
@property(retain, nonatomic) NSLayoutConstraint *customViewBottomConstraint; // @synthesize customViewBottomConstraint=_customViewBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *customViewTrailingConstraint; // @synthesize customViewTrailingConstraint=_customViewTrailingConstraint;
@property(retain, nonatomic) NSLayoutConstraint *customViewTopConstraint; // @synthesize customViewTopConstraint=_customViewTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *errorViewTopConstraint; // @synthesize errorViewTopConstraint=_errorViewTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *headerContentViewTrailingConstraint; // @synthesize headerContentViewTrailingConstraint=_headerContentViewTrailingConstraint;
@property(retain, nonatomic) NSLayoutConstraint *headerContentViewLeadingConstraint; // @synthesize headerContentViewLeadingConstraint=_headerContentViewLeadingConstraint;
@property(nonatomic) _Bool isConsentCheckInProgress; // @synthesize isConsentCheckInProgress=_isConsentCheckInProgress;
@property(retain, nonatomic) ASTSettingsMenuService *settingsMenuService; // @synthesize settingsMenuService=_settingsMenuService;
@property(retain, nonatomic) ASTUISettingsUi *settingsUi; // @synthesize settingsUi=_settingsUi;
@property(retain, nonatomic) QTMButton *floatingButton; // @synthesize floatingButton=_floatingButton;
@property(nonatomic) _Bool enablesDynamicMode; // @synthesize enablesDynamicMode=_enablesDynamicMode;
@property(nonatomic) _Bool enablesDarkMode; // @synthesize enablesDarkMode=_enablesDarkMode;
@property(retain, nonatomic) ASTSettingsUIAdapter *uiAdapter; // @synthesize uiAdapter=_uiAdapter;
@property(nonatomic) _Bool embedded; // @synthesize embedded=_embedded;
@property(retain, nonatomic) MDCAppBar *appBar; // @synthesize appBar=_appBar;
@property(retain, nonatomic) NSString *detailsID; // @synthesize detailsID=_detailsID;
@property(nonatomic) __weak id <ASTSettingsViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)dismissWebViewController:(id)arg1;
- (void)deregisterOverlayNotifications;
- (void)registerOverlayNotifications;
- (void)flexibleHeaderViewController:(id)arg1 flexibleHeaderViewFrameDidChange:(id)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)showCustomErrorView:(long long)arg1;
- (void)didPullToRefresh;
- (double)statusBarHeight;
- (double)topLayoutMargin;
- (void)deregisterKeyboardNotifications;
- (void)registerKeyboardNotifications;
- (void)checkUDCConsentWithCompletion:(CDUnknownBlockType)arg1;
- (void)handleFetchSettingsError:(id)arg1 retryWithUDCConsentCheck:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchSettingsWithUDCConsentCheck:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)settingsUIAdapterNeedsSettingsReloadWithRefetch:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)refreshTableViewWithSectionItems:(id)arg1;
- (void)didReceiveSettings:(id)arg1;
- (void)populateSettingsMenuStreamFirstTime:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)navigateToViewController:(id)arg1 preferPresent:(_Bool)arg2 popToViewControllerIfPossible:(_Bool)arg3;
- (void)navigateToViewController:(id)arg1 preferPresent:(_Bool)arg2;
- (void)reloadNavigationItemTitleView;
- (void)showFrenchTransparencyInfo;
- (void)showUDCOverviewPage;
- (void)searchAction;
- (void)showMyActivity;
- (id)overflowActionSheetController;
- (void)popoverViewControllerDidCancel:(id)arg1;
- (void)settingsErrorViewDidTapActionButton:(id)arg1 error:(long long)arg2;
- (void)settingsUIAdapter:(id)arg1 streamSettingsWithUUID:(id)arg2 isFinalRequest:(_Bool)arg3 callback:(CDUnknownBlockType)arg4;
- (void)settingsUIAdapter:(id)arg1 refetchSettingsWithCompletion:(CDUnknownBlockType)arg2;
- (void)settingsUIAdapter:(id)arg1 didTapItemWithClientInput:(id)arg2;
- (void)settingsUIAdapter:(id)arg1 didTapItemWithName:(id)arg2;
- (id)settingsViewControllerDelegate;
- (void)didTapOverflowMenuButton:(id)arg1;
- (_Bool)isBottomOfNavigationStack;
- (void)setCustomViewBottonMargin:(double)arg1;
- (void)setCustomView:(id)arg1;
- (void)popToSelfAnimated:(_Bool)arg1;
- (void)dismissPopover:(CDUnknownBlockType)arg1;
- (void)dismissPopover;
- (void)showPopover:(id)arg1 anchorItem:(id)arg2 anchorPoint:(struct CGPoint)arg3;
- (void)showPopoverActionSheet:(id)arg1 anchorItem:(id)arg2 anchorOffset:(struct CGSize)arg3 anchorCorner:(unsigned long long)arg4;
- (void)tintNavigationBarWithColor:(id)arg1;
- (void)updateRightNavigationBarButtons:(id)arg1;
- (void)updateNavigationItemTitle:(id)arg1;
- (void)updateFloatingButtonAccessibilityLabel:(id)arg1 hint:(id)arg2;
- (void)showFloatingButton;
- (void)hideFloatingButton;
- (void)hideSpinner;
- (void)showSpinnerWithText:(id)arg1 backgroundColor:(id)arg2;
- (void)showSpinner;
- (void)dismissSelfAnimated:(_Bool)arg1;
- (void)dismissSelfAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)replaceSelfWithViewController:(id)arg1;
- (void)dismissViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)preferredStatusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (id)viewControllerForPresentation;
- (void)presentWithPresentationBlock:(CDUnknownBlockType)arg1;
- (void)presentViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)presentViewController:(id)arg1 modally:(_Bool)arg2 popToViewControllerIfPossible:(_Bool)arg3;
- (void)presentViewController:(id)arg1 modally:(_Bool)arg2;
- (void)navigateToSettingsPageWithUIAdapter:(id)arg1;
- (void)navigateToSettingsPageWithType:(long long)arg1;
- (void)highlightFloatingButtonFeature;
- (void)handleOverlayTransition:(id)arg1;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)didTapTableView:(id)arg1;
- (void)preferredContentSizeChanged;
- (id)streamTableView;
- (void)viewDidLayoutSubviews;
- (_Bool)hidesBottomBarWhenPushed;
- (void)showSearchBarWithPlaceHolder:(id)arg1 delegate:(id)arg2;
- (void)loadView;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)propagateStyleToViewController:(id)arg1;
- (void)updateFloatingButtonStyle;
- (void)applyTheme:(unsigned long long)arg1;
- (void)refreshSettingsWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchSettingsWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithService:(id)arg1 settingsUi:(id)arg2 uiAdapter:(id)arg3;
- (id)initWithService:(id)arg1 uiAdapter:(id)arg2;
- (id)initWithService:(id)arg1 settingsType:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

