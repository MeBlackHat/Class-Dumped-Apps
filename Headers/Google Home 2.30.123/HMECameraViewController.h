//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HMEAppBarViewController.h"

#import "ASTCameraPlayerDelegate-Protocol.h"
#import "HMECameraClipInfoBottomDrawerNavigationControllerDelegate-Protocol.h"
#import "HMECameraClipInfoViewControllerDelegate-Protocol.h"
#import "HMECameraPlaybackControlsDelegate-Protocol.h"
#import "HMECameraViewChromeDelegate-Protocol.h"
#import "HMEDisconnectedRemoteItemViewDelegate-Protocol.h"
#import "HMEDismissibleNavigationControllerActivation-Protocol.h"
#import "HMEHomeAutomationDeviceStateCacheListener-Protocol.h"
#import "HMETalkbackButtonViewDelegate-Protocol.h"
#import "MDCBottomDrawerViewControllerDelegate-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class ASTHomeAutomationDevice, ContentAnalyticsEvent, GHCCameraDetails, GHCCameraItem, GHCCameraMetadata, GHCCameraSession, HMECameraPlaybackControls, HMECameraViewChrome, HMEDisconnectedRemoteItemView, HMEGradientView, HMETalkbackButtonView, MDCActivityIndicator, MDCBottomDrawerViewController, MDCButton, MDCChipView, MDCFloatingButton, NSArray, NSError, NSLayoutConstraint, NSObject, NSString, UIBarButtonItem, UICollectionView, UICollectionViewFlowLayout, UIImageView, UILabel, UIScrollView, UISwipeGestureRecognizer, UITapGestureRecognizer, UIView;
@protocol ASTCameraPlayer, GCAConfigurationFlags, HMECameraDataProvider, HMECameraViewControllerDelegate, HMEGriffinUserChecker, OS_dispatch_source;

@interface HMECameraViewController : HMEAppBarViewController <ASTCameraPlayerDelegate, HMECameraViewChromeDelegate, HMEDismissibleNavigationControllerActivation, HMETalkbackButtonViewDelegate, UIGestureRecognizerDelegate, HMECameraPlaybackControlsDelegate, HMECameraClipInfoBottomDrawerNavigationControllerDelegate, HMECameraClipInfoViewControllerDelegate, MDCBottomDrawerViewControllerDelegate, HMEDisconnectedRemoteItemViewDelegate, UICollectionViewDelegate, UICollectionViewDataSource, HMEHomeAutomationDeviceStateCacheListener, UIScrollViewDelegate>
{
    _Bool _drawerAnimating;
    _Bool _initialLoad;
    _Bool _interactiveDismissInProgress;
    _Bool _viewStateChangeInProgress;
    _Bool _needsStreamReload;
    _Bool _talking;
    _Bool _isE911Enabled;
    _Bool _refreshCameraPlayerInProgress;
    id <HMECameraViewControllerDelegate> _delegate;
    ASTHomeAutomationDevice *_device;
    id <HMEGriffinUserChecker> _griffinUserChecker;
    id <GCAConfigurationFlags> _experimentFlags;
    id <HMECameraDataProvider> _dataProvider;
    NSObject<OS_dispatch_source> *_delayTimer;
    GHCCameraMetadata *_cameraMetadata;
    GHCCameraDetails *_cameraDetails;
    GHCCameraItem *_currentCameraItem;
    GHCCameraSession *_ebrCameraSession;
    UILabel *_swipeUpHintLabel;
    MDCBottomDrawerViewController *_clipInfoViewDrawerController;
    double _streamAspectRatio;
    unsigned long long _viewState;
    unsigned long long _viewErrorCode;
    unsigned long long _viewZoomState;
    CDUnknownBlockType _pendingStateChangeBlock;
    long long _sizeClassCombo;
    NSLayoutConstraint *_playerHeightConstraint;
    NSLayoutConstraint *_pinTitleToTopConstraint;
    NSLayoutConstraint *_pinSubtitleBaseLineToTitleBaselineWithMargin;
    NSLayoutConstraint *_pinPlaybackControlsToTopConstraint;
    NSLayoutConstraint *_pinPlaybackControlsToBottomConstraint;
    NSLayoutConstraint *_pinViewLiveButtonToBottomWithMargin;
    NSLayoutConstraint *_pinSpinnerToCenterYConstraint;
    NSArray *_playerViewVerticalConstraints;
    NSArray *_playerViewHorizontalConstraints;
    NSArray *_cameraImageViewVerticalConstraints;
    NSArray *_cameraImageViewHorizontalConstraints;
    NSLayoutConstraint *_pinTalkbackButtonToScreenBottom;
    NSLayoutConstraint *_pinTalkbackButtonToScreenRight;
    NSLayoutConstraint *_viewLiveButtonHorizontalAlignLeft;
    NSLayoutConstraint *_viewLiveButtonHorizontalAlignCenter;
    NSLayoutConstraint *_topGradientHeightAnchor;
    UILabel *_titleLabel;
    UILabel *_subtitleLabel;
    UILabel *_errorSubtitleLabel;
    MDCChipView *_cameraStatusBadgeView;
    MDCActivityIndicator *_spinner;
    UIScrollView *_scrollView;
    UIView *_playerView;
    id <ASTCameraPlayer> _cameraPlayer;
    HMEDisconnectedRemoteItemView *_cameraOfflineItemView;
    HMEGradientView *_topGradientView;
    UILabel *_errorDescriptionLabel;
    UILabel *_talkbackStatusLabel;
    HMETalkbackButtonView *_talkbackButton;
    HMECameraViewChrome *_chrome;
    UICollectionView *_chipsCollectionView;
    NSArray *_chips;
    UICollectionViewFlowLayout *_chipsFlowLayout;
    UIView *_currentEventView;
    UIImageView *_partnerAttributionImageView;
    MDCFloatingButton *_e911Button;
    MDCButton *_retryButton;
    MDCButton *_viewLiveButton;
    UIBarButtonItem *_settingsButton;
    UIImageView *_cameraImageView;
    HMECameraPlaybackControls *_playerPlaybackControls;
    double _lastClipInfoDrawerTargetOffset;
    UISwipeGestureRecognizer *_swipeUpToShowClipInfoGesture;
    UITapGestureRecognizer *_singleTapRecognizer;
    UITapGestureRecognizer *_doubleTapRecognizer;
    ContentAnalyticsEvent *_talkbackSessionEndEvent;
    ContentAnalyticsEvent *_loadFirstFrameEvent;
    NSError *_onOffActionTraitUpdateError;
    struct CGSize _cameraVideoResolution;
}

+ (id)createHairlineButtonWithIcon:(id)arg1 title:(id)arg2;
+ (void)themeChip:(id)arg1;
+ (void)configureChipCell:(id)arg1 withObject:(id)arg2;
+ (struct CGSize)chipSizeForObject:(id)arg1 maxWidth:(double)arg2;
+ (id)createE911MiniFAB;
- (void).cxx_destruct;
@property(nonatomic, getter=isRefreshCameraPlayerInProgress) _Bool refreshCameraPlayerInProgress; // @synthesize refreshCameraPlayerInProgress=_refreshCameraPlayerInProgress;
@property(retain, nonatomic) NSError *onOffActionTraitUpdateError; // @synthesize onOffActionTraitUpdateError=_onOffActionTraitUpdateError;
@property(nonatomic) struct CGSize cameraVideoResolution; // @synthesize cameraVideoResolution=_cameraVideoResolution;
@property(retain, nonatomic) ContentAnalyticsEvent *loadFirstFrameEvent; // @synthesize loadFirstFrameEvent=_loadFirstFrameEvent;
@property(retain, nonatomic) ContentAnalyticsEvent *talkbackSessionEndEvent; // @synthesize talkbackSessionEndEvent=_talkbackSessionEndEvent;
@property(retain, nonatomic) UITapGestureRecognizer *doubleTapRecognizer; // @synthesize doubleTapRecognizer=_doubleTapRecognizer;
@property(retain, nonatomic) UITapGestureRecognizer *singleTapRecognizer; // @synthesize singleTapRecognizer=_singleTapRecognizer;
@property(retain, nonatomic) UISwipeGestureRecognizer *swipeUpToShowClipInfoGesture; // @synthesize swipeUpToShowClipInfoGesture=_swipeUpToShowClipInfoGesture;
@property(nonatomic) double lastClipInfoDrawerTargetOffset; // @synthesize lastClipInfoDrawerTargetOffset=_lastClipInfoDrawerTargetOffset;
@property(retain, nonatomic) HMECameraPlaybackControls *playerPlaybackControls; // @synthesize playerPlaybackControls=_playerPlaybackControls;
@property(nonatomic) __weak UIImageView *cameraImageView; // @synthesize cameraImageView=_cameraImageView;
@property(retain, nonatomic) UIBarButtonItem *settingsButton; // @synthesize settingsButton=_settingsButton;
@property(retain, nonatomic) MDCButton *viewLiveButton; // @synthesize viewLiveButton=_viewLiveButton;
@property(retain, nonatomic) MDCButton *retryButton; // @synthesize retryButton=_retryButton;
@property(retain, nonatomic) MDCFloatingButton *e911Button; // @synthesize e911Button=_e911Button;
@property(readonly, nonatomic) UIImageView *partnerAttributionImageView; // @synthesize partnerAttributionImageView=_partnerAttributionImageView;
@property(nonatomic) __weak UIView *currentEventView; // @synthesize currentEventView=_currentEventView;
@property(retain, nonatomic) UICollectionViewFlowLayout *chipsFlowLayout; // @synthesize chipsFlowLayout=_chipsFlowLayout;
@property(copy, nonatomic) NSArray *chips; // @synthesize chips=_chips;
@property(retain, nonatomic) UICollectionView *chipsCollectionView; // @synthesize chipsCollectionView=_chipsCollectionView;
@property(retain, nonatomic) HMECameraViewChrome *chrome; // @synthesize chrome=_chrome;
@property(retain, nonatomic) HMETalkbackButtonView *talkbackButton; // @synthesize talkbackButton=_talkbackButton;
@property(retain, nonatomic) UILabel *talkbackStatusLabel; // @synthesize talkbackStatusLabel=_talkbackStatusLabel;
@property(retain, nonatomic) UILabel *errorDescriptionLabel; // @synthesize errorDescriptionLabel=_errorDescriptionLabel;
@property(retain, nonatomic) HMEGradientView *topGradientView; // @synthesize topGradientView=_topGradientView;
@property(retain, nonatomic) HMEDisconnectedRemoteItemView *cameraOfflineItemView; // @synthesize cameraOfflineItemView=_cameraOfflineItemView;
@property(retain, nonatomic) id <ASTCameraPlayer> cameraPlayer; // @synthesize cameraPlayer=_cameraPlayer;
@property(retain, nonatomic) UIView *playerView; // @synthesize playerView=_playerView;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(retain, nonatomic) MDCActivityIndicator *spinner; // @synthesize spinner=_spinner;
@property(retain, nonatomic) MDCChipView *cameraStatusBadgeView; // @synthesize cameraStatusBadgeView=_cameraStatusBadgeView;
@property(retain, nonatomic) UILabel *errorSubtitleLabel; // @synthesize errorSubtitleLabel=_errorSubtitleLabel;
@property(retain, nonatomic) UILabel *subtitleLabel; // @synthesize subtitleLabel=_subtitleLabel;
@property(retain, nonatomic) UILabel *titleLabel; // @synthesize titleLabel=_titleLabel;
@property(retain, nonatomic) NSLayoutConstraint *topGradientHeightAnchor; // @synthesize topGradientHeightAnchor=_topGradientHeightAnchor;
@property(retain, nonatomic) NSLayoutConstraint *viewLiveButtonHorizontalAlignCenter; // @synthesize viewLiveButtonHorizontalAlignCenter=_viewLiveButtonHorizontalAlignCenter;
@property(retain, nonatomic) NSLayoutConstraint *viewLiveButtonHorizontalAlignLeft; // @synthesize viewLiveButtonHorizontalAlignLeft=_viewLiveButtonHorizontalAlignLeft;
@property(retain, nonatomic) NSLayoutConstraint *pinTalkbackButtonToScreenRight; // @synthesize pinTalkbackButtonToScreenRight=_pinTalkbackButtonToScreenRight;
@property(retain, nonatomic) NSLayoutConstraint *pinTalkbackButtonToScreenBottom; // @synthesize pinTalkbackButtonToScreenBottom=_pinTalkbackButtonToScreenBottom;
@property(copy, nonatomic) NSArray *cameraImageViewHorizontalConstraints; // @synthesize cameraImageViewHorizontalConstraints=_cameraImageViewHorizontalConstraints;
@property(copy, nonatomic) NSArray *cameraImageViewVerticalConstraints; // @synthesize cameraImageViewVerticalConstraints=_cameraImageViewVerticalConstraints;
@property(copy, nonatomic) NSArray *playerViewHorizontalConstraints; // @synthesize playerViewHorizontalConstraints=_playerViewHorizontalConstraints;
@property(copy, nonatomic) NSArray *playerViewVerticalConstraints; // @synthesize playerViewVerticalConstraints=_playerViewVerticalConstraints;
@property(retain, nonatomic) NSLayoutConstraint *pinSpinnerToCenterYConstraint; // @synthesize pinSpinnerToCenterYConstraint=_pinSpinnerToCenterYConstraint;
@property(retain, nonatomic) NSLayoutConstraint *pinViewLiveButtonToBottomWithMargin; // @synthesize pinViewLiveButtonToBottomWithMargin=_pinViewLiveButtonToBottomWithMargin;
@property(retain, nonatomic) NSLayoutConstraint *pinPlaybackControlsToBottomConstraint; // @synthesize pinPlaybackControlsToBottomConstraint=_pinPlaybackControlsToBottomConstraint;
@property(retain, nonatomic) NSLayoutConstraint *pinPlaybackControlsToTopConstraint; // @synthesize pinPlaybackControlsToTopConstraint=_pinPlaybackControlsToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *pinSubtitleBaseLineToTitleBaselineWithMargin; // @synthesize pinSubtitleBaseLineToTitleBaselineWithMargin=_pinSubtitleBaseLineToTitleBaselineWithMargin;
@property(retain, nonatomic) NSLayoutConstraint *pinTitleToTopConstraint; // @synthesize pinTitleToTopConstraint=_pinTitleToTopConstraint;
@property(retain, nonatomic) NSLayoutConstraint *playerHeightConstraint; // @synthesize playerHeightConstraint=_playerHeightConstraint;
@property(nonatomic) _Bool isE911Enabled; // @synthesize isE911Enabled=_isE911Enabled;
@property(nonatomic, getter=isTalking) _Bool talking; // @synthesize talking=_talking;
@property(nonatomic) _Bool needsStreamReload; // @synthesize needsStreamReload=_needsStreamReload;
@property(nonatomic) long long sizeClassCombo; // @synthesize sizeClassCombo=_sizeClassCombo;
@property(copy, nonatomic) CDUnknownBlockType pendingStateChangeBlock; // @synthesize pendingStateChangeBlock=_pendingStateChangeBlock;
@property(nonatomic) unsigned long long viewZoomState; // @synthesize viewZoomState=_viewZoomState;
@property(nonatomic) unsigned long long viewErrorCode; // @synthesize viewErrorCode=_viewErrorCode;
@property(nonatomic) unsigned long long viewState; // @synthesize viewState=_viewState;
@property(nonatomic) double streamAspectRatio; // @synthesize streamAspectRatio=_streamAspectRatio;
@property(nonatomic, getter=isViewStateChangeInProgress) _Bool viewStateChangeInProgress; // @synthesize viewStateChangeInProgress=_viewStateChangeInProgress;
@property(nonatomic, getter=isInteractiveDismissInProgress) _Bool interactiveDismissInProgress; // @synthesize interactiveDismissInProgress=_interactiveDismissInProgress;
@property(nonatomic, getter=isInitialLoad) _Bool initialLoad; // @synthesize initialLoad=_initialLoad;
@property(nonatomic, getter=isDrawerAnimating) _Bool drawerAnimating; // @synthesize drawerAnimating=_drawerAnimating;
@property(nonatomic) __weak MDCBottomDrawerViewController *clipInfoViewDrawerController; // @synthesize clipInfoViewDrawerController=_clipInfoViewDrawerController;
@property(retain, nonatomic) UILabel *swipeUpHintLabel; // @synthesize swipeUpHintLabel=_swipeUpHintLabel;
@property(retain, nonatomic) GHCCameraSession *ebrCameraSession; // @synthesize ebrCameraSession=_ebrCameraSession;
@property(readonly, nonatomic) GHCCameraItem *currentCameraItem; // @synthesize currentCameraItem=_currentCameraItem;
@property(readonly, nonatomic) GHCCameraDetails *cameraDetails; // @synthesize cameraDetails=_cameraDetails;
@property(retain, nonatomic) GHCCameraMetadata *cameraMetadata; // @synthesize cameraMetadata=_cameraMetadata;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *delayTimer; // @synthesize delayTimer=_delayTimer;
@property(retain, nonatomic) id <HMECameraDataProvider> dataProvider; // @synthesize dataProvider=_dataProvider;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMEGriffinUserChecker> griffinUserChecker; // @synthesize griffinUserChecker=_griffinUserChecker;
@property(retain, nonatomic) ASTHomeAutomationDevice *device; // @synthesize device=_device;
@property(nonatomic) __weak id <HMECameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)playerPlaybackControlsDidPressForwardButton:(id)arg1 secondsInterval:(double)arg2;
- (void)playerPlaybackControlsDidPressBackwardButton:(id)arg1 secondsInterval:(double)arg2;
- (void)playerPlaybackControlsDidPressPauseButton:(id)arg1;
- (void)playerPlaybackControlsDidPressPlayButton:(id)arg1;
- (void)playerPlaybackControlsSeekBarDidEndScrubbing:(id)arg1;
- (void)playerPlaybackControlsSeekBarDidChangeValue:(id)arg1;
- (unsigned long long)defaultZoomState;
- (void)seekPlayerToTime:(double)arg1;
- (void)showPermissionDeniedAlertWithTitle:(id)arg1 message:(id)arg2 cancel:(id)arg3 settings:(id)arg4;
- (void)showPhotoLibraryPermissionDeniedAlert;
- (void)showMicrophonePermissionDeniedAlert;
- (void)startTalkback;
- (void)updateButtonConstraintsForE911Setting;
- (void)showSnackbarWithMessage:(id)arg1 buttonText:(id)arg2 buttonAction:(CDUnknownBlockType)arg3;
- (void)showSpinner:(_Bool)arg1;
- (void)seekBarViewValueChangedByUserScrubbing:(_Bool)arg1;
- (void)seekBarViewChangeValueTo:(double)arg1;
- (void)seekBarViewChangeValueAddingSecondsInterval:(double)arg1;
- (void)playCurrentPlayerAtDateInterval:(id)arg1;
- (void)playCurrentCameraItemFromStart;
- (void)playEBRCameraSessionFromSeekBarTimestamp;
- (void)extractCameraItemIfExists:(id)arg1;
- (_Bool)extractEBRCameraSessionFromSessions:(id)arg1;
- (_Bool)inCompactLandscape;
- (_Bool)inLandscape;
- (_Bool)canShowPlaybackControls;
- (_Bool)isViewInErrorOrWarningState:(unsigned long long)arg1;
- (_Bool)isViewInErrorOrWarningState;
- (_Bool)shouldShowImageView;
- (_Bool)shouldShowCameraPlayerView;
- (void)performCameraLoadedAnimationDefault;
- (_Bool)canShowLiveVideoButton;
- (_Bool)isSubtitleVisible;
- (_Bool)isTitleVisible;
- (_Bool)hasSubtitleForState:(unsigned long long)arg1;
- (_Bool)hasTitle;
- (void)performCameraLoadedAnimationWithClipInfoShowing;
- (void)performCameraLoadedAnimation;
- (void)prepareAnimationForProperties:(struct HMECameraViewStateProperties)arg1;
- (void)prepareViewForAnimation;
- (void)touchesCancelled:(id)arg1 withEvent:(id)arg2;
- (void)touchesMoved:(id)arg1 withEvent:(id)arg2;
- (void)touchesEnded:(id)arg1 withEvent:(id)arg2;
- (void)touchesBegan:(id)arg1 withEvent:(id)arg2;
- (id)viewForTouches:(id)arg1 withEvent:(id)arg2;
- (void)didTapHelpCenterButton:(id)arg1;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (void)dismissibleViewControllerDidEndDismissal:(_Bool)arg1;
- (void)dismissibleViewControllerWillBeginDismissal;
@property(readonly, nonatomic) _Bool viewControllerIsDismissibleViaPanGesture;
- (void)addE911ButtonForCurrentCameraViewModeWithFeatureStatus:(_Bool)arg1;
- (void)fetchE911FeatureStatus;
- (void)handleCameraMetadata:(id)arg1 error:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)updateCameraMetadataForLiveStreamWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)handleCameraMetadata:(id)arg1 sessions:(id)arg2 error:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)updateCameraMetadataForEBRWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)updateCameraMetadataForcingStreamReload:(_Bool)arg1;
- (void)didTapE911Button;
- (void)setUpE911LiveViewConstraints;
- (void)setUpE911EBRViewConstraints;
- (void)setUpE911Button;
- (void)addE911ButtonIfEnabled;
- (void)setupTalkbackButtonAndChipViewConstraintsForCameraAndBasicMode;
- (void)setupTalkbackButtonForCameraMode:(unsigned long long)arg1;
- (void)setupCameraViewForMode:(unsigned long long)arg1;
- (void)setupLiveViewConstraints;
- (void)setupLiveView;
- (void)handleTurnOnCameraAction;
- (void)didTapRetryButton;
- (void)didTapViewLiveButton;
- (void)setupEBRViewConstraints;
- (void)setupEBRView;
- (void)setNeedsStreamReload;
- (void)layoutForRegularPortraitAndLandscape;
- (void)layoutTalkbackButtonForCompactPortraitForCameraAndBasicMode;
- (void)layoutTalkbackButtonForCompactPortrait;
- (void)layoutForCompactPortrait;
- (void)layoutTalkbackButtonForCompactLandscapeForCameraAndBasicMode;
- (void)layoutTalkbackButtonForCompactLandscape;
- (void)layoutForCompactLandscape;
- (long long)sizeClassFromTraitCollection:(id)arg1;
- (_Bool)isVisibleViewController;
- (_Bool)isBottomDrawerShowing;
- (_Bool)isClipInfoShowing;
- (void)appEnteredInForeground;
- (void)appMovedToBackground;
- (void)addEnterForegroundObserver;
- (void)setupInactiveObservation;
- (void)voiceOverStatusChanged;
- (void)setupVoiceOverObservation;
- (void)handleStreamWhenViewWillAppear;
- (void)handleStreamWhenViewDisappeared;
- (void)setupView;
- (_Bool)shouldShowGradient;
- (void)didTapPartnerAttributionBarButton;
- (void)didTapSettingsBarButton:(id)arg1;
- (id)buildShowClipInfoAction;
- (id)buildGoToHistoryAction;
- (id)buildDownloadClipAction;
- (id)buildTurnOffCameraAction;
- (id)buildFeedbackAction;
- (void)didTapOverflowBarButton;
- (void)cameraClipInfoViewControllerDidTapPartnerAttributionDeepLink:(id)arg1;
- (void)cameraClipInfoViewController:(id)arg1 didTapFamiliarFace:(id)arg2;
- (void)cameraClipInfoViewControllerDidTapFamiliarFaces:(id)arg1;
- (void)bottomDrawerControllerDidChangeTopInset:(id)arg1 topInset:(double)arg2;
- (void)bottomDrawerControllerDidChangeTopYOffset:(id)arg1 yOffset:(double)arg2;
- (void)bottomDrawerControllerDidEndCloseTransition:(id)arg1;
- (void)bottomDrawerControllerWillTransitionClosed:(id)arg1 withCoordinator:(id)arg2 targetYOffset:(double)arg3;
- (void)bottomDrawerControllerDidEndOpenTransition:(id)arg1;
- (void)bottomDrawerControllerWillTransitionOpen:(id)arg1 withCoordinator:(id)arg2 targetYOffset:(double)arg3;
- (void)cameraClipInfoBottomDrawerNavigationControllerDidClose:(id)arg1;
- (void)cameraClipInfoBottomDrawerNavigationControllerDidTapPartnerAttributionBarButton:(id)arg1;
- (void)cameraClipInfoBottomDrawerNavigationControllerDidTapOverflowBarButton:(id)arg1;
- (void)cameraClipInfoBottomDrawerNavigationControllerDidTapDismissButton:(id)arg1;
- (void)updateFloatingViewsForYOffset:(double)arg1;
- (void)transitionFloatingViewsWithCoordinator:(id)arg1 targetYOffset:(double)arg2;
- (double)maxInitialHeightForClipInfoDrawer;
- (void)updateFloatingViewOpacityForYOffset:(double)arg1;
- (void)updateFloatingViewConstraintsForYOffset:(double)arg1;
- (void)goToHistory;
- (void)downloadClip;
- (void)requestPermissionsAndDownloadClip;
- (void)dismissClipInfoIfNeededAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dismissBottomDrawerIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (void)setCameraStreamOn:(_Bool)arg1;
- (id)contentAnalyticsEventForEventType:(int)arg1;
- (id)turnOnCameraChipInfo;
- (id)networkEventForCameraOnOffRequest;
- (void)logCameraTalkbackSessionContentAnalyticsEvent:(id)arg1 WithValue:(id)arg2;
- (void)logCameraOnOffNetworkRequestEventComplete:(id)arg1 withError:(id)arg2;
- (void)logTurnOffCameraOptionClickedUserActionEvent;
- (void)logTurnOnCameraChipClickedUserActionEvent;
- (void)logTurnOnCameraChipImpressionEvent;
- (id)networkEventForUpdateDeviceInfo;
- (void)logNetworkEventComplete:(id)arg1 withError:(id)arg2;
- (void)logNetworkEventComplete:(id)arg1 withCode:(id)arg2;
- (id)networkEventForLoadCameraStream;
- (void)logFirstLoadEvent:(_Bool)arg1;
- (void)logButtonImpression;
- (void)logCTAImpression;
- (void)logImpression;
- (void)buildPartnerAttributionButtonWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)buildDownloadButton;
- (id)buildOverflowButton;
- (id)buildSettingsButton;
- (void)setupNavigationRightBarButtonsWithClipInfoOpened:(_Bool)arg1;
- (void)addCameraOfflineView;
- (void)addErrorRetryButton;
- (void)addErrorDescriptionLabel;
- (void)cameraPlayerUpdateFailedWithError:(id)arg1;
- (void)handlePlayer:(id)arg1 withEvent:(id)arg2 error:(id)arg3;
- (void)refreshCameraPlayer;
- (void)reloadCameraStream;
- (void)updateCameraImageViewImage:(id)arg1;
- (void)downloadCameraImageWithAuthorizedRequest:(id)arg1;
- (void)downloadCameraImage;
- (void)addCameraImageView;
- (void)addCameraPlayer:(id)arg1;
- (void)populateCameraViewForPlayer:(id)arg1;
- (struct CGSize)cameraSizeZoomed;
- (struct CGSize)cameraSizeUnzoomed;
- (struct CGSize)cameraSizeForAspectRatio:(unsigned long long)arg1 sizeClass:(long long)arg2;
- (double)cameraAspectRatio;
- (id)cameraView;
- (void)didDoubleTapView:(id)arg1;
- (void)didTapOnScreen;
- (void)showClipInfoWithFamiliarFacesFeatureRestricted:(_Bool)arg1;
- (void)showClipInfoWithCompletion:(CDUnknownBlockType)arg1;
- (void)userDidSwipeUp;
- (id)ebrSwipeUpKey;
- (_Bool)canShowClipInfo;
- (_Bool)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2;
- (void)addSwipeUpGesture;
- (void)setupGestures;
- (double)getCollectionViewHeight;
- (void)setUpConstraints;
- (double)constantForBottomButtonYOffset;
- (double)constantForTitleYOffset;
- (void)updateCameraViewConstraintsForContainerSize:(struct CGSize)arg1 zoomedCameraSize:(struct CGSize)arg2;
- (struct CGSize)updateZoomScale:(double)arg1 viewSize:(struct CGSize)arg2 cameraSize:(struct CGSize)arg3 animated:(_Bool)arg4;
- (void)updateZoomScaleForState:(unsigned long long)arg1 viewSize:(struct CGSize)arg2 animated:(_Bool)arg3;
- (void)updateZoomScaleParametersForViewSize:(struct CGSize)arg1 cameraSize:(struct CGSize)arg2;
- (void)updateZoomScaleForState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (id)subtitleTextForState:(unsigned long long)arg1;
- (id)titleText;
- (void)updateViewForErrorStateForAnimation:(_Bool)arg1;
- (void)updateViewForCameraIdleStateForAnimation:(_Bool)arg1;
- (void)updateViewForCameraTalkingStateForAnimation:(_Bool)arg1;
- (void)updateViewForCameraLoadedStateForAnimation:(_Bool)arg1;
- (_Bool)isTalkbackButtonAvailable;
- (void)updateViewForTurningOffStreamStateForAnimation:(_Bool)arg1;
- (void)updateViewForLoadingStreamStateForAnimation:(_Bool)arg1;
- (void)updateViewForLoadingMetadataStateForAnimation:(_Bool)arg1;
- (void)updateViewForReadyToLoadDataStateForAnimation:(_Bool)arg1;
- (void)updateViewWithProperties:(struct HMECameraViewStateProperties)arg1 state:(unsigned long long)arg2 forAnimation:(_Bool)arg3;
- (void)updateCameraStatusBadgeForViewProperties:(struct HMECameraViewStateProperties)arg1;
- (void)updateChromeForViewProperties:(struct HMECameraViewStateProperties)arg1;
- (void)updateViewState:(unsigned long long)arg1 forAnimation:(_Bool)arg2;
- (void)setViewState:(unsigned long long)arg1 animated:(_Bool)arg2;
- (_Bool)shouldShowE911Button;
- (void)showErrorScreenForCode:(unsigned long long)arg1;
- (void)showErrorScreenForCameraStateWithDefaultCode:(unsigned long long)arg1;
- (void)showErrorScreenForFailedStream;
- (void)showErrorScreenForCameraOffline;
- (void)showErrorScreenForCameraOff;
- (_Bool)isCameraStreamingDisabled;
- (_Bool)isCameraStreamingEnabled;
- (_Bool)canShowOnOffButton;
- (_Bool)doesTraitsStateAndViewStateMatch;
- (_Bool)isShowingInCameraLiveMode;
- (void)cameraStateTraitDidChange;
- (void)traitsDidChange:(id)arg1 forDeviceWithHGSID:(id)arg2;
- (_Bool)shouldAllowCameraViewChromeAutoHide;
- (_Bool)shouldAllowCameraViewChromeHintDisplay;
- (void)playbackDidEndForPlayer:(id)arg1 reason:(long long)arg2;
- (void)playerDidDisconnect:(id)arg1;
- (void)player:(id)arg1 didReceiveError:(id)arg2;
- (void)player:(id)arg1 didDetermineVideoResolution:(struct CGSize)arg2;
- (void)playerDidPause:(id)arg1;
- (void)player:(id)arg1 didProgress:(id)arg2;
- (void)playerDidStartPlaying:(id)arg1;
- (void)didTapTalkbackButtonView:(id)arg1;
- (void)addToRoomChipTapped:(id)arg1;
- (void)turnOnCameraChipTapped:(id)arg1;
- (id)buildAddToRoomChip;
- (id)buildTurnOnCameraChip;
- (void)updateChipsAndView;
- (void)updateChipView;
- (void)addChipsView;
- (void)addCameraStatusBadgeView;
- (void)scrollViewDidZoom:(id)arg1;
- (id)viewForZoomingInScrollView:(id)arg1;
- (_Bool)updateWithCameraDetails:(id)arg1;
- (void)playCameraPlayer;
- (void)pauseCameraPlayerIfNeeded;
- (_Bool)cameraHasVideo;
- (_Bool)isLiveStream;
- (_Bool)isTurningOffStream;
- (_Bool)isTurningOnStream;
- (_Bool)isCameraLoaded;
- (_Bool)prefersHomeIndicatorAutoHidden;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (_Bool)shouldAutorotate;
- (unsigned long long)supportedInterfaceOrientations;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)checkNestCTA;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)willMoveToParentViewController:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)updatingDataFailed;
- (_Bool)updateWithHomeAutomationDevice:(id)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDataProvider:(id)arg1 griffinUserChecker:(id)arg2 experimentFlags:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

