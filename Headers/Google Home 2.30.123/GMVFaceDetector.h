//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GMVDetector.h"

@class GMVLogger, NSDictionary;

@interface GMVFaceDetector : GMVDetector
{
    struct unique_ptr<visionkit::FaceDetector, std::__1::default_delete<visionkit::FaceDetector>> _faceDetector;
    NSDictionary *_detectorOptions;
    GMVLogger *_logger;
}

+ (int)rotationFromOptions:(id)arg1;
+ (float)rollToleranceFromOptions:(id)arg1 withDefaultValue:(float)arg2;
+ (float)minConfidenceThresholdFromOptions:(id)arg1 withDefaultValue:(float)arg2;
+ (_Bool)prominentFaceOnlyFromOptions:(id)arg1 withDefaultValue:(_Bool)arg2;
+ (int)classificationTypeFromOptions:(id)arg1 withDefaultValue:(int)arg2;
+ (int)landmarkTypeFromOptions:(id)arg1 withDefaultValue:(int)arg2;
+ (_Bool)trackingEnabledFromOptions:(id)arg1;
+ (float)minimumFaceWidthProportionFromOptions:(id)arg1 withDefaultValue:(float)arg2;
+ (int)modeTypeFromOptions:(id)arg1 withDefaultValue:(int)arg2;
+     // Error parsing type: {FaceDetectorOptions=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}^{MessageLite}^{MessageLite}^{MessageLite}BBBfiiiff}24@0:8@16, name: clientOptionsFromDetectorOptions:
+ (id)detector:(id)arg1;
- (id).cxx_construct;
- (void).cxx_destruct;
@property(retain, nonatomic) GMVLogger *logger; // @synthesize logger=_logger;
@property(copy, nonatomic) NSDictionary *detectorOptions; // @synthesize detectorOptions=_detectorOptions;
- (id)featuresInBuffer:(struct opaqueCMSampleBuffer *)arg1 options:(id)arg2;
- (id)featuresInImage:(id)arg1 options:(id)arg2;
- (id)featuresInBuffer:(id)arg1 width:(double)arg2 height:(double)arg3 colorModel:(int)arg4 runtimeOptions:(id)arg5 startDate:(id)arg6 fromImage:(_Bool)arg7 colorSpace:(int)arg8;
-     // Error parsing type: @192@0:8{Face=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, proto2::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, proto2::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>={__cxx_atomic_impl<int, std::__1::__cxx_atomic_base_impl<int> >=Ai}}}{WeakRepeatedPtrField<human_sensing::Face_Landmark>=(?={RepeatedPtrField<human_sensing::Face_Landmark>=^{Arena}ii^{Rep}})}{WeakRepeatedPtrField<human_sensing::Face_Embedding>=(?={RepeatedPtrField<human_sensing::Face_Embedding>=^{Arena}ii^{Rep}})}{WeakRepeatedPtrField<human_sensing::Face_Attribute>=(?={RepeatedPtrField<human_sensing::Face_Attribute>=^{Arena}ii^{Rep}})}^{MessageLite}ffffQQQf}16, name: faceFeatureFromFace:
- (id)initWithOptions:(id)arg1;

@end

