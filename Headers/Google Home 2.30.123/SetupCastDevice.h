//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GCKDevice.h"

#import "HMELocalDevice-Protocol.h"
#import "HMEQueryableDevice-Protocol.h"
#import "HMEUnconfiguredCastDevice-Protocol.h"
#import "HMEUnconfiguredDevice-Protocol.h"
#import "NSCopying-Protocol.h"

@class BluetoothNewDevice, CastCertificate, CastDeviceCapabilities, CastLocale, CastOptIn, CastSSIDSuffix, CastTimeZone, GTLRCastSetup_AssistantAccessibilityMode, GTLRCastSetup_BluetoothStatus, GTLRCastSetup_EurekaInfoRoomEq, GTLRCastSetup_EurekaInfoTtsVolume, GTLRCastSetup_EurekaInfoUserEq, GTLRCastSetup_NightModeSettings, MultizoneDeviceInfo, NSArray, NSString, UIImage;
@protocol HMEMarketingInfo, HMEQueryableDevice;

@interface SetupCastDevice : GCKDevice <HMELocalDevice, HMEQueryableDevice, HMEUnconfiguredDevice, HMEUnconfiguredCastDevice, NSCopying>
{
    _Bool _debugBuild;
    _Bool _updateOnlyBuild;
    _Bool _online;
    _Bool _OTAReadyToApply;
    _Bool _wpaConfigured;
    _Bool _hasEthernetConnection;
    _Bool _tosAccepted;
    _Bool _systemSoundEffectsEnabled;
    _Bool _audioOutputDigital;
    _Bool _discoveredViaSSDP;
    _Bool _supportsDeviceInfoResponse;
    unsigned int _setupPort;
    long long _castBuildType;
    NSString *_systemBuildNumber;
    NSString *_castBuildRevision;
    NSString *_oemVersion;
    NSString *_releaseTrack;
    double _uptime;
    NSString *_macAddress;
    NSString *_bssid;
    NSString *_ssid;
    CastSSIDSuffix *_SSIDSuffix;
    NSString *_hotspotBssid;
    long long _wpaState;
    long long _setupState;
    NSString *_localAuthenticationTokenHash;
    long long _OTADownloadProgress;
    long long _wpaID;
    long long _signalLevel;
    long long _noiseLevel;
    NSString *_publicKey;
    NSString *_UMAClientID;
    long long _dateFormat;
    long long _timeFormat;
    NSString *_countryCode;
    CastTimeZone *_timeZone;
    CastLocale *_locale;
    CastOptIn *_optIn;
    NSString *_opencastPinCode;
    long long _setupProtocolVersion;
    MultizoneDeviceInfo *_multizoneInfo;
    NSString *_factoryCountryCode;
    NSString *_cloudDeviceID;
    NSString *_tvClientId;
    long long _tvSetupSessionId;
    NSString *_tvBuildFingerPrint;
    NSString *_tvManufacturer;
    NSString *_tvSerialNumber;
    NSString *_dusiDeviceID;
    NSArray *_androidTVApps;
    NSString *_productName;
    long long _previewChannelState;
    GTLRCastSetup_AssistantAccessibilityMode *_accessibilitySettings;
    GTLRCastSetup_NightModeSettings *_nightModeSettings;
    long long _controlNotifications;
    GTLRCastSetup_EurekaInfoUserEq *_userEQSettings;
    GTLRCastSetup_EurekaInfoRoomEq *_roomEQSettings;
    GTLRCastSetup_EurekaInfoTtsVolume *_ttsVolumeSettings;
    GTLRCastSetup_BluetoothStatus *_bluetoothStatus;
    CastDeviceCapabilities *_deviceCapabilities;
    CastCertificate *_cachedCertificate;
    NSString *_manufacturer;
    NSString *_hotspotDeviceIPAddress;
}

+ (_Bool)isConnectedTerminalState:(long long)arg1;
+ (id)arbitrationARINameForDeviceType:(long long)arg1;
+ (_Bool)arbitrationAppliesToDeviceType:(long long)arg1;
+ (_Bool)isFirstPartyDeviceType:(long long)arg1;
+ (id)smallIconImageForCapabilities:(id)arg1;
+ (id)iconNameForCapabilities:(id)arg1;
+ (_Bool)isChromecastModelName:(id)arg1;
+ (id)chromecastModelNames;
+ (id)normalizeDeviceID:(id)arg1;
+ (id)createSetupHotspotDeviceWithIPAddress:(id)arg1;
+ (id)createSetupHotspotDevice;
+ (int)hme_assistantDeviceTypeForCastDeviceType:(long long)arg1;
+ (int)hme_assistantSurfaceTypeForDeviceType:(long long)arg1;
- (void).cxx_destruct;
@property(copy, nonatomic) NSString *hotspotDeviceIPAddress; // @synthesize hotspotDeviceIPAddress=_hotspotDeviceIPAddress;
@property(retain, nonatomic) NSString *manufacturer; // @synthesize manufacturer=_manufacturer;
@property(retain, nonatomic) CastCertificate *cachedCertificate; // @synthesize cachedCertificate=_cachedCertificate;
@property(copy, nonatomic) CastDeviceCapabilities *deviceCapabilities; // @synthesize deviceCapabilities=_deviceCapabilities;
@property(nonatomic) _Bool supportsDeviceInfoResponse; // @synthesize supportsDeviceInfoResponse=_supportsDeviceInfoResponse;
@property(retain, nonatomic) GTLRCastSetup_BluetoothStatus *bluetoothStatus; // @synthesize bluetoothStatus=_bluetoothStatus;
@property(retain, nonatomic) GTLRCastSetup_EurekaInfoTtsVolume *ttsVolumeSettings; // @synthesize ttsVolumeSettings=_ttsVolumeSettings;
@property(retain, nonatomic) GTLRCastSetup_EurekaInfoRoomEq *roomEQSettings; // @synthesize roomEQSettings=_roomEQSettings;
@property(retain, nonatomic) GTLRCastSetup_EurekaInfoUserEq *userEQSettings; // @synthesize userEQSettings=_userEQSettings;
@property(nonatomic) long long controlNotifications; // @synthesize controlNotifications=_controlNotifications;
@property(retain, nonatomic) GTLRCastSetup_NightModeSettings *nightModeSettings; // @synthesize nightModeSettings=_nightModeSettings;
@property(copy, nonatomic) GTLRCastSetup_AssistantAccessibilityMode *accessibilitySettings; // @synthesize accessibilitySettings=_accessibilitySettings;
@property(nonatomic, getter=isDiscoveredViaSSDP) _Bool discoveredViaSSDP; // @synthesize discoveredViaSSDP=_discoveredViaSSDP;
@property(nonatomic) long long previewChannelState; // @synthesize previewChannelState=_previewChannelState;
@property(nonatomic, getter=isAudioOutputDigital) _Bool audioOutputDigital; // @synthesize audioOutputDigital=_audioOutputDigital;
@property(copy, nonatomic) NSString *productName; // @synthesize productName=_productName;
@property(copy, nonatomic) NSArray *androidTVApps; // @synthesize androidTVApps=_androidTVApps;
@property(copy, nonatomic) NSString *dusiDeviceID; // @synthesize dusiDeviceID=_dusiDeviceID;
@property(copy, nonatomic) NSString *tvSerialNumber; // @synthesize tvSerialNumber=_tvSerialNumber;
@property(copy, nonatomic) NSString *tvManufacturer; // @synthesize tvManufacturer=_tvManufacturer;
@property(copy, nonatomic) NSString *tvBuildFingerPrint; // @synthesize tvBuildFingerPrint=_tvBuildFingerPrint;
@property(nonatomic) long long tvSetupSessionId; // @synthesize tvSetupSessionId=_tvSetupSessionId;
@property(copy, nonatomic) NSString *tvClientId; // @synthesize tvClientId=_tvClientId;
@property(copy, nonatomic) NSString *cloudDeviceID; // @synthesize cloudDeviceID=_cloudDeviceID;
@property(copy, nonatomic) NSString *factoryCountryCode; // @synthesize factoryCountryCode=_factoryCountryCode;
@property(copy, nonatomic) MultizoneDeviceInfo *multizoneInfo; // @synthesize multizoneInfo=_multizoneInfo;
@property(nonatomic) _Bool systemSoundEffectsEnabled; // @synthesize systemSoundEffectsEnabled=_systemSoundEffectsEnabled;
@property(nonatomic) _Bool tosAccepted; // @synthesize tosAccepted=_tosAccepted;
@property(nonatomic) long long setupProtocolVersion; // @synthesize setupProtocolVersion=_setupProtocolVersion;
@property(copy, nonatomic) NSString *opencastPinCode; // @synthesize opencastPinCode=_opencastPinCode;
@property(copy, nonatomic) CastOptIn *optIn; // @synthesize optIn=_optIn;
@property(copy, nonatomic) CastLocale *locale; // @synthesize locale=_locale;
@property(copy, nonatomic) CastTimeZone *timeZone; // @synthesize timeZone=_timeZone;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(nonatomic) long long timeFormat; // @synthesize timeFormat=_timeFormat;
@property(nonatomic) long long dateFormat; // @synthesize dateFormat=_dateFormat;
@property(nonatomic) _Bool hasEthernetConnection; // @synthesize hasEthernetConnection=_hasEthernetConnection;
@property(copy, nonatomic) NSString *UMAClientID; // @synthesize UMAClientID=_UMAClientID;
@property(copy, nonatomic) NSString *publicKey; // @synthesize publicKey=_publicKey;
@property(nonatomic) long long noiseLevel; // @synthesize noiseLevel=_noiseLevel;
@property(nonatomic) long long signalLevel; // @synthesize signalLevel=_signalLevel;
@property(nonatomic) long long wpaID; // @synthesize wpaID=_wpaID;
@property(nonatomic) _Bool wpaConfigured; // @synthesize wpaConfigured=_wpaConfigured;
@property(nonatomic) long long OTADownloadProgress; // @synthesize OTADownloadProgress=_OTADownloadProgress;
@property(nonatomic, getter=isOTAReadyToApply) _Bool OTAReadyToApply; // @synthesize OTAReadyToApply=_OTAReadyToApply;
@property(copy, nonatomic) NSString *localAuthenticationTokenHash; // @synthesize localAuthenticationTokenHash=_localAuthenticationTokenHash;
@property(nonatomic) long long setupState; // @synthesize setupState=_setupState;
@property(nonatomic) long long wpaState; // @synthesize wpaState=_wpaState;
@property(copy, nonatomic) NSString *hotspotBssid; // @synthesize hotspotBssid=_hotspotBssid;
@property(nonatomic, getter=isOnline) _Bool online; // @synthesize online=_online;
@property(copy, nonatomic) CastSSIDSuffix *SSIDSuffix; // @synthesize SSIDSuffix=_SSIDSuffix;
@property(copy, nonatomic) NSString *ssid; // @synthesize ssid=_ssid;
@property(copy, nonatomic) NSString *bssid; // @synthesize bssid=_bssid;
@property(copy, nonatomic) NSString *macAddress; // @synthesize macAddress=_macAddress;
@property(nonatomic) _Bool updateOnlyBuild; // @synthesize updateOnlyBuild=_updateOnlyBuild;
@property(nonatomic) double uptime; // @synthesize uptime=_uptime;
@property(nonatomic) _Bool debugBuild; // @synthesize debugBuild=_debugBuild;
@property(copy, nonatomic) NSString *releaseTrack; // @synthesize releaseTrack=_releaseTrack;
@property(copy, nonatomic) NSString *oemVersion; // @synthesize oemVersion=_oemVersion;
@property(copy, nonatomic) NSString *castBuildRevision; // @synthesize castBuildRevision=_castBuildRevision;
@property(copy, nonatomic) NSString *systemBuildNumber; // @synthesize systemBuildNumber=_systemBuildNumber;
@property(nonatomic) long long castBuildType; // @synthesize castBuildType=_castBuildType;
@property(nonatomic) unsigned int setupPort; // @synthesize setupPort=_setupPort;
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) _Bool supportsCloudSettings;
- (_Bool)needsSetup;
- (_Bool)needsTermsOfServiceAcceptance;
- (_Bool)needsLinkingToGAIA;
- (_Bool)needsConnectionToNetwork;
- (id)stereoPairDeviceFromDeviceList:(id)arg1;
- (id)ownFriendlyName;
@property(readonly, nonatomic) NSString *friendlyName;
- (_Bool)isLocaleTimezoneConfigOnAndroid;
- (_Bool)isRightChannelOfStereoPair;
- (_Bool)isLeftChannelOfStereoPair;
- (_Bool)isStereoPairChannel:(long long)arg1;
- (_Bool)isStereoPaired;
- (void)configureDeviceWithCastSSIDSuffix:(id)arg1;
@property(readonly, nonatomic) NSString *productModelManufacturerName;
@property(readonly, nonatomic) long long deviceType;
@property(readonly, nonatomic) _Bool supportsWifiNetworkSettings;
- (_Bool)isChromecastDevice;
- (id)copyWithZone:(struct _NSZone *)arg1;
@property(copy, nonatomic) NSString *ipAddress;
@property(readonly, nonatomic) NSString *arbitrationARIDeviceType;
@property(readonly, nonatomic) _Bool arbitrationApplies;
@property(readonly, nonatomic) _Bool isFirstPartyDevice;
@property(readonly, nonatomic, getter=isFixedVolume) _Bool fixedVolume;
@property(readonly, nonatomic, getter=hasJoinedPreviewChannel) _Bool joinedPreviewChannel;
- (_Bool)isSameAsSSDPDevice:(id)arg1;
@property(readonly, nonatomic) _Bool isAOGHSynchronousSetupSupported;
- (_Bool)isOpencastSupported;
- (_Bool)supportsMDNS;
- (_Bool)supportsV7SetupProtocol;
- (_Bool)isSetupProtocolVersionKnown;
- (_Bool)hasSupportedSetupProtocol;
- (_Bool)isInfoComplete;
- (void)updateFromCastDevice:(id)arg1;
- (void)updateFromSSDPDevice:(id)arg1;
- (void)setdeviceID:(id)arg1;
@property(readonly, nonatomic) UIImage *smallIconImage;
- (id)initWithCastDevice:(id)arg1;
- (id)initWithSSDPDevice:(id)arg1;
- (id)initWithIPAddress:(id)arg1;
- (id)initWithIPAddress:(id)arg1 servicePort:(unsigned int)arg2;
- (id)initWithIPAddress:(id)arg1 servicePort:(unsigned int)arg2 setupPort:(unsigned int)arg3;
- (id)hme_graphGHCDeviceID;
@property(readonly, nonatomic) int hme_assistantSurfaceType;
@property(readonly, nonatomic) id <HMEMarketingInfo> hme_marketingInfo;
- (id)hme_localDevice;
- (id)hme_unconfiguredDevice;
- (id)hme_unconfiguredCastDevice;
@property(readonly, nonatomic, getter=isRelayDevice) _Bool relayDevice;
@property(readonly, nonatomic) long long deviceTimeFormat;
@property(readonly, copy, nonatomic) NSString *timezoneIdentifier;
@property(readonly, copy, nonatomic) NSString *localeIdentifier;
@property(readonly, nonatomic) int assistantDeviceType;
@property(readonly, nonatomic) id <HMEQueryableDevice> queryableDevice;
@property(readonly, nonatomic, getter=isHTTPSSupported) _Bool HTTPSSupported;
@property(readonly, copy, nonatomic) NSString *agentDeviceID;
@property(readonly, copy, nonatomic) NSString *agentID;
@property(readonly, nonatomic) NSString *legacyStableDeviceID;
@property(readonly, nonatomic) NSString *stableDeviceID;
@property(readonly, nonatomic) BluetoothNewDevice *bluetoothDevice;
@property(readonly, nonatomic) SetupCastDevice *networkDevice;
@property(readonly, nonatomic) NSString *deviceTypeName;
@property(readonly, nonatomic) NSString *hme_buildTypeName;
@property(readonly, nonatomic) NSString *hme_productCategoryName;
@property(readonly, nonatomic) NSString *hme_deviceModelName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy, nonatomic) NSString *deviceID;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

