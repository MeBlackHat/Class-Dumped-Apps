//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class CastCertificate, CastDeviceCapabilities, CastSSIDSuffix, GetDeviceAuthenticationInfoAsyncOperation, GetSupportedTimeZonesRequest, NSArray, NSMutableArray, NSString, NSTimer, ScanForDeviceAsyncOperation, SequentialAsyncOperationQueue, SetupAnalyticsLogger, SetupCastDevice, WiFiNetwork;
@protocol LinkedDevicesManager, SetupDeviceScanner, SetupSessionCountryCodeDelegate, SetupSessionDeviceInfoDelegate, SetupSessionOperationManager, SetupSessionWifiNetworksDelegate;

@interface SetupSession : NSObject
{
    id <SetupSessionOperationManager> _operationManager;
    NSTimer *_infoPingTimer;
    SequentialAsyncOperationQueue *_deviceInfoRequestQueue;
    NSMutableArray *_playSoundQueues;
    SequentialAsyncOperationQueue *_setCountryRequestQueue;
    NSString *_pendingCountryCode;
    SequentialAsyncOperationQueue *_wifiScanRequestQueue;
    SequentialAsyncOperationQueue *_wifiNetworksRequestQueue;
    SequentialAsyncOperationQueue *_connectWiFiRequestQueue;
    long long _connectWiFiResult;
    ScanForDeviceAsyncOperation *_scanForDeviceOperation;
    SequentialAsyncOperationQueue *_scanForDeviceQueue;
    GetSupportedTimeZonesRequest *_getSupportedTimeZonesRequest;
    SequentialAsyncOperationQueue *_getSupportedTimeZonesQueue;
    GetDeviceAuthenticationInfoAsyncOperation *_getAuthenticationInfoOperation;
    SequentialAsyncOperationQueue *_completeSetupQueue;
    SequentialAsyncOperationQueue *_setLocaleQueue;
    NSArray *_lastSuccessfulDeviceInfoOperations;
    NSArray *_lastSuccessfulWiFiScanOperations;
    CastCertificate *_fetchedCertificate;
    double _lastPlayVerificationSoundTimeIntervalSince1970;
    double _lastWiFiScanRequestTimeIntervalSince1970;
    NSTimer *_retryDeviceInfoRequestTimer;
    double _deviceInfoRequestedTimeIntervalSince1970;
    _Bool _sendStatsEnabled;
    _Bool _isWaitingForWiFiScanResult;
    _Bool _isFactoryWifiLocked;
    _Bool _opencastSupported;
    _Bool _opencastEnabled;
    _Bool _isStarted;
    _Bool _isConnectingDeviceToWiFi;
    _Bool _hasAttemptedToConnectDeviceToWiFi;
    id <SetupSessionDeviceInfoDelegate> _deviceInfoDelegate;
    id <SetupSessionWifiNetworksDelegate> _wifiNetworksDelegate;
    id <SetupSessionCountryCodeDelegate> _countryCodeDelegate;
    CastSSIDSuffix *_SSIDSuffix;
    long long _deviceType;
    NSString *_deviceTypeName;
    CastDeviceCapabilities *_deviceCapabilities;
    SetupCastDevice *_device;
    NSString *_googleAppDeviceID;
    NSString *_deviceHash;
    NSString *_devicePublicKey;
    NSString *_deviceMACAddress;
    NSArray *_wifiNetworks;
    NSString *_updatedName;
    WiFiNetwork *_selectedWiFiNetwork;
    NSString *_factoryCountryCode;
    unsigned long long _playVerificationSoundCount;
    long long _setupConnectionType;
    id <SetupDeviceScanner> _deviceScanner;
    SetupAnalyticsLogger *_setupAnalyticsLogger;
    id <LinkedDevicesManager> _linkedDevicesManager;
    NSString *_originalDeviceName;
    NSString *_deviceID;
    CastCertificate *_deviceCertificate;
    NSString *_deviceIPAddress;
    long long _setupProtocolVersion;
    NSString *_countryCode;
    NSArray *_supportedTimeZones;
}

+ (id)selectedCastTimeZoneWithSupportedCastTimeZones:(id)arg1;
+ (id)deviceHashFromDeviceCertificate:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) _Bool hasAttemptedToConnectDeviceToWiFi; // @synthesize hasAttemptedToConnectDeviceToWiFi=_hasAttemptedToConnectDeviceToWiFi;
@property(nonatomic) _Bool isConnectingDeviceToWiFi; // @synthesize isConnectingDeviceToWiFi=_isConnectingDeviceToWiFi;
@property(nonatomic) _Bool isStarted; // @synthesize isStarted=_isStarted;
@property(retain, nonatomic) NSArray *supportedTimeZones; // @synthesize supportedTimeZones=_supportedTimeZones;
@property(copy, nonatomic) NSString *countryCode; // @synthesize countryCode=_countryCode;
@property(nonatomic, getter=isOpencastEnabled) _Bool opencastEnabled; // @synthesize opencastEnabled=_opencastEnabled;
@property(nonatomic, getter=isOpencastSupported) _Bool opencastSupported; // @synthesize opencastSupported=_opencastSupported;
@property(nonatomic) long long setupProtocolVersion; // @synthesize setupProtocolVersion=_setupProtocolVersion;
@property(copy, nonatomic) NSString *deviceIPAddress; // @synthesize deviceIPAddress=_deviceIPAddress;
@property(copy, nonatomic) CastCertificate *deviceCertificate; // @synthesize deviceCertificate=_deviceCertificate;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(copy, nonatomic) NSString *originalDeviceName; // @synthesize originalDeviceName=_originalDeviceName;
@property(readonly, nonatomic) id <LinkedDevicesManager> linkedDevicesManager; // @synthesize linkedDevicesManager=_linkedDevicesManager;
@property(readonly, nonatomic) SetupAnalyticsLogger *setupAnalyticsLogger; // @synthesize setupAnalyticsLogger=_setupAnalyticsLogger;
@property(readonly, nonatomic) id <SetupDeviceScanner> deviceScanner; // @synthesize deviceScanner=_deviceScanner;
@property(readonly, nonatomic) long long setupConnectionType; // @synthesize setupConnectionType=_setupConnectionType;
@property(readonly, nonatomic) unsigned long long playVerificationSoundCount; // @synthesize playVerificationSoundCount=_playVerificationSoundCount;
@property(nonatomic) _Bool isFactoryWifiLocked; // @synthesize isFactoryWifiLocked=_isFactoryWifiLocked;
@property(nonatomic) _Bool isWaitingForWiFiScanResult; // @synthesize isWaitingForWiFiScanResult=_isWaitingForWiFiScanResult;
@property(copy, nonatomic) NSString *factoryCountryCode; // @synthesize factoryCountryCode=_factoryCountryCode;
@property(retain, nonatomic) WiFiNetwork *selectedWiFiNetwork; // @synthesize selectedWiFiNetwork=_selectedWiFiNetwork;
@property(nonatomic, getter=isSendStatsEnabled) _Bool sendStatsEnabled; // @synthesize sendStatsEnabled=_sendStatsEnabled;
@property(copy, nonatomic) NSString *updatedName; // @synthesize updatedName=_updatedName;
@property(retain, nonatomic) NSArray *wifiNetworks; // @synthesize wifiNetworks=_wifiNetworks;
@property(copy, nonatomic) NSString *deviceMACAddress; // @synthesize deviceMACAddress=_deviceMACAddress;
@property(copy, nonatomic) NSString *devicePublicKey; // @synthesize devicePublicKey=_devicePublicKey;
@property(copy, nonatomic) NSString *deviceHash; // @synthesize deviceHash=_deviceHash;
@property(copy, nonatomic) NSString *googleAppDeviceID; // @synthesize googleAppDeviceID=_googleAppDeviceID;
@property(retain, nonatomic) SetupCastDevice *device; // @synthesize device=_device;
@property(readonly, nonatomic) CastDeviceCapabilities *deviceCapabilities; // @synthesize deviceCapabilities=_deviceCapabilities;
@property(readonly, copy, nonatomic) NSString *deviceTypeName; // @synthesize deviceTypeName=_deviceTypeName;
@property(readonly, nonatomic) long long deviceType; // @synthesize deviceType=_deviceType;
@property(readonly, nonatomic) CastSSIDSuffix *SSIDSuffix; // @synthesize SSIDSuffix=_SSIDSuffix;
@property(nonatomic) __weak id <SetupSessionCountryCodeDelegate> countryCodeDelegate; // @synthesize countryCodeDelegate=_countryCodeDelegate;
@property(nonatomic) __weak id <SetupSessionWifiNetworksDelegate> wifiNetworksDelegate; // @synthesize wifiNetworksDelegate=_wifiNetworksDelegate;
@property(nonatomic) __weak id <SetupSessionDeviceInfoDelegate> deviceInfoDelegate; // @synthesize deviceInfoDelegate=_deviceInfoDelegate;
- (id)debugDescription;
- (_Bool)isSetupHotspotConnectionLost;
- (void)completeSetupOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)getSupportedTimeZonesOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)scanForDeviceOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)notifyConnectWiFiDidFailWithSetupState:(long long)arg1 error:(id)arg2;
- (void)connectWiFiOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)setCountryOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)wifiNetworksOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (_Bool)shouldUseFetchWiFiNetworkRetryLongInterval:(long long)arg1;
- (void)wifiScanOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)playSoundOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)notifyDidFailToGetDeviceInfoWithError:(id)arg1;
- (void)deviceInfoOperationQueue:(id)arg1 didFinishWithError:(id)arg2 contextInfo:(id)arg3;
- (void)completeSetup;
- (id)deviceAuthenticationInfo;
- (id)currentSignedInUserFromLinkedUsers:(id)arg1;
- (void)checkLinkStatus;
- (void)getSupportedTimeZones;
- (void)scanForDevice;
- (void)connectWiFi;
- (void)requestWiFiInfo;
- (void)requestWiFiScan;
- (void)retryDeviceInfoRequestTimerDidFire:(id)arg1;
- (void)cancelRetryDeviceInfoRequestTimer;
- (void)startDeviceInfoRequest;
- (void)requestDeviceInfo;
- (id)createSetDeviceInfoOperationsWithDevice:(id)arg1 supportedTimeZones:(id)arg2;
- (void)didCompleteWithResult:(long long)arg1;
- (void)pingInfoTimerDidFire:(id)arg1;
- (void)rescanWiFiNetworks;
- (void)startSetCountryRequestForCountryCode:(id)arg1;
- (void)playSoundWithID:(long long)arg1;
- (void)playVerificationSound;
- (void)retryDeviceInfoRequest;
- (void)endSession;
- (void)beginSession;
- (id)deviceName;
- (id)initWithOperationManager:(id)arg1 originalName:(id)arg2 SSIDSuffix:(id)arg3 deviceTypeName:(id)arg4 deviceCapabilities:(id)arg5 deviceScanner:(id)arg6 setupAnalyticsLogger:(id)arg7 linkedDevicesManager:(id)arg8 opencastEnabledByDefault:(_Bool)arg9 connectionType:(long long)arg10;
- (id)initWithOperationManager:(id)arg1 originalName:(id)arg2 SSIDSuffix:(id)arg3 deviceTypeName:(id)arg4 deviceCapabilities:(id)arg5 deviceScanner:(id)arg6 setupAnalyticsLogger:(id)arg7 linkedDevicesManager:(id)arg8 opencastEnabledByDefault:(_Bool)arg9 connectionType:(long long)arg10 initialDevice:(id)arg11;

@end

