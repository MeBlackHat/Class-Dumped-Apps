//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMESetupCastWifiSelectorTaskCoordinatorProtocol-Protocol.h"
#import "HMESetupWifiConnectingToNetworkDelegate-Protocol.h"
#import "HMESetupWifiSelectorTaskCoordinatorDelegate-Protocol.h"
#import "SetupSessionWifiNetworksDelegate-Protocol.h"

@class HMESetupNavigationController, HMESetupWifiConnectingToNetworkViewController, NSMutableArray, NSString, NSTimer, SetupAnalyticsLogger, SetupSession, UIViewController, WiFiNetwork;
@protocol HMESetupCastWifiSelectorTaskCoordinatorDelegate, HMESetupWifiSelectorTaskCoordinator;

@interface HMESetupCastWifiSelectorTaskCoordinator : NSObject <HMESetupWifiSelectorTaskCoordinatorDelegate, HMESetupWifiConnectingToNetworkDelegate, SetupSessionWifiNetworksDelegate, HMESetupCastWifiSelectorTaskCoordinatorProtocol>
{
    _Bool _shouldForceRescan;
    _Bool _didComplete;
    _Bool _passcodeVerified;
    id <HMESetupCastWifiSelectorTaskCoordinatorDelegate> _delegate;
    SetupAnalyticsLogger *_setupAnalyticsLogger;
    id <HMESetupWifiSelectorTaskCoordinator> _chooseWifiCoordinator;
    HMESetupNavigationController *_navigationController;
    SetupSession *_setupSession;
    UIViewController *_startingViewController;
    HMESetupWifiConnectingToNetworkViewController *_connectingToWiFiViewController;
    WiFiNetwork *_forcedNetwork;
    WiFiNetwork *_selectedNetwork;
    NSMutableArray *_completionBlocks;
    NSTimer *_checkIfOnCorrectNetworkTimer;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool passcodeVerified; // @synthesize passcodeVerified=_passcodeVerified;
@property(retain, nonatomic) NSTimer *checkIfOnCorrectNetworkTimer; // @synthesize checkIfOnCorrectNetworkTimer=_checkIfOnCorrectNetworkTimer;
@property(nonatomic) _Bool didComplete; // @synthesize didComplete=_didComplete;
@property(nonatomic) _Bool shouldForceRescan; // @synthesize shouldForceRescan=_shouldForceRescan;
@property(retain, nonatomic) NSMutableArray *completionBlocks; // @synthesize completionBlocks=_completionBlocks;
@property(retain, nonatomic) WiFiNetwork *selectedNetwork; // @synthesize selectedNetwork=_selectedNetwork;
@property(retain, nonatomic) WiFiNetwork *forcedNetwork; // @synthesize forcedNetwork=_forcedNetwork;
@property(retain, nonatomic) HMESetupWifiConnectingToNetworkViewController *connectingToWiFiViewController; // @synthesize connectingToWiFiViewController=_connectingToWiFiViewController;
@property(retain, nonatomic) UIViewController *startingViewController; // @synthesize startingViewController=_startingViewController;
@property(retain, nonatomic) SetupSession *setupSession; // @synthesize setupSession=_setupSession;
@property(retain, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(retain, nonatomic) id <HMESetupWifiSelectorTaskCoordinator> chooseWifiCoordinator; // @synthesize chooseWifiCoordinator=_chooseWifiCoordinator;
@property(readonly, nonatomic) SetupAnalyticsLogger *setupAnalyticsLogger; // @synthesize setupAnalyticsLogger=_setupAnalyticsLogger;
@property(nonatomic) __weak id <HMESetupCastWifiSelectorTaskCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)presentConnectionErrorWithTitle:(id)arg1 message:(id)arg2 shouldShowHelpButton:(_Bool)arg3;
- (void)presentConnectionErrorWithTitle:(id)arg1 message:(id)arg2 shouldShowHelpButton:(_Bool)arg3 allowTryAgain:(_Bool)arg4;
- (id)connectionErrorTitle;
- (void)didFinishConnectFailureAnimationWithSetupState:(long long)arg1 error:(id)arg2;
- (void)setupCastWifiDidCompleteWithCurrentUserAlreadyLinked:(_Bool)arg1 isAndroidTV:(_Bool)arg2;
- (void)handleUnknownResult;
- (void)handleLinkStatusUnknown;
- (_Bool)handleCurrentUserNotLinked;
- (void)resumeSetupIfOnCorrectNetwork;
- (void)handleDifferentSSID;
- (void)didFinishConnectSuccessAnimationWithResult:(long long)arg1;
- (void)endSetupSession;
- (void)logWifiSetupEvent:(id)arg1;
- (id)provisionedDevice;
- (void)returnToNetworkSelection;
- (void)popToStartingViewController;
- (void)connectingToNetworkViewControllerDidTapTryAgain:(id)arg1;
- (void)wifiSelectorTaskDidCancel:(id)arg1;
- (void)connectToWiFiNetwork:(id)arg1;
- (void)wifiSelectorTask:(id)arg1 didSelectNetwork:(id)arg2 password:(id)arg3 manuallyEnteredPassword:(_Bool)arg4 shouldSavePassword:(_Bool)arg5;
- (id)wifiSelectorTaskCoordinator:(id)arg1 createNetworkNamed:(id)arg2 authType:(long long)arg3;
- (void)wifiSelectorTaskCoordinator:(id)arg1 scanForWifiNetworksWithCompletion:(CDUnknownBlockType)arg2;
- (id)wifiSelectorTaskCoordinatorGetCurrentSSID:(id)arg1;
- (void)setupSession:(id)arg1 didCompleteWithResult:(long long)arg2;
- (void)setupSession:(id)arg1 didFailToConnectWiFiWithSetupState:(long long)arg2 error:(id)arg3;
- (void)setupSession:(id)arg1 didFailToGetWiFiNetworksWithError:(id)arg2;
- (void)setupSession:(id)arg1 didGetWiFiNetworks:(id)arg2;
- (void)presentConnectingToWifiViewController;
- (void)presentWifiSelector;
- (void)startInNavigationController:(id)arg1 setupSession:(id)arg2 forcedNetwork:(id)arg3;
- (id)initWithSetupAnalyticsLogger:(id)arg1 chooseWifiCoordinatorFactory:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

