//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"
#import "HMEAppCoordinatorDelegate-Protocol.h"
#import "HMEAssistantCoordinatorDelegate-Protocol.h"
#import "HMEAuthCoordinatorDelegate-Protocol.h"
#import "HMEChooseStructureCoordinatorDelegate-Protocol.h"
#import "HMEChromecastURLDispatcherDelegate-Protocol.h"
#import "HMEGrowthKitCoordinatorDelegate-Protocol.h"
#import "HMEManagerSetupCoordinatorDelegate-Protocol.h"
#import "HMENotificationsManagerDelegate-Protocol.h"
#import "HMESetupCoordinatorDelegate-Protocol.h"
#import "HMEWelcomeCoordinatorDelegate-Protocol.h"

@class AnalyticsLogger, CLLocationManager, GCKCastContext, HMEAppCoordinator, HMEChromecastURLDispatcher, NSString, NSUserDefaults, UIWindow;
@protocol GCAFlags, HMEAccountLinkingCoordinator, HMEAmbientURLDispatcher, HMEAppUpdateRequiredCoordinator, HMEAssistantContactUploaderCoordinator, HMEAssistantCoordinator, HMEAssistantSettings, HMEAuthCoordinator, HMEChooseStructureCoordinator, HMEGrowthKitCoordinator, HMELaunchCoordinatorDelegate, HMELaunchCoordinatorObserver, HMEManagerSetupCoordinator, HMENotificationsManagerProtocol, HMESetupCoordinator, SSOService;

@interface HMELaunchCoordinator : NSObject <HMEAuthCoordinatorDelegate, HMESetupCoordinatorDelegate, HMEAppCoordinatorDelegate, HMEManagerSetupCoordinatorDelegate, HMEChooseStructureCoordinatorDelegate, HMEWelcomeCoordinatorDelegate, HMENotificationsManagerDelegate, HMEAssistantCoordinatorDelegate, HMEGrowthKitCoordinatorDelegate, HMEChromecastURLDispatcherDelegate, CLLocationManagerDelegate>
{
    _Bool _firstLaunch;
    id <HMELaunchCoordinatorDelegate> _delegate;
    id <HMELaunchCoordinatorObserver> _observer;
    id <SSOService> _SSOService;
    NSUserDefaults *_sharedUserDefaults;
    GCKCastContext *_castContext;
    id <HMEAuthCoordinator> _authCoordinator;
    id <HMEAccountLinkingCoordinator> _accountLinkingCoordinator;
    id <HMEAppUpdateRequiredCoordinator> _appUpdateRequiredCoordinator;
    CDUnknownBlockType _welcomeCoordinatorFactory;
    id <HMEAssistantCoordinator> _assistantCoordinator;
    id <HMEAssistantContactUploaderCoordinator> _contactUploaderCoordinator;
    id <HMEGrowthKitCoordinator> _growthKitCoordinator;
    id <HMEAmbientURLDispatcher> _ambientURLDispatcher;
    HMEChromecastURLDispatcher *_chromecastURLDispatcher;
    CLLocationManager *_locationManager;
    UIWindow *_window;
    id <HMEChooseStructureCoordinator> _chooseStructureCoordinator;
    id <HMEManagerSetupCoordinator> _managerSetupCoordinator;
    id <HMESetupCoordinator> _setupCoordinator;
    HMEAppCoordinator *_appCoordinator;
    id <HMENotificationsManagerProtocol> _notificationsManager;
    id <GCAFlags> _experimentFlags;
    AnalyticsLogger *_analyticsLogger;
    id <HMEAssistantSettings> _assistantSettings;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <HMEAssistantSettings> assistantSettings; // @synthesize assistantSettings=_assistantSettings;
@property(readonly, nonatomic) AnalyticsLogger *analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(nonatomic) _Bool firstLaunch; // @synthesize firstLaunch=_firstLaunch;
@property(readonly, nonatomic) id <GCAFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMENotificationsManagerProtocol> notificationsManager; // @synthesize notificationsManager=_notificationsManager;
@property(retain, nonatomic) HMEAppCoordinator *appCoordinator; // @synthesize appCoordinator=_appCoordinator;
@property(retain, nonatomic) id <HMESetupCoordinator> setupCoordinator; // @synthesize setupCoordinator=_setupCoordinator;
@property(retain, nonatomic) id <HMEManagerSetupCoordinator> managerSetupCoordinator; // @synthesize managerSetupCoordinator=_managerSetupCoordinator;
@property(retain, nonatomic) id <HMEChooseStructureCoordinator> chooseStructureCoordinator; // @synthesize chooseStructureCoordinator=_chooseStructureCoordinator;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
@property(readonly, nonatomic) CLLocationManager *locationManager; // @synthesize locationManager=_locationManager;
@property(readonly, nonatomic) HMEChromecastURLDispatcher *chromecastURLDispatcher; // @synthesize chromecastURLDispatcher=_chromecastURLDispatcher;
@property(readonly, nonatomic) id <HMEAmbientURLDispatcher> ambientURLDispatcher; // @synthesize ambientURLDispatcher=_ambientURLDispatcher;
@property(readonly, nonatomic) id <HMEGrowthKitCoordinator> growthKitCoordinator; // @synthesize growthKitCoordinator=_growthKitCoordinator;
@property(readonly, nonatomic) id <HMEAssistantContactUploaderCoordinator> contactUploaderCoordinator; // @synthesize contactUploaderCoordinator=_contactUploaderCoordinator;
@property(readonly, nonatomic) id <HMEAssistantCoordinator> assistantCoordinator; // @synthesize assistantCoordinator=_assistantCoordinator;
@property(readonly, nonatomic) CDUnknownBlockType welcomeCoordinatorFactory; // @synthesize welcomeCoordinatorFactory=_welcomeCoordinatorFactory;
@property(readonly, nonatomic) id <HMEAppUpdateRequiredCoordinator> appUpdateRequiredCoordinator; // @synthesize appUpdateRequiredCoordinator=_appUpdateRequiredCoordinator;
@property(readonly, nonatomic) id <HMEAccountLinkingCoordinator> accountLinkingCoordinator; // @synthesize accountLinkingCoordinator=_accountLinkingCoordinator;
@property(readonly, nonatomic) id <HMEAuthCoordinator> authCoordinator; // @synthesize authCoordinator=_authCoordinator;
@property(readonly, nonatomic) GCKCastContext *castContext; // @synthesize castContext=_castContext;
@property(readonly, nonatomic) NSUserDefaults *sharedUserDefaults; // @synthesize sharedUserDefaults=_sharedUserDefaults;
@property(readonly, nonatomic) id <SSOService> SSOService; // @synthesize SSOService=_SSOService;
@property(nonatomic) __weak id <HMELaunchCoordinatorObserver> observer; // @synthesize observer=_observer;
@property(nonatomic) __weak id <HMELaunchCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (_Bool)hasAcceptedTermsOfService;
- (void)locationManager:(id)arg1 didExitRegion:(id)arg2;
- (void)locationManager:(id)arg1 didEnterRegion:(id)arg2;
- (void)logHomeControlProviderLinkingFlowCompletionWithAgentID:(id)arg1 success:(_Bool)arg2;
- (void)clearStructureIDForIdentity:(id)arg1;
- (id)structureIDDefaultKeyForIdentity:(id)arg1;
- (void)setDefaultStructureID:(id)arg1 forIdentity:(id)arg2;
- (void)startAppWithIdentity:(id)arg1 structureID:(id)arg2;
- (_Bool)notificationsManager:(id)arg1 openDeeplinkURL:(id)arg2;
- (void)didReceiveNotificationActionWithIdentifier:(id)arg1 categoryIdentifier:(id)arg2 payload:(id)arg3;
- (void)managerSetupDidComplete:(id)arg1;
- (void)startManagerSetupWithIdentity:(id)arg1 structureID:(id)arg2 inviterEmail:(id)arg3;
- (void)signInAs:(id)arg1 withStructureID:(id)arg2 options:(unsigned long long)arg3;
- (void)signOutIdentity:(id)arg1;
- (void)updateSingletonsWithIdentity:(id)arg1;
- (id)migrateStringToSharedUserDefaultsForKey:(id)arg1;
- (void)setup:(id)arg1 didExitWithSetupDevice:(id)arg2 unifiedDevice:(id)arg3 additionalDeviceNames:(id)arg4 inStructure:(id)arg5;
- (void)startDeviceSetupWithIdentity:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentAirFilterReminderSettingsForDeviceID:(id)arg1;
- (void)shouldPresentWWGATask;
- (void)shouldPresentSDMTask;
- (void)shouldPresentEnergyDashboardForDeviceID:(id)arg1 dateFormat:(id)arg2;
- (void)shouldHandleCameraEventWitHGSDeviceID:(id)arg1 liveViewExpirySeconds:(id)arg2 feedCardID:(id)arg3;
- (void)shouldHandleCameraEventWithUserEmail:(id)arg1 structureID:(id)arg2 hgsDeviceID:(id)arg3 liveViewExpirySeconds:(id)arg4 feedCardID:(id)arg5;
- (void)shouldPresentCameraImmersiveWithUserEmail:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentWifiMigrationFlowTriggeredFromSource:(id)arg1;
- (void)shouldPresentNestAwareSettingWithStructureID:(id)arg1;
- (void)presentPresenceSettings;
- (void)presentHomeAwayMiniFlow;
- (void)presentHomeAwayOOBE;
- (void)shouldPresentAmbientSettingForCastDeviceID:(id)arg1;
- (void)shouldPresentStructureAddressForStructureID:(id)arg1;
- (void)shouldPresentHomeViewForUserEmail:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentEmergencyCallingSetupPageWithStructureID:(id)arg1;
- (void)shouldPresentEmergencyCallingPageWithStructureID:(id)arg1;
- (void)shouldApplyHangingSubscriptionWithEntitlementID:(id)arg1;
- (void)shouldShowApplyHangingSubscriptionPageWithUserEmail:(id)arg1 entitlementID:(id)arg2;
- (void)shouldPresentNestAwareNonPayerWithStructureID:(id)arg1 userEmail:(id)arg2;
- (void)shouldPresentSignupNestAwareWithStructureID:(id)arg1 userEmail:(id)arg2;
- (void)shouldPresentSetupNestAwareWithStructureID:(id)arg1 userEmail:(id)arg2;
- (void)shouldPresentFamiliarFacesSetupPageWithStructureID:(id)arg1;
- (void)shouldPresentFamiliarFacesNamingPageWithStructureID:(id)arg1 forFaceID:(id)arg2;
- (void)shouldPresentFamiliarFacesPageWithStructureID:(id)arg1;
- (void)shouldStartThirdPartyPartnerLinkingWithAgentID:(id)arg1;
- (void)shouldPresentOffersForUserEmail:(id)arg1;
- (void)shouldPresentHistoryForUserEmail:(id)arg1 structureID:(id)arg2 deviceIds:(id)arg3 categoryIds:(id)arg4 scrollToDate:(id)arg5 location:(int)arg6;
- (void)shouldPresentFamilyWifi;
- (void)shouldPresentWiFiImmersiveDeviceListForStation:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentWiFiImmersivePrimaryNetworkSettings;
- (void)shouldPresentFeedForUserEmail:(id)arg1 structureID:(id)arg2 feedID:(id)arg3;
- (void)shouldPresentFeedForUserEmail:(id)arg1 structureID:(id)arg2;
- (_Bool)shouldOpenAssistantSettingsURL:(id)arg1;
- (_Bool)isAssistantSettingsURL:(id)arg1;
- (_Bool)shouldHandleAssistantHandoffURL:(id)arg1;
- (_Bool)isAssistantKitURL:(id)arg1;
- (void)shouldPresentUpgradeDialog;
- (void)shouldPresentControllerForDuoAccountToUser:(id)arg1 castDeviceID:(id)arg2;
- (void)shouldPresentControllerForFamilyTools;
- (void)shouldShowActivityControllerForTitle:(id)arg1 URLString:(id)arg2;
- (void)shouldShowAppDownloadFlowForAppID:(id)arg1;
- (void)shouldPresentInterstitialForUserEmail:(id)arg1 pageID:(id)arg2 deviceID:(id)arg3;
- (void)shouldPresentGALFlowForUserEmail:(id)arg1 encodedMetadataString:(id)arg2;
- (void)shouldPresentManagerScreenToUser:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentControllerForDeviceWithHGSID:(id)arg1;
- (void)shouldSetupAOGHDevicesWithType:(id)arg1;
- (void)shouldPresentSetupDeviceFlow;
- (void)shouldPresentInvitationRequestFlowToUser:(id)arg1 structureID:(id)arg2 applicantEmail:(id)arg3;
- (void)shouldPresentInvitationAcceptanceFlowToUser:(id)arg1 structureID:(id)arg2;
- (void)shouldPresentUniversalRemoteControlWithGCKDeviceID:(id)arg1;
- (void)shouldPresentEmailPreferences;
- (void)shouldPresentCreateGroup;
- (void)shouldPresentAmbientSettingsWithIPAddress:(id)arg1;
- (void)shouldPresentDeviceSettingsWithIPAddress:(id)arg1;
- (void)shouldPresentDeviceList;
- (void)switchIdentityToUser:(id)arg1 structureID:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)switchIdentityToUser:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)identityForUser:(id)arg1;
- (void)growthKitShowFeedback:(id)arg1;
- (_Bool)growthKitAllowMessage:(id)arg1;
- (void)assistantCoordinatorWillShowDuoSetup:(id)arg1;
- (void)assistantCoordinator:(id)arg1 showFeedbackWithPresentingViewController:(id)arg2 deviceIDs:(id)arg3;
- (void)assistantCoordinator:(id)arg1 switchToAccount:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)assistantCoordinator:(id)arg1 openURL:(id)arg2;
- (void)appCoordinator:(id)arg1 shouldHandleNotificationActionWithIdentifier:(id)arg2 categoryIdentifier:(id)arg3 payload:(id)arg4;
- (void)appCoordinator:(id)arg1 shouldEnableNotificationsWithCompletion:(CDUnknownBlockType)arg2;
- (void)appCoordinator:(id)arg1 shouldDisplayAppUpdateRequiredWithinNavigationController:(id)arg2;
- (void)appCoordinatorDidRemoveCurrentStructure:(id)arg1;
- (void)appCoordinator:(id)arg1 shouldStartManagerOnboardingWithStructure:(id)arg2 inviterEmail:(id)arg3;
- (void)appCoordinator:(id)arg1 shouldDisplayInviteWithPendingStructure:(id)arg2;
- (void)appCoordinator:(id)arg1 shouldDisplayStructureWithID:(id)arg2;
- (void)appCoordinatorShouldSignOut:(id)arg1;
- (void)didSwitchIdentity:(id)arg1;
- (void)chooseStructureCoordinatorShouldShowZeroStructure:(id)arg1;
- (void)chooseStructureCoordinatorShouldExit:(id)arg1;
- (void)structureCoordinator:(id)arg1 didAcceptInvitationForStructureWithID:(id)arg2 inviterEmail:(id)arg3;
- (void)structureCoordinator:(id)arg1 didChooseStructureID:(id)arg2;
- (_Bool)isActivelyUsingIdentityWithUserID:(id)arg1;
- (void)showSignIn;
- (void)welcomeCoordinator:(id)arg1 shouldShowExpressSignInWithPresentingViewContorller:(id)arg2;
- (void)welcomeCoordinator:(id)arg1 shouldUseAccount:(id)arg2;
- (void)welcomeCoordinator:(id)arg1 shouldAddAccountWithCallback:(CDUnknownBlockType)arg2;
- (void)didReceiveRemoteNotification:(id)arg1 fetchCompletionHandler:(CDUnknownBlockType)arg2;
- (void)didFailToRegisterForRemoteNotificationsWithError:(id)arg1;
- (void)didRegisterForRemoteNotificationsWithDeviceToken:(id)arg1;
- (_Bool)continueUserActivity:(id)arg1;
- (_Bool)openURL:(id)arg1 options:(id)arg2;
- (void)personalizeDevice:(id)arg1;
- (void)switchToStructureWithStructureID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)switchToStructureWithStructureID:(id)arg1;
- (void)showHomeTab;
- (void)displayAppUpdateRequiredWithinNavigationController:(id)arg1;
- (void)launchWithIdentity:(id)arg1 structureID:(id)arg2;
- (void)launch;
- (id)initWithAppContext:(id)arg1;
- (id)initWithSSOService:(id)arg1 castContext:(id)arg2 authCoordinatorFactory:(CDUnknownBlockType)arg3 accountLinkingCoordinator:(id)arg4 assistantCoordinator:(id)arg5 contactUploaderCoordinator:(id)arg6 growthKitCoordinator:(id)arg7 experimentFlags:(id)arg8 helpCoordinatorFactory:(CDUnknownBlockType)arg9 appUpdateRequiredCoordinatorFactory:(CDUnknownBlockType)arg10 welcomeCoordinatorFactory:(CDUnknownBlockType)arg11 notificationsManager:(id)arg12 analyticsLogger:(id)arg13 assistantSettings:(id)arg14 locationManager:(id)arg15;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

