//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMEAssistantConsentCoordinatorDelegate-Protocol.h"
#import "HMEHelpCoordinatorDelegate-Protocol.h"
#import "HMEMediaAppsTaskCoordinator-Protocol.h"
#import "HMEMediaAppsViewControllerDelegate-Protocol.h"
#import "HMEMediaChooseMusicServiceViewControllerDelegate-Protocol.h"
#import "HMEMediaHighlightViewControllerDelegate-Protocol.h"
#import "HMEMediaLinkingCoordinatorDelegate-Protocol.h"
#import "HMESetupNavigationControllerDelegate-Protocol.h"

@class GCAORLinkableApplication, HMEMediaAppsViewController, HMEMediaChooseDefaultServiceViewController, HMEMediaChooseMusicServiceViewController, HMEModel, HMESetupNavigationController, NSMutableSet, NSString, SetupAnalyticsLogger, SetupCastDevice;
@protocol GCAConfigurationFlags, HMEAccountLinkingCoordinator, HMEAccountLinkingData, HMEAssistantConsentCoordinator, HMEAuditRecorder, HMEDeviceData, HMEHelpCoordinator, HMEMediaAppsTaskCoordinatorDelegate, HMEMediaLinkingCoordinator, HMEMediaServicesData, SSOIdentity, SSOService;

@interface HMEMediaAppsTaskCoordinator : NSObject <HMEAssistantConsentCoordinatorDelegate, HMEMediaAppsViewControllerDelegate, HMEMediaChooseMusicServiceViewControllerDelegate, HMEMediaHighlightViewControllerDelegate, HMEMediaLinkingCoordinatorDelegate, HMEHelpCoordinatorDelegate, HMESetupNavigationControllerDelegate, HMEMediaAppsTaskCoordinator>
{
    _Bool _shouldSkipDefaultService;
    _Bool _userCanLinkOtherServices;
    _Bool _userInteractedWithLinkableApplications;
    long long _contentType;
    id <HMEMediaAppsTaskCoordinatorDelegate> _delegate;
    long long _launchSource;
    id <HMEMediaServicesData> _modelController;
    id <HMEAccountLinkingData> _accountLinkingData;
    id <HMEAssistantConsentCoordinator> _consentCoordinator;
    id <HMEMediaLinkingCoordinator> _mediaLinkingCoordinator;
    id <HMEDeviceData> _deviceData;
    id <SSOIdentity> _identity;
    id <SSOService> _SSOService;
    id <HMEAuditRecorder> _auditRecorder;
    SetupAnalyticsLogger *_analyticsLogger;
    id <HMEAccountLinkingCoordinator> _accountLinkingCoordinator;
    id <HMEHelpCoordinator> _helpCoordinator;
    id <GCAConfigurationFlags> _experimentFlags;
    HMESetupNavigationController *_navigationController;
    NSString *_structureID;
    SetupCastDevice *_device;
    long long _options;
    HMEMediaAppsViewController *_mediaAppsViewController;
    HMEMediaChooseDefaultServiceViewController *_chooseDefaultMediaAppsViewController;
    HMEMediaChooseMusicServiceViewController *_chooseMusicServiceViewController;
    GCAORLinkableApplication *_highlightedApplication;
    NSString *_favoriteAudioAppID;
    NSString *_footerText;
    NSMutableSet *_loggedFreeTrialSeenIDs;
    HMEModel *_onContinueInfoModel;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool userInteractedWithLinkableApplications; // @synthesize userInteractedWithLinkableApplications=_userInteractedWithLinkableApplications;
@property(retain, nonatomic) HMEModel *onContinueInfoModel; // @synthesize onContinueInfoModel=_onContinueInfoModel;
@property(retain, nonatomic) NSMutableSet *loggedFreeTrialSeenIDs; // @synthesize loggedFreeTrialSeenIDs=_loggedFreeTrialSeenIDs;
@property(retain, nonatomic) NSString *footerText; // @synthesize footerText=_footerText;
@property(nonatomic) _Bool userCanLinkOtherServices; // @synthesize userCanLinkOtherServices=_userCanLinkOtherServices;
@property(copy, nonatomic) NSString *favoriteAudioAppID; // @synthesize favoriteAudioAppID=_favoriteAudioAppID;
@property(nonatomic) _Bool shouldSkipDefaultService; // @synthesize shouldSkipDefaultService=_shouldSkipDefaultService;
@property(retain, nonatomic) GCAORLinkableApplication *highlightedApplication; // @synthesize highlightedApplication=_highlightedApplication;
@property(retain, nonatomic) HMEMediaChooseMusicServiceViewController *chooseMusicServiceViewController; // @synthesize chooseMusicServiceViewController=_chooseMusicServiceViewController;
@property(retain, nonatomic) HMEMediaChooseDefaultServiceViewController *chooseDefaultMediaAppsViewController; // @synthesize chooseDefaultMediaAppsViewController=_chooseDefaultMediaAppsViewController;
@property(retain, nonatomic) HMEMediaAppsViewController *mediaAppsViewController; // @synthesize mediaAppsViewController=_mediaAppsViewController;
@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) SetupCastDevice *device; // @synthesize device=_device;
@property(copy, nonatomic) NSString *structureID; // @synthesize structureID=_structureID;
@property(retain, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMEHelpCoordinator> helpCoordinator; // @synthesize helpCoordinator=_helpCoordinator;
@property(readonly, nonatomic) id <HMEAccountLinkingCoordinator> accountLinkingCoordinator; // @synthesize accountLinkingCoordinator=_accountLinkingCoordinator;
@property(readonly, nonatomic) SetupAnalyticsLogger *analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) id <HMEAuditRecorder> auditRecorder; // @synthesize auditRecorder=_auditRecorder;
@property(readonly, nonatomic) id <SSOService> SSOService; // @synthesize SSOService=_SSOService;
@property(readonly, nonatomic) id <SSOIdentity> identity; // @synthesize identity=_identity;
@property(readonly, nonatomic) id <HMEDeviceData> deviceData; // @synthesize deviceData=_deviceData;
@property(readonly, nonatomic) id <HMEMediaLinkingCoordinator> mediaLinkingCoordinator; // @synthesize mediaLinkingCoordinator=_mediaLinkingCoordinator;
@property(readonly, nonatomic) id <HMEAssistantConsentCoordinator> consentCoordinator; // @synthesize consentCoordinator=_consentCoordinator;
@property(readonly, nonatomic) id <HMEAccountLinkingData> accountLinkingData; // @synthesize accountLinkingData=_accountLinkingData;
@property(readonly, nonatomic) id <HMEMediaServicesData> modelController; // @synthesize modelController=_modelController;
@property(nonatomic) long long launchSource; // @synthesize launchSource=_launchSource;
@property(nonatomic) __weak id <HMEMediaAppsTaskCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long contentType; // @synthesize contentType=_contentType;
- (int)mediaLinkingFlowType;
- (_Bool)isPostOOBEFlow;
- (long long)mediaLinkingContext;
- (void)showRedeemTrialFailureDialog:(id)arg1 error:(id)arg2;
- (void)redeemFreeTrialForLinkableAppID:(id)arg1;
- (CDUnknownBlockType)onContinueAlertActionHandler:(int)arg1 onContinueInfo:(id)arg2;
- (CDUnknownBlockType)onContinueHandlerForAction:(int)arg1;
- (void)logSpecificDialogShownForAction:(int)arg1;
- (void)showDialogForOnContinueInfo:(id)arg1 onViewController:(id)arg2;
- (void)showFreeTrialDialog:(id)arg1 onViewController:(id)arg2;
- (void)didTapBottomBarButtonInMediaApps:(id)arg1 nextPressed:(_Bool)arg2;
- (void)choseDefaultMediaService;
- (void)goBackToAddMediaServicesScreen;
- (void)showChooseDefaultMusicService;
- (void)didLinkServices;
- (void)didBackOutOfMediaLink;
- (void)showHighlightScreenScreenWithConfig:(id)arg1;
- (void)showChooseDefaultMusicSelector;
- (void)showMediaLinkScreen;
- (void)didSkipMediaLinkScreenWithReason:(id)arg1;
- (void)linkCosMediaApplication:(id)arg1;
- (void)didTapOnMediaApp:(id)arg1;
- (long long)linkingContentTypeForAppContentType:(long long)arg1;
- (id)linkingMediaAppEventCountForContentType:(long long)arg1;
- (id)createAnalyticsEventForMediaUnlinkAttempt:(id)arg1 withError:(id)arg2;
- (id)createAnalyticsEventForTappingMediaAppBannerLearnMore:(id)arg1;
- (id)createAnalyticsEventForTappingMediaAppBannerButton:(id)arg1;
- (id)createAnalyticsEventForShowingMediaAppBanner:(id)arg1;
- (id)createAnalyticsEventForTappingMediaApp:(id)arg1;
- (id)createAnalyticsEventForFreeTrialSeenWithID:(id)arg1 sendingViewController:(id)arg2;
- (id)createAnalyticsEventForTappingSkip:(id)arg1;
- (id)createAnalyticsEventForNumberOfLinkedApplications:(id)arg1;
- (id)createAnalyticsEventForTappingContinue:(id)arg1 withMediaApp:(id)arg2;
- (id)createAnalyticsEventForTappingContinue:(id)arg1;
- (id)createAnalyticsEventForStartFreeTrialPressedWithID:(id)arg1 sendingViewController:(id)arg2;
- (id)createAnalyticsEventForMediaCategoryListLoad:(id)arg1;
- (void)cancelSetupFlow;
- (void)shouldShowHelpWithContext:(id)arg1;
- (id)overflowActionsForViewController:(id)arg1;
- (void)helpCoordinatorShouldExitFeedback:(id)arg1;
- (void)helpCoordinatorShouldExitHelp:(id)arg1;
- (void)helpCoordinator:(id)arg1 shouldShowFeedback:(id)arg2;
- (void)helpCoordinator:(id)arg1 shouldShowHelp:(id)arg2;
- (void)musicSelectorDidTapNextWithNoSelection:(id)arg1;
- (void)musicSelectorDidTapUnlink:(id)arg1 applicationID:(id)arg2;
- (void)musicSelectorDidTapSponsorLabel:(id)arg1;
- (void)showInvalidLinkableApplicationChoiceErrorDialogOnViewController:(id)arg1;
- (void)musicSelectorDidTapNext:(id)arg1 linkableApplication:(id)arg2;
- (void)musicSelectorPageDidLoad:(id)arg1;
- (void)refreshView;
- (_Bool)shouldSetAsDefaultBeforeMovingToNextStep;
- (_Bool)shouldMoveToNextStepAfterRedeeming;
- (_Bool)shouldMoveToNextStepAfterLinking;
- (void)didFinishLinkingForMediaLinkingCoordinator:(id)arg1 withLinkableAppId:(id)arg2;
- (void)mediaHighlightSetupDidTapPrimaryButton:(id)arg1;
- (void)mediaHighlightSetupDidTapSecondaryButton:(id)arg1;
- (void)mediaHighlightSetupDidTapBack:(id)arg1;
- (void)mediaApps:(id)arg1 didTapBannerURL:(id)arg2 forMediaApp:(id)arg3;
- (void)mediaApps:(id)arg1 didShowBannerForMediaApp:(id)arg2;
- (void)mediaApps:(id)arg1 didTapBannerButtonForMediaApp:(id)arg2;
- (void)mediaAppsDidTapSponsorLabel:(id)arg1;
- (void)mediaAppsDidTapBack:(id)arg1;
- (void)mediaAppsDidTapSkip:(id)arg1;
- (void)mediaAppsDidTapNext:(id)arg1;
- (void)mediaApps:(id)arg1 didShowFreeTrialSupportedMediaApp:(id)arg2;
- (void)mediaApps:(id)arg1 didTapFreeTrialForLinkableApplication:(id)arg2;
- (void)mediaApps:(id)arg1 didTapLinkedApplication:(id)arg2;
- (void)mediaApps:(id)arg1 didTapLinkableApplication:(id)arg2;
- (void)mediaAppsDidPageLoad:(id)arg1;
- (void)UDCConsent:(id)arg1 isBusy:(_Bool)arg2;
- (void)UDCConsent:(id)arg1 failedWithError:(id)arg2;
- (void)UDCConsentNotPossible:(id)arg1;
- (void)UDCConsentNotGiven:(id)arg1;
- (void)UDCConsentGiven:(id)arg1;
- (void)noConsentAvailable;
- (void)receivedConsent;
- (void)ensureConsent;
- (void)startOrSkipServiceLinking;
- (void)startInViewController:(id)arg1 structureID:(id)arg2 device:(id)arg3 options:(long long)arg4;
- (void)startInNavigationController:(id)arg1 structureID:(id)arg2 device:(id)arg3 options:(long long)arg4;
- (void)preloadLinkableApplicationsForDevice:(id)arg1;
- (id)initWithContentType:(long long)arg1 mediaServicesData:(id)arg2 consentCoordinatorFactory:(CDUnknownBlockType)arg3 mediaLinkingCoordinatorFactory:(CDUnknownBlockType)arg4 flags:(id)arg5 deviceData:(id)arg6 identity:(id)arg7 SSOService:(id)arg8 helpCoordinatorFactory:(CDUnknownBlockType)arg9 analyticsLogger:(id)arg10 launchSource:(long long)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

