//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMEAndroidTVMediaAppsTaskCoordinator-Protocol.h"
#import "HMEAndroidTVMediaAppsViewControllerDelegate-Protocol.h"
#import "HMEAssistantConsentCoordinatorDelegate-Protocol.h"
#import "HMEHelpCoordinatorDelegate-Protocol.h"
#import "HMEMediaLinkingCoordinatorDelegate-Protocol.h"

@class HMEAndroidTVMediaAppsViewController, HMEMediaChooseDefaultServiceViewController, HMEMediaChooseMusicServiceViewController, HMESetupNavigationController, NSString, SetupAnalyticsLogger, SetupCastDevice;
@protocol GCAConfigurationFlags, HMEAccountLinkingCoordinator, HMEAccountLinkingData, HMEAndroidTVMediaAppsTaskCoordinatorDelegate, HMEAndroidTVMediaServicesData, HMEAssistantConsentCoordinator, HMEAuditRecorder, HMEDeviceData, HMEHelpCoordinator, HMEMediaLinkingCoordinator, SSOIdentity, SSOService;

@interface HMEAndroidTVMediaAppsTaskCoordinator : NSObject <HMEAssistantConsentCoordinatorDelegate, HMEAndroidTVMediaAppsViewControllerDelegate, HMEMediaLinkingCoordinatorDelegate, HMEHelpCoordinatorDelegate, HMEAndroidTVMediaAppsTaskCoordinator>
{
    _Bool _userInteractedWithLinkableApplications;
    long long _contentType;
    id <HMEAndroidTVMediaAppsTaskCoordinatorDelegate> _delegate;
    id <HMEAndroidTVMediaServicesData> _modelController;
    id <HMEAccountLinkingData> _accountLinkingData;
    id <HMEAssistantConsentCoordinator> _consentCoordinator;
    id <HMEMediaLinkingCoordinator> _mediaLinkingCoordinator;
    id <HMEDeviceData> _deviceData;
    id <SSOIdentity> _identity;
    id <SSOService> _SSOService;
    id <HMEAuditRecorder> _auditRecorder;
    SetupAnalyticsLogger *_analyticsLogger;
    id <HMEAccountLinkingCoordinator> _accountLinkingCoordinator;
    id <HMEHelpCoordinator> _helpCoordinator;
    id <GCAConfigurationFlags> _experimentFlags;
    HMESetupNavigationController *_navigationController;
    NSString *_structureID;
    SetupCastDevice *_device;
    long long _options;
    HMEAndroidTVMediaAppsViewController *_androidTVMediaAppsViewController;
    HMEMediaChooseDefaultServiceViewController *_chooseDefaultMediaAppsViewController;
    HMEMediaChooseMusicServiceViewController *_chooseMusicServiceViewController;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool userInteractedWithLinkableApplications; // @synthesize userInteractedWithLinkableApplications=_userInteractedWithLinkableApplications;
@property(retain, nonatomic) HMEMediaChooseMusicServiceViewController *chooseMusicServiceViewController; // @synthesize chooseMusicServiceViewController=_chooseMusicServiceViewController;
@property(retain, nonatomic) HMEMediaChooseDefaultServiceViewController *chooseDefaultMediaAppsViewController; // @synthesize chooseDefaultMediaAppsViewController=_chooseDefaultMediaAppsViewController;
@property(retain, nonatomic) HMEAndroidTVMediaAppsViewController *androidTVMediaAppsViewController; // @synthesize androidTVMediaAppsViewController=_androidTVMediaAppsViewController;
@property(nonatomic) long long options; // @synthesize options=_options;
@property(retain, nonatomic) SetupCastDevice *device; // @synthesize device=_device;
@property(copy, nonatomic) NSString *structureID; // @synthesize structureID=_structureID;
@property(retain, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMEHelpCoordinator> helpCoordinator; // @synthesize helpCoordinator=_helpCoordinator;
@property(readonly, nonatomic) id <HMEAccountLinkingCoordinator> accountLinkingCoordinator; // @synthesize accountLinkingCoordinator=_accountLinkingCoordinator;
@property(readonly, nonatomic) SetupAnalyticsLogger *analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) id <HMEAuditRecorder> auditRecorder; // @synthesize auditRecorder=_auditRecorder;
@property(readonly, nonatomic) id <SSOService> SSOService; // @synthesize SSOService=_SSOService;
@property(readonly, nonatomic) id <SSOIdentity> identity; // @synthesize identity=_identity;
@property(readonly, nonatomic) id <HMEDeviceData> deviceData; // @synthesize deviceData=_deviceData;
@property(readonly, nonatomic) id <HMEMediaLinkingCoordinator> mediaLinkingCoordinator; // @synthesize mediaLinkingCoordinator=_mediaLinkingCoordinator;
@property(readonly, nonatomic) id <HMEAssistantConsentCoordinator> consentCoordinator; // @synthesize consentCoordinator=_consentCoordinator;
@property(readonly, nonatomic) id <HMEAccountLinkingData> accountLinkingData; // @synthesize accountLinkingData=_accountLinkingData;
@property(readonly, nonatomic) id <HMEAndroidTVMediaServicesData> modelController; // @synthesize modelController=_modelController;
@property(nonatomic) __weak id <HMEAndroidTVMediaAppsTaskCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long contentType; // @synthesize contentType=_contentType;
- (void)addServiceSelectionMetrics:(id)arg1;
- (void)sendSelectedServicePackages:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (long long)mediaLinkingContext;
- (void)didTapBottomBarButtonInMediaTVApps:(id)arg1 nextPressed:(_Bool)arg2;
- (void)choseDefaultMediaService;
- (void)goBackToAddMediaServicesScreen;
- (void)didLinkServices;
- (void)didBackOutOfMediaLink;
- (void)showMediaLinkScreen;
- (void)didSkipMediaLinkScreenWithReason:(id)arg1;
- (void)linkCOSMediaApplication:(id)arg1;
- (void)didTapOnMediaApp:(id)arg1;
- (long long)linkingContentTypeForAppContentType:(long long)arg1;
- (id)linkingMediaAppEventCountForContentType:(long long)arg1;
- (id)createAnalyticsEventForTappingMediaAppBannerLearnMore:(id)arg1;
- (id)createAnalyticsEventForTappingMediaAppBannerButton:(id)arg1;
- (id)createAnalyticsEventForShowingMediaAppBanner:(id)arg1;
- (id)createAnalyticsEventForTappingMediaApp:(id)arg1;
- (id)createAnalyticsEventForTappingContinue:(id)arg1;
- (void)helpCoordinatorShouldExitFeedback:(id)arg1;
- (void)helpCoordinatorShouldExitHelp:(id)arg1;
- (void)helpCoordinator:(id)arg1 shouldShowFeedback:(id)arg2;
- (void)helpCoordinator:(id)arg1 shouldShowHelp:(id)arg2;
- (void)showTvRetrievingMediaServicesErrorDialogOnViewController:(id)arg1;
- (void)refreshView;
- (void)didFinishLinkingForMediaLinkingCoordinator:(id)arg1 withLinkableAppId:(id)arg2;
- (void)mediaTVAppsDidTapRetry:(id)arg1;
- (void)mediaTVApps:(id)arg1 didTapBannerURL:(id)arg2 forMediaApp:(id)arg3;
- (void)mediaTVApps:(id)arg1 didShowBannerForMediaApp:(id)arg2;
- (void)mediaTVApps:(id)arg1 didTapBannerButtonForMediaApp:(id)arg2;
- (void)mediaTVAppsDidTapLearnMoreButton:(id)arg1 requiredMediaServices:(id)arg2;
- (void)mediaTVAppsDidTapSponsorLabel:(id)arg1;
- (void)mediaTVAppsDidTapBack:(id)arg1;
- (void)mediaTVAppsDidTapNext:(id)arg1 withUsersSelections:(id)arg2;
- (void)mediaTVApps:(id)arg1 didTapLinkableApplication:(id)arg2;
- (void)UDCConsent:(id)arg1 isBusy:(_Bool)arg2;
- (void)UDCConsent:(id)arg1 failedWithError:(id)arg2;
- (void)UDCConsentNotPossible:(id)arg1;
- (void)UDCConsentNotGiven:(id)arg1;
- (void)UDCConsentGiven:(id)arg1;
- (void)noConsentAvailable;
- (void)receivedConsent;
- (void)ensureConsent;
- (void)startOrSkipServiceLinking;
- (void)startInNavigationController:(id)arg1 structureID:(id)arg2 device:(id)arg3 options:(long long)arg4;
- (void)preloadLinkableApplicationsForDevice:(id)arg1;
- (id)initWithContentType:(long long)arg1 mediaServicesData:(id)arg2 consentCoordinatorFactory:(CDUnknownBlockType)arg3 mediaLinkingCoordinatorFactory:(CDUnknownBlockType)arg4 flags:(id)arg5 deviceData:(id)arg6 identity:(id)arg7 SSOService:(id)arg8 helpCoordinatorFactory:(CDUnknownBlockType)arg9 analyticsLogger:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

