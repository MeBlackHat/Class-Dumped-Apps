//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HMEAppBarViewController.h"

#import "HMECardsViewControllerDataSource-Protocol.h"
#import "HMECardsViewControllerDelegate-Protocol.h"
#import "HMEChromecastMiniRemoteConfigReloadDelegate-Protocol.h"
#import "HMEModelObserver-Protocol.h"
#import "HMENowPlayingPlaySomethingDelegate-Protocol.h"
#import "HMETransferAnalyticsCardIndexProvider-Protocol.h"

@class HMECardsViewController, HMEModel, HMEStatusViewController, NSArray, NSCache, NSIndexPath, NSSet, NSString, NSTimer, UIView;
@protocol AnalyticsLogger, GCAConfigurationFlags, HMEAutomationData, HMECastChannelData, HMEConfigData, HMENowPlayingViewControllerDelegate, HMEStreamTransferData, HMEUnifiedDeviceData;

@interface HMENowPlayingViewController : HMEAppBarViewController <HMEModelObserver, HMECardsViewControllerDataSource, HMECardsViewControllerDelegate, HMENowPlayingPlaySomethingDelegate, HMEChromecastMiniRemoteConfigReloadDelegate, HMETransferAnalyticsCardIndexProvider>
{
    id <HMENowPlayingViewControllerDelegate> _delegate;
    id <HMECastChannelData> _castChannelData;
    id <HMEStreamTransferData> _streamTransferData;
    id <HMEUnifiedDeviceData> _unifiedDeviceData;
    id <HMEAutomationData> _homeAutomationData;
    id <GCAConfigurationFlags> _experimentFlags;
    id <HMEConfigData> _configData;
    id <AnalyticsLogger> _analyticsLogger;
    HMECardsViewController *_cardsVC;
    HMEStatusViewController *_statusVC;
    HMEModel *_mediaSessionsModel;
    NSCache *_mediaViewControllers;
    NSArray *_mediaSessions;
    NSString *_currentSessionID;
    NSString *_currentDeviceID;
    NSIndexPath *_currentIndexPath;
    NSSet *_sessionIDSetOnEnteringBackground;
    NSString *_currentSessionIDOnEnteringBackground;
    NSTimer *_sessionReappearanceTimer;
    UIView *_snapshotView;
    UIView *_noninteractiveView;
}

+ (id)mediaSessionsFromModel:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) UIView *noninteractiveView; // @synthesize noninteractiveView=_noninteractiveView;
@property(retain, nonatomic) UIView *snapshotView; // @synthesize snapshotView=_snapshotView;
@property(retain, nonatomic) NSTimer *sessionReappearanceTimer; // @synthesize sessionReappearanceTimer=_sessionReappearanceTimer;
@property(retain, nonatomic) NSString *currentSessionIDOnEnteringBackground; // @synthesize currentSessionIDOnEnteringBackground=_currentSessionIDOnEnteringBackground;
@property(retain, nonatomic) NSSet *sessionIDSetOnEnteringBackground; // @synthesize sessionIDSetOnEnteringBackground=_sessionIDSetOnEnteringBackground;
@property(retain, nonatomic) NSIndexPath *currentIndexPath; // @synthesize currentIndexPath=_currentIndexPath;
@property(retain, nonatomic) NSString *currentDeviceID; // @synthesize currentDeviceID=_currentDeviceID;
@property(retain, nonatomic) NSString *currentSessionID; // @synthesize currentSessionID=_currentSessionID;
@property(retain, nonatomic) NSArray *mediaSessions; // @synthesize mediaSessions=_mediaSessions;
@property(readonly, nonatomic) NSCache *mediaViewControllers; // @synthesize mediaViewControllers=_mediaViewControllers;
@property(readonly, nonatomic) HMEModel *mediaSessionsModel; // @synthesize mediaSessionsModel=_mediaSessionsModel;
@property(readonly, nonatomic) HMEStatusViewController *statusVC; // @synthesize statusVC=_statusVC;
@property(readonly, nonatomic) HMECardsViewController *cardsVC; // @synthesize cardsVC=_cardsVC;
@property(readonly, nonatomic) id <AnalyticsLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(readonly, nonatomic) id <HMEConfigData> configData; // @synthesize configData=_configData;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMEAutomationData> homeAutomationData; // @synthesize homeAutomationData=_homeAutomationData;
@property(readonly, nonatomic) id <HMEUnifiedDeviceData> unifiedDeviceData; // @synthesize unifiedDeviceData=_unifiedDeviceData;
@property(readonly, nonatomic) id <HMEStreamTransferData> streamTransferData; // @synthesize streamTransferData=_streamTransferData;
@property(readonly, nonatomic) id <HMECastChannelData> castChannelData; // @synthesize castChannelData=_castChannelData;
@property(nonatomic) __weak id <HMENowPlayingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)reloadData;
- (void)scrollToNearbyCard;
- (void)scrollToCurrentCard;
- (id)mediaHolders;
- (id)indexPathsForPlaySomethingCards;
- (_Bool)shouldShowPlaySomethingCards;
- (void)miniRemoteConfig:(id)arg1 openDeeplinkURL:(id)arg2;
- (void)reloadMiniRemote:(id)arg1;
- (void)nowPlayingSomethingViewController:(id)arg1 playSomethingWithDeviceID:(id)arg2 castDeviceID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)nowPlayingSomethingViewControllerDidRequestMusicAppLinkSettings:(id)arg1;
- (void)cardsViewController:(id)arg1 didScrollToCardAtIndexPath:(id)arg2;
- (id)currentIndexPathInCardsViewController:(id)arg1;
- (id)analyticsCardIndexForViewController:(id)arg1;
- (id)cardsViewController:(id)arg1 viewControllerForCardAtIndexPath:(id)arg2;
- (long long)cardsViewController:(id)arg1 numberOfCardsInSection:(long long)arg2;
- (long long)numberOfSectionsInCardsViewController:(id)arg1;
- (void)model:(id)arg1 didChangeWithUpdates:(CDUnknownBlockType)arg2;
- (void)modelDidChange:(id)arg1;
- (void)doneWaitingForSessionsToReappear;
- (void)didEnterForeground:(id)arg1;
- (id)sessionIDSetFromSessions:(id)arg1;
- (void)createSnapshotViewIfPossible;
- (void)willEnterBackground:(id)arg1;
- (void)viewDidLoad;
- (void)viewWillDisappear:(_Bool)arg1;
- (id)initWithCastChannelData:(id)arg1 streamTransferData:(id)arg2 unifiedDeviceData:(id)arg3 homeAutomationData:(id)arg4 configData:(id)arg5 experimentFlags:(id)arg6 analyticsLogger:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

