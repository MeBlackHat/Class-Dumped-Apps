//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMEConciergeFamiliarFaceDetectionIntroViewControllerDelegate-Protocol.h"
#import "HMEConciergeModuleCoordinator-Protocol.h"
#import "HMEConciergeSelectionViewControllerDelegate-Protocol.h"

@class HMECamerasProvider, HMESetupAnimationLayoutViewController, HMESetupNavigationController, NSString, SetupAnalyticsLogger;
@protocol GCAConfigurationFlags, HMEAuditRecorder, HMEConciergeModuleCoordinatorDelegate, HMEGriffinUserChecker, HMEUserData;

@interface HMEConciergeSetupFamiliarFacesCoordinator : NSObject <HMEConciergeFamiliarFaceDetectionIntroViewControllerDelegate, HMEConciergeSelectionViewControllerDelegate, HMEConciergeModuleCoordinator>
{
    int _module;
    id <HMEConciergeModuleCoordinatorDelegate> _delegate;
    HMECamerasProvider *_camerasProvider;
    id <HMEUserData> _userData;
    NSString *_structureID;
    SetupAnalyticsLogger *_setupAnalyticsLogger;
    id <HMEAuditRecorder> _auditRecorder;
    id <HMEGriffinUserChecker> _griffinUserChecker;
    id <GCAConfigurationFlags> _experimentFlags;
    HMESetupNavigationController *_navigationController;
    HMESetupAnimationLayoutViewController *_loadCamerasDevicesErrorViewController;
}

- (void).cxx_destruct;
@property(nonatomic) __weak HMESetupAnimationLayoutViewController *loadCamerasDevicesErrorViewController; // @synthesize loadCamerasDevicesErrorViewController=_loadCamerasDevicesErrorViewController;
@property(retain, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) id <GCAConfigurationFlags> experimentFlags; // @synthesize experimentFlags=_experimentFlags;
@property(readonly, nonatomic) id <HMEGriffinUserChecker> griffinUserChecker; // @synthesize griffinUserChecker=_griffinUserChecker;
@property(readonly, nonatomic) id <HMEAuditRecorder> auditRecorder; // @synthesize auditRecorder=_auditRecorder;
@property(readonly, nonatomic) SetupAnalyticsLogger *setupAnalyticsLogger; // @synthesize setupAnalyticsLogger=_setupAnalyticsLogger;
@property(readonly, nonatomic) NSString *structureID; // @synthesize structureID=_structureID;
@property(readonly, nonatomic) id <HMEUserData> userData; // @synthesize userData=_userData;
@property(readonly, nonatomic) HMECamerasProvider *camerasProvider; // @synthesize camerasProvider=_camerasProvider;
@property(readonly, nonatomic) int module; // @synthesize module=_module;
@property(nonatomic) __weak id <HMEConciergeModuleCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (id)detailTextForTitle:(id)arg1 roomName:(id)arg2 camera:(id)arg3;
- (id)conciergeToggleItemForHMECamera:(id)arg1 atIndex:(int)arg2;
- (id)viewModelForCameras;
- (_Bool)isShowingLoadCamerasDevicesErrorScreen;
- (void)showLoadCamerasDevicesError;
- (void)showFamiliarFaceDetectionDevicesScreen;
- (void)checkOwnerUserTypeAndUpdateUI;
- (void)fetchCamerasAndShowFamiliarFaceDetectionDevicesScreen;
- (void)showError:(id)arg1;
- (id)setupNavigationItem;
- (void)markSetupAsCompleted;
- (void)showFamiliarFaceDetectionIntroScreen;
- (void)loadCamerasDevicesErrorViewControllerDidTapSkipButton;
- (void)loadCamerasDevicesErrorViewControllerDidTapTryAgainButton;
- (void)conciergeSelectionViewControllerDidTapSkip:(id)arg1;
- (void)conciergeSelectionViewControllerDidTapAccept:(id)arg1;
- (void)conciergeFamiliarFaceDetectionIntroViewControllerDidTapNotNow:(id)arg1;
- (void)conciergeFamiliarFaceDetectionIntroViewControllerDidTapSetUp:(id)arg1;
- (void)startInNavigationController:(id)arg1;
- (void)preload;
- (id)initWithCameraInventory:(id)arg1 userData:(id)arg2 structureID:(id)arg3 setupAnalyticsLogger:(id)arg4 auditRecorder:(id)arg5 griffinUserChecker:(id)arg6 experimentFlags:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

