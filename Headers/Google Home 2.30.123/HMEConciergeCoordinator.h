//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMEConciergeCoordinator-Protocol.h"
#import "HMEConciergeFreeTrialTaskCoordinatorDelegate-Protocol.h"
#import "HMEConciergeModuleCoordinatorDelegate-Protocol.h"
#import "HMEConciergeSetupCoordinatorDelegate-Protocol.h"
#import "HMEOlive426TaskCoordinatorDelegate-Protocol.h"
#import "HMEPreferenceCoordinatorDelegate-Protocol.h"
#import "HMESetupNavigationControllerDelegate-Protocol.h"

@class HMEConciergeSetupCoordinator, HMESetupNavigationController, NSDictionary, NSString, SetupAnalyticsLogger;
@protocol HMEConciergeCoordinatorDelegate, HMEConciergeEntitlementData, HMEConciergeFreeTrialTaskCoordinator, HMEFeedRefreshService, HMEHelpCoordinator, HMELinkOpener, HMEOlive426TaskCoordinator, HMEPreferenceCoordinator;

@interface HMEConciergeCoordinator : NSObject <HMEConciergeModuleCoordinatorDelegate, HMEConciergeFreeTrialTaskCoordinatorDelegate, HMEConciergeSetupCoordinatorDelegate, HMEOlive426TaskCoordinatorDelegate, HMESetupNavigationControllerDelegate, HMEPreferenceCoordinatorDelegate, HMEConciergeCoordinator>
{
    id <HMEConciergeCoordinatorDelegate> _delegate;
    id <HMEConciergeFreeTrialTaskCoordinator> _conciergeFreeTrialTaskCoordinator;
    HMEConciergeSetupCoordinator *_conciergeSetupCoordinator;
    id <HMEOlive426TaskCoordinator> _olive426TaskCoordinator;
    NSDictionary *_moduleCoordinatorMap;
    id <HMEHelpCoordinator> _helpCoordinator;
    SetupAnalyticsLogger *_setupAnalyticsLogger;
    id <HMELinkOpener> _linkOpener;
    HMESetupNavigationController *_navigationController;
    CDUnknownBlockType _preferenceCoordinatorFactory;
    id <HMEPreferenceCoordinator> _preferenceCoordinator;
    NSString *_structureID;
    id <HMEConciergeEntitlementData> _entitlementData;
    id <HMEFeedRefreshService> _feedRefreshService;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) id <HMEFeedRefreshService> feedRefreshService; // @synthesize feedRefreshService=_feedRefreshService;
@property(readonly, nonatomic) id <HMEConciergeEntitlementData> entitlementData; // @synthesize entitlementData=_entitlementData;
@property(readonly, nonatomic) NSString *structureID; // @synthesize structureID=_structureID;
@property(retain, nonatomic) id <HMEPreferenceCoordinator> preferenceCoordinator; // @synthesize preferenceCoordinator=_preferenceCoordinator;
@property(readonly, nonatomic) CDUnknownBlockType preferenceCoordinatorFactory; // @synthesize preferenceCoordinatorFactory=_preferenceCoordinatorFactory;
@property(retain, nonatomic) HMESetupNavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) id <HMELinkOpener> linkOpener; // @synthesize linkOpener=_linkOpener;
@property(readonly, nonatomic) SetupAnalyticsLogger *setupAnalyticsLogger; // @synthesize setupAnalyticsLogger=_setupAnalyticsLogger;
@property(readonly, nonatomic) id <HMEHelpCoordinator> helpCoordinator; // @synthesize helpCoordinator=_helpCoordinator;
@property(readonly, nonatomic) NSDictionary *moduleCoordinatorMap; // @synthesize moduleCoordinatorMap=_moduleCoordinatorMap;
@property(readonly, nonatomic) id <HMEOlive426TaskCoordinator> olive426TaskCoordinator; // @synthesize olive426TaskCoordinator=_olive426TaskCoordinator;
@property(readonly, nonatomic) HMEConciergeSetupCoordinator *conciergeSetupCoordinator; // @synthesize conciergeSetupCoordinator=_conciergeSetupCoordinator;
@property(readonly, nonatomic) id <HMEConciergeFreeTrialTaskCoordinator> conciergeFreeTrialTaskCoordinator; // @synthesize conciergeFreeTrialTaskCoordinator=_conciergeFreeTrialTaskCoordinator;
@property(nonatomic) __weak id <HMEConciergeCoordinatorDelegate> delegate; // @synthesize delegate=_delegate;
- (void)preferencesCoordinator:(id)arg1 shouldOpenURL:(id)arg2 fromViewController:(id)arg3;
- (void)showError:(id)arg1 presentingViewController:(id)arg2;
- (void)showExitConfirmationAlert;
- (void)willExit;
- (void)didComplete;
- (void)didSkip;
- (id)createSetupNavigationController;
- (void)olive426TaskCoordinatorDidSucceed:(id)arg1;
- (void)olive426TaskCoordinatorDidFail:(id)arg1;
- (void)conciergeSetupDidSkip:(id)arg1;
- (void)conciergeSetupDidComplete:(id)arg1;
- (void)conciergeModuleDidSkip:(id)arg1;
- (void)conciergeModuleDidFinish:(id)arg1;
- (void)conciergeFreeTrialDidSkip:(id)arg1;
- (void)conciergeFreeTrialDidComplete:(id)arg1;
- (void)cancelSetupFlow;
- (void)shouldShowHelpWithContext:(id)arg1;
- (id)overflowActionsForViewController:(id)arg1;
- (void)applyHangingEntitlementToStructureID:(id)arg1 entitlementID:(id)arg2 presentingViewController:(id)arg3;
- (void)startApplyHangingEntitlementFlowToStructureID:(id)arg1 navigationController:(id)arg2 withExitButton:(id)arg3;
- (void)startApplyHangingEntitlementFlowToStructureID:(id)arg1 presentingViewController:(id)arg2;
- (void)startSetupNestAwareInNavigationController:(id)arg1;
- (void)startSetupNestAwareInPresentingController:(id)arg1;
- (void)startModuleInNavigationController:(id)arg1 module:(int)arg2;
- (void)startNonPayerWelcomeInNavigationController:(id)arg1;
- (void)startFreeTrialInSetupNavigationController:(id)arg1;
- (void)startModuleInPresentingController:(id)arg1 module:(int)arg2;
- (void)startNonPayerWelcomeInPresentingController:(id)arg1;
- (void)startFreeTrialInNavigationController:(id)arg1;
- (void)startFreeTrialInPresentingController:(id)arg1;
- (id)initWithStructureID:(id)arg1 entitlementData:(id)arg2 conciergeFreeTrialTaskCoordinatorFactory:(CDUnknownBlockType)arg3 conciergeModuleCoordinatorsFactory:(CDUnknownBlockType)arg4 conciergeSetupCoordinatorFactory:(CDUnknownBlockType)arg5 olive426CoordinatorFactory:(CDUnknownBlockType)arg6 helpCoordinatorFactory:(CDUnknownBlockType)arg7 setupAnalyticsLogger:(id)arg8 preferencesCoordinatorFactory:(CDUnknownBlockType)arg9 linkOpener:(id)arg10 feedRefreshService:(id)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

