//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "NSObject-Protocol.h"

@class GHCAddThermostatAtomRequest, GHCAddThermostatScheduleRequest, GHCCopyAtomsFromDeviceRequest, GHCCopyScheduleFromDeviceRequest, GHCCopyThermostatScheduleRequest, GHCGetDashboardDataRequest, GHCGetFanScheduleRequest, GHCGetTemperatureTraitRequest, GHCGetThermostatAtomsRequest, GHCGetThermostatSchedulesRequest, GHCGetThermostatStatusRequest, GHCGetWiringConfigurationRequest, GHCRemoveThermostatAtomRequest, GHCRemoveThermostatScheduleRequest, GHCSetDefaultThermostatScheduleRequest, GHCSetTemperatureTraitRequest, GHCStartScheduleHoldRequest, GHCStopScheduleHoldRequest, GHCUpdateActiveAtomRequest, GHCUpdateEmergencyHeatRequest, GHCUpdateFanScheduleRequest, GHCUpdateTargetTemperatureRangeRequest, GHCUpdateTargetTemperatureRequest, GHCUpdateThermostatAtomsRequest, GHCUpdateThermostatFanModeRequest, GHCUpdateThermostatModeRequest, GHCUpdateThermostatScheduleRequest, GHCUpdateWiringConfigurationRequest, GHCValidateProIdRequest, GRPCProtoCall;

@protocol GHCEnergyService <NSObject>
- (void)updateEmergencyHeatWithRequest:(GHCUpdateEmergencyHeatRequest *)arg1 handler:(void (^)(GHCUpdateEmergencyHeatResponse *, NSError *))arg2;
- (void)updateWiringConfigurationWithRequest:(GHCUpdateWiringConfigurationRequest *)arg1 handler:(void (^)(GHCUpdateWiringConfigurationResponse *, NSError *))arg2;
- (void)getWiringConfigurationWithRequest:(GHCGetWiringConfigurationRequest *)arg1 handler:(void (^)(GHCGetWiringConfigurationResponse *, NSError *))arg2;
- (void)stopScheduleHoldWithRequest:(GHCStopScheduleHoldRequest *)arg1 handler:(void (^)(GHCStopScheduleHoldResponse *, NSError *))arg2;
- (void)startScheduleHoldWithRequest:(GHCStartScheduleHoldRequest *)arg1 handler:(void (^)(GHCStartScheduleHoldResponse *, NSError *))arg2;
- (void)validateProIdWithRequest:(GHCValidateProIdRequest *)arg1 handler:(void (^)(GHCValidateProIdResponse *, NSError *))arg2;
- (void)getDashboardDataWithRequest:(GHCGetDashboardDataRequest *)arg1 handler:(void (^)(GHCGetDashboardDataResponse *, NSError *))arg2;
- (void)setTemperatureTraitWithRequest:(GHCSetTemperatureTraitRequest *)arg1 handler:(void (^)(GHCSetTemperatureTraitResponse *, NSError *))arg2;
- (void)getTemperatureTraitWithRequest:(GHCGetTemperatureTraitRequest *)arg1 handler:(void (^)(GHCGetTemperatureTraitResponse *, NSError *))arg2;
- (void)updateFanScheduleWithRequest:(GHCUpdateFanScheduleRequest *)arg1 handler:(void (^)(GHCUpdateFanScheduleResponse *, NSError *))arg2;
- (void)getFanScheduleWithRequest:(GHCGetFanScheduleRequest *)arg1 handler:(void (^)(GHCGetFanScheduleResponse *, NSError *))arg2;
- (void)updateActiveAtomWithRequest:(GHCUpdateActiveAtomRequest *)arg1 handler:(void (^)(GHCUpdateActiveAtomResponse *, NSError *))arg2;
- (void)copyAtomsFromDeviceWithRequest:(GHCCopyAtomsFromDeviceRequest *)arg1 handler:(void (^)(GHCCopyAtomsFromDeviceResponse *, NSError *))arg2;
- (void)copyScheduleFromDeviceWithRequest:(GHCCopyScheduleFromDeviceRequest *)arg1 handler:(void (^)(GHCCopyScheduleFromDeviceResponse *, NSError *))arg2;
- (void)copyThermostatScheduleWithRequest:(GHCCopyThermostatScheduleRequest *)arg1 handler:(void (^)(GHCCopyThermostatScheduleResponse *, NSError *))arg2;
- (void)updateThermostatScheduleWithRequest:(GHCUpdateThermostatScheduleRequest *)arg1 handler:(void (^)(GHCUpdateThermostatScheduleResponse *, NSError *))arg2;
- (void)removeThermostatScheduleWithRequest:(GHCRemoveThermostatScheduleRequest *)arg1 handler:(void (^)(GHCRemoveThermostatScheduleResponse *, NSError *))arg2;
- (void)setDefaultThermostatScheduleWithRequest:(GHCSetDefaultThermostatScheduleRequest *)arg1 handler:(void (^)(GHCSetDefaultThermostatScheduleResponse *, NSError *))arg2;
- (void)getThermostatSchedulesWithRequest:(GHCGetThermostatSchedulesRequest *)arg1 handler:(void (^)(GHCGetThermostatSchedulesResponse *, NSError *))arg2;
- (void)addThermostatScheduleWithRequest:(GHCAddThermostatScheduleRequest *)arg1 handler:(void (^)(GHCAddThermostatScheduleResponse *, NSError *))arg2;
- (void)getThermostatAtomsWithRequest:(GHCGetThermostatAtomsRequest *)arg1 handler:(void (^)(GHCGetThermostatAtomsResponse *, NSError *))arg2;
- (void)updateThermostatAtomsWithRequest:(GHCUpdateThermostatAtomsRequest *)arg1 handler:(void (^)(GHCUpdateThermostatAtomsResponse *, NSError *))arg2;
- (void)removeThermostatAtomWithRequest:(GHCRemoveThermostatAtomRequest *)arg1 handler:(void (^)(GHCRemoveThermostatAtomResponse *, NSError *))arg2;
- (void)addThermostatAtomWithRequest:(GHCAddThermostatAtomRequest *)arg1 handler:(void (^)(GHCAddThermostatAtomResponse *, NSError *))arg2;
- (void)getThermostatStatusWithRequest:(GHCGetThermostatStatusRequest *)arg1 handler:(void (^)(GHCGetThermostatStatusResponse *, NSError *))arg2;
- (void)updateThermostatFanModeWithRequest:(GHCUpdateThermostatFanModeRequest *)arg1 handler:(void (^)(GHCUpdateThermostatFanModeResponse *, NSError *))arg2;
- (void)updateThermostatModeWithRequest:(GHCUpdateThermostatModeRequest *)arg1 handler:(void (^)(GHCUpdateThermostatModeResponse *, NSError *))arg2;
- (void)updateTargetTemperatureRangeWithRequest:(GHCUpdateTargetTemperatureRangeRequest *)arg1 handler:(void (^)(GHCUpdateTargetTemperatureRangeResponse *, NSError *))arg2;
- (void)updateTargetTemperatureWithRequest:(GHCUpdateTargetTemperatureRequest *)arg1 handler:(void (^)(GHCUpdateTargetTemperatureResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateEmergencyHeatWithRequest:(GHCUpdateEmergencyHeatRequest *)arg1 handler:(void (^)(GHCUpdateEmergencyHeatResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateWiringConfigurationWithRequest:(GHCUpdateWiringConfigurationRequest *)arg1 handler:(void (^)(GHCUpdateWiringConfigurationResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetWiringConfigurationWithRequest:(GHCGetWiringConfigurationRequest *)arg1 handler:(void (^)(GHCGetWiringConfigurationResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToStopScheduleHoldWithRequest:(GHCStopScheduleHoldRequest *)arg1 handler:(void (^)(GHCStopScheduleHoldResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToStartScheduleHoldWithRequest:(GHCStartScheduleHoldRequest *)arg1 handler:(void (^)(GHCStartScheduleHoldResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToValidateProIdWithRequest:(GHCValidateProIdRequest *)arg1 handler:(void (^)(GHCValidateProIdResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetDashboardDataWithRequest:(GHCGetDashboardDataRequest *)arg1 handler:(void (^)(GHCGetDashboardDataResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToSetTemperatureTraitWithRequest:(GHCSetTemperatureTraitRequest *)arg1 handler:(void (^)(GHCSetTemperatureTraitResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetTemperatureTraitWithRequest:(GHCGetTemperatureTraitRequest *)arg1 handler:(void (^)(GHCGetTemperatureTraitResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateFanScheduleWithRequest:(GHCUpdateFanScheduleRequest *)arg1 handler:(void (^)(GHCUpdateFanScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetFanScheduleWithRequest:(GHCGetFanScheduleRequest *)arg1 handler:(void (^)(GHCGetFanScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateActiveAtomWithRequest:(GHCUpdateActiveAtomRequest *)arg1 handler:(void (^)(GHCUpdateActiveAtomResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToCopyAtomsFromDeviceWithRequest:(GHCCopyAtomsFromDeviceRequest *)arg1 handler:(void (^)(GHCCopyAtomsFromDeviceResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToCopyScheduleFromDeviceWithRequest:(GHCCopyScheduleFromDeviceRequest *)arg1 handler:(void (^)(GHCCopyScheduleFromDeviceResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToCopyThermostatScheduleWithRequest:(GHCCopyThermostatScheduleRequest *)arg1 handler:(void (^)(GHCCopyThermostatScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateThermostatScheduleWithRequest:(GHCUpdateThermostatScheduleRequest *)arg1 handler:(void (^)(GHCUpdateThermostatScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToRemoveThermostatScheduleWithRequest:(GHCRemoveThermostatScheduleRequest *)arg1 handler:(void (^)(GHCRemoveThermostatScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToSetDefaultThermostatScheduleWithRequest:(GHCSetDefaultThermostatScheduleRequest *)arg1 handler:(void (^)(GHCSetDefaultThermostatScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetThermostatSchedulesWithRequest:(GHCGetThermostatSchedulesRequest *)arg1 handler:(void (^)(GHCGetThermostatSchedulesResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToAddThermostatScheduleWithRequest:(GHCAddThermostatScheduleRequest *)arg1 handler:(void (^)(GHCAddThermostatScheduleResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetThermostatAtomsWithRequest:(GHCGetThermostatAtomsRequest *)arg1 handler:(void (^)(GHCGetThermostatAtomsResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateThermostatAtomsWithRequest:(GHCUpdateThermostatAtomsRequest *)arg1 handler:(void (^)(GHCUpdateThermostatAtomsResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToRemoveThermostatAtomWithRequest:(GHCRemoveThermostatAtomRequest *)arg1 handler:(void (^)(GHCRemoveThermostatAtomResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToAddThermostatAtomWithRequest:(GHCAddThermostatAtomRequest *)arg1 handler:(void (^)(GHCAddThermostatAtomResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToGetThermostatStatusWithRequest:(GHCGetThermostatStatusRequest *)arg1 handler:(void (^)(GHCGetThermostatStatusResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateThermostatFanModeWithRequest:(GHCUpdateThermostatFanModeRequest *)arg1 handler:(void (^)(GHCUpdateThermostatFanModeResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateThermostatModeWithRequest:(GHCUpdateThermostatModeRequest *)arg1 handler:(void (^)(GHCUpdateThermostatModeResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateTargetTemperatureRangeWithRequest:(GHCUpdateTargetTemperatureRangeRequest *)arg1 handler:(void (^)(GHCUpdateTargetTemperatureRangeResponse *, NSError *))arg2;
- (GRPCProtoCall *)RPCToUpdateTargetTemperatureWithRequest:(GHCUpdateTargetTemperatureRequest *)arg1 handler:(void (^)(GHCUpdateTargetTemperatureResponse *, NSError *))arg2;
@end

