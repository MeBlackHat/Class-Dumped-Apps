//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface ELMTemplateProcessorResolver : NSObject
{
    // Error parsing type: {DefaultTemplateProvider="_vptr$TemplateProvider"^^?"_vptr$EkoTransformProvider"^^?"mutex_"{Mutex="mu_"{atomic<long>="__a_"Aq}}"template_cache_"{flat_hash_map<std::__1::basic_string<char>, std::__1::shared_ptr<youtube::elements::utils::Variform<youtube::elements::TemplateConfig> >, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<youtube::elements::utils::Variform<youtube::elements::TemplateConfig> > > > >="ctrl_"*"slots_"^(map_slot_type<std::__1::basic_string<char>, std::__1::shared_ptr<youtube::elements::utils::Variform<youtube::elements::TemplateConfig> > >)"size_"Q"capacity_"Q"infoz_"{HashtablezInfoHandle="info_"^{HashtablezInfo}}"settings_"{CompressedTuple<unsigned long, absl::container_internal::StringHash, absl::container_internal::StringHashEq::Eq, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<youtube::elements::utils::Variform<youtube::elements::TemplateConfig> > > > >="value"Q}}"eko_cache_"{flat_hash_map<unsigned long long, std::__1::shared_ptr<youtube::eko::Transform>, absl::hash_internal::Hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<youtube::eko::Transform> > > >="ctrl_"*"slots_"^(map_slot_type<unsigned long long, std::__1::shared_ptr<youtube::eko::Transform> >)"size_"Q"capacity_"Q"infoz_"{HashtablezInfoHandle="info_"^{HashtablezInfo}}"settings_"{CompressedTuple<unsigned long, absl::hash_internal::Hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::shared_ptr<youtube::eko::Transform> > > >="value"Q}}}, name: _templateProvider
    struct optional<youtube::elements::templates::EkoTemplateResolver> _ekoTemplateResolver;
    struct optional<youtube::elements::templates::TemplateResolver> _resolver;
}

+ (id)sharedInstance;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)registerCoreResolvers;
- (struct ClientTemplateProvider *)templateProvider;
-     // Error parsing type: B76@0:8r^{TemplateConfig=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf_opensource::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf_opensource::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}}16r^{Model=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf_opensource::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf_opensource::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}}24r^{Properties=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf_opensource::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf_opensource::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}}32B40r^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}44@52@60^{Element=^^?{InternalMetadata=^v}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}{RepeatedPtrField<youtube::elements::Element>=^{Arena}ii^{Rep}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{Type}^{Properties}}68, name: resolveTemplateProcessor:model:hostProperties:mergeHostProperties:hostKey:context:performanceAgent:output:
- (id)init;

@end

