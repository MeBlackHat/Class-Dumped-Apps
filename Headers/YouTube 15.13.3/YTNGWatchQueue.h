//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YTCommonCacheDelegate-Protocol.h"
#import "YTNGWatchControllerDelegate-Protocol.h"
#import "YTNGWatchFlowControllerDelegate-Protocol.h"
#import "YTResponder-Protocol.h"

@class GIMMe, MLPlayerStickySettings, NSHashTable, NSMutableArray, NSString, UIViewController, YTNGWPlayerPrefetchQueueController, YTWatchTransition;
@protocol YTCommonCacheSynchronous><YTCommonCache, YTNGWatchQueueCollectionViewController, YTResponder, YTWatchFlowControllerProtocol, YTWatchViewControllerProtocol;

@interface YTNGWatchQueue : NSObject <YTCommonCacheDelegate, YTNGWatchControllerDelegate, YTNGWatchFlowControllerDelegate, YTResponder>
{
    NSHashTable *_observers;
    id <YTCommonCacheSynchronous><YTCommonCache> _lruCache;
    YTNGWPlayerPrefetchQueueController *_playerPrefetchQueueController;
    YTWatchTransition *_lastAppliedTransition;
    UIViewController<YTWatchViewControllerProtocol> *_watchViewControllerDelegate;
    NSMutableArray *_nonCriticalTasks;
    _Bool _loopEnabled;
    _Bool _shouldUpdateInPlace;
    id <YTWatchFlowControllerProtocol> _flowController;
    GIMMe *_gimme;
    long long _currentIndex;
    long long _upNextIndex;
    id <YTResponder> _parentResponder;
    MLPlayerStickySettings *_mediaStickySettings;
    id <YTNGWatchQueueCollectionViewController> _queueCollectionViewController;
    NSMutableArray *_queue;
}

@property(readonly, nonatomic) NSMutableArray *queue; // @synthesize queue=_queue;
@property(nonatomic) __weak id <YTNGWatchQueueCollectionViewController> queueCollectionViewController; // @synthesize queueCollectionViewController=_queueCollectionViewController;
@property(readonly, nonatomic) MLPlayerStickySettings *mediaStickySettings; // @synthesize mediaStickySettings=_mediaStickySettings;
@property(nonatomic) __weak id <YTResponder> parentResponder; // @synthesize parentResponder=_parentResponder;
@property(nonatomic) _Bool shouldUpdateInPlace; // @synthesize shouldUpdateInPlace=_shouldUpdateInPlace;
@property(nonatomic, getter=isLoopEnabled) _Bool loopEnabled; // @synthesize loopEnabled=_loopEnabled;
@property(nonatomic) long long upNextIndex; // @synthesize upNextIndex=_upNextIndex;
@property(nonatomic) long long currentIndex; // @synthesize currentIndex=_currentIndex;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(retain, nonatomic) id <YTWatchFlowControllerProtocol> flowController; // @synthesize flowController=_flowController;
- (void).cxx_destruct;
- (void)runOrQueueNonCriticalTask:(CDUnknownBlockType)arg1;
- (id)queueNavEntryIDs;
- (void)updateQueueWithInsertionIndexes:(id)arg1 deletionIndexes:(id)arg2 updateBlock:(CDUnknownBlockType)arg3;
- (void)notifyObserversDidSetCurrentIndexFromIndex:(long long)arg1 toIndex:(long long)arg2 withInPlaceUpdate:(_Bool)arg3;
- (void)notifyObserversWillRemoveItemsChangingCurrentIndex:(long long)arg1 toNewIndex:(long long)arg2;
- (void)notifyObserversWillInsertItemsChangingCurrentIndex:(long long)arg1 toNewIndex:(long long)arg2;
- (void)endScreenLoggingForWatchControllersAtIndexes:(id)arg1;
- (id)watchControllerForWatchTransition:(id)arg1;
- (long long)previousVideoIndex;
- (long long)nextVideoIndex;
- (id)currentNGWatchController;
- (id)watchControllerAtIndex:(unsigned long long)arg1;
- (void)setCurrentIndex:(long long)arg1 changesActiveController:(_Bool)arg2;
- (id)nextVideoEndpoint;
- (long long)indexForWatchController:(id)arg1;
- (long long)cacheSize;
- (void)insertWatchTransitions:(id)arg1 atIndexes:(id)arg2;
- (void)insertOrUpdateSingleWatchTransition:(id)arg1;
- (void)updateWatchTransition:(id)arg1 atIndex:(long long)arg2;
- (void)setupLRUCache;
- (void)cache:(id)arg1 didRemoveObject:(id)arg2 forKey:(id)arg3;
- (void)setAutonavController:(id)arg1;
- (void)playPreviousVideo;
- (void)playNextVideo;
- (_Bool)hasPreviousVideo;
- (_Bool)hasNextVideo;
- (void)runNonCriticalTasks;
- (void)newScreenLoggingStarted;
- (void)updateCurrentWatchTransition:(id)arg1;
- (void)updateCurrentWatchTransitionNavigationEndpoint:(id)arg1;
- (void)playbackControllerDidPressPause;
- (void)playbackControllerDidPlay;
- (void)playbackControllerDidReceivePlayerResponse:(id)arg1;
- (void)playbackControllerDidLoadPlayerWithPlaybackData:(id)arg1;
- (void)playbackControllerContentMediaTimeDidChangeToTime:(double)arg1 totalMediaTime:(double)arg2;
- (void)playbackControllerCurrentVideoMediaTimeDidChange:(double)arg1;
- (void)playbackControllerCurrentVideoAspectRatioDidChange:(double)arg1;
- (void)playbackControllerWillFailWithError:(id)arg1;
- (void)playbackControllerPlayerStateDidChange;
- (void)playbackControllerStateDidChange;
- (_Bool)isFullScreen;
- (void)showSmallScreenWithCompletion:(CDUnknownBlockType)arg1;
- (void)showFullScreen;
- (void)didClearWatchQueue;
- (void)watchController:(id)arg1 didCreateDescriptionDetailsViewController:(id)arg2;
- (void)watchController:(id)arg1 didReceiveWatchNextResponse:(id)arg2;
- (void)watchController:(id)arg1 didClearPlayerViewControllerWithThumbnailView:(id)arg2;
- (void)watchController:(id)arg1 didCreateWatchViewController:(id)arg2;
- (void)watchController:(id)arg1 didSetPlayerViewController:(id)arg2;
@property(readonly, nonatomic, getter=isPaused) _Bool paused;
- (void)userDidStartSwipePrevious;
- (void)userDidStartSwipeNext;
- (id)watchViewControllersDescription;
@property(readonly, copy) NSString *description;
- (void)removeQueueObjectsAtIndexes:(id)arg1;
- (void)clearQueue;
- (void)preloadWatchControllerAtIndex:(long long)arg1;
- (void)handleRemoteControlEvent:(long long)arg1;
- (id)currentWatchTransition;
- (void)removeNGWatchQueueObserver:(id)arg1;
- (void)addNGWatchQueueObserver:(id)arg1;
- (long long)queueCount;
- (void)prepareForWatchTransitionAtIndex:(long long)arg1;
- (void)prepareForWatchTransition:(id)arg1;
- (void)setSingleWatchTransition:(id)arg1;
- (id)initWithParentResponder:(id)arg1 watchViewControllerDelegate:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

