//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Module_Framework/MDXScreenDiscoveryDelegate-Protocol.h>
#import <Module_Framework/YTSystemNotificationsObserver-Protocol.h>

@class MDXCTTRevocationController, MDXCastScreenDiscoveryManager, MDXDIALScreenDiscoveryManager, MDXPairedScreenDiscoveryManager, MDXRepeatingTimer, NSArray, NSDate, NSHashTable, NSString;
@protocol MDXScreen;

@interface MDXScreenDiscoveryManager : NSObject <MDXScreenDiscoveryDelegate, YTSystemNotificationsObserver>
{
    NSHashTable *_screenDiscoveryManagerObservers;
    MDXCTTRevocationController *_CTTController;
    _Bool _screenDiscoveryEnabled;
    _Bool _screenDiscoveryAutoSuspended;
    MDXRepeatingTimer *_screenAvailabilityPoller;
    MDXRepeatingTimer *_screenLoggingTimer;
    NSDate *_lastScreenLoggingDate;
    NSString *_lastScreenLoggingNetworkID;
    NSDate *_lastScreenLoggingNetworkIDCheckDate;
    MDXCastScreenDiscoveryManager *_castManager;
    MDXDIALScreenDiscoveryManager *_DIALManager;
    MDXPairedScreenDiscoveryManager *_pairedManager;
    NSDate *_lastBackgroundScanDate;
    id <MDXScreen> _pollingScreen;
    CDUnknownBlockType _pollingScreenAvailabilityBlock;
    double _screenPollingInterval;
    MDXRepeatingTimer *_screenPollingTimer;
    _Bool _isPollingForScreen;
    NSArray *_whitelistedDeviceNames;
}

+ (id)sharedInstance;
+ (void)setSharedInstance:(id)arg1;
@property(copy, nonatomic) NSArray *whitelistedDeviceNames; // @synthesize whitelistedDeviceNames=_whitelistedDeviceNames;
- (void).cxx_destruct;
- (id)MDXPairedScreenDiscoveryManager;
- (id)MDXCastScreenDiscoveryManager;
- (id)MDXDIALScreenDiscoveryManager;
- (void)logAvailableScreens;
- (void)logAvailableScreensAfterDelay;
- (void)waitForScreenDiscoveryWithCompletion:(CDUnknownBlockType)arg1;
- (id)onlineScreenWithScreenID:(id)arg1;
- (_Bool)backgroundScanBlackoutPeriodActive;
- (void)resumeScreenDiscovery;
- (void)suspendScreenDiscovery;
- (void)stopScreenAvailabilityPoller;
- (void)startScreenAvailabilityPoller;
- (void)stopDIALDiscovery;
- (void)startDIALDiscovery;
- (void)updatePairedScreenAvailabilityWithAvailabilityChangedBlock:(CDUnknownBlockType)arg1;
- (void)updateScreenAvailability;
- (void)notifyRemoteScreenNameDidChange:(id)arg1;
- (void)notifyExistingSessionDiscoveredForScreen:(id)arg1;
- (void)onlineScreensDidChange;
- (void)appDidEnterBackground:(id)arg1;
- (void)appDidBecomeActive:(id)arg1;
- (void)MDXScreenDiscovery:(id)arg1 smartRemoteRequestedForScreen:(id)arg2;
- (void)MDXScreenDiscovery:(id)arg1 existingSessionDiscoveredForScreen:(id)arg2;
- (void)MDXScreenDiscovery:(id)arg1 screenDidDisappear:(id)arg2;
- (void)MDXScreenDiscovery:(id)arg1 screenDidAppear:(id)arg2;
- (void)MDXScreenDiscoveryDidUpdateScreens:(id)arg1;
- (id)onlinePairedScreens;
- (void)fetchOnlineScreensWithCompletionBlock:(CDUnknownBlockType)arg1;
- (id)onlineScreens;
- (void)refreshAppStatusForScreen:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)onlineScreenWithName:(id)arg1;
- (id)getCurrentMDXContext;
- (void)discoverScreensWithCompletion:(CDUnknownBlockType)arg1 force:(_Bool)arg2;
- (void)removeScreenDiscoveryManagerObserver:(id)arg1;
- (void)addScreenDiscoveryManagerObserver:(id)arg1;
- (void)fetchScreenWithPairingCode:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)updateScreen:(id)arg1 withName:(id)arg2;
- (void)removePairedScreen:(id)arg1;
- (void)addPairedScreen:(id)arg1 withName:(id)arg2;
- (unsigned long long)pairedScreenCount;
@property(readonly, nonatomic) _Bool hasAvailableMDXScreen;
- (void)stopPollingForConnectedScreen;
- (void)startPollingForConnectedScreen:(id)arg1 withInterval:(double)arg2 availabilityBlock:(CDUnknownBlockType)arg3;
- (void)stopScreenDiscovery;
- (void)startScreenDiscovery;
- (void)shutdown;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

