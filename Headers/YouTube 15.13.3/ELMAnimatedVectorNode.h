//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Module_Framework/ASDisplayNode.h>

#import <Module_Framework/ELMDisplayNode-Protocol.h>

@class ELMElement, NSString;
@protocol ELMContext, ELMController;

@interface ELMAnimatedVectorNode : ASDisplayNode <ELMDisplayNode>
{
    id <ELMContext> _context;
    // Error parsing type: {AnimatedVectorProgressState="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadata="ptr_"^v}"_has_bits_"{HasBits<1>="has_bits_"[1I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"Ai}}"start_"f"end_"f}, name: _lastProgressState
    // Error parsing type: {AnimatedVectorFrameState="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadata="ptr_"^v}"_has_bits_"{HasBits<1>="has_bits_"[1I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"Ai}}"start_"i"end_"i}, name: _lastFrameState
    _Bool _flippedInRTL;
    ELMElement *_element;
}

+ (_Bool)canBeLayerBacked:(id)arg1 withContext:(id)arg2;
@property(retain) ELMElement *element; // @synthesize element=_element;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)handleFrameCompletion;
- (void)handleProgressCompletion;
-     // Error parsing type: v24@0:8^{SenderState=^^?{InternalMetadata=^v}{ExtensionSet=^{Arena}SS(AllocatedData=^{KeyValue}^{map<int, google::protobuf_opensource::internal::ExtensionSet::Extension, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, google::protobuf_opensource::internal::ExtensionSet::Extension> > >})}{HasBits<1>=[1I]}{CachedSize={atomic<int>=Ai}}}16, name: buildSenderState:
- (void)didLoad;
- (void)controllerDidApplyProperties;
- (_Bool)managesGestureHandling;
- (id)animationView;
- (double)animationDuration;
- (void)applyViewProperties;
- (id)initWithElement:(id)arg1 context:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) id <ELMController> nodeController; // @dynamic nodeController;
@property(readonly) Class superclass;

@end

