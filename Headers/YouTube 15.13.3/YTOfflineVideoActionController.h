//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GOOAlertViewDelegate-Protocol.h"
#import "YTRestrictedContentFlowDelegate-Protocol.h"

@class GIMMe, NSString, YTAlertView, YTRestrictedContentFlow;
@protocol YTResponder;

@interface YTOfflineVideoActionController : NSObject <YTRestrictedContentFlowDelegate, GOOAlertViewDelegate>
{
    YTRestrictedContentFlow *_restrictedContentFlow;
    id <YTResponder> _restrictedContentFlowFirstResponder;
    YTAlertView *_firstAddAlertView;
    _Bool _offlineVideoActionInProgress;
    GIMMe *_gimme;
}

@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
- (void).cxx_destruct;
- (int)pinTypesForAction:(int)arg1 offlineStatus:(int)arg2;
- (int)pinTypesForAction:(int)arg1;
- (void)showUpsell:(id)arg1 videoID:(id)arg2 firstResponder:(id)arg3;
- (void)showUpsellWithOfflineabilityRenderer:(id)arg1 videoID:(id)arg2 firstResponder:(id)arg3;
- (id)downloadingToastActionWithFirstResponder:(id)arg1 customActionHandler:(CDUnknownBlockType)arg2;
- (void)showAddingToOfflineToastWithFirstResponder:(id)arg1 customToastAction:(CDUnknownBlockType)arg2 expiresInSeconds:(long long)arg3;
- (void)fetchSizeEstimatesForVideoID:(id)arg1 withOfflineabilityRenderer:(id)arg2 andAddToQualitySelectionDialog:(id)arg3;
- (void)promptForMaximumQualityWithVideoID:(id)arg1 offlineabilityRenderer:(id)arg2 completionBlock:(CDUnknownBlockType)arg3 cancelBlock:(CDUnknownBlockType)arg4 firstResponder:(id)arg5;
- (_Bool)shouldEnableUndoDeleteForEntry:(id)arg1;
- (void)promptRemoveOfflineVideo:(id)arg1 withEntry:(id)arg2 shouldShowDialog:(_Bool)arg3 firstResponder:(id)arg4;
- (void)promptRemovePendingOfflineVideo:(id)arg1 shouldShowDialog:(_Bool)arg2 firstResponder:(id)arg3;
- (void)handleOfflineVideoSaveResponse:(int)arg1 forVideoID:(id)arg2 clickTrackingParams:(id)arg3 errorBlock:(CDUnknownBlockType)arg4 customToastAction:(CDUnknownBlockType)arg5 firstResponder:(id)arg6;
- (void)startDownloadOfVideoWithID:(id)arg1 selectedQuality:(int)arg2 playerResponse:(id)arg3 userAcceptedContentCheck:(_Bool)arg4 offlineabilityRenderer:(id)arg5 pinTypes:(int)arg6 queueFromMetadata:(_Bool)arg7 customToastAction:(CDUnknownBlockType)arg8 firstResponder:(id)arg9;
- (void)authenticateAndOfflineWithVideoID:(id)arg1 playerData:(id)arg2 userAcceptedContentCheck:(_Bool)arg3 offlineabilityRenderer:(id)arg4 pinTypes:(int)arg5 queueFromMetadata:(_Bool)arg6 customToastAction:(CDUnknownBlockType)arg7 firstResponder:(id)arg8;
- (void)performAction:(int)arg1 withOriginalAction:(int)arg2 entry:(id)arg3 offlineVideo:(id)arg4 status:(int)arg5 playerData:(id)arg6 offlineabilityRenderer:(id)arg7 customToastActionBlock:(CDUnknownBlockType)arg8 firstResponder:(id)arg9;
- (int)inferActionForOfflineVideo:(id)arg1;
- (_Bool)isMenuItemAction:(int)arg1;
- (void)performAction:(int)arg1 withVideoID:(id)arg2 entry:(id)arg3 playerData:(id)arg4 offlineabilityRenderer:(id)arg5 customToastActionBlock:(CDUnknownBlockType)arg6 fromView:(id)arg7 firstResponder:(id)arg8;
- (void)alertViewDidDisappear:(id)arg1;
- (id)playerRequestForVideoID:(id)arg1;
- (void)restrictedContentFlowDidFailWithError:(id)arg1;
- (void)restrictedContentFlowConfirmationDidCancel;
- (void)restrictedContentFlowDidComplete;
- (void)performActionForUpsell:(id)arg1 videoID:(id)arg2 playlistID:(id)arg3 navigationEndpoint:(id)arg4 serviceEndpoint:(id)arg5 upsellParentResponder:(id)arg6;
- (void)performActionWithVideoID:(id)arg1 playerData:(id)arg2 fromView:(id)arg3 firstResponder:(id)arg4;
- (void)performAction:(int)arg1 withVideoID:(id)arg2 entry:(id)arg3 offlineabilityRenderer:(id)arg4 customToastActionBlock:(CDUnknownBlockType)arg5 fromView:(id)arg6 firstResponder:(id)arg7;
- (void)performAction:(int)arg1 withVideoID:(id)arg2 offlineabilityRenderer:(id)arg3 customToastActionBlock:(CDUnknownBlockType)arg4 fromView:(id)arg5 firstResponder:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

