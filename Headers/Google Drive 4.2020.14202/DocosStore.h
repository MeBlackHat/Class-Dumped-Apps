//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GDDBaseStoreManager.h"

#import "DocosStorage-Protocol.h"

@class NSString;

@interface DocosStore : GDDBaseStoreManager <DocosStorage>
{
    NSString *_insertQuery;
    NSString *_selectQuery;
    NSString *_updateQuery;
    struct sqlite3_stmt *_deleteCommentItemsStatement;
    struct sqlite3_stmt *_deleteDiscussionsForItemStatement;
    struct sqlite3_stmt *_deleteDiscussionStatement;
    struct sqlite3_stmt *_dirtyDiscussionExistsStatement;
    struct sqlite3_stmt *_insertStatement;
    struct sqlite3_stmt *_retrieveAllDiscussionsStatement;
    struct sqlite3_stmt *_retrieveByDiscussionIdStatement;
    struct sqlite3_stmt *_retrieveDirtyDiscussionsStatement;
    struct sqlite3_stmt *_retrieveItemIdsWithDirtyDiscussionsStatement;
    struct sqlite3_stmt *_retrieveLastModifiedStatement;
    struct sqlite3_stmt *_retrieveLastSyncedStatement;
    struct sqlite3_stmt *_retrieveDocosVersionStatement;
    struct sqlite3_stmt *_updateLastModifiedStatement;
    struct sqlite3_stmt *_updateLastSyncedStatement;
    struct sqlite3_stmt *_updateDocosVersionStatement;
    struct sqlite3_stmt *_updateStatement;
}

+ (id)updateArray;
+ (id)selectArray;
+ (id)anchorMapArray;
+ (id)databaseFileNameFormat;
@property(nonatomic) struct sqlite3_stmt *updateStatement; // @synthesize updateStatement=_updateStatement;
@property(nonatomic) struct sqlite3_stmt *updateDocosVersionStatement; // @synthesize updateDocosVersionStatement=_updateDocosVersionStatement;
@property(nonatomic) struct sqlite3_stmt *updateLastSyncedStatement; // @synthesize updateLastSyncedStatement=_updateLastSyncedStatement;
@property(nonatomic) struct sqlite3_stmt *updateLastModifiedStatement; // @synthesize updateLastModifiedStatement=_updateLastModifiedStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveDocosVersionStatement; // @synthesize retrieveDocosVersionStatement=_retrieveDocosVersionStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveLastSyncedStatement; // @synthesize retrieveLastSyncedStatement=_retrieveLastSyncedStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveLastModifiedStatement; // @synthesize retrieveLastModifiedStatement=_retrieveLastModifiedStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveItemIdsWithDirtyDiscussionsStatement; // @synthesize retrieveItemIdsWithDirtyDiscussionsStatement=_retrieveItemIdsWithDirtyDiscussionsStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveDirtyDiscussionsStatement; // @synthesize retrieveDirtyDiscussionsStatement=_retrieveDirtyDiscussionsStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveByDiscussionIdStatement; // @synthesize retrieveByDiscussionIdStatement=_retrieveByDiscussionIdStatement;
@property(nonatomic) struct sqlite3_stmt *retrieveAllDiscussionsStatement; // @synthesize retrieveAllDiscussionsStatement=_retrieveAllDiscussionsStatement;
@property(nonatomic) struct sqlite3_stmt *insertStatement; // @synthesize insertStatement=_insertStatement;
@property(nonatomic) struct sqlite3_stmt *dirtyDiscussionExistsStatement; // @synthesize dirtyDiscussionExistsStatement=_dirtyDiscussionExistsStatement;
@property(nonatomic) struct sqlite3_stmt *deleteDiscussionStatement; // @synthesize deleteDiscussionStatement=_deleteDiscussionStatement;
@property(nonatomic) struct sqlite3_stmt *deleteDiscussionsForItemStatement; // @synthesize deleteDiscussionsForItemStatement=_deleteDiscussionsForItemStatement;
@property(nonatomic) struct sqlite3_stmt *deleteCommentItemsStatement; // @synthesize deleteCommentItemsStatement=_deleteCommentItemsStatement;
@property(copy, nonatomic) NSString *updateQuery; // @synthesize updateQuery=_updateQuery;
@property(copy, nonatomic) NSString *selectQuery; // @synthesize selectQuery=_selectQuery;
@property(copy, nonatomic) NSString *insertQuery; // @synthesize insertQuery=_insertQuery;
- (void).cxx_destruct;
- (_Bool)dirtyDiscussionExistsFromStatement:(struct sqlite3_stmt *)arg1;
- (id)lastModifiedTimestampFromStatement:(struct sqlite3_stmt *)arg1;
- (id)lastSyncedTimestampFromStatement:(struct sqlite3_stmt *)arg1;
- (int)docosVersionFromStatement:(struct sqlite3_stmt *)arg1;
- (id)itemIdsFromStatement:(struct sqlite3_stmt *)arg1;
- (id)discussionsFromStatement:(struct sqlite3_stmt *)arg1 filterDeleted:(_Bool)arg2;
- (id)anchorMapFromStatement:(struct sqlite3_stmt *)arg1;
- (struct sqlite3_stmt *)createOrReuseStatement:(struct sqlite3_stmt **)arg1 withQuery:(id)arg2;
- (void)updateCommentsLastModifiedOfItem:(id)arg1 withDate:(id)arg2;
- (void)updateCommentsLastModifiedOfItem:(id)arg1;
- (_Bool)dirtyDiscussionExistsForItem:(id)arg1;
- (id)retrieveItemIdsWithDirtyDiscussions;
- (id)retrieveItemLastModifiedCommentsByIdentifier:(id)arg1;
- (void)updateCommentsNextSyncOfItem:(id)arg1 withDate:(id)arg2;
- (id)retrieveItemNextSyncCommentsByIdentifier:(id)arg1;
- (void)updateDocosVersionOfItem:(id)arg1 withVersionNumber:(int)arg2;
- (void)maybeUpdateDocosVersionAndClearItemNextSync:(id)arg1;
- (id)retrieveAnchorMapForItemId:(id)arg1;
- (id)retrieveDiscussionBy:(id)arg1 itemId:(id)arg2;
- (id)retrieveDirtyDiscussionsForItemId:(id)arg1;
- (id)retrieveAllDiscussionsForItemId:(id)arg1 filterDeleted:(_Bool)arg2;
- (void)saveDiscussion:(id)arg1 updateCommentsLastModified:(_Bool)arg2;
- (void)saveDiscussion:(id)arg1;
- (void)updateDiscussion:(id)arg1;
- (void)deleteDiscussionWithId:(id)arg1;
- (void)insertDiscussion:(id)arg1;
- (void)bindValues:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2 statementOffset:(long long)arg3;
- (void)bindPrimaryKeys:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2 statementOffset:(long long)arg3;
- (void)bindUpdateDiscussion:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2;
- (void)bindInsertDiscussion:(id)arg1 toStatement:(struct sqlite3_stmt *)arg2;
- (id)constructSelectQueryWithWhereClause:(id)arg1;
- (void)commitDocosTransaction;
- (void)beginDocosTransaction;
- (void)cleanupPreparedStatements;
- (void)databaseWillDisconnect;
- (id)databaseDefinition;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

