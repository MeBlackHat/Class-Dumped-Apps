//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GAVBlocosManagerDelegate-Protocol.h"
#import "GAVBlocosProjectorDelegate-Protocol.h"
#import "GAVProjectorDataSource-Protocol.h"
#import "GAVProjectorDelegate-Protocol.h"
#import "GDAActionPanelObserving-Protocol.h"
#import "GDKActionItemVCDelegate-Protocol.h"
#import "GDKDetailsVCPresenting-Protocol.h"
#import "GDKDialogControllerDelegate-Protocol.h"

@class GAVDriveLoaderFactory, GAVProjectorVC, GDAActionPanelContext, GDAAppFlags, GDAOpenInAppController, GDARateAppManager, GDASwiftUserServices, GDAUserFlags, GDAUserSettings, GDKAddShortcutController, GDKFileDropController, GDKFolderColorPalette, GDKSearchQueryParser, GDKSharingClient, GDKTheme, GDKUploadService, GDKUserPathManager, GSCImageFetcher, GSCImageFetcherCache, GTMSessionFetcherService, NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, UIBarButtonItem, UIView;
@protocol GAVBlocosManager, GAVBlocosService, GDAFilePresenting, GDAProjectorControllerDelegate, GDKActivityFetching, GDKAlertControlling, GDKApprovalsService, GDKCategoryFetching, GDKContactAvatarCaching, GDKContactManagerAPIClient, GDKContentProvider, GDKFile, GDKFileActionProvider, GDKFileFetcher, GDKFileMutating, GDKFileResolving, GDKHandoffURLFactory, GDKHelpKitService, GDKItemsLiveListQuerent, GDKSiriSuggestionDonationManaging, GDKSnackbarControlling, GDKThumbnailCaching, GDKURLOpening, GDKViewControllerPresenting, GDKViewControllerToken, SSOAuthorization;

@interface GDAProjectorController : NSObject <GAVProjectorDataSource, GAVProjectorDelegate, GAVBlocosManagerDelegate, GAVBlocosProjectorDelegate, GDAActionPanelObserving, GDKDetailsVCPresenting, GDKDialogControllerDelegate, GDKActionItemVCDelegate>
{
    _Bool _hasMultipleActiveUsers;
    id <GDAProjectorControllerDelegate> _delegate;
    id <GDKViewControllerPresenting> _viewPresenter;
    id <GDAFilePresenting> _filePresenter;
    GAVDriveLoaderFactory *_driveLoaderFactory;
    GAVProjectorVC *_projector;
    id <GDKViewControllerToken> _projectorToken;
    id <SSOAuthorization> _ssoAuthorization;
    GDAUserFlags *_userFlags;
    GDAAppFlags *_appFlags;
    GDAUserSettings *_userSettings;
    id <GDKSnackbarControlling> _snackbarController;
    id <GDKHandoffURLFactory> _handoffURLFactory;
    GDKUploadService *_uploadService;
    GDKFolderColorPalette *_folderColorPalette;
    id <GDKFileActionProvider> _fileActionProvider;
    GDKFileDropController *_fileDropController;
    id <GDKContactAvatarCaching> _contactAvatarCache;
    GTMSessionFetcherService *_fetcherService;
    id <GDKCategoryFetching> _categoryFetcher;
    id <GDKFileFetcher> _fileFetcher;
    id <GDKFileMutating> _fileMutator;
    id <GDKItemsLiveListQuerent> _liveListQuerent;
    id <GDKContentProvider> _contentProvider;
    GDKSharingClient *_sharingClient;
    id <GDKThumbnailCaching> _thumbnailCache;
    GDAOpenInAppController *_openInAppController;
    GDKSearchQueryParser *_searchQueryParser;
    NSMutableArray *_filesToPreview;
    NSArray *_pictureInPictureFilesToPreview;
    GAVProjectorVC *_pictureInPictureProjector;
    id <GDKHelpKitService> _helpKitService;
    NSMutableDictionary *_indexToFileLoaderMap;
    NSDictionary *_pictureInPictureIndexToLoaderMap;
    id <GDKFile> _folder;
    id <GDKContactManagerAPIClient> _contactManager;
    GSCImageFetcher *_imageFetcher;
    GSCImageFetcherCache *_imageFetcherCache;
    GDARateAppManager *_rateAppManager;
    GDASwiftUserServices *_swiftUserServices;
    NSString *_searchPlaceholderText;
    NSString *_discussionIDToPreview;
    id <GDKAlertControlling> _alertController;
    GDKAddShortcutController *_addShortcutController;
    GDKUserPathManager *_userPathManager;
    id <GDKSiriSuggestionDonationManaging> _siriDonationManager;
    id <GDKURLOpening> _urlOpener;
    id <GDKFileResolving> _fileResolver;
    id <GDKActivityFetching> _activityFetcher;
    id <GDKApprovalsService> _approvalsService;
    GDKTheme *_theme;
    GDAActionPanelContext *_actionPanelContext;
    id <GAVBlocosService> _blocosService;
    id <GAVBlocosManager> _blocosManager;
    UIView *_promoCustomView;
    UIBarButtonItem *_blocosBarButtonItem;
    NSHashTable *_projectorVCsPresentingModalVC;
}

+ (_Bool)blocosEnabledForFile:(id)arg1;
@property(retain, nonatomic) NSHashTable *projectorVCsPresentingModalVC; // @synthesize projectorVCsPresentingModalVC=_projectorVCsPresentingModalVC;
@property(retain, nonatomic) UIBarButtonItem *blocosBarButtonItem; // @synthesize blocosBarButtonItem=_blocosBarButtonItem;
@property(retain, nonatomic) UIView *promoCustomView; // @synthesize promoCustomView=_promoCustomView;
@property(retain, nonatomic) id <GAVBlocosManager> blocosManager; // @synthesize blocosManager=_blocosManager;
@property(retain, nonatomic) id <GAVBlocosService> blocosService; // @synthesize blocosService=_blocosService;
@property(retain, nonatomic) GDAActionPanelContext *actionPanelContext; // @synthesize actionPanelContext=_actionPanelContext;
@property(readonly, nonatomic) GDKTheme *theme; // @synthesize theme=_theme;
@property(readonly, nonatomic) id <GDKApprovalsService> approvalsService; // @synthesize approvalsService=_approvalsService;
@property(readonly, nonatomic) id <GDKActivityFetching> activityFetcher; // @synthesize activityFetcher=_activityFetcher;
@property(readonly, nonatomic) id <GDKFileResolving> fileResolver; // @synthesize fileResolver=_fileResolver;
@property(readonly, nonatomic) id <GDKURLOpening> urlOpener; // @synthesize urlOpener=_urlOpener;
@property(readonly, nonatomic) id <GDKSiriSuggestionDonationManaging> siriDonationManager; // @synthesize siriDonationManager=_siriDonationManager;
@property(readonly, nonatomic) GDKUserPathManager *userPathManager; // @synthesize userPathManager=_userPathManager;
@property(readonly, nonatomic) GDKAddShortcutController *addShortcutController; // @synthesize addShortcutController=_addShortcutController;
@property(readonly, nonatomic) id <GDKAlertControlling> alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) NSString *discussionIDToPreview; // @synthesize discussionIDToPreview=_discussionIDToPreview;
@property(readonly, copy, nonatomic) NSString *searchPlaceholderText; // @synthesize searchPlaceholderText=_searchPlaceholderText;
@property(retain, nonatomic) GDASwiftUserServices *swiftUserServices; // @synthesize swiftUserServices=_swiftUserServices;
@property(retain, nonatomic) GDARateAppManager *rateAppManager; // @synthesize rateAppManager=_rateAppManager;
@property(retain, nonatomic) GSCImageFetcherCache *imageFetcherCache; // @synthesize imageFetcherCache=_imageFetcherCache;
@property(retain, nonatomic) GSCImageFetcher *imageFetcher; // @synthesize imageFetcher=_imageFetcher;
@property(retain, nonatomic) id <GDKContactManagerAPIClient> contactManager; // @synthesize contactManager=_contactManager;
@property(nonatomic) _Bool hasMultipleActiveUsers; // @synthesize hasMultipleActiveUsers=_hasMultipleActiveUsers;
@property(retain, nonatomic) id <GDKFile> folder; // @synthesize folder=_folder;
@property(retain, nonatomic) NSDictionary *pictureInPictureIndexToLoaderMap; // @synthesize pictureInPictureIndexToLoaderMap=_pictureInPictureIndexToLoaderMap;
@property(retain, nonatomic) NSMutableDictionary *indexToFileLoaderMap; // @synthesize indexToFileLoaderMap=_indexToFileLoaderMap;
@property(retain, nonatomic) id <GDKHelpKitService> helpKitService; // @synthesize helpKitService=_helpKitService;
@property(retain, nonatomic) GAVProjectorVC *pictureInPictureProjector; // @synthesize pictureInPictureProjector=_pictureInPictureProjector;
@property(retain, nonatomic) NSArray *pictureInPictureFilesToPreview; // @synthesize pictureInPictureFilesToPreview=_pictureInPictureFilesToPreview;
@property(retain, nonatomic) NSMutableArray *filesToPreview; // @synthesize filesToPreview=_filesToPreview;
@property(retain, nonatomic) GDKSearchQueryParser *searchQueryParser; // @synthesize searchQueryParser=_searchQueryParser;
@property(retain, nonatomic) GDAOpenInAppController *openInAppController; // @synthesize openInAppController=_openInAppController;
@property(retain, nonatomic) id <GDKThumbnailCaching> thumbnailCache; // @synthesize thumbnailCache=_thumbnailCache;
@property(retain, nonatomic) GDKSharingClient *sharingClient; // @synthesize sharingClient=_sharingClient;
@property(readonly, nonatomic) id <GDKContentProvider> contentProvider; // @synthesize contentProvider=_contentProvider;
@property(retain, nonatomic) id <GDKItemsLiveListQuerent> liveListQuerent; // @synthesize liveListQuerent=_liveListQuerent;
@property(retain, nonatomic) id <GDKFileMutating> fileMutator; // @synthesize fileMutator=_fileMutator;
@property(retain, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(retain, nonatomic) id <GDKCategoryFetching> categoryFetcher; // @synthesize categoryFetcher=_categoryFetcher;
@property(retain, nonatomic) GTMSessionFetcherService *fetcherService; // @synthesize fetcherService=_fetcherService;
@property(retain, nonatomic) id <GDKContactAvatarCaching> contactAvatarCache; // @synthesize contactAvatarCache=_contactAvatarCache;
@property(retain, nonatomic) GDKFileDropController *fileDropController; // @synthesize fileDropController=_fileDropController;
@property(retain, nonatomic) id <GDKFileActionProvider> fileActionProvider; // @synthesize fileActionProvider=_fileActionProvider;
@property(retain, nonatomic) GDKFolderColorPalette *folderColorPalette; // @synthesize folderColorPalette=_folderColorPalette;
@property(readonly, nonatomic) GDKUploadService *uploadService; // @synthesize uploadService=_uploadService;
@property(readonly, nonatomic) id <GDKHandoffURLFactory> handoffURLFactory; // @synthesize handoffURLFactory=_handoffURLFactory;
@property(readonly, nonatomic) id <GDKSnackbarControlling> snackbarController; // @synthesize snackbarController=_snackbarController;
@property(retain, nonatomic) GDAUserSettings *userSettings; // @synthesize userSettings=_userSettings;
@property(retain, nonatomic) GDAAppFlags *appFlags; // @synthesize appFlags=_appFlags;
@property(retain, nonatomic) GDAUserFlags *userFlags; // @synthesize userFlags=_userFlags;
@property(retain, nonatomic) id <SSOAuthorization> ssoAuthorization; // @synthesize ssoAuthorization=_ssoAuthorization;
@property(retain, nonatomic) id <GDKViewControllerToken> projectorToken; // @synthesize projectorToken=_projectorToken;
@property(retain, nonatomic) GAVProjectorVC *projector; // @synthesize projector=_projector;
@property(retain, nonatomic) GAVDriveLoaderFactory *driveLoaderFactory; // @synthesize driveLoaderFactory=_driveLoaderFactory;
@property(nonatomic) __weak id <GDAFilePresenting> filePresenter; // @synthesize filePresenter=_filePresenter;
@property(nonatomic) __weak id <GDKViewControllerPresenting> viewPresenter; // @synthesize viewPresenter=_viewPresenter;
@property(nonatomic) __weak id <GDAProjectorControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (CDUnknownBlockType)saveToCameraRollDismissBlockForFile:(id)arg1 fileInfo:(id)arg2 contentURL:(id)arg3 error:(id)arg4;
- (void)saveImageFileToCameraRoll:(id)arg1 withFileInfo:(id)arg2;
- (void)dismissActivityDialogWithCompletion:(CDUnknownBlockType)arg1;
- (void)showActivityDialogForFile:(id)arg1 cancellationBlock:(CDUnknownBlockType)arg2;
- (void)postNotification:(id)arg1 withFile:(id)arg2;
- (void)createBlocosManagerForFile:(id)arg1;
- (void)projector:(id)arg1 didSelectAnchorWithID:(id)arg2;
- (void)projector:(id)arg1 didRequestAnchorIDCreated:(id)arg2;
- (void)blocosManager:(id)arg1 didRequestOpenURL:(id)arg2;
- (void)blocosButtonPressed;
- (void)showBlocosPromoIfPossibleForFile:(id)arg1;
- (_Bool)isViewVisible:(id)arg1;
- (void)showSaveError;
- (void)savedToCameraRollImage:(id)arg1 error:(id)arg2 contextInfo:(void *)arg3;
- (void)cleanUpIfNecessary;
- (void)dismissProjectorIfDisplayedWithCompletion:(CDUnknownBlockType)arg1;
- (id)queryActionItemDetailsForFile:(id)arg1 actionItemAction:(long long)arg2;
- (id)queryActionItemDetailsForFile:(id)arg1;
- (_Bool)openEditorApplicationWithFile:(id)arg1 withDiscussionID:(id)arg2;
- (void)presentOpenInSheetForURL:(id)arg1 withOpenInOverrideOption:(long long)arg2;
- (void)showActionSheetForFile:(id)arg1 fromView:(id)arg2;
- (_Bool)isValidFile:(id)arg1;
- (void)configureProjectorForFile:(id)arg1;
- (void)populatePreviewableFilesFromFileList:(id)arg1;
- (_Bool)isFilePreviewableInExternalBrowser:(id)arg1;
- (_Bool)allowEditingForFile:(id)arg1;
- (_Bool)enableShortcutResolution;
- (void)rightBarButtonPressed:(id)arg1 event:(id)arg2 button:(id)arg3;
- (void)actionItemVC:(id)arg1 didPerformAction:(long long)arg2 forFile:(id)arg3;
- (void)displayDetailsForFile:(id)arg1 fromPresenter:(id)arg2;
- (void)didPerformWithAction:(long long)arg1 for:(id)arg2;
- (void)dialogControllerDidCancel:(id)arg1;
- (void)restoreProjectorFromPictureInPictureModeWithCompletion:(CDUnknownBlockType)arg1;
- (void)projector:(id)arg1 requestRestoreUserInterfaceForPictureInPictureWithCompletionHandler:(CDUnknownBlockType)arg2;
- (void)projectorDidStopPictureInPicturePlayback:(id)arg1;
- (void)projectorDidStartPictureInPicturePlayback:(id)arg1;
- (void)projectorWillStartPictureInPicturePlayback:(id)arg1;
- (void)projector:(id)arg1 didHandOverModifiedFile:(id)arg2 atIndex:(unsigned long long)arg3 localFileURL:(id)arg4 shouldOverwriteFile:(_Bool)arg5;
- (id)projector:(id)arg1 messageActionForError:(id)arg2 forFileAtIndex:(unsigned long long)arg3;
- (void)projector:(id)arg1 didFinishLoadingFile:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)projector:(id)arg1 didRequestOpenURL:(id)arg2;
- (void)projector:(id)arg1 didFailWithError:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)projector:(id)arg1 didRequestImageSavedToCameraRollForFileInfo:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)projector:(id)arg1 didPresentFile:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)approvalFABPressed:(id)arg1;
- (id)projector:(id)arg1 didRequestFABForFile:(id)arg2 atIndex:(unsigned long long)arg3;
- (id)projector:(id)arg1 didRequestRightBarButtonItemsForFileInfo:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)didRequestCloseForProjector:(id)arg1;
- (id)projector:(id)arg1 loaderForItemAtIndex:(unsigned long long)arg2;
- (unsigned long long)numberOfItemsInProjector:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)updateFile:(id)arg1;
- (_Bool)openCommentURLString:(id)arg1 forFileWithMIMEType:(id)arg2;
- (void)presentProjectorForFile:(id)arg1 withFileList:(id)arg2 presentedWithModalVC:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)openFile:(id)arg1 withFileList:(id)arg2 modalVC:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)tryOpeningFileExternally:(id)arg1 fromView:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;
- (_Bool)openFile:(id)arg1 fromView:(id)arg2 withFileList:(id)arg3 actionPanelContext:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)openFile:(id)arg1 fromView:(id)arg2 withFileList:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)openFile:(id)arg1 fromView:(id)arg2 withDiscussionID:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)initWithContentProvider:(id)arg1 blocosService:(id)arg2 fileFetcher:(id)arg3 fileMutator:(id)arg4 liveListQuerent:(id)arg5 fileActionProvider:(id)arg6 fileDropController:(id)arg7 ssoAuthorization:(id)arg8 folderColorPalette:(id)arg9 contactAvatarCache:(id)arg10 fetcherService:(id)arg11 categoryFetcher:(id)arg12 sharingClient:(id)arg13 thumbnailCache:(id)arg14 userFlags:(id)arg15 userSettings:(id)arg16 hasMultipleActiveUsers:(_Bool)arg17 helpKitService:(id)arg18 ssoService:(id)arg19 contactManager:(id)arg20 appFlags:(id)arg21 imageFetcher:(id)arg22 imageFetcherCache:(id)arg23 rateAppManager:(id)arg24 swiftUserServices:(id)arg25 snackbarController:(id)arg26 handoffURLFactory:(id)arg27 uploadService:(id)arg28 addShortcutController:(id)arg29 userPathManager:(id)arg30 siriDonationManager:(id)arg31 urlOpener:(id)arg32 fileResolver:(id)arg33 activityFetcher:(id)arg34 approvalsService:(id)arg35 theme:(id)arg36;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

