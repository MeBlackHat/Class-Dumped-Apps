//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GMUAssetUpload-Protocol.h"

@class GMUBackgroundUpload, GMUBlueprint, GMURequestQueue, GMUUploadAttempt, GMUUploadRequestCredentials, NSArray, NSDictionary, NSString, PHAsset;
@protocol GMUBackgroundAssetUploadRequestDelegate, OS_dispatch_queue;

@interface GMUBackgroundAssetUploadRequest : NSObject <GMUAssetUpload>
{
    _Bool _networkFetchAllowed;
    GMUUploadRequestCredentials *_credentials;
    int _storagePolicy;
    GMUBlueprint *_blueprint;
    double _lastProgressDate;
    NSArray *_fingerprints;
    _Bool _didFailExistenceCheck;
    _Bool _didStart;
    _Bool _isCancelled;
    _Bool _didResumeFromContext;
    int _purpose;
    PHAsset *_asset;
    id <GMUBackgroundAssetUploadRequestDelegate> _delegate;
    double _progress;
    GMURequestQueue *_requestQueue;
    GMUBackgroundUpload *_uploadMediaRequest;
    GMUUploadAttempt *_uploadAttempt;
    NSObject<OS_dispatch_queue> *_queue;
}

+ (void)reconnectExistingRequestsWithCredentials:(id)arg1 delegate:(id)arg2;
+ (_Bool)validateContext:(id)arg1;
+ (id)fileSystemSizeAttributes;
+ (_Bool)freeDiskSpaceIsAdequateForUploadFiles:(id)arg1 fileSize:(unsigned long long)arg2;
+ (id)uploadMediaURLRequest;
+ (Class)requestClassForCurrentApplicationStateWithAsset:(id)arg1 credentials:(id)arg2;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) GMUUploadAttempt *uploadAttempt; // @synthesize uploadAttempt=_uploadAttempt;
@property(retain, nonatomic) GMUBackgroundUpload *uploadMediaRequest; // @synthesize uploadMediaRequest=_uploadMediaRequest;
@property(readonly, nonatomic) _Bool didResumeFromContext; // @synthesize didResumeFromContext=_didResumeFromContext;
@property(nonatomic) int purpose; // @synthesize purpose=_purpose;
@property(retain, nonatomic) GMURequestQueue *requestQueue; // @synthesize requestQueue=_requestQueue;
@property(readonly, nonatomic) double progress; // @synthesize progress=_progress;
@property(copy) NSArray *fingerprints; // @synthesize fingerprints=_fingerprints;
@property(readonly, nonatomic) _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(readonly, nonatomic) _Bool didStart; // @synthesize didStart=_didStart;
@property(nonatomic) _Bool didFailExistenceCheck; // @synthesize didFailExistenceCheck=_didFailExistenceCheck;
@property(nonatomic) __weak id <GMUBackgroundAssetUploadRequestDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) GMUUploadRequestCredentials *credentials; // @synthesize credentials=_credentials;
@property(readonly, nonatomic) PHAsset *asset; // @synthesize asset=_asset;
- (void).cxx_destruct;
- (void)cancel;
- (void)handleErrorWithCode:(unsigned long long)arg1;
- (void)blueprintDidComplete:(_Bool)arg1 mediaItem:(id)arg2;
- (CDUnknownBlockType)blueprintCompletionBlock;
- (CDUnknownBlockType)uploadMediaCompletionBlock;
- (void)uploadMediaRequestDidComplete;
- (void)beginUploadMediaRequestWithFingerprint:(id)arg1;
- (void)existenceRequestDidCompleteForFingerprint:(id)arg1 exists:(_Bool)arg2 error:(id)arg3 mediaKey:(id)arg4;
- (void)createUploadAttemptWithFingerprint:(id)arg1;
- (void)didReceiveFingerprint:(id)arg1;
@property(readonly, nonatomic) NSDictionary *context;
- (void)didCompleteWithError:(id)arg1 resultantMediaItem:(id)arg2;
- (void)start;
- (CDUnknownBlockType)progressBlock;
- (void)incrementProgressDate;
- (void)setProgress:(double)arg1;
@property(readonly, nonatomic) _Bool shouldTimeout;
- (void)resumeFromContext;
- (id)initWithCredentials:(id)arg1 context:(id)arg2 delegate:(id)arg3;
- (id)initWithCredentials:(id)arg1 upload:(id)arg2 delegate:(id)arg3;
- (id)initWithAsset:(id)arg1 networkFetchAllowed:(_Bool)arg2 storagePolicy:(int)arg3 credentials:(id)arg4 delegate:(id)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

