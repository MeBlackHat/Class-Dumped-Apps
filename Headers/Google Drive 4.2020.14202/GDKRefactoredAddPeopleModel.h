//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKRefactoredAddPeopleModel-Protocol.h"

@class GSCImageFetcher, GSCImageFetcherCache, GSCImageUrlOptions, MGMMonogramService, NSMutableSet, NSNotificationCenter, NSString;
@protocol GDKContactManagerAPIClient, GDKItemActionObserverRegistrar, GDKItemsLiveListQuerent, GDKPermissionsFetching, GDKPermissionsMutating, GDKPersistenceChecking, GDKRefactoredAddPeopleModelDelegate, SSOIdentity;

@interface GDKRefactoredAddPeopleModel : NSObject <GDKRefactoredAddPeopleModel>
{
    id <GDKRefactoredAddPeopleModelDelegate> _delegate;
    GSCImageFetcher *_imageFetcher;
    GSCImageFetcherCache *_imageFetcherCache;
    GSCImageUrlOptions *_imageUrlOptions;
    id <GDKContactManagerAPIClient> _contactManager;
    MGMMonogramService *_monogramService;
    id <GDKPermissionsFetching> _permissionsFetching;
    id <GDKPermissionsMutating> _permissionsMutating;
    id <GDKItemActionObserverRegistrar> _actionObserverRegistrar;
    id <GDKItemsLiveListQuerent> _liveListQuerent;
    id <GDKPersistenceChecking> _persistenceChecker;
    NSNotificationCenter *_notificationCenter;
    id <SSOIdentity> _ssoIdentity;
    double _autocompleteDebounceDelay;
    NSMutableSet *_activeQuerySessions;
}

@property(retain, nonatomic) NSMutableSet *activeQuerySessions; // @synthesize activeQuerySessions=_activeQuerySessions;
@property(readonly, nonatomic) double autocompleteDebounceDelay; // @synthesize autocompleteDebounceDelay=_autocompleteDebounceDelay;
@property(readonly, nonatomic) id <SSOIdentity> ssoIdentity; // @synthesize ssoIdentity=_ssoIdentity;
@property(readonly, nonatomic) NSNotificationCenter *notificationCenter; // @synthesize notificationCenter=_notificationCenter;
@property(readonly, nonatomic) id <GDKPersistenceChecking> persistenceChecker; // @synthesize persistenceChecker=_persistenceChecker;
@property(readonly, nonatomic) id <GDKItemsLiveListQuerent> liveListQuerent; // @synthesize liveListQuerent=_liveListQuerent;
@property(readonly, nonatomic) id <GDKItemActionObserverRegistrar> actionObserverRegistrar; // @synthesize actionObserverRegistrar=_actionObserverRegistrar;
@property(readonly, nonatomic) id <GDKPermissionsMutating> permissionsMutating; // @synthesize permissionsMutating=_permissionsMutating;
@property(readonly, nonatomic) id <GDKPermissionsFetching> permissionsFetching; // @synthesize permissionsFetching=_permissionsFetching;
@property(readonly, nonatomic) MGMMonogramService *monogramService; // @synthesize monogramService=_monogramService;
@property(readonly, nonatomic) id <GDKContactManagerAPIClient> contactManager; // @synthesize contactManager=_contactManager;
@property(readonly, nonatomic) GSCImageUrlOptions *imageUrlOptions; // @synthesize imageUrlOptions=_imageUrlOptions;
@property(readonly, nonatomic) GSCImageFetcherCache *imageFetcherCache; // @synthesize imageFetcherCache=_imageFetcherCache;
@property(readonly, nonatomic) GSCImageFetcher *imageFetcher; // @synthesize imageFetcher=_imageFetcher;
@property(nonatomic) __weak id <GDKRefactoredAddPeopleModelDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (id)localAvatarImageForContact:(id)arg1 avatarSize:(double)arg2;
- (id)cachedAvatarImageForContact:(id)arg1 avatarSize:(double)arg2;
- (id)monogramAvatarImageForContact:(id)arg1 avatarSize:(double)arg2;
- (id)gscImageURLForAvatarURL:(id)arg1 avatarSize:(double)arg2;
- (void)sendAnalyticsNotificationWithName:(id)arg1 userInfo:(id)arg2;
- (void)fetchAvatarsForEmails:(id)arg1 contacts:(id)arg2 forSession:(id)arg3;
- (void)contactsDidUpdate:(id)arg1 forSession:(id)arg2 isLastCallback:(_Bool)arg3 isEmptyQuery:(_Bool)arg4;
- (void)onIssueQuery:(id)arg1 forSession:(id)arg2;
- (void)cleanUpSessionImpl:(id)arg1 operationCompletionType:(unsigned long long)arg2 contactEmails:(id)arg3;
- (id)listenForFileCreationWithID:(id)arg1 onCreated:(CDUnknownBlockType)arg2;
- (_Bool)isFileAvailableOnServer:(id)arg1;
- (void)keyboardDidChangeFrame:(id)arg1;
- (void)keyboardWillChangeFrame:(id)arg1;
- (void)dispatchPermissionsBlockAfterFileAvailableOnServer:(id)arg1 dispatchQueue:(id)arg2 permissionsBlock:(CDUnknownBlockType)arg3;
- (void)addPermissionsForItemWithID:(id)arg1 item:(id)arg2 permissions:(id)arg3 selectedSuggestionsIndexSet:(id)arg4 sendNotificationEmails:(_Bool)arg5 emailMessage:(id)arg6 confirmed:(_Bool)arg7 temakiEnabled:(_Bool)arg8 completionQueue:(id)arg9 completion:(CDUnknownBlockType)arg10;
- (void)fetchPermissionsForItemWithID:(id)arg1 completionQueue:(id)arg2 temakiEnabled:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchAvatarForEmailAddress:(id)arg1 contacts:(id)arg2 avatarSize:(double)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)fetchAvatarForEmailAddress:(id)arg1 defaultAvatarURL:(id)arg2 avatarSize:(double)arg3 queue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)finishQuerySession:(id)arg1 withAction:(long long)arg2 contactEmails:(id)arg3;
- (void)didDeselectQueryResultItemWithEmail:(id)arg1 forSession:(id)arg2;
- (void)didSelectQueryResultItems:(id)arg1 forSession:(id)arg2 temakiEnabled:(_Bool)arg3;
- (void)willDisplayQueryResultItem:(id)arg1 forSession:(id)arg2;
- (void)setQuery:(id)arg1 forSession:(id)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)startQuerySessionWithQueue:(id)arg1 avatarSize:(double)arg2 block:(CDUnknownBlockType)arg3;
- (void)stopListeningForKeyboardNotifications;
- (void)startListeningForKeyboardNotifications;
- (id)initWithImageFetcher:(id)arg1 imageFetcherCache:(id)arg2 contactManager:(id)arg3 monogramService:(id)arg4 permissionsFetching:(id)arg5 permissionsMutating:(id)arg6 actionObserverRegistrar:(id)arg7 liveListQuerent:(id)arg8 persistenceChecker:(id)arg9 notificationCenter:(id)arg10 ssoIdentity:(id)arg11 autocompleteDebounceDelay:(double)arg12;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

