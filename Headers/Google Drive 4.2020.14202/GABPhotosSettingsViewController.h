//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "GABCommonSettingsViewController.h"

@class GABBackupSettings, GABCheckboxContentViewObject, GABPhotoBackupManager, GABService, NSString;

@interface GABPhotosSettingsViewController : GABCommonSettingsViewController
{
    _Bool _isPhotoAutoBackupEnabled;
    _Bool _isPhotoAutoBackupEnabledForCurrentUser;
    GABBackupSettings *_settings;
    GABPhotoBackupManager *_photoBackupManager;
    GABService *_service;
    NSString *_photoAutoBackupUsername;
    GABCheckboxContentViewObject *_highQualityCheckbox;
    GABCheckboxContentViewObject *_originalQualityCheckbox;
}

@property(nonatomic) _Bool isPhotoAutoBackupEnabledForCurrentUser; // @synthesize isPhotoAutoBackupEnabledForCurrentUser=_isPhotoAutoBackupEnabledForCurrentUser;
@property(nonatomic) _Bool isPhotoAutoBackupEnabled; // @synthesize isPhotoAutoBackupEnabled=_isPhotoAutoBackupEnabled;
@property(retain, nonatomic) GABCheckboxContentViewObject *originalQualityCheckbox; // @synthesize originalQualityCheckbox=_originalQualityCheckbox;
@property(retain, nonatomic) GABCheckboxContentViewObject *highQualityCheckbox; // @synthesize highQualityCheckbox=_highQualityCheckbox;
@property(copy, nonatomic) NSString *photoAutoBackupUsername; // @synthesize photoAutoBackupUsername=_photoAutoBackupUsername;
@property(retain, nonatomic) GABService *service; // @synthesize service=_service;
@property(retain, nonatomic) GABPhotoBackupManager *photoBackupManager; // @synthesize photoBackupManager=_photoBackupManager;
@property(retain, nonatomic) GABBackupSettings *settings; // @synthesize settings=_settings;
- (void).cxx_destruct;
- (_Bool)autoBackupEnabledInDriveApp;
- (_Bool)autoBackupEnabledInDriveAppForAnotherUser;
- (_Bool)autoBackupEnabledInDriveAppForCurrentUser;
- (void)updatePhotosHighQualitySetting:(_Bool)arg1;
- (void)updateSetting:(_Bool)arg1;
- (_Bool)isSwitchEnabled;
- (_Bool)isPermissionDenied;
- (id)permissionAlertBody;
- (id)hiddenSettingsArray;
- (id)permanentSettingsArray;
- (id)title;
- (id)initWithSettings:(id)arg1 photoBackupManager:(id)arg2 service:(id)arg3 photoAutoBackupUsername:(id)arg4 isPhotoAutoBackupEnabledForCurrentUser:(_Bool)arg5 refactoredCarbonBackupEnabled:(_Bool)arg6;

@end

