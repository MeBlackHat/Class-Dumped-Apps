//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <drive_extension_framework/GDKFlexibleQuantumCollectionVC.h>

#import "GDKDialogControllerDelegate-Protocol.h"
#import "GDKPermissionRolePickerVCDelegate-Protocol.h"
#import "GDKRoleSelectorVCDelegate-Protocol.h"
#import "GDKShareUserCVODelegate-Protocol.h"
#import "GDKTemakiLinkSharingCVODelegate-Protocol.h"
#import "GDKWhoHasAccessCVOManagerDelegate-Protocol.h"

@class GDKDomainAttributes, GDKSharingClient, GDKSharingConfiguration, GDKWhoHasAccessCVOManager, NSArray, NSString, UIColor;
@protocol GDKAlertControlling, GDKContactAvatarCaching, GDKFile, GDKSnackbarControlling, GDKWhoHasAccessVCDelegate, SSOIdentity;

@interface GDKWhoHasAccessVC : GDKFlexibleQuantumCollectionVC <GDKWhoHasAccessCVOManagerDelegate, GDKDialogControllerDelegate, GDKPermissionRolePickerVCDelegate, GDKRoleSelectorVCDelegate, GDKShareUserCVODelegate, GDKTemakiLinkSharingCVODelegate>
{
    _Bool _blocosWarningsEnabled;
    _Bool _temakiEnabled;
    UIColor *_themeColor;
    NSString *_teamDriveTitle;
    id <GDKWhoHasAccessVCDelegate> _delegate;
    GDKDomainAttributes *_domainAttributes;
    id <GDKContactAvatarCaching> _contactAvatarCache;
    id <GDKSnackbarControlling> _snackbarController;
    GDKSharingClient *_sharingClient;
    NSArray *_permissions;
    id <GDKFile> _file;
    id <SSOIdentity> _ssoIdentity;
    GDKWhoHasAccessCVOManager *_cvoManager;
    id <GDKAlertControlling> _alertController;
    GDKSharingConfiguration *_sharingConfiguration;
}

@property(readonly, nonatomic) GDKSharingConfiguration *sharingConfiguration; // @synthesize sharingConfiguration=_sharingConfiguration;
@property(readonly, nonatomic) id <GDKAlertControlling> alertController; // @synthesize alertController=_alertController;
@property(retain, nonatomic) GDKWhoHasAccessCVOManager *cvoManager; // @synthesize cvoManager=_cvoManager;
@property(retain, nonatomic) id <SSOIdentity> ssoIdentity; // @synthesize ssoIdentity=_ssoIdentity;
@property(retain, nonatomic) id <GDKFile> file; // @synthesize file=_file;
@property(retain, nonatomic) NSArray *permissions; // @synthesize permissions=_permissions;
@property(retain, nonatomic) GDKSharingClient *sharingClient; // @synthesize sharingClient=_sharingClient;
@property(readonly, nonatomic) id <GDKSnackbarControlling> snackbarController; // @synthesize snackbarController=_snackbarController;
@property(retain, nonatomic) id <GDKContactAvatarCaching> contactAvatarCache; // @synthesize contactAvatarCache=_contactAvatarCache;
@property(retain, nonatomic) GDKDomainAttributes *domainAttributes; // @synthesize domainAttributes=_domainAttributes;
@property(readonly, nonatomic) _Bool temakiEnabled; // @synthesize temakiEnabled=_temakiEnabled;
@property(readonly, nonatomic) _Bool blocosWarningsEnabled; // @synthesize blocosWarningsEnabled=_blocosWarningsEnabled;
@property(nonatomic) __weak id <GDKWhoHasAccessVCDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) NSString *teamDriveTitle; // @synthesize teamDriveTitle=_teamDriveTitle;
@property(retain, nonatomic) UIColor *themeColor; // @synthesize themeColor=_themeColor;
- (void).cxx_destruct;
- (void)showRemoveFromSDSuccessConfirmationForName:(id)arg1;
- (void)postAnalyticsNotificationWithName:(id)arg1 permission:(id)arg2 newRole:(long long)arg3;
- (void)postAnalyticsNotificationWithName:(id)arg1;
- (void)reloadPermissionsModel;
- (void)updatePermissionsList;
- (void)removeUserAccessWithPermission:(id)arg1 userCVO:(id)arg2 linkSharingCVO:(id)arg3;
- (void)changeUserAccessWithPermission:(id)arg1 role:(long long)arg2 userCVO:(id)arg3 linkSharingCVO:(id)arg4;
- (void)applyThemeColor;
- (_Bool)isSelfOnlyOrganizer;
- (_Bool)isPermissionOnlyOrganizer:(id)arg1;
- (_Bool)isPermissionSelf:(id)arg1;
- (void)showDialogWithTitle:(id)arg1 message:(id)arg2 checkboxText:(id)arg3 confirmationButtonText:(id)arg4 confirmAction:(CDUnknownBlockType)arg5 cancelButtonText:(id)arg6 cancelAction:(CDUnknownBlockType)arg7 fromViewController:(id)arg8 didDismissAction:(CDUnknownBlockType)arg9;
- (void)cvoManagerDidCopyLinkToClipboard:(id)arg1 role:(long long)arg2;
- (void)cvoManagerDidUpdatePermissions:(id)arg1;
- (void)permissionRolePickerVC:(id)arg1 didSelectRole:(long long)arg2 forPermissionCVO:(id)arg3 scope:(long long)arg4 enablesDiscovery:(_Bool)arg5;
- (void)dialogControllerDidCancel:(id)arg1;
- (void)roleSelectorVCDidSelectCopyLink:(id)arg1;
- (void)roleSelectorVC:(id)arg1 shouldRemoveAccessForPermission:(id)arg2 userCVO:(id)arg3 linkSharingCVO:(id)arg4;
- (void)roleSelectorVC:(id)arg1 didSelectRole:(long long)arg2 forPermission:(id)arg3 userCVO:(id)arg4 linkSharingCVO:(id)arg5;
- (void)linkSharingCVO:(id)arg1 didTapFromSourceView:(id)arg2;
- (void)shareUserCVO:(id)arg1 actionViewWasPressed:(id)arg2;
- (void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2;
- (long long)preferredStatusBarStyle;
- (void)viewSafeAreaInsetsDidChange;
- (_Bool)accessibilityPerformEscape;
- (void)closeBarButtonWasPressed:(id)arg1;
- (void)viewDidLoad;
- (id)initWithSharingClient:(id)arg1 contactAvatarCache:(id)arg2 file:(id)arg3 fileFetcher:(id)arg4 snackbarController:(id)arg5 ssoIdentity:(id)arg6 helpKitService:(id)arg7 contactManager:(id)arg8 sharingConfiguration:(id)arg9;
- (id)initWithSharingClient:(id)arg1 contactAvatarCache:(id)arg2 permissions:(id)arg3 domainAttributes:(id)arg4 file:(id)arg5 fileFetcher:(id)arg6 snackbarController:(id)arg7 ssoIdentity:(id)arg8 helpKitService:(id)arg9 contactManager:(id)arg10 sharingConfiguration:(id)arg11;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

