//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDACreateProviderDelegate-Protocol.h"
#import "GDANavigationControllerActionHandler-Protocol.h"
#import "GDANotificationsActionHandlerDelegate-Protocol.h"
#import "GDANotificationsHomeVCDelegate-Protocol.h"
#import "GDAPanelControllerDelegate-Protocol.h"
#import "GDAProjectorControllerDelegate-Protocol.h"
#import "GDARateAppManagerDelegate-Protocol.h"
#import "GDAUploadServiceDelegate-Protocol.h"
#import "GDAWorkspaceUpdateDelegate-Protocol.h"
#import "GDKApprovalsControllerDelegate-Protocol.h"
#import "GDKBottomTabBarControllerDelegate-Protocol.h"
#import "GDKCardCVOActionDelegate-Protocol.h"
#import "GDKCardNotificationDelegate-Protocol.h"
#import "GDKFABControllerDelegate-Protocol.h"
#import "GDKFileActionProviderDelegate-Protocol.h"
#import "GDKFileLocationPresenting-Protocol.h"
#import "GDKNavigationControllerActionSource-Protocol.h"
#import "GDKStorageOverviewVCDelegate-Protocol.h"
#import "GDKUploadServiceStorageDelegate-Protocol.h"
#import "GDKUserMediator-Protocol.h"
#import "GDKViewControllerPresenting-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"

@class GDAApplicationServices, GDACreateProvider, GDANavigationController, GDANavigationStack, GDANotificationsActionHandler, GDAPanelController, GDAProjectorController, GDASettingsProvider, GDAUserServices, GDAViewControllerRegistry, GDKActionHandlerFactory, GDKApprovalsController, GDKBottomTabBarController, GDKDefaultFileActionProvider, GDKFABController, GDKFileDropController, MDCAlertController, NSString, OGLAccountSnackbarManager, UIViewController;
@protocol GDAActionPanelManaging, GDAFilePresenting, GDAPanelController, GDKAccountSwitcher, GDKTeamDriveVCProducing, GDKViewControllerContaining, SSOIdentity;

@interface GDAUserMediator : NSObject <GDACreateProviderDelegate, GDANavigationControllerActionHandler, GDANotificationsActionHandlerDelegate, GDANotificationsHomeVCDelegate, GDAProjectorControllerDelegate, GDARateAppManagerDelegate, GDAUploadServiceDelegate, GDAWorkspaceUpdateDelegate, GDKApprovalsControllerDelegate, GDKCardCVOActionDelegate, GDKCardNotificationDelegate, GDKFileActionProviderDelegate, GDKFileLocationPresenting, GDKNavigationControllerActionSource, GDAPanelControllerDelegate, GDKBottomTabBarControllerDelegate, GDKFABControllerDelegate, GDKStorageOverviewVCDelegate, GDKUploadServiceStorageDelegate, UINavigationControllerDelegate, GDKUserMediator, GDKViewControllerPresenting>
{
    _Bool displayAccountToastAfterActivation;
    GDKActionHandlerFactory *_actionHandlerFactory;
    GDAApplicationServices *_applicationServices;
    GDKApprovalsController *_approvalsController;
    GDKFABController *_fabController;
    GDKBottomTabBarController *_bottomTabBarController;
    GDACreateProvider *_createProvider;
    GDKDefaultFileActionProvider *_fileActionProvider;
    GDKFileDropController *_fileDropController;
    id <GDAFilePresenting> _filePresenter;
    GDAPanelController *_gm2PanelController;
    GDANavigationController *_navigationController;
    GDANavigationStack *_navigationStack;
    GDANotificationsActionHandler *_notificationsActionHandler;
    GDAProjectorController *_projectorController;
    GDASettingsProvider *_settingsProvider;
    OGLAccountSnackbarManager *_snackbarManager;
    id <GDKTeamDriveVCProducing> _teamDriveVCProducer;
    GDAViewControllerRegistry *_vcRegistry;
    id <GDKAccountSwitcher> _accountSwitcher;
    GDAUserServices *_userServices;
    MDCAlertController *_presentedAlert;
}

+ (id)appDisplayName;
+ (id)snackbarCategoryIdentifierWithFolderId:(id)arg1;
+ (id)topFilesVCForContainer:(id)arg1;
+ (id)topVCForContainer:(id)arg1;
@property(nonatomic) __weak MDCAlertController *presentedAlert; // @synthesize presentedAlert=_presentedAlert;
@property(readonly, nonatomic) GDAUserServices *userServices; // @synthesize userServices=_userServices;
@property(nonatomic) __weak id <GDKAccountSwitcher> accountSwitcher; // @synthesize accountSwitcher=_accountSwitcher;
@property(readonly, nonatomic) GDAApplicationServices *applicationServices; // @synthesize applicationServices=_applicationServices;
@property(nonatomic) _Bool displayAccountToastAfterActivation; // @synthesize displayAccountToastAfterActivation;
- (void).cxx_destruct;
- (void)configureFeatureFlagState;
- (_Bool)displayG1UpsellSideNav;
- (_Bool)displayG1UpsellCard;
@property(readonly, nonatomic) GDKApprovalsController *approvalsController; // @synthesize approvalsController=_approvalsController;
@property(readonly, nonatomic) GDAProjectorController *projectorController; // @synthesize projectorController=_projectorController;
@property(readonly, nonatomic) GDKDefaultFileActionProvider *fileActionProvider; // @synthesize fileActionProvider=_fileActionProvider;
@property(readonly, nonatomic) GDASettingsProvider *settingsProvider; // @synthesize settingsProvider=_settingsProvider;
@property(readonly, nonatomic) GDACreateProvider *createProvider; // @synthesize createProvider=_createProvider;
- (void)cardCVODidDisplayCard:(id)arg1;
- (void)cardCVODidTapCloseButton:(id)arg1;
- (void)cardCVODidTapSecondaryActionButton:(id)arg1;
- (void)cardCVODidTapPrimaryActionButton:(id)arg1;
- (void)approvalsController:(id)arg1 didRequestApprovalForItem:(id)arg2;
- (void)presentFilesVCForFolderID:(id)arg1 withHighlightedFiles:(id)arg2;
- (void)storageUpgradeLearnMore:(id)arg1;
- (void)presentStorageAlert:(unsigned long long)arg1;
- (void)postNotificationForOpenFolder:(id)arg1;
- (void)openURL:(id)arg1;
- (void)showNotificationFileResolutionError;
- (void)showBackupWizard;
- (void)displaySnackbar:(id)arg1;
- (void)setPanelHidden:(_Bool)arg1 animated:(_Bool)arg2;
- (id)presentFilesVCForFolderIfNeeded:(id)arg1;
- (id)modalNavigationControllerForViewController:(id)arg1 filePresenter:(id)arg2 filesVCFactory:(id)arg3;
- (void)modallyPresentNewNavigationStackForVC:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)modallyPresentNewNavigationStackForFilesVC:(id)arg1 externalDropsAccepted:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)modallyPresentNewNavigationStackForFilesVC:(id)arg1 externalDropsAccepted:(_Bool)arg2;
- (void)updateSparkAccountParticleDiscForController:(id)arg1;
- (void)uploadServiceRequiresStorageUpgrade:(id)arg1;
- (void)fileActionProviderCopyRequiresStorageUpgrade:(id)arg1;
- (void)fileActionProviderDidTapUpgradeStorage:(id)arg1;
- (void)fileActionProvider:(id)arg1 didUndoActionForFile:(id)arg2;
- (void)fileActionProviderUpdatedSharing:(id)arg1;
- (void)fileActionProviderPinnedFile:(id)arg1;
- (void)uploadOfflineHelpKitReports;
- (void)projectorController:(id)arg1 navigateToFolder:(id)arg2;
- (void)uploadService:(id)arg1 didFinishUploadingFiles:(id)arg2 toFolder:(id)arg3;
- (void)uploadService:(id)arg1 didBeginUploadingToFolder:(id)arg2;
- (void)uploadService:(id)arg1 willBeginUploadingToFolder:(id)arg2;
- (void)willDismissStorageOverviewVC:(id)arg1;
- (void)storageOverviewVCDisplayFeedback:(id)arg1;
- (void)storageOverviewVC:(id)arg1 displayHelpFromContext:(long long)arg2;
- (void)handleSharingClientNotification:(id)arg1;
- (void)postNotificationName:(id)arg1 userIDParam:(id)arg2 userInfo:(id)arg3;
- (void)postNotificationName:(id)arg1 userIDParam:(id)arg2;
- (void)trackUserMetadata;
- (void)postNotificationName:(id)arg1 identityParam:(id)arg2;
- (void)subscribeToNotifications;
- (void)rateAppManagerWillDisplayRateAppDialog:(id)arg1;
- (void)rateAppManagerSendFeedbackTapped:(id)arg1;
- (void)createProvider:(id)arg1 didCreateFolder:(id)arg2;
@property(readonly, nonatomic) NSString *displayedFolderIdentifier;
- (id)displayedFolder;
- (id)displayedFilesVC;
- (id)viewControllerContainer;
- (void)dismissTopLevelPresentedViewController;
- (void)presentViewController:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)presentViewController:(id)arg1;
- (id)floatingActionButton;
- (void)dismissViewController:(id)arg1 animated:(_Bool)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)presentViewController:(id)arg1 animated:(_Bool)arg2 completionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)handleNotificationActionWithID:(id)arg1 userInfo:(id)arg2 userText:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (id)topViewController;
- (void)presentNotificationsVCWithCompletion:(CDUnknownBlockType)arg1;
- (id)topLevelPresentedNotificationsVC;
- (void)handleNotificationWithKey:(id)arg1;
- (void)showNotificationsTurnedOffAlert;
- (_Bool)notificationsHomeVC:(id)arg1 userDidTapFile:(id)arg2 withDiscussionID:(id)arg3;
- (void)notificationsHomeVC:(id)arg1 userOpenedFileWithMIMEType:(id)arg2 commentURLString:(id)arg3;
- (void)notificationsHomeVC:(id)arg1 userRequestedToShareFileWithID:(id)arg2 withUserEmails:(id)arg3 defaultRole:(long long)arg4;
- (void)notificationsHomeVC:(id)arg1 userTappedFileWithID:(id)arg2 fromView:(id)arg3;
- (void)openFileWithID:(id)arg1;
- (id)teamDriveActionProviderForNavigationController:(id)arg1;
- (id)fileActionProviderForNavigationController:(id)arg1;
- (void)actionItemVC:(id)arg1 didPerformAction:(long long)arg2 forFile:(id)arg3;
- (void)navControllerDidDeactivateMultiselect:(id)arg1;
- (void)navControllerDidActivateMultiselect:(id)arg1;
- (void)navControllerDidPressAtticButton:(id)arg1;
- (void)navControllerDidPressFloatingActionButton:(id)arg1;
- (void)presentCreateBottomSheet;
- (void)navController:(id)arg1 actionWasPerformed:(id)arg2 onFile:(id)arg3 userInfo:(id)arg4;
- (void)navController:(id)arg1 fileWasSelected:(id)arg2 fromView:(id)arg3 fromDataSource:(id)arg4;
- (void)workspaceViewControllerDidUpdateWorkspace:(id)arg1;
- (_Bool)isViewController:(id)arg1 topLevelInFABController:(id)arg2;
- (_Bool)isWorkspacesShowingOnFABController:(id)arg1;
- (_Bool)isPriorityShowingOnFABController:(id)arg1;
- (_Bool)isTeamDrivesShowingOnFABController:(id)arg1;
- (void)fabControllerDidTapFeedbackFAB:(id)arg1;
- (void)fabControllerDidTapFAB:(id)arg1;
- (void)configureSearchForViewController:(id)arg1 searchVC:(id)arg2 searchBarHidden:(_Bool)arg3;
- (void)avatarButtonTapped:(id)arg1;
- (void)menuButtonTapped:(id)arg1;
@property(nonatomic) long long bottomTabBarControllerPersistedState;
- (void)viewDidAppear:(id)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) long long unreadNotificationCount;
- (void)displayNotificationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)postNotificationForSideNav:(id)arg1;
- (void)displayNotifications;
- (void)postStorageNotification:(id)arg1;
- (void)displayStorageQuotaWithNotification:(id)arg1;
- (void)displayStorageQuotaWithDarkModeEnabled:(_Bool)arg1;
- (void)displayStorageQuota;
- (void)displayHelp;
- (void)displayFeedback;
- (void)displayPrivacyScreenSettings;
- (void)displaySettings;
- (void)displayTrash;
- (void)displayOffline;
- (void)displayRecent;
- (void)displaySharedWithMe;
- (void)displayStarred;
- (void)displayDevices;
- (void)displayTeamDrives;
- (void)displayMyDrive;
- (void)showSidePanel;
@property(readonly, nonatomic) UIViewController *topLevelPresentedViewController;
- (void)displayAccountSnackbarWithSnackbarType:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (id)notificationCategories;
- (unsigned long long)notificationPresentationOptions;
- (void)performSearchWithQueryString:(id)arg1;
- (void)handleApplicationShortcutAction:(long long)arg1;
- (void)handleURLAction:(long long)arg1;
- (void)openFileWithID:(id)arg1 usersToInvite:(id)arg2 linkToApprovalList:(_Bool)arg3 approvalToOpen:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)requestAccessForFileWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)shutdownWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)uploadFileAtURL:(id)arg1;
- (void)openFileWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)refreshDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)didBecomeInactive;
- (void)willBecomeInactive;
- (void)didBecomeActive;
@property(readonly, nonatomic) id <SSOIdentity> ssoIdentity;
@property(readonly, nonatomic) OGLAccountSnackbarManager *snackbarManager; // @synthesize snackbarManager=_snackbarManager;
- (id)multiSelectControllerForContainerVC:(id)arg1;
@property(readonly, nonatomic) GDKFileDropController *fileDropController; // @synthesize fileDropController=_fileDropController;
- (void)setUpContainerVC:(id)arg1;
@property(readonly, nonatomic) UIViewController<GDKViewControllerContaining> *containerVC;
@property(readonly, nonatomic) GDKActionHandlerFactory *actionHandlerFactory; // @synthesize actionHandlerFactory=_actionHandlerFactory;
@property(readonly, nonatomic) id <GDAActionPanelManaging> actionPanelManager;
@property(readonly, nonatomic) id <GDAFilePresenting> filePresenter; // @synthesize filePresenter=_filePresenter;
- (void)registerNotifications;
@property(readonly, nonatomic) GDANotificationsActionHandler *notificationsActionHandler; // @synthesize notificationsActionHandler=_notificationsActionHandler;
@property(readonly, nonatomic) GDANavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(readonly, nonatomic) GDAPanelController *gm2PanelController; // @synthesize gm2PanelController=_gm2PanelController;
@property(readonly, nonatomic) id <GDAPanelController> panelController;
@property(readonly, nonatomic) GDKBottomTabBarController *bottomTabBarController; // @synthesize bottomTabBarController=_bottomTabBarController;
@property(readonly, nonatomic) GDKFABController *fabController; // @synthesize fabController=_fabController;
@property(readonly, nonatomic) GDANavigationStack *navigationStack; // @synthesize navigationStack=_navigationStack;
@property(readonly, nonatomic) id <GDKTeamDriveVCProducing> teamDriveVCProducer; // @synthesize teamDriveVCProducer=_teamDriveVCProducer;
@property(readonly, nonatomic) GDAViewControllerRegistry *vcRegistry; // @synthesize vcRegistry=_vcRegistry;
@property(readonly, nonatomic) UIViewController *rootViewController;
- (void)initializeViewControllers;
- (id)searchPlaceholderText;
- (id)initWithSSOAuthorization:(id)arg1 accountSwitcher:(id)arg2 applicationServices:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

