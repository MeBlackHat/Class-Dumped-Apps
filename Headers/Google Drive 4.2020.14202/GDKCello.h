//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKCelloAccessing-Protocol.h"
#import "GDKCelloBackgroundSyncState-Protocol.h"
#import "GDKCelloBackgroundSyncStateHolding-Protocol.h"
#import "GDKCelloInitializing-Protocol.h"
#import "GDKCelloObserverRegistering-Protocol.h"
#import "GDKCelloPrefetching-Protocol.h"
#import "GDKCelloShuttingDown-Protocol.h"
#import "GDKFilesLogReporting-Protocol.h"

@class GDKCelloOptions, GTMSessionFetcherService, NSString;
@protocol GDKCelloBackgroundSyncState, GDKCelloMetricsNotifying, OS_dispatch_queue;

@interface GDKCello : NSObject <GDKCelloBackgroundSyncState, GDKCelloAccessing, GDKCelloBackgroundSyncStateHolding, GDKCelloInitializing, GDKCelloPrefetching, GDKCelloObserverRegistering, GDKCelloShuttingDown, GDKFilesLogReporting>
{
    _Bool _celloInitializeComplete;
    NSObject<OS_dispatch_queue> *_celloPlatformQueue;
    id <GDKCelloBackgroundSyncState> _syncState;
    NSObject<OS_dispatch_queue> *_celloApiQueue;
    GDKCelloOptions *_options;
    GTMSessionFetcherService *_fetcherService;
    id <GDKCelloMetricsNotifying> _metricsRecorder;
    shared_ptr_bbf5b296 _cello;
    shared_ptr_eead3c4d _platform;
    shared_ptr_d44a9d2a _tracer;
    shared_ptr_31941e99 _localStore;
    // Error parsing type: {InitializeOptions="_vptr$MessageLite"^^?"_internal_metadata_"{InternalMetadata="ptr_"^v}"_has_bits_"{HasBits<3>="has_bits_"[3I]}"_cached_size_"{CachedSize="size_"{atomic<int>="__a_"Ai}}"default_field_"{RepeatedField<int>="current_size_"i"total_size_"i"arena_or_elements_"^v}"account_setting_namespace_"{RepeatedPtrField<std::__1::basic_string<char> >="arena_"^{Arena}"current_size_"i"total_size_"i"rep_"^{Rep}}"default_team_drive_field_"{RepeatedField<int>="current_size_"i"total_size_"i"arena_or_elements_"^v}"trusted_root_certs_file_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"lost_and_found_path_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"language_code_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"proxy_config_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"include_permissions_for_view_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"proxy_exceptions_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"feature_label_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"custom_cloud_search_api_url_"{ArenaStringPtr="ptr_"^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}"exponential_backoff_options_"^{ExponentialBackoffOptions}"fetch_task_exponential_backoff_options_"^{ExponentialBackoffOptions}"content_cache_options_"^{ContentCacheOptions}"thumbnail_cache_options_"^{ContentCacheOptions}"drive_api_options_"^{DriveApiOptions}"backfill_options_"^{BackfillOptions}"corpus_filter_"^{ItemQueryRequest}"read_token_bucket_options_"^{TokenBucketOptions}"write_token_bucket_options_"^{TokenBucketOptions}"thumbnail_token_bucket_options_"^{TokenBucketOptions}"poll_for_changes_token_bucket_options_"^{TokenBucketOptions}"testing_options_"^{TestingOptions}"local_store_options_"^{LocalStoreOptions}"skip_sync_on_startup_"B"event_tracing_"B"field_event_recording_"B"file_name_uniqueness_"B"num_team_drives_to_backfill_"I"upload_idle_delay_msec_"q"create_trash_collapse_threshold_msec_"q"schedule_push_task_interval_msec_"q"enable_file_dance_"B"enable_resumable_uploads_"B"force_nonblocking_resync_"B"collapse_recursive_deletes_"B"send_change_notifications_for_queries_"B"unsafe_network_"B"reschedule_poll_for_changes_when_online_"B"enable_do_not_upload_folders_"B"recursive_delete_idle_threshold_msec_"q"fetch_task_throttle_time_ms_"q"max_changelog_changes_per_fetch_"q"account_update_delay_msec_"q"app_list_update_delay_msec_"q"disable_crl_check_"B"update_app_list_"B"set_all_properties_"B"content_download_http_416_workaround_"B"backfill_machine_roots_"B"extra_fs_query_fields_"B"pessimistic_copy_"B"compute_do_not_upload_automatically_"B"fetch_account_settings_during_initialization_"B"detect_stable_id_reuse_"B"resync_when_default_fields_change_"B"use_shared_drives_api_"B"return_shortcut_target_items_"B"enable_concurrent_merged_read_optimization_"B"force_cloud_recreate_order_"B"allow_subscription_task_"B"notify_shared_drive_cache_resets_"B"reset_file_content_on_revert_flow_"B"enable_subfolder_sharing_"B"repair_stable_id_reuse_"B"search_endpoint_"i"no_recoverable_last_viewed_errors_"B"search_store_"B"trim_parents_during_cloud_merge_"B"trim_parents_during_commit_"B"enable_delay_upload_local_property_"B"external_content_cache_"B"log_level_"i"schema_group_"i"changelog_too_deep_threshold_"q"changelog_too_deep_for_team_drive_"q"max_concurrent_downloads_"i"max_thumbnail_concurrent_downloads_"i"resumable_upload_minimum_size_bytes_"q"max_operation_batch_size_"i"max_changelog_result_size_"i"max_kbytes_per_push_task_instance_"q"max_query_page_size_"q"enable_google_photos_"B"allow_pessimistic_task_"B"enable_periodic_account_settings_fetch_"B"reset_zeroes_largest_change_id_"B"fetch_content_bytes_before_cancel_multiplier_"f"max_parallel_downloads_per_file_"q"stale_fetch_threshold_msec_"q"max_parallel_push_task_instances_"i"initialization_cloud_queries_max_retry_count_"i"capability_propagation_page_size_"q"min_bytes_saved_to_split_request_"q"resubscribe_retry_interval_msec_"q"account_update_sec_"q"max_parallel_resumable_uploads_"i"fetch_shared_drive_change_ids_on_init_"B}, name: _initOptions
}

+ (id)errorFromInitializingCello:(id)arg1 status:(int)arg2;
+ (_Bool)isLocalId:(id)arg1;
@property(readonly, nonatomic) shared_ptr_31941e99 localStore; // @synthesize localStore=_localStore;
@property(readonly, nonatomic) shared_ptr_d44a9d2a tracer; // @synthesize tracer=_tracer;
@property(readonly, nonatomic) shared_ptr_eead3c4d platform; // @synthesize platform=_platform;
@property(nonatomic) _Bool celloInitializeComplete; // @synthesize celloInitializeComplete=_celloInitializeComplete;
@property(readonly, nonatomic) shared_ptr_bbf5b296 cello; // @synthesize cello=_cello;
@property(readonly, nonatomic) id <GDKCelloMetricsNotifying> metricsRecorder; // @synthesize metricsRecorder=_metricsRecorder;
@property(readonly, nonatomic) GTMSessionFetcherService *fetcherService; // @synthesize fetcherService=_fetcherService;
// Error parsing type for property initOptions:
// Property attributes: T{InitializeOptions=^^?{InternalMetadata=^v}{HasBits<3>=[3I]}{CachedSize={atomic<int>=Ai}}{RepeatedField<int>=ii^v}{RepeatedPtrField<std::__1::basic_string<char> >=^{Arena}ii^{Rep}}{RepeatedField<int>=ii^v}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}{ArenaStringPtr=^{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >}}^{ExponentialBackoffOptions}^{ExponentialBackoffOptions}^{ContentCacheOptions}^{ContentCacheOptions}^{DriveApiOptions}^{BackfillOptions}^{ItemQueryRequest}^{TokenBucketOptions}^{TokenBucketOptions}^{TokenBucketOptions}^{TokenBucketOptions}^{TestingOptions}^{LocalStoreOptions}BBBBIqqqBBBBBBBBqqqqqBBBBBBBBBBBBBBBBBBBBiBBBBBBiiqqiiqiiqqBBBBfqqiiqqqqiB},R,N,V_initOptions

@property(readonly, nonatomic) GDKCelloOptions *options; // @synthesize options=_options;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *celloApiQueue; // @synthesize celloApiQueue=_celloApiQueue;
@property(nonatomic) __weak id <GDKCelloBackgroundSyncState> syncState; // @synthesize syncState=_syncState;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *celloPlatformQueue; // @synthesize celloPlatformQueue=_celloPlatformQueue;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)unregisterActivityObserver:(long long)arg1;
- (void)registerActivityObserver:(function_35b6d460)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)unregisterChangeNotifyObserver:(long long)arg1;
- (void)registerChangeNotifyObserver:(function_adf90115)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) _Bool isBackgroundSyncingEnabled;
- (void)beginFetching;
- (id)getTraceLog;
- (weak_ptr_edecc4ab)celloCppObject;
- (void)executeWithCppObject:(CDUnknownBlockType)arg1;
- (void)shutdownWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (void)doInitializeCelloWithCallbackQueue:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)createCelloWithError:(id *)arg1;
- (void)initializeWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)initWithOptions:(id)arg1 fetcherService:(id)arg2 metricsRecorder:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

