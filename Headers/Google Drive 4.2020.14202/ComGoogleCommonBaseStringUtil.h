//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface ComGoogleCommonBaseStringUtil : NSObject
{
}

+ (void)initialize;
+ (_Bool)mustEscapeCharInJsonOrJsStringWithInt:(int)arg1;
+ (_Bool)mustEscapeCharInJsonStringWithInt:(int)arg1;
+ (_Bool)mustEscapeCharInJsStringWithInt:(int)arg1;
+ (id)unicodePreservingSubstringWithNSString:(id)arg1 withInt:(int)arg2;
+ (id)unicodePreservingSubstringWithNSString:(id)arg1 withInt:(int)arg2 withInt:(int)arg3;
+ (int)unicodePreservingIndexWithNSString:(id)arg1 withInt:(int)arg2;
+ (id)truncateAtMaxLengthWithNSString:(id)arg1 withInt:(int)arg2 withBoolean:(_Bool)arg3;
+ (id)truncateIfNecessaryWithNSString:(id)arg1 withInt:(int)arg2;
+ (id)truncateStringForUtf8StorageWithNSString:(id)arg1 withInt:(int)arg2;
+ (_Bool)endsWithIgnoreCaseWithNSString:(id)arg1 withNSString:(id)arg2;
+ (_Bool)startsWithIgnoreCaseWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)capitalizeWithNSString:(id)arg1;
+ (int)displayWidthWithChar:(unsigned short)arg1;
+ (int)displayWidthWithNSString:(id)arg1;
+ (_Bool)isCjkWithInt:(int)arg1;
+ (_Bool)isCjkWithChar:(unsigned short)arg1;
+ (_Bool)isCjkWithNSString:(id)arg1;
+ (_Bool)containsCharRefWithNSString:(id)arg1;
+ (id)lastTokenWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)parseDelimitedListWithNSString:(id)arg1 withChar:(unsigned short)arg2;
+ (id)string2MapWithNSString:(id)arg1 withNSString:(id)arg2 withNSString:(id)arg3 withBoolean:(_Bool)arg4;
+ (id)splitToMapWithNSString:(id)arg1 withNSString:(id)arg2 withNSString:(id)arg3 withBoolean:(_Bool)arg4;
+ (id)javaScriptUnescapeWithNSString:(id)arg1;
+ (void)escapeStringBodyWithJavaLangCharSequence:(id)arg1 withBoolean:(_Bool)arg2 withComGoogleCommonBaseStringUtil_JsEscapingMode:(id)arg3 withJavaLangAppendable:(id)arg4;
+ (id)javaScriptEscapeToAsciiWithJavaLangCharSequence:(id)arg1;
+ (id)javaScriptEscapeWithJavaLangCharSequence:(id)arg1;
+ (id)stripHtmlTagsWithNSString:(id)arg1;
+ (id)unescapeHTMLWithNSString:(id)arg1 withBoolean:(_Bool)arg2;
+ (id)unescapeHTMLWithNSString:(id)arg1;
+ (id)unescapeCStringWithNSString:(id)arg1;
+ (id)maskLeftWithNSString:(id)arg1 withInt:(int)arg2 withChar:(unsigned short)arg3;
+ (id)convertEOLToLFWithNSString:(id)arg1;
+ (id)hexToBytesWithJavaLangCharSequence:(id)arg1;
+ (id)replaceSmartQuotesWithNSString:(id)arg1;
+ (id)stripSuffixIgnoreCaseWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)stripSuffixWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)stripPrefixIgnoreCaseWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)stripPrefixWithNSString:(id)arg1 withNSString:(id)arg2;
+ (id)indentWithNSString:(id)arg1 withInt:(int)arg2;
+ (id)fixedWidthWithNSStringArray:(id)arg1 withInt:(int)arg2;
+ (id)fixedWidthWithNSString:(id)arg1 withInt:(int)arg2;
+ (id)toNullIfEmptyOrWhitespaceWithNSString:(id)arg1;
+ (_Bool)isEmptyOrWhitespaceWithNSString:(id)arg1;

@end

