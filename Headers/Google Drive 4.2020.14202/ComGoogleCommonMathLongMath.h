//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface ComGoogleCommonMathLongMath : NSObject
{
}

+ (void)initialize;
+ (_Bool)isPrimeWithLong:(long long)arg1;
+ (long long)meanWithLong:(long long)arg1 withLong:(long long)arg2;
+ (_Bool)fitsInIntWithLong:(long long)arg1;
+ (long long)multiplyFractionWithLong:(long long)arg1 withLong:(long long)arg2 withLong:(long long)arg3;
+ (long long)binomialWithInt:(int)arg1 withInt:(int)arg2;
+ (long long)factorialWithInt:(int)arg1;
+ (long long)saturatedPowWithLong:(long long)arg1 withInt:(int)arg2;
+ (long long)saturatedMultiplyWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)saturatedSubtractWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)saturatedAddWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)checkedPowWithLong:(long long)arg1 withInt:(int)arg2;
+ (long long)checkedMultiplyWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)checkedSubtractWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)checkedAddWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)gcdWithLong:(long long)arg1 withLong:(long long)arg2;
+ (long long)modWithLong:(long long)arg1 withLong:(long long)arg2;
+ (int)modWithLong:(long long)arg1 withInt:(int)arg2;
+ (long long)divideWithLong:(long long)arg1 withLong:(long long)arg2 withJavaMathRoundingMode:(id)arg3;
+ (long long)sqrtWithLong:(long long)arg1 withJavaMathRoundingMode:(id)arg2;
+ (long long)powWithLong:(long long)arg1 withInt:(int)arg2;
+ (int)log10FloorWithLong:(long long)arg1;
+ (int)log10WithLong:(long long)arg1 withJavaMathRoundingMode:(id)arg2;
+ (int)log2WithLong:(long long)arg1 withJavaMathRoundingMode:(id)arg2;
+ (int)lessThanBranchFreeWithLong:(long long)arg1 withLong:(long long)arg2;
+ (_Bool)isPowerOfTwoWithLong:(long long)arg1;
+ (long long)floorPowerOfTwoWithLong:(long long)arg1;
+ (long long)ceilingPowerOfTwoWithLong:(long long)arg1;

@end

