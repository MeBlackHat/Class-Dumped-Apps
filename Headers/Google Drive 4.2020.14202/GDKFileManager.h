//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "GDKCelloAccessing-Protocol.h"
#import "GDKFileFetcher-Protocol.h"
#import "GDKFileQuerent-Protocol.h"
#import "GDKFilesLogReporting-Protocol.h"
#import "GDKItemActionObserverRegistrar-Protocol.h"
#import "GDKItemsLiveListQuerent-Protocol.h"
#import "GDKPersistenceChecking-Protocol.h"
#import "GDKRootIDFetcher-Protocol.h"
#import "GDKTeamDriveQuerying-Protocol.h"

@class GDKCelloPollingTimer, NSString;
@protocol GDKApprovalsService, GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting, GDKCelloPrefetching, GDKChangelogPolling, GDKFileFetcher, GDKFileMutating, GDKFileQuerent, GDKItemActionObserverRegistrar, GDKItemsLiveListQuerent, GDKPersistenceChecking, GDKRootIDFetcher, GDKShortcutsService, GDKTeamDriveMutating, GDKTeamDriveQuerying, GDKWorkspacesProvider, OS_dispatch_queue;

@interface GDKFileManager : NSObject <GDKFileFetcher, GDKFileQuerent, GDKFilesLogReporting, GDKItemActionObserverRegistrar, GDKItemsLiveListQuerent, GDKPersistenceChecking, GDKRootIDFetcher, GDKTeamDriveQuerying, GDKCelloAccessing>
{
    id <GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting> _cello;
    id <GDKApprovalsService> _approvalsService;
    id <GDKChangelogPolling> _changelogPoller;
    id <GDKFileFetcher> _fileFetcher;
    id <GDKFileMutating> _fileMutator;
    id <GDKFileQuerent> _fileQuerent;
    id <GDKItemActionObserverRegistrar> _itemActionObserverRegistrar;
    id <GDKItemsLiveListQuerent> _itemsLiveListQuerent;
    id <GDKPersistenceChecking> _persistenceChecker;
    id <GDKRootIDFetcher> _rootIDFetcher;
    id <GDKShortcutsService> _shortcutsService;
    id <GDKTeamDriveMutating> _teamDriveMutator;
    id <GDKTeamDriveQuerying> _teamDriveQuerent;
    id <GDKWorkspacesProvider> _workspacesProvider;
    id <GDKCelloPrefetching> _prefetcher;
    GDKCelloPollingTimer *_refreshTimer;
}

+ (id)fileManagerWithParams:(id)arg1 fetcherService:(id)arg2 uploadService:(id)arg3 onInitialized:(CDUnknownBlockType)arg4;
@property(readonly, nonatomic) GDKCelloPollingTimer *refreshTimer; // @synthesize refreshTimer=_refreshTimer;
@property(readonly, nonatomic) id <GDKCelloPrefetching> prefetcher; // @synthesize prefetcher=_prefetcher;
@property(readonly, nonatomic) id <GDKWorkspacesProvider> workspacesProvider; // @synthesize workspacesProvider=_workspacesProvider;
@property(readonly, nonatomic) id <GDKTeamDriveQuerying> teamDriveQuerent; // @synthesize teamDriveQuerent=_teamDriveQuerent;
@property(readonly, nonatomic) id <GDKTeamDriveMutating> teamDriveMutator; // @synthesize teamDriveMutator=_teamDriveMutator;
@property(readonly, nonatomic) id <GDKShortcutsService> shortcutsService; // @synthesize shortcutsService=_shortcutsService;
@property(readonly, nonatomic) id <GDKRootIDFetcher> rootIDFetcher; // @synthesize rootIDFetcher=_rootIDFetcher;
@property(readonly, nonatomic) id <GDKPersistenceChecking> persistenceChecker; // @synthesize persistenceChecker=_persistenceChecker;
@property(readonly, nonatomic) id <GDKItemsLiveListQuerent> itemsLiveListQuerent; // @synthesize itemsLiveListQuerent=_itemsLiveListQuerent;
@property(readonly, nonatomic) id <GDKItemActionObserverRegistrar> itemActionObserverRegistrar; // @synthesize itemActionObserverRegistrar=_itemActionObserverRegistrar;
@property(readonly, nonatomic) id <GDKFileQuerent> fileQuerent; // @synthesize fileQuerent=_fileQuerent;
@property(readonly, nonatomic) id <GDKFileMutating> fileMutator; // @synthesize fileMutator=_fileMutator;
@property(readonly, nonatomic) id <GDKFileFetcher> fileFetcher; // @synthesize fileFetcher=_fileFetcher;
@property(readonly, nonatomic) id <GDKChangelogPolling> changelogPoller; // @synthesize changelogPoller=_changelogPoller;
@property(readonly, nonatomic) id <GDKApprovalsService> approvalsService; // @synthesize approvalsService=_approvalsService;
@property(retain, nonatomic) id <GDKCelloAccessing><GDKCelloObserverRegistering><GDKCelloShuttingDown><GDKFilesLogReporting> cello; // @synthesize cello=_cello;
- (void).cxx_destruct;
- (id)createShortcutWithTitle:(id)arg1 parentID:(id)arg2 targetID:(id)arg3;
- (void)startRefreshTimerWithPollingIntervalMS:(int)arg1;
- (id)getTraceLog;
- (void)executeWithCppObject:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *celloPlatformQueue;
- (void)deleteWorkspaceWithID:(id)arg1 withCompletionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)createWorkspaceWithTitle:(id)arg1 withToken:(id)arg2 withCompletionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)unarchiveWorkspace:(id)arg1 withCompletionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)archiveWorkspace:(id)arg1 withCompletionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)renameWorkspace:(id)arg1 toTitle:(id)arg2 withCompletionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)removeFile:(id)arg1 fromWorkspace:(id)arg2 withCompletionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)addFile:(id)arg1 toWorkspace:(id)arg2 withCompletionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchFilesForWorkspace:(id)arg1 forceServerRequest:(_Bool)arg2 withCompletionQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)listWorkspacesWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)listTeamDrivesWithSkipLocalstore:(_Bool)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)queryTeamDrivesWithDelegate:(id)arg1;
- (void)deleteTeamDrive:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)updateTeamDrive:(id)arg1 isHiddenTeamDrive:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateTeamDrive:(id)arg1 teamMembersOnly:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateTeamDrive:(id)arg1 domainUsersOnly:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateTeamDrive:(id)arg1 disallowDriveFileStream:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateTeamDrive:(id)arg1 copyRequiresWriterPermission:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateTeamDrive:(id)arg1 title:(id)arg2 themeImageID:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)createTeamDriveWithTitle:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)getRootIDWithCompletion:(CDUnknownBlockType)arg1;
@property(readonly, nonatomic) NSString *rootID;
- (_Bool)isFileIdentifierPersisted:(id)arg1;
- (id)liveListForFileWithIdentifier:(id)arg1 delegate:(id)arg2;
- (id)liveListForQuery:(id)arg1 groupBy:(id)arg2 initialSectionIndex:(unsigned long long)arg3 pageSize:(unsigned long long)arg4 delegate:(id)arg5;
- (id)liveListForQuery:(id)arg1 groupBy:(id)arg2 initialSectionIndex:(unsigned long long)arg3 delegate:(id)arg4;
- (id)liveListForQuery:(id)arg1 delegate:(id)arg2;
- (CDUnknownBlockType)registerItemDeletedForeverObserver:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)registerLocalFolderCreationObserver:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)registerShortcutRevertedObserver:(CDUnknownBlockType)arg1;
- (CDUnknownBlockType)registerMoveRevertedObserver:(CDUnknownBlockType)arg1;
- (void)queryFiles:(id)arg1 queryParams:(id)arg2 onResults:(CDUnknownBlockType)arg3;
- (void)queryFiles:(id)arg1 onResults:(CDUnknownBlockType)arg2;
- (void)deleteFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)untrashFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)removeReadOnlyLockFromFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)addReadOnlyLockToFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)restoreFile:(id)arg1 toFolderId:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)removeFile:(id)arg1 fromFolderId:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)copyFileWithID:(id)arg1 newTitle:(id)arg2 moveToFolder:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)moveFile:(id)arg1 fromFolder:(id)arg2 toFolder:(id)arg3 onCompletion:(CDUnknownBlockType)arg4;
- (void)addFile:(id)arg1 toFolder:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 localMIMEType:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 offlineDownloadProgress:(long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 offlineStatus:(unsigned long long)arg2 offlineFilename:(id)arg3 offlineMimeType:(id)arg4 offlineLastModifiedDate:(id)arg5 onCompletion:(CDUnknownBlockType)arg6;
- (void)updateFile:(id)arg1 offlineStatus:(unsigned long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 markedForOfflineBySystem:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 markedForOfflineByUser:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 filesAppFavoriteRank:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 filesAppTagData:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 hasLocalThumbnail:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateLastViewedForFile:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)updateFolder:(id)arg1 colorPaletteIndex:(long long)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 starred:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)updateFile:(id)arg1 title:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)createFileLocallyWithId:(id)arg1 inFolder:(id)arg2 withTitle:(id)arg3 mimeType:(id)arg4 downloadURL:(id)arg5 onCompletion:(CDUnknownBlockType)arg6;
- (void)createFolderWithTitle:(id)arg1 inFolder:(id)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)getFileById:(id)arg1 forceServerRequest:(_Bool)arg2 onCompletion:(CDUnknownBlockType)arg3;
- (void)getFileById:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)getFilesByIDs:(id)arg1 onCompletion:(CDUnknownBlockType)arg2;
- (void)resumePollForChanges;
- (void)pausePollForChanges;
- (void)pollForChangesWithCompletion:(CDUnknownBlockType)arg1;
- (void)pollForChangesWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)setDueTime:(id)arg1 forItemWithID:(id)arg2 approvalID:(id)arg3;
- (id)addApprovalReviewers:(id)arg1 forItemWithID:(id)arg2 approvalID:(id)arg3 comment:(id)arg4;
- (id)changeApprovalReviewerFromEmail:(id)arg1 toEmail:(id)arg2 forItemWithID:(id)arg3 approvalID:(id)arg4 comment:(id)arg5;
- (id)addComment:(id)arg1 toApproval:(id)arg2 forItem:(id)arg3;
- (id)declineApproval:(id)arg1 forItem:(id)arg2 withComment:(id)arg3;
- (id)approveApproval:(id)arg1 forItem:(id)arg2 withComment:(id)arg3;
- (id)cancelApproval:(id)arg1 forItem:(id)arg2 withComment:(id)arg3;
- (id)listEventsForApproval:(id)arg1 item:(id)arg2;
- (id)listApprovalsForItem:(id)arg1;
- (id)fetchApprovalWithIdentifier:(id)arg1 itemID:(id)arg2;
- (id)fetchApprovalsWithIdentifiers:(id)arg1 itemID:(id)arg2;
- (id)createApprovalForItem:(id)arg1 approvers:(id)arg2 dueDate:(id)arg3 comment:(id)arg4;
- (void)shutdownWithCompletionQueue:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)dealloc;
- (id)initWithCello:(id)arg1 prefetcher:(id)arg2 backgroundSyncStateHolder:(id)arg3 uploadService:(id)arg4 pollingIntervalMS:(int)arg5;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

