//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDate, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSString, NSTimer, VPNConfiguration, VPNFileLogger, VPNNetworkMonitor;
@protocol VPNAPIAdapterProtocol, VPNConnectionAdapterProtocol;

@interface VPNAPIManager : NSObject
{
    _Bool _networkIsReachable;
    _Bool _isUserInitiatedDisconnect;
    _Bool _isReconnectionEnabled;
    NSObject<VPNConnectionAdapterProtocol> *_activeConnectionAdapter;
    VPNConfiguration *_vpnConfiguration;
    long long _status;
    NSObject<VPNAPIAdapterProtocol> *_apiAdapter;
    NSMutableArray *_connectionAdapters;
    NSMutableDictionary *_plugins;
    NSString *_serviceName;
    NSTimer *_serverUpdateTimer;
    NSDate *_lastServerUpdate;
    NSDictionary *_options;
    NSArray *_requiredOptions;
    NSDictionary *_defaultOptions;
    VPNNetworkMonitor *_networkMonitor;
    VPNFileLogger *_fileLogger;
    NSLock *_connectionAdapterLock;
}

@property(retain) NSLock *connectionAdapterLock; // @synthesize connectionAdapterLock=_connectionAdapterLock;
@property(retain) VPNFileLogger *fileLogger; // @synthesize fileLogger=_fileLogger;
@property(retain) VPNNetworkMonitor *networkMonitor; // @synthesize networkMonitor=_networkMonitor;
@property(retain) NSDictionary *defaultOptions; // @synthesize defaultOptions=_defaultOptions;
@property(retain) NSArray *requiredOptions; // @synthesize requiredOptions=_requiredOptions;
@property(retain, nonatomic) NSDictionary *options; // @synthesize options=_options;
@property(retain) NSDate *lastServerUpdate; // @synthesize lastServerUpdate=_lastServerUpdate;
@property(retain) NSTimer *serverUpdateTimer; // @synthesize serverUpdateTimer=_serverUpdateTimer;
@property(retain) NSString *serviceName; // @synthesize serviceName=_serviceName;
@property(retain) NSMutableDictionary *plugins; // @synthesize plugins=_plugins;
@property(retain) NSMutableArray *connectionAdapters; // @synthesize connectionAdapters=_connectionAdapters;
@property _Bool isReconnectionEnabled; // @synthesize isReconnectionEnabled=_isReconnectionEnabled;
@property _Bool isUserInitiatedDisconnect; // @synthesize isUserInitiatedDisconnect=_isUserInitiatedDisconnect;
@property(retain) NSObject<VPNAPIAdapterProtocol> *apiAdapter; // @synthesize apiAdapter=_apiAdapter;
@property _Bool networkIsReachable; // @synthesize networkIsReachable=_networkIsReachable;
@property long long status; // @synthesize status=_status;
@property(readonly) VPNConfiguration *vpnConfiguration; // @synthesize vpnConfiguration=_vpnConfiguration;
- (void).cxx_destruct;
- (void)postErrorNotification:(id)arg1 withDescription:(id)arg2 andCode:(long long)arg3;
- (id)getOption:(id)arg1;
- (void)selectedProtocolDidChange:(id)arg1;
@property(retain) NSObject<VPNConnectionAdapterProtocol> *activeConnectionAdapter; // @synthesize activeConnectionAdapter=_activeConnectionAdapter;
- (void)cleanup;
- (void)performAutomaticLoginWithConnectionStatus:(long long)arg1;
- (void)clearLogs;
- (long long)logLevel;
- (void)setLogLevel:(long long)arg1;
- (id)logFile;
- (id)logPath;
- (void)addFileLoggerWithLevel:(long long)arg1;
- (void)initLogging;
- (id)initWithAPIAdapter:(id)arg1 connectionAdapters:(id)arg2 andOptions:(id)arg3;
- (id)initWithAPIAdapter:(id)arg1 connectionAdapter:(id)arg2 andOptions:(id)arg3;
- (id)fetchAllCities;
- (id)fetchAllCountries;
- (void)updateServerListOnTimer:(id)arg1;
- (_Bool)shouldPostServerCapacityWarningNotification;
- (void)updateServerList:(_Bool)arg1;
- (void)updateServerList;
- (void)loadInitialServerList;
- (void)refreshLocation;
- (_Bool)isLoggedIn;
- (void)logout;
- (void)completeLoginWithUser:(id)arg1 password:(id)arg2 andError:(id)arg3;
- (void)automaticLoginWithVPNConfiguration:(id)arg1;
- (void)loginWithUsername:(id)arg1 password:(id)arg2;
- (double)connectedTimeInSeconds;
- (id)connectedDate;
- (id)connectionAdapterForProtocol:(long long)arg1;
- (void)validateConfiguration:(id)arg1 withError:(id *)arg2;
- (void)addConnectionAdapter:(id)arg1;
- (void)installHelperAndConnectOnInstall:(_Bool)arg1;
- (void)isHelperInstalled;
- (_Bool)isDisconnectedFromVPN;
- (_Bool)isDisconnectingFromVPN;
- (_Bool)isConnectingToVPN;
- (_Bool)isConnectedToVPN;
- (void)disconnect:(_Bool)arg1;
- (void)disconnect;
- (void)connect;
- (long long)protocolForString:(id)arg1;
- (id)supportedProtocols;
- (id)getPlugin:(id)arg1;
- (void)addPlugin:(id)arg1 forKey:(id)arg2;
- (void)pluginWillConnect;
- (void)pluginCleanup;
- (void)pluginLogout;

@end

