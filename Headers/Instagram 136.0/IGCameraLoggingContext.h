//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class IGUserSession, NSString;
@protocol IGAnalyticsEventLoggingProtocol;

@interface IGCameraLoggingContext : NSObject
{
    NSString *_effectGallerySessionID;
    NSString *_effectGallerySearchSessionID;
    id <IGAnalyticsEventLoggingProtocol> _logger;
    IGUserSession *_userSession;
    unsigned long long _entryPoint;
    NSString *_sessionID;
    _Bool _hasLoggedCameraEffectsDidShow;
}

- (void).cxx_destruct;
- (id)_analyticsEventWithName:(id)arg1 eventType:(long long)arg2;
- (void)logDidTapAlbumButtonWithEffectID:(id)arg1 effectInstanceID:(id)arg2;
- (void)logDidTapMusicButtonWithEffectID:(id)arg1 effectInstanceID:(id)arg2;
- (id)extraSessionData;
- (void)endDidShowEffectsIfNeeded:(_Bool)arg1 errorCode:(long long)arg2 networkEffectsDisplayed:(long long)arg3;
- (void)cancelDidShowEffectsIfNeeded;
- (void)markCachedEffectsDidShow:(long long)arg1 cacheExpired:(_Bool)arg2;
- (void)startDidShowEffects;
- (void)logDidTapEffectStoriesWithEffectID:(id)arg1 entryPoint:(unsigned long long)arg2;
- (void)logDidUnsaveToCameraWithUserID:(id)arg1 effectID:(id)arg2 surface:(long long)arg3;
- (void)logDidSaveToCameraWithUserID:(id)arg1 effectID:(id)arg2 surface:(long long)arg3;
- (void)logTappedLayoutCancelButton;
- (void)logTappedLayoutUndoButton;
- (void)logTappedGhostButton;
- (void)logTappedTimerButton;
- (void)logTappedSpeedSelectionButton;
- (void)logTappedMusicSelectionButton;
- (void)logTappedDraftsSellAllDiscardConfirmationForNumberOfDrafts:(long long)arg1;
- (void)logTappedDraftSeeAllDiscard;
- (void)logTappedDraftSeeAllSelect;
- (void)logTappedDraftSeeAll;
- (void)logTappedDraftContinueSessionOptionDiscard;
- (void)logTappedDraftContinueSessionOptionContinue;
- (void)logDraftContinueSessionShown;
- (void)logDraftSongNotAvailable;
- (void)logDraftPicked;
- (void)logTappedSaveDraft;
- (void)logTappedClipsSaveWithoutAudioDialogCancelWithUserID:(id)arg1;
- (void)logTappedClipsSaveWithoutAudioDialogSaveWithUserID:(id)arg1;
- (void)logSeenClipsSaveWithoutAudioDialogWithUserID:(id)arg1;
- (void)logTappedGetStartedClipsNUXWithUserID:(id)arg1;
- (void)logTappedNextClipsNUXWithUserID:(id)arg1;
- (void)logTappedExitClipsNUXWithPageIndex:(long long)arg1 userID:(id)arg2;
- (void)logClipsNUXSeenWithUserID:(id)arg1;
- (void)logLayerTimeEditWithUserId:(id)arg1;
- (void)logLayerListSelectionWithUserId:(id)arg1;
- (void)logPostCaptureTimelineScrubWithUserId:(id)arg1;
- (void)logDeletedAllClipsSegments;
- (void)logTappedDeleteAllClipsSegments;
- (void)logDeletedClipsSegmentWithSegmentIndex:(long long)arg1;
- (void)logTappedDeleteClipsSegmentWithSegmentIndex:(long long)arg1 userID:(id)arg2;
- (void)logPreviewLastClipsSegment;
- (void)logCaptureClipsSegmentWithUserID:(id)arg1;
- (void)logCombineClipsSegmentsWithNumberOfSegments:(long long)arg1;
- (void)logTapForMusicBrowserSongStory:(id)arg1 trackID:(id)arg2 songName:(id)arg3 artistName:(id)arg4 category:(id)arg5 subcategory:(id)arg6 uploadStep:(long long)arg7;
- (void)logTapForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 category:(id)arg4 subcategory:(id)arg5 uploadStep:(long long)arg6;
- (void)logPreviewForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 category:(id)arg4 subcategory:(id)arg5 uploadStep:(long long)arg6;
- (void)logImpressionForMusicTrack:(id)arg1 songName:(id)arg2 artistName:(id)arg3 category:(id)arg4 subcategory:(id)arg5 uploadStep:(long long)arg6;
- (void)logRemoveStickerWithStickerID:(id)arg1 surface:(long long)arg2 extraData:(id)arg3;
- (void)logApplyStickerWithStickerID:(id)arg1 surface:(long long)arg2 extraData:(id)arg3;
- (void)logAlbumPickerTapAlbumWithAlbumCategory:(id)arg1 albumIndex:(long long)arg2;
- (void)logOpenAlbumPicker;
- (void)logGalleryExitWithSwipeWithUserID:(id)arg1;
- (void)logGalleryExitWithTapWithUserID:(id)arg1;
- (void)logGalleryEnterSwipeWithUserID:(id)arg1;
- (void)logGallerySelectMediaWithUserID:(id)arg1 mediaType:(long long)arg2 extraMediaData:(struct IGCameraLoggerExtraMediaData)arg3 captureMetadata:(id)arg4;
- (void)logGalleryEnterButtonTapWithUserID:(id)arg1;
- (void)logAREffectNativePickerSelectionWithEffectID:(id)arg1 surface:(long long)arg2 pickerItemIndex:(long long)arg3 pickerItemTitle:(id)arg4 pickerItemIdentifier:(id)arg5 extraData:(id)arg6;
- (void)logFaceDetectedWithUserID:(id)arg1 cameraPosition:(long long)arg2 surface:(long long)arg3 appliedEffectID:(id)arg4 appliedEffectInstanceID:(id)arg5 indicesForEffectsIDs:(id)arg6 faceCount:(long long)arg7;
- (void)logAREffectAppliedWithUserID:(id)arg1 cameraPosition:(long long)arg2 captureType:(long long)arg3 surface:(long long)arg4 mediaSource:(long long)arg5 mediaType:(long long)arg6 appliedEffectID:(id)arg7 appliedEffectInstanceID:(id)arg8 attributionUserID:(id)arg9 indicesForEffectsIDs:(id)arg10 extraData:(id)arg11;
- (void)logAREffectButtonShownWithUserID:(id)arg1 surface:(long long)arg2;
- (void)logTapAREffectButtonWithUserID:(id)arg1 surface:(long long)arg2;
- (void)logAREffectApplicatorDidFailToLoadSegmentationModelsForUserID:(id)arg1 extraData:(id)arg2;
- (void)logAREffectApplicatorDidFailToLoadFacetrackerModelsWithExtraData:(id)arg1;
- (void)logReleaseTrimForCaptureType:(long long)arg1;
- (void)logTapTrimButtonForCaptureType:(long long)arg1;
- (void)logReleaseTrimForVariant:(id)arg1;
- (void)logTapEditBoomerangButton;
- (void)logScreenshotWithUserID:(id)arg1;
- (void)logEndAddCallToActionSessionWithUserID:(id)arg1 withLinkType:(id)arg2;
- (void)logStartAddCallToActionSessionWithCandidateLinkTypes:(id)arg1;
- (void)logPostCaptureFooterGroupStoryShortcutShownWithUserID:(id)arg1;
- (void)logMediaFaceDetectionFinishedWithMediaType:(long long)arg1 surface:(long long)arg2 didDetectFace:(_Bool)arg3 didDetectFaceInFirstFrame:(_Bool)arg4;
- (void)logRemoveBusinessPartnerWithUserID:(id)arg1 businessID:(id)arg2;
- (void)logTagBusinessPartnerWithBusinessID:(id)arg1;
- (void)logColorFilterAppliedWithEffectID:(id)arg1 indicesForEffectsIDs:(id)arg2;
- (void)logShareMediaWithUserID:(id)arg1 threadID:(id)arg2 mediaSource:(long long)arg3 mediaType:(long long)arg4 cameraPosition:(long long)arg5 captureType:(long long)arg6 formatVariant:(id)arg7 trimmed:(id)arg8 surface:(long long)arg9 createModeFormat:(id)arg10 createModeSubformat:(id)arg11 shareDestinations:(id)arg12 postingSurfaceType:(long long)arg13 preCaptureAppliedEffectIDs:(id)arg14 preCaptureAppliedEffectInstanceIDs:(id)arg15 postCaptureAppliedEffectIDs:(id)arg16 postCaptureAppliedEffectInstanceIDs:(id)arg17 colorFilterEffectID:(id)arg18 attributionUserIDs:(id)arg19 indicesForEffectsIDs:(id)arg20 extraData:(id)arg21;
- (void)logTapRecipientPickerButton;
- (void)logSaveToCameraRollWithMediaSource:(long long)arg1 mediaType:(long long)arg2 captureType:(long long)arg3 formatVariant:(id)arg4 cameraPosition:(long long)arg5 surface:(long long)arg6 preCaptureAppliedEffectIDs:(id)arg7 preCaptureAppliedEffectInstanceIDs:(id)arg8 postCaptureAppliedEffectIDs:(id)arg9 postCaptureAppliedEffectInstanceIDs:(id)arg10 colorFilterEffectID:(id)arg11 attributionUserIDs:(id)arg12 indicesForEffectsIDs:(id)arg13;
- (void)logTapPostCaptureExitButtonWithUserID:(id)arg1 mediaSource:(long long)arg2 mediaType:(long long)arg3;
- (void)logCameraLiveRemoveQuestionWithUserID:(id)arg1;
- (void)logCameraLiveSelectQuestionWithUserID:(id)arg1 questionText:(id)arg2;
- (void)logCameraStartQuestionTraySessionWithUserID:(id)arg1 questionCount:(long long)arg2;
- (void)logCameraLiveQuestionButtonImpressionWithUserID:(id)arg1 badgeQuestionCount:(long long)arg2;
- (void)logSelectDialItemWithDialIndex:(long long)arg1 captureType:(long long)arg2 effectID:(id)arg3 itemType:(id)arg4;
- (void)logTapFlashButtonWithUserID:(id)arg1 lightingMode:(long long)arg2;
- (void)logTapCameraExitButtonWithUserID:(id)arg1;
- (void)logTapSettingsButtonWithUserID;
- (void)logTapMuteButtonIsMuted:(_Bool)arg1 surface:(long long)arg2;
- (void)logTapCaptureButtonWithUserID:(id)arg1 captureType:(long long)arg2 mediaType:(long long)arg3 surface:(long long)arg4 captureMethod:(long long)arg5;
- (void)logCameraSwitchDoubleTapWithUserID:(id)arg1 cameraPosition:(long long)arg2;
- (void)logCameraSwitchTapButtonWithCameraPosition:(long long)arg1;
- (void)logCameraCaptureWithUserID:(id)arg1 mediaType:(long long)arg2 cameraPosition:(long long)arg3 captureType:(long long)arg4 formatVariant:(id)arg5 createModeFormat:(id)arg6 createModeSubformat:(id)arg7 surface:(long long)arg8 appliedEffectIDs:(id)arg9 appliedEffectInstanceIDs:(id)arg10 indicesForEffectsIDs:(id)arg11 extraData:(id)arg12;
- (void)logSelectVariantWithCaptureType:(long long)arg1 surface:(long long)arg2 variant:(id)arg3;
- (void)logSelectFormatWithUserID:(id)arg1 captureType:(long long)arg2 reason:(id)arg3;
- (void)logGifSearchCompleteWithResult:(_Bool)arg1 hasNetworkError:(_Bool)arg2;
- (void)logGifSearchBegan;
- (void)logImpressionForCreateModeFormat:(id)arg1 surface:(long long)arg2;
- (void)logPostcaptureSeeAllTrayTappedWithMediaCount:(unsigned long long)arg1 createModeFormat:(id)arg2;
- (void)logCreateModeSubFormatSelectedWithUserID:(id)arg1 createModeFormat:(id)arg2 extraData:(id)arg3;
- (void)logEndCreateModeSession;
- (void)logStartCreateModeSessionWithUserID:(id)arg1;
- (void)logCreateModeFormatSelected:(id)arg1 userID:(id)arg2 surface:(long long)arg3;
- (void)logUserDidTapRandomButtonWithUserID:(id)arg1 surface:(long long)arg2 createModeFormat:(id)arg3;
- (void)logMoreInfoSheetRemoveDenyWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3;
- (void)logMoreInfoSheetRemoveConfirmWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3;
- (void)logMoreInfoSheetReportDenyWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3;
- (void)logMoreInfoSheetReportConfirmWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3 reportType:(long long)arg4;
- (void)logMoreInfoSheetTapViewLicensingWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3;
- (void)logMoreInfoSheetSessionEndWithUserID:(id)arg1 appliedEffectIDs:(id)arg2 appliedEffectInstanceIDs:(id)arg3 surface:(long long)arg4;
- (void)logMoreInfoSheetSessionStartWithAppliedEffectIDs:(id)arg1 appliedEffectInstanceIDs:(id)arg2 surface:(long long)arg3;
- (void)logEndCameraFormatCaptureSession;
- (void)logStartCameraFormatCaptureSession;
- (void)logEndDoodleSessionWithUserID:(id)arg1 doodleData:(struct IGCameraLoggerDoodleData)arg2;
- (void)logStartDoodleSession;
- (void)logTextEffectChangedWithSurface:(long long)arg1;
- (void)logTextColorChangedFromSource:(long long)arg1 surface:(long long)arg2;
- (void)logTextOverlaysWithTextOverlays:(id)arg1;
- (void)logEndTextSessionWithText:(id)arg1;
- (void)logStartTextSessionWithUserID:(id)arg1 entryPoint:(long long)arg2;
- (void)logDeleteStoriesDraftWithUserID:(id)arg1;
- (void)logEndGallerySession;
- (void)logStartGallerySessionWithUserID:(id)arg1 numberOfDrafts:(long long)arg2;
- (void)logAREffectImpressionWithUserID:(id)arg1 effectID:(id)arg2 attributionUserID:(id)arg3 index:(long long)arg4 surface:(long long)arg5 cameraPosition:(long long)arg6 extraData:(id)arg7;
- (void)logEndAREffectsTraySessionWithUserID:(id)arg1 surface:(long long)arg2 effectTrayStyle:(long long)arg3;
- (void)logStartAREffectsTraySessionWithUserID:(id)arg1 surface:(long long)arg2 indicesForEffectsIDs:(id)arg3 effectTrayStyle:(long long)arg4;
- (void)logTargetEffectFailed:(id)arg1 failureReason:(id)arg2;
- (void)logEndPostCaptureSessionWithUserID:(id)arg1;
- (void)logStartPostCaptureSessionWithUserID:(id)arg1 indicesForEffectsIDs:(id)arg2;
- (void)logEndPreCaptureSessionWithUserID:(id)arg1;
- (void)logStartPreCaptureSessionWithCaptureType:(long long)arg1;
- (void)logEndCameraSessionWithExitPoint:(long long)arg1 containsDraft:(_Bool)arg2;
- (void)logEndCameraSessionWithExitPoint:(long long)arg1;
- (void)logStartFeedCameraSessionWithOutputType:(long long)arg1 sessionID:(id)arg2;
- (void)logStartCameraSessionWithOutputType:(long long)arg1 entryPoint:(unsigned long long)arg2;
- (id)initWithUserSession:(id)arg1 effectGallerySessionID:(id)arg2 effectGallerySearchSessionID:(id)arg3;

@end

