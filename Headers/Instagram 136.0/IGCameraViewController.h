//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import <InstagramAppCoreFramework/IGAREffectApplicationListener-Protocol.h>
#import <InstagramAppCoreFramework/IGAREffectApplicatorCameraControlDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGAREffectAvailabilityListener-Protocol.h>
#import <InstagramAppCoreFramework/IGAREffectNativeUIControlDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGAREffectVideoProcessorProvider-Protocol.h>
#import <InstagramAppCoreFramework/IGARInstructionServiceDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGBrowserControllerDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCameraCaptureControllerDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerAdditionalCaptureMetadataDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerAudioSampleBufferDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerPreviewSizeProvider-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerVideoPreviewSampleBufferDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerVideoSampleBufferDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGCaptureManagerVideoSessionDelegate-Protocol.h>

@class IGAREffectApplicator, IGAREffectTargetModel, IGAsyncTask, IGCCCaptureManager, IGCameraCaptureController, IGCameraConfig, IGCameraDynamicPreviewView, IGCameraGuideView, IGCameraOpenPerfComponents, IGPopoverController, IGUserSession, NSMutableDictionary, NSString, UIImageView, UIView, UIVisualEffectView;
@protocol IGAREffectLoadingDelegate, IGCameraViewControllerAREffectDelegate, IGCameraViewControllerAREffectNativeUIDelegate, IGCameraViewControllerAdditionalCaptureMetadataObserver, IGCameraViewControllerDataSource, IGCameraViewControllerDelegate, IGCameraViewControllerSampleBufferObserver;

@interface IGCameraViewController : UIViewController <IGCameraCaptureControllerDelegate, IGCaptureManagerAudioSampleBufferDelegate, IGCaptureManagerDelegate, IGCaptureManagerVideoPreviewSampleBufferDelegate, IGCaptureManagerVideoSampleBufferDelegate, IGCaptureManagerVideoSessionDelegate, IGCaptureManagerAdditionalCaptureMetadataDelegate, IGAREffectVideoProcessorProvider, IGAREffectAvailabilityListener, IGAREffectApplicationListener, IGARInstructionServiceDelegate, IGAREffectApplicatorCameraControlDelegate, IGAREffectNativeUIControlDelegate, IGBrowserControllerDelegate, IGCaptureManagerPreviewSizeProvider>
{
    IGCameraConfig *_config;
    IGUserSession *_userSession;
    NSMutableDictionary *_lastSavedZoomForCamera;
    id <IGAREffectLoadingDelegate> _effectLoadingDelegate;
    IGPopoverController *_draftEffectConsentPopoverController;
    IGAREffectTargetModel *_draftEffectTarget;
    UIImageView *_lastFrameImageView;
    UIView *_boomerangBurstView;
    UIImageView *_focusRing;
    IGCameraDynamicPreviewView *_cameraPreviewView;
    _Bool _isBackgrounded;
    _Bool _isLowLightAvailable;
    _Bool _waitingForFirstFrameAfterCameraSwitched;
    double _initialZoomScale;
    double _currentZoomScale;
    long long _lightingMode;
    NSMutableDictionary *_lastReceivedBuffers;
    long long _deviceOrientation;
    IGAsyncTask *_multiPhotoCaptureTask;
    IGAsyncTask *_photoCaptureTask;
    _Bool _hasReceivedSecondFrame;
    _Bool _manuallyChangedLightingModeInSession;
    _Bool _needToCancelCleanup;
    IGCameraOpenPerfComponents *_perfComponents;
    _Bool _isAREffectAvailable;
    _Bool _isCaptureAvailable;
    _Bool _hasReceivedFirstFrame;
    _Bool _isInCaptureSession;
    _Bool _showTapIndicator;
    _Bool _isFlipping;
    _Bool _isMigratingViewController;
    _Bool _multiClipCaptureEnabled;
    IGCameraGuideView *_guideView;
    IGCCCaptureManager *_captureManager;
    IGCameraCaptureController *_captureController;
    long long _captureState;
    IGAREffectApplicator *_arEffectApplicator;
    id <IGCameraViewControllerAREffectDelegate> _arEffectDelegate;
    id <IGCameraViewControllerDataSource> _dataSource;
    id <IGCameraViewControllerDelegate> _delegate;
    id <IGCameraViewControllerSampleBufferObserver> _sampleBufferObserver;
    id <IGCameraViewControllerAREffectNativeUIDelegate> _arEffectNativeUIDelegate;
    id <IGCameraViewControllerAdditionalCaptureMetadataObserver> _additionalCaptureMetadataObserver;
    UIVisualEffectView *_blurView;
    IGAREffectTargetModel *_pendingEffectTarget;
}

@property(nonatomic, getter=isMultiClipCaptureEnabled) _Bool multiClipCaptureEnabled; // @synthesize multiClipCaptureEnabled=_multiClipCaptureEnabled;
@property(readonly, nonatomic) IGAREffectTargetModel *pendingEffectTarget; // @synthesize pendingEffectTarget=_pendingEffectTarget;
@property(nonatomic) _Bool isMigratingViewController; // @synthesize isMigratingViewController=_isMigratingViewController;
@property(readonly, nonatomic) _Bool isFlipping; // @synthesize isFlipping=_isFlipping;
@property(readonly, nonatomic) UIVisualEffectView *blurView; // @synthesize blurView=_blurView;
@property(readonly, nonatomic) IGCameraDynamicPreviewView *cameraPreviewView; // @synthesize cameraPreviewView=_cameraPreviewView;
@property(nonatomic) __weak id <IGCameraViewControllerAdditionalCaptureMetadataObserver> additionalCaptureMetadataObserver; // @synthesize additionalCaptureMetadataObserver=_additionalCaptureMetadataObserver;
@property(nonatomic) __weak id <IGCameraViewControllerAREffectNativeUIDelegate> arEffectNativeUIDelegate; // @synthesize arEffectNativeUIDelegate=_arEffectNativeUIDelegate;
@property(nonatomic) __weak id <IGCameraViewControllerSampleBufferObserver> sampleBufferObserver; // @synthesize sampleBufferObserver=_sampleBufferObserver;
@property(nonatomic) __weak id <IGCameraViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <IGCameraViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <IGCameraViewControllerAREffectDelegate> arEffectDelegate; // @synthesize arEffectDelegate=_arEffectDelegate;
@property(nonatomic) _Bool showTapIndicator; // @synthesize showTapIndicator=_showTapIndicator;
@property(readonly, nonatomic) long long deviceOrientation; // @synthesize deviceOrientation=_deviceOrientation;
@property(readonly, nonatomic) IGAREffectApplicator *arEffectApplicator; // @synthesize arEffectApplicator=_arEffectApplicator;
@property(readonly, nonatomic) long long captureState; // @synthesize captureState=_captureState;
@property(readonly, nonatomic) IGCameraCaptureController *captureController; // @synthesize captureController=_captureController;
@property(readonly, nonatomic) IGCCCaptureManager *captureManager; // @synthesize captureManager=_captureManager;
@property(readonly, nonatomic) IGCameraGuideView *guideView; // @synthesize guideView=_guideView;
@property(readonly, nonatomic) _Bool isInCaptureSession; // @synthesize isInCaptureSession=_isInCaptureSession;
@property(readonly, nonatomic) _Bool hasReceivedFirstFrame; // @synthesize hasReceivedFirstFrame=_hasReceivedFirstFrame;
@property(readonly, nonatomic) _Bool isCaptureAvailable; // @synthesize isCaptureAvailable=_isCaptureAvailable;
@property(readonly, nonatomic) _Bool isAREffectAvailable; // @synthesize isAREffectAvailable=_isAREffectAvailable;
@property(nonatomic) long long lightingMode; // @synthesize lightingMode=_lightingMode;
- (void).cxx_destruct;
- (void)arEffectApplicator:(id)arg1 requestUpdateCaptureDevicePosition:(long long)arg2;
- (_Bool)arEffectApplicator:(id)arg1 canRequestChangeCaptureDevicePosition:(long long)arg2;
- (id)createNewVideoProcessorControllerWithAsyncAssetLoaderAdapter:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didApplyAREffectWithID:(id)arg2 effectInstanceID:(id)arg3 effectAttribution:(id)arg4 cameraPosition:(long long)arg5;
- (void)arEffectApplicatorWillUnApplyAREffect:(id)arg1 isSwitchingAREffect:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 willApplyAREffect:(id)arg2;
- (void)arEffectApplicatorDidFailToDownloadRemoteModel:(id)arg1;
- (void)arEffectApplicatorDidFailToDownload:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didDownloadAREffectAsset:(id)arg2;
- (void)arEffectApplicatorDidUpdateEffectList:(id)arg1 fromNetwork:(_Bool)arg2;
- (void)arEffectApplicator:(id)arg1 didUpdateAREffectTouchSupportedStatus:(_Bool)arg2;
- (void)arEffectApplicatorUserDidTurnOffAREffect:(id)arg1;
- (void)arEffectApplicatorHairSegmentationDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicatorSegmentationDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicatorAREffectDidBecomeAvailable:(id)arg1;
- (void)arEffectApplicator:(id)arg1 didFailFetchWithError:(id)arg2;
- (void)arEffectApplicator:(id)arg1 didFailWithTargetEffectResponse:(id)arg2;
- (void)instructionServiceHandlerRequestsHideAREffectInstructions:(id)arg1;
- (void)instructionServiceHandler:(id)arg1 requestsShowAREffectInstructions:(id)arg2 forDuration:(double)arg3;
- (void)captureManagerDidDetectFaceRect:(struct CGRect)arg1;
- (void)captureManagerVideoSessionInterruptionEnded:(id)arg1;
- (void)captureManagerVideoSessionWasInterrupted:(id)arg1;
- (void)captureManagerVideoSessionDidStartRunning:(id)arg1;
- (void)captureManagerHasFinishedLoadingCaptureSession:(id)arg1;
- (void)cameraCaptureControllerSuccessfullyCapturedPhoto:(id)arg1;
- (void)cameraCaptureController:(id)arg1 startAudioSessionDidError:(id)arg2;
- (void)cameraCaptureControllerFailedToCapturePhoto:(id)arg1;
- (void)cameraCaptureControllerDidStartRecording:(id)arg1;
- (void)cameraCaptureControllerDidStopRecording:(id)arg1;
- (void)cameraCaptureControllerWillStopRecording:(id)arg1;
- (void)cameraCaptureController:(id)arg1 didFinishWithBoomerangManager:(id)arg2;
- (void)cameraCaptureController:(id)arg1 didFinishWithInputAsset:(id)arg2;
- (void)cameraCaptureController:(id)arg1 didFinishWithInputAssets:(id)arg2;
- (void)cameraCaptureController:(id)arg1 didUpdateRecordProgress:(double)arg2;
- (struct CGSize)captureManagerPreviewOutputSize:(id)arg1;
- (void)captureManagerDidChangeFlashAvailability:(id)arg1;
- (void)captureManagerDidReceiveUnhandledError:(id)arg1;
- (void)captureManagerDidSatisfyFocusRequest;
- (void)captureManagerNeedsResume:(_Bool)arg1;
- (void)captureManagerWillTakePhoto;
- (void)captureManagerIsReadyToProcessNewAREffect;
- (void)captureManagerDidCaptureVideoBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(CDStruct_17631a97)arg2;
- (void)captureManagerDidDropVideoBuffer;
- (void)captureManagerDidCaptureVideoPreviewBuffer:(struct opaqueCMSampleBuffer *)arg1 metadata:(CDStruct_17631a97)arg2;
- (void)captureManagerDidCaptureAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)captureManagerDidDropAudioBuffer;
- (void)nativeUIControlServiceHandlerShouldHideTextInput:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowTextInput:(id)arg1 currentText:(id)arg2;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldChangeSliderValue:(double)arg2;
- (void)nativeUIControlServiceHandlerShouldHideSlider:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowSlider:(id)arg1;
- (void)nativeUIControlServiceHandler:(id)arg1 didSelectPickerItem:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldSelectPickerIndex:(unsigned long long)arg2;
- (void)nativeUIControlServiceHandlerShouldHidePicker:(id)arg1;
- (void)nativeUIControlServiceHandlerShouldShowPicker:(id)arg1;
- (void)nativeUIControlServiceHandler:(id)arg1 shouldConfigurePickerWithConfiguration:(id)arg2;
- (void)browserControllerDidDismissWithUrl:(id)arg1;
- (void)focusToPoint:(struct CGPoint)arg1;
- (void)_tapToFocus:(id)arg1;
- (void)handleTap:(id)arg1;
- (void)_applicationWillResignActive:(id)arg1;
- (void)_applicationDidBecomeActive:(id)arg1;
- (void)_stopBoomerangBurstFrames;
- (void)_showBoomerangBurstFrames;
- (void)_updateTorchLight;
- (void)_updateLightingModeIfNeeded;
- (void)toggleLightingMode;
- (_Bool)_canHandleFlash;
- (void)switchCaptureDevices:(id)arg1 useMultiCaptureIfPossible:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_didSwitchCameraWithUserInput:(unsigned long long)arg1;
- (void)switchCaptureDevice:(id)arg1 withUserInput:(unsigned long long)arg2;
- (_Bool)canSwitchCameras;
- (void)setZoomScale:(double)arg1 withCurrentZoomAsMinimum:(_Bool)arg2;
- (void)setZoomDelta:(double)arg1;
- (void)finishedTakingCaptureScreenshot;
- (void)prepareToTakeCaptureScreenshot;
- (_Bool)canStopRecording;
- (void)stopRecording;
- (void)beginRecordingWithFormat:(long long)arg1 captureDevices:(id)arg2 audioRecordingEnabled:(_Bool)arg3;
- (void)beginRecordingWithFormat:(long long)arg1 audioRecordingEnabled:(_Bool)arg2;
- (_Bool)canBeginRecording;
- (void)capturePhotoWithMode:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)capturePhotosWithDevices:(id)arg1 withMode:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)toggleBlurView:(_Bool)arg1 animated:(_Bool)arg2;
- (void)willBecomeInactive;
- (void)reset;
- (void)didCancelMediaPreview;
- (void)resumeVideoCaptureForVideoCall;
- (void)pauseVideoCaptureForVideoCall;
- (void)resumeCaptureSessionForLive;
- (void)pauseCaptureSessionForLive;
- (void)stopCaptureSessionAndCleanup;
- (void)startCaptureSession;
- (void)_presentDraftEffectConsentDialogForTarget:(id)arg1;
- (void)_dismissDraftEffectConsentDialogIfNeeded;
- (void)_beginFetchingEffectTarget:(id)arg1;
- (void)cancelPendingEffectTarget;
- (_Bool)setEffectListWithIDs:(id)arg1;
- (void)setEffectTarget:(id)arg1;
@property(readonly, nonatomic, getter=isFetchingEffectTarget) _Bool fetchingEffectTarget;
@property(readonly, nonatomic) _Bool isEffectListMetadataCacheExpired;
- (void)disablePhotoPreset;
- (void)enablePhotoPresetIfPossible;
@property(readonly, nonatomic) long long cameraMode;
- (void)hideForegroundTransitionOverlayIfNeeded;
- (struct opaqueCMSampleBuffer *)lastReceivedMainBuffer;
- (id)lastReceivedMetadata;
- (id)lastReceivedMetadataForCaptureDevice:(id)arg1;
- (id)lastDisplayedSampleBuffer;
- (id)lastDisplayedSampleBufferForCaptureDevice:(id)arg1;
- (id)lastDisplayedFrame;
- (id)lastDisplayedFrameForCaptureDevice:(id)arg1;
- (void)lastDisplayedFrameWithCompletion:(CDUnknownBlockType)arg1;
- (void)lastDisplayedFrameForCaptureDevice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isRecording;
@property(readonly, nonatomic) CDStruct_b9ba3679 cameraInfo;
@property(readonly, nonatomic) _Bool isVideoCaptureRunning;
@property(readonly, nonatomic) double videoRecordingProgress;
@property(readonly, nonatomic) long long cameraPosition;
- (void)_setIsCaptureAvailable:(_Bool)arg1;
@property(nonatomic) double maxVideoDuration;
@property(nonatomic) long long maxVideoSegments;
@property(readonly, nonatomic) double currentVideoDuration;
- (id)effectsForSwitcherMode:(long long)arg1;
- (void)selectEffect:(id)arg1 forMode:(long long)arg2 shareArguments:(id)arg3 usingData:(id)arg4;
- (void)_resetCameraZoom;
- (_Bool)_isCurrentAREffectFocus;
- (void)showAndBlurLastFrameIfNecessary;
- (void)_setCaptureState:(long long)arg1;
- (void)_setLastReceivedBuffer:(struct opaqueCMSampleBuffer *)arg1 forCaptureDevice:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (id)initWithConfig:(id)arg1 effectLoadingPresenter:(id)arg2 userSession:(id)arg3 perfComponents:(id)arg4;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

