//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <FBSharedFramework/IGViewController.h>

#import <InstagramAppCoreFramework/IGBrowserChromeViewControllerDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGGestureHandler-Protocol.h>
#import <InstagramAppCoreFramework/IGWebViewControllerDelegate-Protocol.h>

@class IABLoggingCoordinator, IGBrowserChromeViewController, IGBrowserOverflowMenuController, IGBrowserSession, IGUserSession, IGWebViewController, IGWebViewSendInDirectController, NSDate, NSString, NSURL, UIView;
@protocol FBWebView, IGAnalyticsEventLoggingProtocol, IGBrowserViewControllerDelegate;

@interface IGBrowserViewController : IGViewController <IGBrowserChromeViewControllerDelegate, IGWebViewControllerDelegate, IGGestureHandler>
{
    IGBrowserChromeViewController *_browserChromeViewController;
    IGWebViewController *_webViewController;
    UIView<FBWebView> *_webView;
    _Bool _hasDisplayedWebView;
    IGUserSession *_userSession;
    IGBrowserOverflowMenuController *_overflowMenuController;
    IGWebViewSendInDirectController *_sendInDirectCoordinator;
    id <IGAnalyticsEventLoggingProtocol> _analyticsLogger;
    IABLoggingCoordinator *_loggingCoordinator;
    NSDate *_browserStartInitializationTime;
    unsigned long long _dismissMethod;
    long long _numberOfCloses;
    long long _numberOfActualLaunches;
    NSString *_currentDisplayedWebPageTitle;
    NSString *_currentDisplayedURL;
    _Bool _browserPreservationEnabled;
    _Bool _applicationDidReceiveMemoryWarning;
    _Bool _preserveOnForceQuit;
    _Bool _fullscreenExperienceEnabled;
    _Bool _shouldShowTopRoundCorners;
    _Bool _showBarButtons;
    _Bool _shouldHideToolbarWhenViewAppear;
    _Bool _prefersNavigationBarHidden;
    _Bool _userWebInteractionEnabled;
    _Bool _navigationControllerPanGestureEnabled;
    IGBrowserSession *_browserSession;
    id <IGBrowserViewControllerDelegate> _delegate;
    NSURL *_initialURL;
    unsigned long long _browserHeaderStyle;
    long long _prefersStatusBarStyle;
    unsigned long long _launchMethod;
}

@property(nonatomic) _Bool navigationControllerPanGestureEnabled; // @synthesize navigationControllerPanGestureEnabled=_navigationControllerPanGestureEnabled;
@property(nonatomic) unsigned long long launchMethod; // @synthesize launchMethod=_launchMethod;
@property(nonatomic) long long prefersStatusBarStyle; // @synthesize prefersStatusBarStyle=_prefersStatusBarStyle;
@property(nonatomic) _Bool userWebInteractionEnabled; // @synthesize userWebInteractionEnabled=_userWebInteractionEnabled;
@property(nonatomic) _Bool prefersNavigationBarHidden; // @synthesize prefersNavigationBarHidden=_prefersNavigationBarHidden;
@property(nonatomic) _Bool shouldHideToolbarWhenViewAppear; // @synthesize shouldHideToolbarWhenViewAppear=_shouldHideToolbarWhenViewAppear;
@property(nonatomic) unsigned long long browserHeaderStyle; // @synthesize browserHeaderStyle=_browserHeaderStyle;
@property(nonatomic) _Bool showBarButtons; // @synthesize showBarButtons=_showBarButtons;
@property(nonatomic, getter=hasShownTopRoundCorners) _Bool shouldShowTopRoundCorners; // @synthesize shouldShowTopRoundCorners=_shouldShowTopRoundCorners;
@property(nonatomic, getter=isFullscreenExperienceEnabled) _Bool fullscreenExperienceEnabled; // @synthesize fullscreenExperienceEnabled=_fullscreenExperienceEnabled;
@property(retain, nonatomic) NSURL *initialURL; // @synthesize initialURL=_initialURL;
@property(nonatomic) __weak id <IGBrowserViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) IGBrowserSession *browserSession; // @synthesize browserSession=_browserSession;
- (void).cxx_destruct;
- (void)_handleApplicationWillTerminateNotification:(id)arg1;
- (void)_handleApplicationDidReceiveMemoryWarningNotification:(id)arg1;
- (void)_setupUserActivity;
- (void)updateUserActivityState:(id)arg1;
- (void)_loggingCoordinatorReceivedEvent:(id)arg1;
- (void)_markBrowserViewabilityIfNecessary;
- (void)_initializeHeaderContentWithURL:(id)arg1;
- (void)_willCloseBrowser:(unsigned long long)arg1;
- (void)_preverseBrowserInstanceIfEligible;
- (void)_pauseAllAudioPlayingInThePageIfAny;
- (void)_loadBrowser;
- (void)_closeBrowser;
- (void)actionSheetFinishedHiding;
- (_Bool)canRespondToGesture:(id)arg1;
- (void)_showSendInDirectSheet;
- (void)_showShareSheet;
- (void)_goBack;
- (void)_goForward;
- (void)browserChromeViewController:(id)arg1 didTapWebViewToolbarButtonWithType:(unsigned long long)arg2;
- (void)browserChromeViewController:(id)arg1 didTapTitleBarButtonWithType:(unsigned long long)arg2;
- (void)webViewController:(id)arg1 shouldClose:(id)arg2;
- (void)webViewController:(id)arg1 didRetryLoadRequest:(id)arg2;
- (void)webViewController:(id)arg1 didFailNavigationRequest:(id)arg2 withError:(id)arg3;
- (void)webViewController:(id)arg1 didFinishNavigationRequestWithWebview:(id)arg2;
- (void)_configureTitleBarContentWithWebView:(id)arg1;
- (void)webViewController:(id)arg1 URLChanged:(id)arg2;
- (void)webViewController:(id)arg1 titleChanged:(id)arg2;
- (void)webViewController:(id)arg1 progressChanged:(double)arg2;
- (void)webViewController:(id)arg1 didStartNavigationRequest:(id)arg2;
@property(nonatomic) _Bool headerBottomSeparatorHidden;
- (void)hideToolBar;
- (void)presentToolBar;
- (void)reloadWebViewWithRefreshType:(unsigned long long)arg1;
- (void)showStatusBarPaddingView:(_Bool)arg1;
- (void)recordBrowserDismissMethod:(unsigned long long)arg1;
- (void)recordBrowserStartInitializationTime:(id)arg1;
- (id)titleView;
- (void)viewDidLayoutSubviews;
- (_Bool)prefersTabBarHidden;
- (long long)statusBarStyle;
- (_Bool)prefersStatusBarHidden;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)initWithBrowserSession:(id)arg1;
- (id)initWithURLRequest:(id)arg1 userSession:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

