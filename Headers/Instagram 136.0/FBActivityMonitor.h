//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FBReachabilityListener-Protocol.h>

@class FBAppStateLogger, FBApplicationStatusProvider, FBCPUInfoProvider, FBLazyCreator, FBReachabilityAnnouncer, FBStateTimeIntervalsManager, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface FBActivityMonitor : NSObject <FBReachabilityListener>
{
    NSObject<OS_dispatch_queue> *_queue;
    double _lastStatusSnapshotSendTimeSec;
    double _lastSeenInForegroundTimestamp;
    FBReachabilityAnnouncer *_reachabilityAnnouncer;
    unsigned long long _reachabilityState;
    NSMutableDictionary *_deviceStatusEvents;
    NSObject<OS_dispatch_source> *_deviceStatusTimer;
    _Bool _scheduledToSendDeviceLogs;
    FBAppStateLogger *_appStateLogger;
    NSString *_coldStartReason;
    struct mutex _coldStartReasonMutex;
    FBLazyCreator *_backgroundStateManagerCreator;
    NSString *_bgRefreshStatus;
    _Bool _bgRefreshStatusSet;
    long long _currentState;
    FBStateTimeIntervalsManager *_timeIntervalsManager;
    FBApplicationStatusProvider *_applicationStatusProvider;
    FBCPUInfoProvider *_cpuInfoProvider;
    id _igAnalyticslogger;
    NSString *_lastHardStallBreakpadConfigFilePath;
    NSString *_statusSnapshotPath;
}

+ (void)setSharedMonitor:(id)arg1;
+ (void)resetSharedMonitor;
+ (id)sharedMonitor;
@property(copy, nonatomic) NSString *statusSnapshotPath; // @synthesize statusSnapshotPath=_statusSnapshotPath;
@property(copy) NSString *lastHardStallBreakpadConfigFilePath; // @synthesize lastHardStallBreakpadConfigFilePath=_lastHardStallBreakpadConfigFilePath;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)setIGAnalyticsLogger:(id)arg1;
- (id)getAppStatusSnapshotBlocking;
- (id)previousRunApplicationSnapshot;
- (void)_handleColdStartWithExceptionHandler:(id)arg1;
- (void)handleColdStartWithExceptionHandler:(id)arg1 async:(_Bool)arg2;
- (void)onCTScanWillExit;
- (void)_updateTerminationLogFilesWithAppVersionHandler:(id)arg1 OSVersionHandler:(id)arg2;
- (void)logEventTerminatingLastRun:(id)arg1 additionalLoggingContext:(id)arg2;
- (double)previousRunsFinalStateTime;
- (id)coldStartReason;
- (_Bool)isColdStartReasonSet;
- (void)setColdStartReason:(id)arg1;
- (void)reachabilityStateChangedTo:(unsigned long long)arg1 from:(unsigned long long)arg2;
@property(readonly) NSObject<OS_dispatch_queue> *queue;
- (void)_addConnectionStatusToDictionary:(id)arg1;
- (void)updateDeviceStatusForEventAttribute:(id)arg1 stringValue:(id)arg2;
- (void)logDeviceStatus:(id)arg1 byModule:(id)arg2 mode:(unsigned long long)arg3;
- (void)logBackgroundDeviceStatus;
- (void)logDeviceStatusForCTScan;
- (void)logDeviceStatus;
- (void)logDeviceStatus:(unsigned long long)arg1;
- (void)_saveCurrentDeviceStatusToDisk;
- (void)sendOrScheduleDeviceLogsToBeSent:(_Bool)arg1;
- (void)cancelDeviceStatusTimer;
- (void)restartDeviceStatusTimerForAppState:(long long)arg1;
- (void)logDeviceMemoryWarning;
- (void)_setBackgroundRefreshStatus:(id)arg1;
- (void)_updateBackgroundRefreshStatusIfNeeded;
- (void)_onThermalStateChange;
- (void)applicationBackgroundRefreshStatusDidChange;
- (void)applicationDidFinishLaunchingWithState:(long long)arg1 notification:(id)arg2;
- (void)applicationWillEnterForegroundWithState:(long long)arg1 notification:(id)arg2;
- (void)applicationWillTerminateWithState:(long long)arg1 notification:(id)arg2;
- (void)applicationDidEnterBackgroundWithState:(long long)arg1 notification:(id)arg2;
- (void)_applicationDidSuspend:(long long)arg1;
- (void)applicationWillResignActiveWithState:(long long)arg1 notification:(id)arg2;
- (void)applicationDidBecomeActiveWithState:(long long)arg1 notification:(id)arg2;
- (void)applicationDidReceiveMemoryWarning;
- (void)dealloc;
- (id)initWithAppStateLogger:(id)arg1 reachabilityAnnouncer:(id)arg2 timeManager:(id)arg3 applicationStatusProvider:(id)arg4;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

