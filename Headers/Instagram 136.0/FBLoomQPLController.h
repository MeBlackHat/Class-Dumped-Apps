//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/FBLoomQPLListenerDelegate-Protocol.h>
#import <FBSharedFramework/FBLoomTraceControlling-Protocol.h>

@protocol FBLoomQPLFallbackConfiguration;

@interface FBLoomQPLController : NSObject <FBLoomTraceControlling, FBLoomQPLListenerDelegate>
{
    struct shared_ptr<FBLoomQPLListener> _listener;
    struct mutex _traceControlMutex;
    struct map<int, (anonymous namespace)::TraceConfig, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, (anonymous namespace)::TraceConfig>>> _traceConfigsByMarkerID;
    id <FBLoomQPLFallbackConfiguration> _fallbackConfiguration;
    vector_12bd641b _triggerIDs;
    struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLogger> _qpl;
    weak_ptr_9aa0e95f _traceManager;
    struct set<int, std::__1::less<int>, std::__1::allocator<int>> _qplWhiteList;
    int _maxAllowedQPLPointLevel;
    struct shared_ptr<FBLoomQPLConfigurable> _qplConfigurable;
    double _postTraceExtension;
    int _currentActivatedMarkerID;
    int _currentActivatedUniqueID;
}

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)dealloc;
- (void)updateListenerMarkersWithTraceStatus:(_Bool)arg1;
- (vector_12bd641b)getInterestingQPLForTraceStatus;
- (void)updateListenerMarkers;
- (int)providersForQPLEventWithMarkerID:(int)arg1;
- (_Bool)shouldSampleQPLEventWithMarkerID:(int)arg1;
- (int)_sampleRateForMarkerID:(int)arg1;
- (_Bool)_shouldUseFallbackConfigValuesForMarkerID:(int)arg1;
- (_Bool)_shouldProcessMarkedID:(int)arg1;
- (double)maxTraceDurationForMarkerID:(int)arg1;
- (shared_ptr_7f7d11ab)getConfigurable;
- (void)invalidateConfig;
- (void)updateConfig:(struct Config *)arg1;
- (void)onTraceEnded;
- (void)onTraceBegin:(const struct FBLoomTraceContext *)arg1;
- (void)resetCurrentActivatedIDs;
- (void)abortTraceWithUniqueID:(int)arg1 markerID:(int)arg2;
- (void)endTraceWithMarkerID:(int)arg1 uniqueID:(int)arg2;
- (_Bool)beginTraceWithMarkerID:(int)arg1 uniqueID:(int)arg2;
- (void)QPLTraceDidMarkEventMarkerID:(int)arg1 uniqueID:(int)arg2 eventType:(const char *)arg3 logLevel:(int)arg4 annotations:(const vector_2e08ac8e *)arg5 timestamp:(long long)arg6 threadId:(unsigned long long)arg7;
- (void)QPLTraceDidTagWithMarkerID:(int)arg1 tag:(const char *)arg2 uniqueID:(int)arg3 threadID:(unsigned long long)arg4;
- (void)QPLTraceDidPointWithMarkerID:(int)arg1 name:(const char *)arg2 data:(const char *)arg3 logLevel:(int)arg4 uniqueID:(int)arg5 timestamp:(long long)arg6 manualTimestamp:(_Bool)arg7 threadID:(unsigned long long)arg8;
- (void)QPLTraceDidAnnotateWithMarkerID:(int)arg1 annotationKey:(const char *)arg2 annotationValue:(const char *)arg3 uniqueID:(int)arg4 threadID:(unsigned long long)arg5;
- (void)QPLTraceWillEndWithMarkerID:(int)arg1 actionID:(short)arg2 timestamp:(long long)arg3 manualTimestamp:(_Bool)arg4 uniqueID:(int)arg5 threadID:(unsigned long long)arg6;
- (void)QPLTraceWillCancelWithMarkerID:(int)arg1 uniqueID:(int)arg2 threadID:(unsigned long long)arg3;
- (_Bool)QPLTraceDidStartWithMarkerID:(int)arg1 uniqueID:(int)arg2 instanceKey:(int)arg3 timestamp:(long long)arg4 manualTimestamp:(_Bool)arg5 threadID:(unsigned long long)arg6;
- (vector_12bd641b)interestingQPLMarkersInTrace:(_Bool)arg1;
- (void)setTraceManager:(weak_ptr_9aa0e95f)arg1;
-     // Error parsing type: v32@0:8^{FBLoomTraceManager=^^?{shared_ptr<FBLoomRingBufferWriter>=^{FBLoomRingBufferWriter}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}@{set<std::__1::shared_ptr<FBLoomBaseTraceProvider>, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> >, std::__1::allocator<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >={__tree<std::__1::shared_ptr<FBLoomBaseTraceProvider>, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> >, std::__1::allocator<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<FBLoomBaseTraceProvider>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >=Q}}}@{unique_ptr<FBLoomTraceContext, std::__1::default_delete<FBLoomTraceContext> >={__compressed_pair<FBLoomTraceContext *, std::__1::default_delete<FBLoomTraceContext> >=^{FBLoomTraceContext}}}{unique_ptr<FBLoomTraceContext, std::__1::default_delete<FBLoomTraceContext> >={__compressed_pair<FBLoomTraceContext *, std::__1::default_delete<FBLoomTraceContext> >=^{FBLoomTraceContext}}}i{atomic<long long>=Aq}{once_flag=Q}{function<void ()>={__value_func<void ()>={type=[24C]}^{__base<void ()>}}}{shared_ptr<FBBaseLoomCoreLoggingProtocol>=^{FBBaseLoomCoreLoggingProtocol}^{__shared_weak_count}}{atomic<bool>=AB}q{atomic<bool>=AB}^{FBMmapLoomRingBuffer}}16r^{FBLoomTraceContext=qiiq@Iid@@iBBd}24, name: traceManager:traceDidFail:
-     // Error parsing type: v32@0:8^{FBLoomTraceManager=^^?{shared_ptr<FBLoomRingBufferWriter>=^{FBLoomRingBufferWriter}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}@{set<std::__1::shared_ptr<FBLoomBaseTraceProvider>, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> >, std::__1::allocator<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >={__tree<std::__1::shared_ptr<FBLoomBaseTraceProvider>, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> >, std::__1::allocator<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<FBLoomBaseTraceProvider>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<FBLoomBaseTraceProvider> > >=Q}}}@{unique_ptr<FBLoomTraceContext, std::__1::default_delete<FBLoomTraceContext> >={__compressed_pair<FBLoomTraceContext *, std::__1::default_delete<FBLoomTraceContext> >=^{FBLoomTraceContext}}}{unique_ptr<FBLoomTraceContext, std::__1::default_delete<FBLoomTraceContext> >={__compressed_pair<FBLoomTraceContext *, std::__1::default_delete<FBLoomTraceContext> >=^{FBLoomTraceContext}}}i{atomic<long long>=Aq}{once_flag=Q}{function<void ()>={__value_func<void ()>={type=[24C]}^{__base<void ()>}}}{shared_ptr<FBBaseLoomCoreLoggingProtocol>=^{FBBaseLoomCoreLoggingProtocol}^{__shared_weak_count}}{atomic<bool>=AB}q{atomic<bool>=AB}^{FBMmapLoomRingBuffer}}16r^{FBLoomTraceContext=qiiq@Iid@@iBBd}24, name: traceManager:traceDidTimeout:
- (id)initWithFallbackConfiguration:(id)arg1;

@end

