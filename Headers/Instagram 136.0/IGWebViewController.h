//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <FBSharedFramework/IGViewController.h>

#import <InstagramAppCoreFramework/FBPassLoaderDelegate-Protocol.h>
#import <InstagramAppCoreFramework/FBWebViewDelegate-Protocol.h>
#import <InstagramAppCoreFramework/IGRefreshControlContentInsetDataSource-Protocol.h>
#import <InstagramAppCoreFramework/IGWebViewErrorPageDelegate-Protocol.h>
#import <InstagramAppCoreFramework/UIGestureRecognizerDelegate-Protocol.h>
#import <InstagramAppCoreFramework/UIScrollViewDelegate-Protocol.h>

@class FBBrowserIntegrityLoggingController, FBPassLoader, FBTimer, IABLoggingCoordinator, IGInstantExperienceBrowserSetupManager, IGRefreshControl, IGUserSession, IGWebViewErrorPage, NSString, NSURL, NSURLRequest, UILongPressGestureRecognizer, UIScrollView, UIView;
@protocol FBScriptMessageHandling, FBWebView, IGWebViewControllerChromeDelegate, IGWebViewControllerDelegate, IGWebViewControllerScrollDelegate;

@interface IGWebViewController : IGViewController <FBPassLoaderDelegate, FBWebViewDelegate, IGWebViewErrorPageDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, IGRefreshControlContentInsetDataSource>
{
    NSURLRequest *_urlRequest;
    NSURL *_initialURL;
    IGWebViewErrorPage *_errorPage;
    FBPassLoader *_passLoader;
    id <FBScriptMessageHandling> _scriptMessageHandler;
    unsigned long long _options;
    IGInstantExperienceBrowserSetupManager *_ixSetupManager;
    FBBrowserIntegrityLoggingController *_browserIntegrityController;
    IABLoggingCoordinator *_loggingCoordinator;
    UILongPressGestureRecognizer *_touchDownGestureRecognizer;
    _Bool _didInitialScroll;
    unsigned long long _numberOfCloses;
    _Bool _isFirstTapUniversalLinkEnabled;
    IGRefreshControl *_refreshControl;
    struct __CFHost *_asyncDNSHost;
    _Bool _isDNSPrefetchEnabled;
    long long _numberOfRetry;
    FBTimer *_retryTimer;
    _Bool _shouldHideToolbarWhenViewAppear;
    id <IGWebViewControllerDelegate> _delegate;
    id <IGWebViewControllerScrollDelegate> _scrollDelegate;
    id <IGWebViewControllerChromeDelegate> _chromeDelegate;
    UIView<FBWebView> *_webView;
    unsigned long long _loadState;
    IGUserSession *_userSession;
    NSURL *_redirectURL;
}

@property(nonatomic) _Bool shouldHideToolbarWhenViewAppear; // @synthesize shouldHideToolbarWhenViewAppear=_shouldHideToolbarWhenViewAppear;
@property(readonly, nonatomic) NSURL *redirectURL; // @synthesize redirectURL=_redirectURL;
@property(readonly, nonatomic) IGUserSession *userSession; // @synthesize userSession=_userSession;
@property(readonly, nonatomic) unsigned long long loadState; // @synthesize loadState=_loadState;
@property(readonly, nonatomic) UIView<FBWebView> *webView; // @synthesize webView=_webView;
@property(nonatomic) __weak id <IGWebViewControllerChromeDelegate> chromeDelegate; // @synthesize chromeDelegate=_chromeDelegate;
@property(nonatomic) __weak id <IGWebViewControllerScrollDelegate> scrollDelegate; // @synthesize scrollDelegate=_scrollDelegate;
@property(nonatomic) __weak id <IGWebViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (double)idleTopContentInsetForRefreshControl:(id)arg1;
- (void)_startDNSPrefetchWithRequest:(id)arg1;
- (void)_cancelDNSPrefetchIfNecessary;
- (_Bool)_isInstantExperience;
- (void)_retryReloadWithType:(unsigned long long)arg1;
- (void)_handlePostNavigationWithURL:(id)arg1 type:(unsigned long long)arg2 shouldDimissBrowser:(_Bool)arg3;
- (void)_registerMessagesForScriptMessageHandlerIfNecessary;
- (void)didTouchDown:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)_applicationWillResignActive:(id)arg1;
- (void)passLoader:(id)arg1 didFinishLoadingPass:(id)arg2 error:(id)arg3;
- (void)passLoader:(id)arg1 didReceiveUnsupportedMIMEType:(id)arg2;
- (void)webViewErrorPageDidTapRetry:(id)arg1;
- (void)_cancelPendingPassLoadIfNecessary;
- (void)_loadMIMETypeWithRequest:(id)arg1;
- (void)_handlePageError:(id)arg1;
- (void)webView:(id)arg1 receivedResponseStatusCode:(long long)arg2;
- (void)webView:(id)arg1 scriptMessageReceivedFrom:(id)arg2 websiteURL:(id)arg3 messageName:(id)arg4 messageParams:(id)arg5;
- (void)webViewBlockingResourcesLoaded:(id)arg1;
- (void)webView:(id)arg1 URLChanged:(id)arg2;
- (void)webView:(id)arg1 titleChanged:(id)arg2;
- (void)webView:(id)arg1 didFailNavigationRequest:(id)arg2 withError:(id)arg3;
- (void)webView:(id)arg1 didFinishNavigationRequest:(id)arg2;
- (void)webView:(id)arg1 progressChanged:(double)arg2;
- (void)webView:(id)arg1 loadingStateChanged:(_Bool)arg2;
- (void)webView:(id)arg1 didReceiveServerRedirectForNavigation:(id)arg2;
- (void)webView:(id)arg1 didStartNavigationRequest:(id)arg2;
- (_Bool)webView:(id)arg1 shouldStartNavigationRequest:(id)arg2 navigationType:(long long)arg3 sourceFrame:(id)arg4 targetFrame:(id)arg5;
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
@property(readonly, nonatomic) UIScrollView *webViewScrollView;
@property(readonly, nonatomic) NSURL *currentLocationURL;
- (void)cleanUpClosedWebView;
- (void)removeErrorPageIfNecessary;
- (void)reloadWebviewWithRefreshType:(unsigned long long)arg1;
- (void)loadRequest:(id)arg1;
- (void)loadURL:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)_pullToRefresh:(id)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithUserSession:(id)arg1 analyticsModule:(id)arg2 options:(unsigned long long)arg3 loggingCoordinator:(id)arg4 scriptMessageHandler:(id)arg5 browserIntegrityController:(id)arg6 redirectURL:(id)arg7;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

