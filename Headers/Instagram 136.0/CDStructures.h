//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class FBAACEncoder, FBCameraAction, FBCaptureDeviceConfiguration, FBDiskVideoRecorderDiskResults, FBMPVideoData, FBVideoBroadcastSessionTimingDataModel, IGStyledString, NSArray, NSDictionary, NSError, NSMapTable, NSMutableSet, NSObject, NSString, NSURL;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ARClassContext;

struct ARClassSource;

struct AREngineLogger;

struct ARLinkScanner;

struct AdaptiveBitrateAlgorithm;

struct AdaptiveBitrateAlgorithmFactory;

struct AdaptiveBitrateBandwidthBasedParameters {
    int smallQueueSizeMs;
    int bigQueueSizeMs;
    int decreaseBitrateAmountBps;
    int increaseBitrateAmountBps;
    _Bool includeTransportQueueSizeInAbr;
    int timeSinceLastBitrateChangeThresholdMs;
};

struct AdaptiveBitrateConfig {
    _Bool enabled;
    int intervalInVideoFrames;
    int minBitrate;
    int maxBitrate;
    int maxBitrateWifi;
    struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> rules;
    int statisticsWindowSize;
    double statisticsSmoothFactor;
    basic_string_90719d97 abrClassName;
    basic_string_90719d97 abrJS;
    basic_string_90719d97 abrResolutionClassName;
    int videoBitrateThreshold216;
    int videoBitrateThreshold288;
    int videoBitrateThreshold360;
    int videoBitrateThreshold504;
    int videoBitrateThreshold648;
    int videoBitrateThreshold720;
    int videoBitrateThreshold24fps;
    struct AdaptiveBitrateExperimentalParameters experimentalParameters;
    struct AdaptiveBitrateBandwidthBasedParameters bandwidthBasedAbrParameters;
    _Bool useLowLatencyABR;
    int packetLossThresholdForBitrateIncrease;
    int packetLossThresholdForBitrateDecrease;
    double bitrateIncreaseCoefficentPacketLoss;
    double bitrateDecreaseCoefficentPacketLoss;
};

struct AdaptiveBitrateExperimentalParameters {
    int timeSinceLastResolutionChangeThresholdMs;
    int resolutionUpscaleBitratePercent;
    int bitrateReductionPercentOnUpscale;
    int timeSinceLastBitrateIncreaseThresholdMs;
    int increaseBitrateAboveLastKnownGoodBitrate;
    int minDecreaseBitrateForLargeQueue;
    _Bool useRemoteThroughput;
    _Bool useExperimentalResolutionMap;
    float bitsPerPixelRatio;
    _Bool shouldProbeToIncreaseBitrate;
    int probeTimeoutMs;
    double constantProbingFactor;
    _Bool useNonExpWeightedMean;
    _Bool checkForBytesSent;
    double dynamicOutputBrRatioForSubMaxBr;
    double dynamicOutputBrRatioForMaxBr;
    int timeSpentAtMaxBitrateToDecreaseOutputBrLimitMs;
};

struct AdaptiveBitrateInputParameterProcessor;

struct AllocationLogger;

struct Analytics;

struct AnalyticsLogger;

struct AppleLiveStreamingClient;

struct AppleStreamingSessionCallbacksHybrid;

struct AssetsManagerResult {
    struct vector<facebook::cameracore::ardelivery::LocalAsset, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> _field1;
};

struct AsyncExecutor;

struct Audio {
    int _field1;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioClassDescription {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AudioConfig {
    int sampleRate;
    int bitRate;
    int channels;
};

struct AudioConverterInputData {
    unsigned long long offset;
    struct vector<std::__1::vector<char, std::__1::allocator<char>>, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> bytes;
};

struct AudioDecoderFactory;

struct AudioDeviceModule {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioEncoderConfig {
    int sampleRate;
    int bitRate;
    int channels;
    int profile;
};

struct AudioEncoderErrorReporter {
    CDUnknownFunctionPointerType *_vptr$AudioEncoderErrorReporter;
};

struct AudioEncoderFactory;

struct AudioPacketizer;

struct AudioPacketizerFactory;

struct AudioPlatformComponentHostImpl;

struct AudioProcessing;

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioSourceInterface;

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioTrackInterface;

struct BKBloksParseResult {
    id parsedModel;
    NSDictionary *idToModelMap;
    NSDictionary *clientIdToModelMap;
    NSMapTable *clientIdToControllerMap;
    NSDictionary *clientIdToParentMap;
    struct BloksParserConfig clientParserConfig;
    id clientParserContext;
    _Bool isRenderCoreEnabled;
};

struct BasePluginConfiguration {
    CDUnknownFunctionPointerType *_field1;
    struct vector<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>, std::__1::allocator<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>>> _field2;
};

struct BaseTimestampManagerService;

struct BatteryLogger;

struct BitrateAdjuster;

struct BitrateAllocationStrategy;

struct BlendFunc {
    _Bool blendEnabled;
    int rgbBlendOp;
    int alphaBlendOp;
    int srcRGBBlendFactor;
    int srcAlphaBlendFactor;
    int dstRGBBlendFactor;
    int dstAlphaBlendFactor;
};

struct BloksParserConfig {
    CDUnknownFunctionPointerType createParseContext;
    CDUnknownFunctionPointerType postParseModel;
    CDUnknownFunctionPointerType postParse;
    CDUnknownFunctionPointerType preMount;
    CDUnknownFunctionPointerType performanceLogFunction;
};

struct BodyTrackerConfig {
    int _field1;
    int _field2;
    _Bool _field3;
};

struct BroadcastSessionStatsProvider;

struct BufferDesc {
    int type;
    void *data;
    unsigned long long length;
    int storage;
    struct vector<igl::UniformBufferEntry, std::__1::allocator<igl::UniformBufferEntry>> uniforms;
};

struct BufferPool;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>;

struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>;

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CKSizeRange {
    struct CGSize _field1;
    struct CGSize _field2;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CallInvoker;

struct CameraPreviewInfo {
    float _field1;
    struct PreviewPixelSize _field2;
    struct EffectSafeAreaInsets _field3;
    float _field4;
};

struct CameraVideoInfo {
    _Bool _field1;
    _Bool _field2;
    unsigned char _field3;
};

struct CapabilityMinVersionModel;

struct CaptureCompletionContext;

struct CaptureEventInput;

struct CaptureEventService;

struct Chromaticity {
    float _field1;
    float _field2;
};

struct CodecSpecificInfo {
    int _field1;
    union CodecSpecificInfoUnion _field2;
};

struct CodecSpecificInfoH264 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
};

struct CodecSpecificInfoH265 {
    int _field1;
    unsigned char _field2;
};

struct CodecSpecificInfoVP8 {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    char _field4;
    _Bool _field5;
    unsigned long long _field6[3];
    unsigned long long _field7;
    unsigned long long _field8[3];
    unsigned long long _field9;
};

struct CodecSpecificInfoVP9 {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    unsigned char _field6;
    _Bool _field7;
    _Bool _field8;
    unsigned char _field9;
    unsigned long long _field10;
    _Bool _field11;
    unsigned short _field12[8];
    unsigned short _field13[8];
    struct GofInfoVP9 _field14;
    unsigned char _field15;
    unsigned char _field16[3];
    _Bool _field17;
};

struct ColorAttachment;

struct ColorAttachmentDesc;

struct ColorSpace {
    unsigned char _field1;
    unsigned char _field2;
    unsigned char _field3;
    int _field4;
    int _field5;
    int _field6;
    struct optional<webrtc::HdrMetadata> _field7;
};

struct CompactBitstreamWriter {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct CompletionPayload {
    id _field1;
    id _field2;
    id _field3;
};

struct Config {
    _Bool _field1;
};

struct ConnectionMeasurements {
    struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field1;
    struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> _field2;
    struct Optional<facebook::mobile::xplat::livestreaming::TCPInfo> _field3;
    Optional_64fd2ed9 _field4;
    struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> _field5;
    struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> _field6;
    struct Optional<long long> _field7;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field8;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field9;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field10;
    struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> _field11;
    struct Optional<long long> _field12;
    struct Optional<long long> _field13;
    struct Optional<long long> _field14;
};

struct Constraint;

struct Constraints {
    struct Constraint *_field1;
    struct Constraint *_field2;
    struct __compressed_pair<webrtc::MediaConstraints::Constraint *, std::__1::allocator<webrtc::MediaConstraints::Constraint>> {
        struct Constraint *_field1;
    } _field3;
};

struct CopyOnWriteBuffer {
    struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> _field1;
};

struct CriticalSection {
    struct _opaque_pthread_mutex_t mutex_;
    struct _opaque_pthread_t *thread_;
    int recursion_count_;
};

struct CryptoOptions {
    struct Srtp _field1;
    struct SFrame _field2;
};

struct DataBuffer {
    struct CopyOnWriteBuffer _field1;
    _Bool _field2;
};

struct DataChannelDelegateAdapter;

struct DataChannelInit {
    _Bool reliable;
    _Bool ordered;
    int maxRetransmitTime;
    int maxRetransmits;
    basic_string_90719d97 protocol;
    _Bool negotiated;
    int id;
};

struct DataChannelInterface;

struct DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>;

struct DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>;

struct DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>;

struct DelayedMessage;

struct DenseStorage<float, 2, 2, 1, 0> {
    struct plain_array<float, 2, 0, 0> _field1;
};

struct DepthAttachmentDesc {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
};

struct DepthStencilStatePool {
    CDUnknownFunctionPointerType *_field1;
    struct list<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, std::__1::allocator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>>> _field2;
    struct unordered_map<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>, std::__1::hash<igl::DepthStencilStateDesc>, std::__1::equal_to<igl::DepthStencilStateDesc>, std::__1::allocator<std::__1::pair<const igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>>> _field3;
    unsigned int _field4;
};

struct DestructionGuardAdapter;

struct Device;

struct DiskVideoRecorderConfig {
    int availableSpaceThresholdInMB;
    struct duration<double, std::__1::ratio<1, 1>> checkAvailableSpaceIntervalInSeconds;
    struct duration<double, std::__1::ratio<1, 1>> movieFragmentIntervalInSeconds;
    struct VideoConfig videoConfig;
    struct AudioConfig audioConfig;
    _Bool enablePartialRecordingIfNoEnoughSpace;
    _Bool enableLiveWithDVR;
};

struct DtmfSenderInterface;

struct DualTexture;

struct DvrManagerService;

struct DynamicInstructionsConfig {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct EAGLContext {
    Class _field1;
    struct _EAGLContextPrivate *_field2;
};

struct Effect;

struct EffectAnalyticsInfo {
    struct EffectSessionAnalyticsInfo _field1;
    basic_string_90719d97 _field2;
    int _field3;
};

struct EffectAssetBundle;

struct EffectAssetLoader;

struct EffectAssetModel {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    basic_string_90719d97 _field5;
    unsigned long long _field6;
    int _field7;
    int _field8;
    struct vector<facebook::cameracore::ardelivery::EffectAssetBundle, std::__1::allocator<facebook::cameracore::ardelivery::EffectAssetBundle>> _field9;
};

struct EffectAttribution;

struct EffectController;

struct EffectDataSnapshot;

struct EffectLoggingInfo {
    struct EffectSessionAnalyticsInfo _field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    int _field4;
    basic_string_90719d97 _field5;
    basic_string_90719d97 _field6;
    _Bool _field7;
};

struct EffectModel {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct EffectAssetModel _field3;
    vector_82fe7ddd _field4;
};

struct EffectRenderData;

struct EffectSafeAreaInsets {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct EffectSessionAnalyticsInfo {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
};

struct EffectStateListener;

struct EffectStateManager;

struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
};

struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
};

struct EncodedImage {
    unsigned int _field1;
    unsigned int _field2;
    long long _field3;
    long long _field4;
    int _field5;
    int _field6;
    unsigned char _field7;
    _Bool _field8;
    int _field9;
    struct PlayoutDelay _field10;
    struct Timing _field11;
    struct CopyOnWriteBuffer _field12;
    unsigned long long _field13;
    char *_field14;
    unsigned long long _field15;
    unsigned int _field16;
    struct optional<int> _field17;
    struct optional<webrtc::ColorSpace> _field18;
};

struct EngineDebugConfiguration {
    _Bool displayBodyKeypoints;
    _Bool displayHandLandmarks;
    int panelSetup;
    _Bool displayFaceLandmarks;
    _Bool displayIrisLandmarks;
    _Bool displayFaceWireframes;
    _Bool enableGpuTimer;
    _Bool enableProfiler;
    _Bool forceNoMsaa;
    unsigned int verbosityFlags;
};

struct EngineScope;

struct Error {
    basic_string_90719d97 _field1;
    int _field2;
    basic_string_90719d97 _field3;
    struct shared_ptr<facebook::cameracore::ardelivery::Error> _field4;
};

struct EventMapping {
    id _field1;
};

struct EvictionPlugin;

struct Exception;

struct Expected<facebook::cameracore::ardelivery::AssetsManagerResult, facebook::cameracore::ardelivery::Error> {
    union {
        struct AssetsManagerResult _field1;
        struct Error _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
};

struct Expected<msqrd::dataprovider::IVideoDataProviderResult::VideoFrame, msqrd::dataprovider::IVideoDataProviderResult::SkippingReason> {
    union {
        struct VideoFrame _field1;
        int _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
};

struct Expression;

struct FBARAssetsManagerCxxFactory;

struct FBARCameraCaptureControllerSwitchBundle {
    unsigned char startType;
    FBCaptureDeviceConfiguration *captureDeviceConfiguration;
    FBCameraAction *cameraAction;
    NSObject *cameraActionCompletionQueue;
    CDUnknownBlockType cameraActionCompletion;
};

struct FBARCaptureEventServiceCameraInfo {
    unsigned char _field1;
    unsigned char _field2;
    float _field3;
    float _field4;
    struct PixelSize _field5;
    struct EffectSafeAreaInsets _field6;
};

struct FBAREngineOutputSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct FBAREngineRenderOptions {
    float _field1;
};

struct FBAppleMetricPayload {
    id _field1;
    _Bool _field2;
    id _field3;
    id _field4;
    id _field5;
    id _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
    double _field13;
    double _field14;
    double _field15;
    long long _field16;
    double _field17;
    double _field18;
    double _field19;
    double _field20;
    double _field21;
    double _field22;
    double _field23;
    double _field24;
    double _field25;
    long long _field26;
    double _field27;
    double _field28;
    double _field29;
    double _field30;
    double _field31;
    double _field32;
};

struct FBAudioFileReader<short>;

struct FBCCUpdateBundle {
    id _field1;
    id _field2;
};

struct FBCameraConfiguration {
    _Bool shouldFrontCameraVideoMirrored;
    _Bool isFlipFrontCameraOutputEnabled;
    long long startingDevicePosition;
    long long initialFlashMode;
    NSString *initialSessionPreset;
    unsigned char initialTargetFPS;
    _Bool audioCaptureIgnoreRTCClientNotification;
    _Bool automaticallyConfiguresApplicationAudioSession;
    _Bool canPreConfigureAudioSession;
    _Bool shouldRemoveInputsAndOutputsWhenStopped;
    _Bool enableEchoCancellation;
    _Bool canUseLatestAudioVideoCaptureOutput;
    _Bool videoBufferTransformEnabled;
    _Bool stopLivePreviewOnPhotoCapture;
    long long videoStabilizationMode;
    _Bool subjectAreaChangeMonitoring;
    float lowLightDetectionThreshold;
    float lowLightExposureBias;
    double maxZoomFactor;
    _Bool keepAudioSessionActiveDuringCameraSession;
    _Bool markAVWriterInputsAsFinishedWhenRecordingStops;
    CDUnknownBlockType disableARKitCacheBlock;
    struct CGSize preferredWorldTrackingResolution;
    _Bool planeDetectionEnabled;
    _Bool produceWorldTrackingFrames;
    _Bool worldTrackingAlignmentGravity;
    _Bool lowLightDetectorEnabled;
    _Bool stillImageCaptureEnabled;
    _Bool delayImageCaptureWhileAdjustingCamera;
    _Bool audioCaptureEnabled;
    NSArray *preferredCaptureDeviceTypes;
    NSArray *captureDevices;
    unsigned int photoPixelFormat;
    struct FBCaptureAutoExposureConfiguration autoExposureConfiguration;
    struct FBCapturePOIDetectorConfiguration detectorConfiguration;
    _Bool fbAudioEnabled;
    NSArray *photoCapturePlugins;
    _Bool useFBMultiCaptureManager;
    _Bool enableMultiCapture;
    struct CGSize customizedCapturedPhotoResolution;
};

struct FBCameraEventLoggingInfo {
    unsigned long long _field1;
    id _field2;
};

struct FBCaptureAutoExposureConfiguration {
    _Bool enableAutoExposureOnTrackedObjects;
    _Bool trackVisibleFaces;
    _Bool trackVisibleBodies;
    _Bool trackVisibleCats;
    _Bool trackVisibleDogs;
};

struct FBCapturePOIDetectorConfiguration {
    long long detectorType;
    double executionTimeInterval;
    double minimumBoundsChange;
    _Bool drawDebugBounds;
};

struct FBCaptureSessionConfig {
    _Bool _field1;
    id _field2;
};

struct FBFramePerformanceResult {
    double _field1;
    double _field2;
    double _field3;
    long long _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
};

struct FBFramePerformanceTrackerConfig {
    long long singleFrameDropEventFrameNumber;
    long long twoConsecFrameDropEventFrameNumber;
    long long fourConsecFrameDropEventFrameNumber;
    long long eightConsecFrameDropEventFrameNumber;
    long long maxFrameDropAccount;
    long long initialTrackedFrame;
};

struct FBGestureConfiguration {
    _Bool _field1;
};

struct FBIGLActivations {
    _Bool surfaceEnabled;
    _Bool imageFilterEnabled;
    _Bool imageOverlayFilterEnabled;
    _Bool dynamicImageOverlayFilterEnabled;
    _Bool bgraToYUVConverterFilterEnabled;
    _Bool doodleDrawingFilterEnabled;
};

struct FBMPCameraInfoInputConfiguration {
    _Bool replayOnPortConnect;
};

struct FBMPDataCapturerCompletionContext {
    NSObject *callbackQueue;
    CDUnknownBlockType block;
};

struct FBMPDataMetadata {
    unsigned long long index;
    unsigned long long uniqueId;
    _Bool forCapture;
    _Bool forPreview;
    _Bool forOverlay;
};

struct FBMPRawTouchSnapshot {
    struct CGPoint _field1;
    long long _field2;
};

struct FBMPSessionConfig {
    _Bool trackPerformance;
    _Bool batchPostOperationPortBlocks;
    struct FBIGLActivations iglActivations;
};

struct FBMQTTChannelConnectEventObserver;

struct FBMQTTChannelConnectionStateObserver;

struct FBMQTTChannelEventLogger;

struct FBMQTTChannelPublishEventObserver;

struct FBMQTTChannelSubscribeEventObserver;

struct FBNetworkSpeedTestStatus {
    int _field1;
    double _field2;
    unsigned long long _field3;
    id _field4;
    _Bool _field5;
};

struct FBPostCaptureCoordinatorConfiguration {
    struct FBRendererConfiguration rendererConfiguration;
    _Bool needsPreview;
};

struct FBPreviewConfiguration {
    _Bool isInitialPreviewModeAVCaptureVideoPreviewLayer;
    NSString *contentsGravity;
    long long renderTransactionMode;
    struct CGRect previewCropRect;
    _Bool renderQueueMainThread;
};

struct FBProxyAnnouncer {
    Class _field1;
};

struct FBRendererConfiguration {
    _Bool skipRenderingUntilAllFiltersPrepared;
    _Bool flushTextureCacheOnEveryFrame;
    _Bool multipleOutputsEnabled;
    _Bool overlayOutputEnabled;
    _Bool batchPostConnectionOperations;
    _Bool iglSurfaceEnabled;
    _Bool iglImageFilterEnabled;
    _Bool iglImageOverlayFilterEnabled;
    _Bool iglDoodleDrawingFilterEnabled;
    _Bool forceAspectRatioMatching;
};

struct FBStructuredLogEventConfig {
    id _field1;
    double _field2;
};

struct FBStructuredLogEventMetadata {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct FBStructuredLogger;

struct FBVideoBroadcastBaseSessionParameters {
    struct FBVideoBroadcastSessionTimestampConfig timestampConfig;
    FBVideoBroadcastSessionTimingDataModel *timingDataModel;
};

struct FBVideoBroadcastInputSource;

struct FBVideoBroadcastMediaStreamingSessionParameters {
    NSString *broadcastID;
    _Bool sandbox;
    _Bool forceNonSecureConnection;
    _Bool waitForConnectAck;
    _Bool enableTcpFallback;
    struct MediaStreamingThreadingConfig threadingConfig;
    NSString *persistentCacheDir;
    struct Optional<facebook::mobile::xplat::livestreaming::NetworkLagConfig> networkLagConfig;
    NSObject *sampleBufferQueue;
    id messageChannel;
    CDStruct_62c1d2ec sessionConfig;
    struct FBVideoBroadcastBaseSessionParameters baseParams;
};

struct FBVideoBroadcastPipelineHolder {
    shared_ptr_c386cb19 networkSession;
    FBAACEncoder *audioEncoder;
    id videoEncoder;
    id audioPacketizer;
    id videoPacketizer;
    id diskRecorder;
};

struct FBVideoBroadcastRtmpSessionParameters {
    id _field1;
    CDStruct_62c1d2ec _field2;
    id _field3;
    id _field4;
    id _field5;
    shared_ptr_f32f4099 _field6;
    shared_ptr_d61e43bb _field7;
    CDUnknownBlockType _field8;
    CDUnknownBlockType _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    shared_ptr_75e1c217 _field12;
    shared_ptr_b7837d35 _field13;
    shared_ptr_0a7db57b _field14;
    Optional_038b8a0f _field15;
    struct FBVideoBroadcastBaseSessionParameters _field16;
};

struct FBVideoBroadcastRtmpSwapStats {
    double audioBufferDurationSeconds;
    double videoBufferDurationSeconds;
    double lastAudioPts;
    double lastVideoPts;
    double lastAudioPtsStreamTime;
    double callStartedToSocketWritabilityLatencySeconds;
    double callJoinedToSocketWritabilityLatencySeconds;
};

struct FBVideoBroadcastSessionLoggingInfo {
    NSString *reason;
    NSError *error;
    _Bool remoteEnded;
};

struct FBVideoBroadcastSessionStats {
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> adaptiveBitrateStats;
    CDStruct_1b6d18a9 pipelineLatency;
    CDStruct_1b6d18a9 lastSentAudioPts;
    CDStruct_1b6d18a9 lastSentVideoPts;
    double throughput;
    unsigned long long totalBytesSent;
    unsigned long long elapsedTimeInMs;
    CDStruct_1b6d18a9 lastAudioSampleBufferPts;
    CDStruct_1b6d18a9 lastVideoSampleBufferPts;
    double videoQueueSizeInSeconds;
    double audioQueueSizeInSeconds;
    unsigned long long queueSizeInBytes;
    unsigned long long framerateSentToTransport;
    unsigned long long bitrateBpsSentToTransport;
    double batteryChargeLevel;
    long long batteryStatus;
    unsigned long long totalVideoBytesSent;
    unsigned long long totalAudioBytesSent;
    unsigned long long audioPacketsLost;
    unsigned long long audioPacketsSent;
    unsigned long long videoPacketsLost;
    unsigned long long videoPacketsSent;
    unsigned long long videoFramesEncoded;
    _Bool bandwidthLimitedResolution;
    _Bool cpuLimitedResolution;
    unsigned int encodeUsagePercent;
    unsigned int averageEncodeMs;
    unsigned long long frameRateSent;
    unsigned long long nacksReceived;
    unsigned long long firsReceived;
    unsigned long long plisReceived;
};

struct FBVideoBroadcastSessionStatsInternal {
    struct FBVideoBroadcastSessionStats _field1;
    struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> _field2;
    double _field3;
    long long _field4;
};

struct FBVideoBroadcastSessionTimestampConfig {
    _Bool shiftTimestampBase;
    _Bool collapseGapsInAudio;
    _Bool collapseGapsInVideo;
};

struct FBVideoBroadcastStreamTimestampGapDetector {
    CDStruct_1b6d18a9 _lastAudioPTS;
    CDStruct_1b6d18a9 _lastAudioDuration;
    CDStruct_1b6d18a9 _accumulatedGap;
    long long _gapCounter;
};

struct FBWhistleConnectionStatsLogger;

struct FaceTrackerConfig {
    int _field1;
    int _field2;
};

struct FileRotatingLogSink;

struct FilterUniformUpdate {
    void *data;
    unsigned long long size;
    unsigned long long offset;
};

struct FindFaceConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FindHandConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FindPersonConfig {
    _Bool _field1;
    _Bool _field2;
};

struct FrameDecryptorInterface;

struct FrameDrops {
    double singleFrameDrop;
    double twoConsecFrameDrops;
    double fourConsecFrameDrops;
    double eightConsecFrameDrops;
};

struct FrameEncryptorInterface;

struct FrameRateTracker {
    int _field1;
    struct duration<long long, std::__1::ratio<1, 1000000>> _field2;
    int _field3;
    float _field4;
};

struct FrameServiceFeedback {
    unsigned char facesTrackedCount;
};

struct Framebuffer;

struct Function<void (const folly::Expected<std::__1::basic_string<char>, facebook::cameracore::ardelivery::Error>&)> {
    union Data _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct Function<void (const folly::Expected<std::__1::vector<facebook::cameracore::ardelivery::ModelMetadataResponse, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataResponse>>, facebook::cameracore::ardelivery::Error>&)> {
    union Data _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
};

struct GccConfig {
    int maxConsecutiveFailedLookups;
    _Bool dropBitrateOnLowFeedback;
    int minPacketSendRate;
    double minPacketFeedbackRatio;
};

struct GestureEvent;

struct GestureEventServiceCreator;

struct GetPhotosParams {
    id _field1;
};

struct GofInfoVP9 {
    unsigned long long _field1;
    unsigned char _field2[255];
    _Bool _field3[255];
    unsigned char _field4[255];
    unsigned char _field5[255][3];
    unsigned short _field6;
};

struct GraphicsEngine;

struct H264BitstreamParser {
    CDUnknownFunctionPointerType *_vptr$H264BitstreamParser;
    struct optional<webrtc::SpsParser::SpsState> sps_;
    struct optional<webrtc::PpsParser::PpsState> pps_;
    struct optional<int> last_slice_qp_delta_;
};

struct HandTrackerConfig {
    int _field1;
    int _field2;
};

struct HdrMasteringMetadata {
    struct Chromaticity _field1;
    struct Chromaticity _field2;
    struct Chromaticity _field3;
    struct Chromaticity _field4;
    float _field5;
    float _field6;
};

struct HdrMetadata {
    struct HdrMasteringMetadata _field1;
    int _field2;
    int _field3;
};

struct I420BufferInterface;

struct IARClassConfigSource;

struct IARClassPersistentStore;

struct IARClassRemoteSource;

struct IAssetsManager;

struct IAsyncAssetFetcher;

struct IAsyncAssetLoader;

struct IAudioFileSink;

struct IAudioGraphClient;

struct IAudioPlatformComponentHost;

struct IAudioServiceConfigurationAnnouncer;

struct IAudioServiceController;

struct IAugmentationsController;

struct IBuffer;

struct IBugReportLogger;

struct ICancelableToken;

struct ICaptureEventInput;

struct ICommandBuffer;

struct ICommandQueue;

struct IConnectionInfoProvider;

struct IDepthStencilState;

struct IDevice {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
};

struct IEffectAssetLoader;

struct IEffectDataSnapshotterCreator;

struct IEffectSessionListener;

struct IEffectStateListener;

struct IEffectsManager;

struct IEngineAnalyticsLogger;

struct IExperimentConfig;

struct IFileCache;

struct IFramebuffer;

struct IGAssetNetworkerRetryParams {
    long long _field1;
    long long _field2;
    long long _field3;
};

struct IGAssetSelectionMechanic {
    unsigned long long options;
    unsigned long long maxSelectionCount;
};

struct IGBloksViewControllerExtras {
    id _field1;
    id _field2;
    id _field3;
    _Bool _field4;
    id _field5;
    id _field6;
    id _field7;
};

struct IGCCCaptureManagerAutoExposureOptions {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
};

struct IGCameraLoggerDoodleData {
    _Bool _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct IGCameraLoggerExtraMediaData {
    double _field1;
    long long _field2;
    double _field3;
    double _field4;
};

struct IGCameraPreviewInfo {
    long long cameraPosition;
    struct CGSize previewSize;
    struct UIEdgeInsets safeArea;
    _Bool isPostCapture;
};

struct IGCompositionFilterTransform {
    struct CGPoint scale;
    struct CGPoint translation;
    double rotation;
};

struct IGCropInfo {
    struct CGSize _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
};

struct IGDirectDataSubscriptionPipe {
    Class _field1;
};

struct IGExpandableButtonLayouts {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    double _field12;
};

struct IGGallerySectionLayout;

struct IGGridLayoutConfiguration {
    double interitemSpacing;
    struct UIEdgeInsets insets;
    double mediasPerRow;
    double aspectRatio;
};

struct IGLActivations {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    _Bool _field12;
    _Bool _field13;
    _Bool _field14;
    _Bool _field15;
    _Bool _field16;
};

struct IGMediaShareSurfaceAxisRange {
    double _field1;
    double _field2;
};

struct IGMediaShareSurfaceRectRange {
    struct IGMediaShareSurfaceAxisRange _field1;
    struct IGMediaShareSurfaceAxisRange _field2;
};

struct IGOverlayViewLocationInfo {
    struct CGPoint position;
    struct CGSize size;
    struct CGPoint translation;
    double scale;
    double rotation;
    _Bool isMirroredHorizontally;
};

struct IGOverlayViewTapInfo {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
    long long _field4;
};

struct IGPagingFocusOffsets {
    long long before;
    long long focused;
    long long after;
};

struct IGPercentageLayoutInfo {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct IGProfileNavButtonExperiments {
    _Bool profileIsNotInTabBar;
    _Bool showFadingFollowButton;
    _Bool bagEnabled;
    _Bool qrCodeEnabled;
};

struct IGRegion {
    struct CGPoint center;
    struct CGSize size;
    double rotation;
};

struct IGStoryMediaTransform {
    struct CGPoint anchorPoint;
    struct CGPoint offsetFromCenter;
    double scale;
    double rotation;
};

struct IGStoryRegion {
    struct CGPoint _field1;
    struct CGSize _field2;
    double _field3;
};

struct IGStyledStringBloksCache {
    unsigned long long modelPointer;
    double width;
    IGStyledString *cachedStyled;
};

struct IGTimeInfo {
    long long _field1;
    long long _field2;
};

struct IGUserActionPredictorCriteria {
    double _field1;
};

struct ILocationUpdateListener;

struct ILogger {
    CDUnknownFunctionPointerType *_field1;
};

struct IMicrophoneSink;

struct IModelManager;

struct IModelManagerConfig;

struct IModelMetadataDownloading;

struct IModelVersionFetcher;

struct INetworkClientSource;

struct INetworkConsentManager;

struct INetworkRequestRedirectHandler;

struct INetworkResult;

struct IOBuf {
    struct IOBuf *_field1;
    struct IOBuf *_field2;
    char *_field3;
    char *_field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
};

struct IPersistenceServiceDelegate;

struct IPlatformSLAMDataInput;

struct IProfiler;

struct IProgramObjectProvider;

struct IRawEventLogger;

struct IRenderCommandEncoder;

struct IRenderPipelineState;

struct IRenderTarget;

struct ISamplerState;

struct IScriptingHost;

struct IScriptingLogger;

struct IServiceAnalyticsLogger;

struct IServiceConfiguration;

struct ISessionLogger;

struct ISessionPlayer;

struct IShaderLogger;

struct IShaderModule;

struct IShaderObjectProvider;

struct ITargetEffect;

struct ITargetEffectStateChangeListener;

struct ITexture;

struct ITrackerCreator;

struct ITrackingController;

struct IVersionedModelCache {
    CDUnknownFunctionPointerType *_field1;
};

struct IVertexInputState;

struct IVideoDataProvider;

struct IViewport;

struct IceCandidateInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct IceServer {
    basic_string_90719d97 _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    int _field5;
    basic_string_90719d97 _field6;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field7;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field8;
};

struct IdBase;

struct IgshoppingbaglogginginfoType {
    NSString *checkoutSessionId;
    NSString *globalBagEntryPoint;
    NSString *globalBagId;
    NSString *globalBagPriorModule;
    NSString *merchantBagEntryPoint;
    NSString *merchantBagId;
    NSString *merchantBagPriorModule;
};

struct IgshoppingnavigationinfoType {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
};

struct ImageMetadata {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    _Bool _field5;
    int _field6;
    _Bool _field7;
    Optional_64fd2ed9 _field8;
    struct Optional<std::__1::vector<float, std::__1::allocator<float>>> _field9;
    struct Optional<std::__1::pair<float, float>> _field10;
    struct Optional<float> _field11;
    Optional_64fd2ed9 _field12;
};

struct ImageURLLoaderAttribution {
    int _field1;
    int _field2;
};

struct Info {
    struct Optional<std::__1::basic_string<char>> _field1;
    basic_string_90719d97 _field2;
};

struct InlineSerialExecutor;

struct InstructionConfig {
    struct FindFaceConfig _field1;
    struct FindHandConfig _field2;
    struct FindPersonConfig _field3;
    struct DynamicInstructionsConfig _field4;
};

struct InterEffectLinkingConfig {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field1;
};

struct InternalScriptingAPIConfig {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
};

struct IntervalRange {
    int _field1;
    int _field2;
};

struct JSExecutorFactory;

struct LSViewControllerFuncTable {
    CDUnknownFunctionPointerType loadView;
    CDUnknownFunctionPointerType viewDidLoad;
    CDUnknownFunctionPointerType viewWillAppear;
    CDUnknownFunctionPointerType viewDidAppear;
    CDUnknownFunctionPointerType viewWillDisappear;
    CDUnknownFunctionPointerType viewDidDisappear;
    CDUnknownFunctionPointerType viewWillLayoutSubviews;
    CDUnknownFunctionPointerType viewDidLayoutSubviews;
    CDUnknownFunctionPointerType preferredContentSize;
    CDUnknownFunctionPointerType shouldAutoRotate;
    CDUnknownFunctionPointerType supportedInterfaceOrientations;
    CDUnknownFunctionPointerType viewWillTransitionToSizeWithTransitionCoordinator;
    CDUnknownFunctionPointerType willTransitionToTraitCollectionWithTransitionCoordinator;
    CDUnknownFunctionPointerType shouldAutomaticallyForwardAppearanceMethods;
    CDUnknownFunctionPointerType willMoveToParentViewController;
    CDUnknownFunctionPointerType didMoveToParentViewController;
    CDUnknownFunctionPointerType updateViewConstraints;
    CDUnknownFunctionPointerType viewLayoutMarginsDidChange;
    CDUnknownFunctionPointerType viewSafeAreaInsetsDidChange;
    CDUnknownFunctionPointerType preferredContentSizeDidChangeForChildContentContainer;
    CDUnknownFunctionPointerType preferredStatusBarStyle;
    CDUnknownFunctionPointerType childViewControllerForStatusBarStyle;
    CDUnknownFunctionPointerType preferredStatusBarUpdateAnimation;
    CDUnknownFunctionPointerType prefersStatusBarHidden;
    CDUnknownFunctionPointerType modalPresentationCapturesStatusBarAppearance;
    CDUnknownFunctionPointerType accessibilityActivate;
    CDUnknownFunctionPointerType accessibilityIncrement;
    CDUnknownFunctionPointerType accessibilityDecrement;
    CDUnknownFunctionPointerType accessibilityScroll;
    CDUnknownFunctionPointerType accessibilityPerformEscape;
    CDUnknownFunctionPointerType dealloc;
    CDUnknownFunctionPointerType accessibilityValue;
    CDUnknownFunctionPointerType accessibilityLabel;
    CDUnknownFunctionPointerType accessibilityHint;
    CDUnknownFunctionPointerType debugDescription;
    CDUnknownFunctionPointerType preferredScreenEdgesDeferringSystemGestures;
    CDUnknownFunctionPointerType childViewControllerForScreenEdgesDeferringSystemGestures;
};

struct LiveStreamingTsLogServiceProvider;

struct LiveStreamingTslogFactory;

struct LiveTraceConfig {
    _Bool enabled;
    int sampleIntervalInSeconds;
    int samplingSource;
};

struct LiveTraceIDGenerator {
    struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> generator_;
    struct uniform_int_distribution<unsigned int> distribution_;
    long long lastTraceIDEmbedTimestamp_;
    struct LiveTraceConfig config_;
};

struct LocalAsset;

struct Location {
    char *_field1;
    char *_field2;
};

struct LocationData {
    _Bool hasValidLocation;
    double latitude;
    double longitude;
    struct duration<double, std::__1::ratio<1, 1>> timestamp;
};

struct LocationDataProvider;

struct LocationOptions {
    id _field1;
};

struct LockedPixelBuffer;

struct LogSink;

struct LowLatencyConfig {
    int broadcastLatencyMs;
    int audioFrameCancellationMode;
    int audioFrameCancellationSenderDelayMs;
    int videoFrameCancellationMode;
    int videoFrameCancellationSenderDelayMs;
    int requestListSize;
    int maxVideoDurationInApplicationQueueMs;
};

struct MDSThemeFuncTable {
    CDUnknownFunctionPointerType cacheKey;
    CDUnknownFunctionPointerType colorForMDSColor;
    CDUnknownFunctionPointerType barStyle;
    CDUnknownFunctionPointerType keyboardAppearance;
    CDUnknownFunctionPointerType statusBarStyle;
    CDUnknownFunctionPointerType scrollViewIndicatorStyle;
    CDUnknownFunctionPointerType blurEffectStyle;
    CDUnknownFunctionPointerType interfaceStyle;
    CDUnknownFunctionPointerType traitCollectionMatchingTheme;
    CDUnknownFunctionPointerType colorHEXFromMIGColor;
};

struct MQTTChannelAnalytics;

struct MQTTChannelCoordinatorProxy;

struct Manifest {
    struct VersionNumber _field1;
    struct Optional<msqrd::manifest::FaceTrackerConfig> _field2;
    struct Optional<msqrd::manifest::HandTrackerConfig> _field3;
    struct Optional<msqrd::manifest::ObjectTrackerConfig> _field4;
    struct Optional<msqrd::manifest::BodyTrackerConfig> _field5;
    struct Optional<msqrd::manifest::InstructionConfig> _field6;
    struct Optional<msqrd::manifest::InternalScriptingAPIConfig> _field7;
    _Bool _field8;
    struct Optional<msqrd::manifest::SupportedOrientationsConfig> _field9;
    struct Optional<msqrd::manifest::InterEffectLinkingConfig> _field10;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field11;
    struct unordered_map<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr, std::__1::hash<msqrd::TypeId>, std::__1::equal_to<msqrd::TypeId>, std::__1::allocator<std::__1::pair<const msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> _field12;
    struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> _field13;
    int _field14;
};

struct Matrix<float, 2, 1, 0, 2, 1> {
    struct DenseStorage<float, 2, 2, 1, 0> _field1;
};

struct MediaConfig {
    _Bool _field1;
    struct Video _field2;
    struct Audio _field3;
};

struct MediaConstraints;

struct MediaSourceInterface;

struct MediaStreamInterface;

struct MediaStreamTrackInterface;

struct MediaStreamingThreadingConfig {
    _Bool placeDVRIntoSeparateThread;
    _Bool placeTransportIntoSeparateThread;
    _Bool useAsyncAudioSource;
    _Bool useAsyncVideoSource;
    _Bool useAsyncAudioEncoder;
    _Bool useAsyncVideoEncoder;
};

struct MediaTransportFactory;

struct MeshNode {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    shared_ptr_eefa0e38 _field3;
    struct vector<iglu::filtergraph::TextureSampler, std::__1::allocator<iglu::filtergraph::TextureSampler>> _field4;
    struct shared_ptr<igl::IShaderModule> _field5;
    struct shared_ptr<igl::IShaderModule> _field6;
    shared_ptr_32cdf849 _field7;
    shared_ptr_3ca5f01e _field8;
    shared_ptr_3ca5f01e _field9;
    struct shared_ptr<igl::IVertexInputState> _field10;
    shared_ptr_3ca5f01e _field11;
    struct RenderPassDesc _field12;
    _Bool _field13;
    struct BlendFunc _field14;
    vector_35fe9598 _field15;
};

struct Message {
    struct Location _field1;
    struct MessageHandler *_field2;
    unsigned int _field3;
    struct MessageData *_field4;
    long long _field5;
};

struct MessageData;

struct MessageHandler;

struct ModelFetcherRequest;

struct ModelManagerLogger {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ref<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate, std::__1::default_delete<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate>> _field2;
};

struct ModelMetadataRequest;

struct ModelMetadataResponse {
    int _field1;
    int _field2;
    int _field3;
    struct vector<facebook::cameracore::ardelivery::ModelMetadataWithType, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataWithType>> _field4;
};

struct ModelMetadataWithType;

struct ModelPaths;

struct ModelPathsBuilder;

struct MotionDataProvider;

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMapTable {
    Class _field1;
};

struct NSMutableArray {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NSNumber {
    Class _field1;
};

struct NSObject {
    Class _field1;
};

struct NSUUID {
    Class _field1;
};

struct NetworkLagConfig {
    double stopThreshold;
    double resumeThreshold;
    double weakThreshold;
    double resumeFromWeakThreshold;
    double adaptiveDropWeakEnterThreshold;
    double adaptiveDropWeakRecoverThreshold;
};

struct NetworkSession;

struct NetworkSessionFactory;

struct NetworkSpeedTestPingDetails;

struct NetworkSpeedTestStatus {
    int state;
    double estimatedUploadBandwidthInKBps;
    duration_6174cf92 timeTaken;
    struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> measurements;
    _Bool speedTestPassesThreshold;
};

struct Node<msqrd::scene::Node>;

struct ObjCVideoTrackSource {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    CDUnknownFunctionPointerType *_field3;
    struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> _field4;
    struct VideoAdapter _field5;
    struct CriticalSection _field6;
    struct optional<webrtc::VideoTrackSourceInterface::Stats> _field7;
    struct VideoBroadcaster _field8;
    struct VideoBroadcaster _field9;
    struct TimestampAligner _field10;
    id _field11;
};

struct ObjectTrackerConfig {
    int _field1;
};

struct Optional<bool> {
    struct StorageTriviallyDestructible {
        union {
            char emptyState;
            _Bool value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<double> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            double _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<facebook::mobile::xplat::livestreaming::NetworkLagConfig> {
    struct StorageTriviallyDestructible {
        union {
            char emptyState;
            struct NetworkLagConfig value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<facebook::mobile::xplat::livestreaming::TCPInfo> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct TCPInfo _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<float> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            float _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<long long> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            long long _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::BodyTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct BodyTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::FaceTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct FaceTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::HandTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct HandTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InstructionConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct InstructionConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InterEffectLinkingConfig> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct InterEffectLinkingConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::InternalScriptingAPIConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct InternalScriptingAPIConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::ObjectTrackerConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct ObjectTrackerConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::manifest::SupportedOrientationsConfig> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct SupportedOrientationsConfig _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<(anonymous namespace)::TargetEffect>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            struct shared_ref<(anonymous namespace)::TargetEffect> value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<msqrd::shared_ref<arfx::analytics::memory_usage_tracking::AllocationLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<arfx::analytics::memory_usage_tracking::AllocationLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::RenderTimeLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::servicehost::IEffectSessionListener> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::shared_ref<msqrd::services::IServiceAnalyticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceAnalyticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<msqrd::unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::basic_string<char>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            basic_string_90719d97 value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::chrono::duration<double, std::__1::ratio<1, 1>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct duration<double, std::__1::ratio<1, 1>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::chrono::duration<long long, std::__1::ratio<1, 1000>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            duration_6174cf92 _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::chrono::time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct time_point<std::__1::chrono::steady_clock, std::__1::chrono::duration<long long, std::__1::ratio<1, 1000000000>>> {
                struct duration<long long, std::__1::ratio<1, 1000000000>> {
                    long long _field1;
                } _field1;
            } _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::pair<FBMPVideoData *, FBMPDataMetadata>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            struct pair<FBMPVideoData *, FBMPDataMetadata> value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::pair<float, float>> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            struct pair<float, float> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::promise<std::__1::basic_string<char>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char emptyState;
            struct promise<std::__1::basic_string<char>> value;
        } ;
        _Bool hasValue;
    } storage_;
};

struct Optional<std::__1::shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<std::__1::vector<float, std::__1::allocator<float>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct vector<float, std::__1::allocator<float>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct Optional<unsigned int> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned int _field2;
        } _field1;
        _Bool _field2;
    } _field1;
};

struct PeerConnectionDelegateAdapter;

struct PeerConnectionFactoryInterface;

struct PeerConnectionInterface;

struct PixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct PlatformDevice {
    CDUnknownFunctionPointerType *_field1;
    struct Device *_field2;
    id _field3;
    struct shared_ptr<igl::opengl::TextureTarget> _field4;
};

struct PlatformEventsInput;

struct PlatformSLAMDataInput;

struct PlayoutDelay {
    int _field1;
    int _field2;
};

struct PointCloud<facebook::pointtools::Point3<float>>;

struct PpsState {
    _Bool bottom_field_pic_order_in_frame_present_flag;
    _Bool weighted_pred_flag;
    _Bool entropy_coding_mode_flag;
    unsigned int weighted_bipred_idc;
    unsigned int redundant_pic_cnt_present_flag;
    int pic_init_qp_minus26;
    unsigned int id;
    unsigned int sps_id;
};

struct PreLoadedAugmentationsController;

struct PrefetchRequest {
    id _field1;
    id _field2;
    long long _field3;
};

struct PreviewPixelSize {
    unsigned int _field1;
    unsigned int _field2;
};

struct PriorityQueue {
    struct vector<rtc::DelayedMessage, std::__1::allocator<rtc::DelayedMessage>> _field1;
    struct less<rtc::DelayedMessage> _field2;
};

struct PrivacyAwareLoggerDelegate;

struct ProductFeatureConfig {
    struct default_initialized_primitive<bool, true> useSkinSmoothing;
    struct default_initialized_primitive<bool, false> useSceneViewCulling;
    struct default_initialized_primitive<unsigned int, 0> preferredAntialiasingLevel;
};

struct ProfileLevelId {
    int profile;
    int level;
};

struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>;

struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
};

struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *>;

struct QuickPerformanceLoggerBase;

struct RCTLayoutContext {
    struct CGPoint _field1;
    id _field2;
    id _field3;
};

struct RCTLayoutMetrics {
    struct CGRect _field1;
    struct CGRect _field2;
    struct UIEdgeInsets _field3;
    long long _field4;
    long long _field5;
};

struct RCTLocationConfiguration {
    _Bool skipPermissionRequests;
};

struct RCTLocationOptions {
    double timeout;
    double maximumAge;
    double accuracy;
    double distanceFilter;
    _Bool useSignificantChanges;
};

struct RCTMethodInfo {
    char *_field1;
    char *_field2;
    _Bool _field3;
};

struct RTCConfiguration {
    struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> _field1;
    int _field2;
    int _field3;
    int _field4;
    struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    int _field9;
    _Bool _field10;
    _Bool _field11;
    struct optional<int> _field12;
    struct optional<bool> _field13;
    struct optional<bool> _field14;
    struct optional<bool> _field15;
    int _field16;
    int _field17;
    int _field18;
    _Bool _field19;
    int _field20;
    _Bool _field21;
    int _field22;
    int _field23;
    int _field24;
    _Bool _field25;
    struct MediaConfig _field26;
    _Bool _field27;
    _Bool _field28;
    _Bool _field29;
    _Bool _field30;
    struct optional<int> _field31;
    struct optional<int> _field32;
    struct optional<int> _field33;
    struct optional<int> _field34;
    struct optional<int> _field35;
    struct optional<int> _field36;
    struct optional<int> _field37;
    struct optional<rtc::IntervalRange> _field38;
    struct TurnCustomizer *_field39;
    struct optional<rtc::AdapterType> _field40;
    int _field41;
    _Bool _field42;
    _Bool _field43;
    _Bool _field44;
    struct optional<webrtc::CryptoOptions> _field45;
    struct optional<int> _field46;
    struct optional<int> _field47;
    _Bool _field48;
    _Bool _field49;
    _Bool _field50;
    _Bool _field51;
};

struct RTCStats {
    CDUnknownFunctionPointerType *_field1;
    basic_string_90719d97 _field2;
    long long _field3;
};

struct RTCStatsReport {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> _field3;
};

struct RTPFragmentationHeader {
    unsigned short _field1;
    unsigned long long *_field2;
    unsigned long long *_field3;
    unsigned short *_field4;
    char *_field5;
};

struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
};

struct ReachabilityAnnouncer;

struct RefCountedObject<rtc::BufferT<unsigned char, false>>;

struct RenderContext {
    shared_ref_5cdfb9eb _field1;
    struct ARClassContext *_field2;
    struct shared_ref<igl::IDevice> _field3;
    shared_ptr_998cc3cc _field4;
    shared_ptr_87f2834a _field5;
    struct RenderPipelineStatePool _field6;
    struct Config _field7;
    struct FrameRateTracker _field8;
    struct shared_ref<msqrd::platform::IShaderLogger> _field9;
    struct unique_ref<arfx::engine::profiler::IProfiler, std::__1::default_delete<arfx::engine::profiler::IProfiler>> _field10;
    struct unique_ptr<msqrd::renderer::gl::IShaderObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> _field11;
    struct unique_ptr<msqrd::renderer::gl::IProgramObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> _field12;
    int _field13;
    unsigned long long _field14;
    struct IGLActivations _field15;
    _Bool _field16;
    _Bool _field17;
    struct VertexInputStatePool _field18;
    struct DepthStencilStatePool _field19;
};

struct RenderPassDesc {
    struct vector<igl::RenderPassDesc::ColorAttachmentDesc, std::__1::allocator<igl::RenderPassDesc::ColorAttachmentDesc>> _field1;
    struct DepthAttachmentDesc _field2;
    struct StencilAttachmentDesc _field3;
};

struct RenderPipelineCollection;

struct RenderPipelineDesc {
    struct shared_ptr<igl::IVertexInputState> _field1;
    struct shared_ptr<igl::IShaderModule> _field2;
    struct shared_ptr<igl::IShaderModule> _field3;
    struct TargetDesc _field4;
    int _field5;
    int _field6;
    struct map<unsigned long, std::__1::basic_string<char>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::basic_string<char>>>> _field7;
};

struct RenderPipelineStatePool {
    CDUnknownFunctionPointerType *_field1;
    struct list<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, std::__1::allocator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>>> _field2;
    struct unordered_map<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>, std::__1::hash<igl::RenderPipelineDesc>, std::__1::equal_to<igl::RenderPipelineDesc>, std::__1::allocator<std::__1::pair<const igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>>> _field3;
    unsigned int _field4;
};

struct RenderSession {
    CDUnknownFunctionPointerType *_field1;
    shared_ptr_2811b282 _field2;
    struct RenderContext *_field3;
    struct EngineScope *_field4;
    struct shared_ref<msqrd::renderer::ITexture> _field5;
    struct shared_ptr<msqrd::fx::IScriptingHost> _field6;
    int _field7;
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> _field8;
    struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> _field9;
    struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> _field10;
    int _field11;
    struct shared_ref<msqrd::scene::VideoParams> _field12;
    struct shared_ptr<msqrd::tree::Node<msqrd::scene::Node>> _field13;
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _field14;
    struct vector<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> _field15;
    _Bool _field16;
    struct shared_ref<msqrd::scene::RenderPipelineCollection> _field17;
    struct shared_ref<msqrd::fx::EffectRenderData> _field18;
    struct vector<std::__1::weak_ptr<msqrd::fx::Viewport>, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> _field19;
    _Bool _field20;
    struct shared_ref<msqrd::platform::TimeProvider> _field21;
    struct shared_ptr<msqrd::services::EffectDataSnapshot> _field22;
    struct EngineDebugConfiguration _field23;
    _Bool _field24;
    int _field25;
    unsigned int _field26;
    unsigned int _field27;
    unsigned int _field28;
    unsigned int _field29;
    unsigned int _field30;
    struct shared_ptr<msqrd::effect_state::IEffectStateListener> _field31;
    struct shared_ptr<msqrd::effect_state::EffectStateManager> _field32;
};

struct RenderTimeLogger;

struct Required<bool> {
    _Bool _field1;
};

struct Required<int> {
    int _field1;
};

struct Required<long> {
    long long _field1;
};

struct RtcpFeedback;

struct RtcpParameters {
    struct optional<unsigned int> _field1;
    basic_string_90719d97 _field2;
    _Bool _field3;
    _Bool _field4;
};

struct RtmpSSLFactory;

struct RtmpSessionCallback;

struct RtpCodecParameters {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    struct optional<int> _field4;
    struct optional<int> _field5;
    struct optional<int> _field6;
    struct optional<int> _field7;
    struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> _field8;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field9;
};

struct RtpEncodingParameters {
    struct optional<unsigned int> _field1;
    struct optional<int> _field2;
    struct optional<webrtc::RtpFecParameters> _field3;
    struct optional<webrtc::RtpRtxParameters> _field4;
    struct optional<webrtc::DtxStatus> _field5;
    double _field6;
    double _field7;
    struct optional<int> _field8;
    struct optional<int> _field9;
    struct optional<int> _field10;
    struct optional<int> _field11;
    struct optional<int> _field12;
    struct optional<double> _field13;
    struct optional<double> _field14;
    _Bool _field15;
    basic_string_90719d97 _field16;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field17;
};

struct RtpExtension {
    basic_string_90719d97 _field1;
    int _field2;
    _Bool _field3;
};

struct RtpFecParameters {
    struct optional<unsigned int> _field1;
    int _field2;
};

struct RtpParameters {
    basic_string_90719d97 _field1;
    basic_string_90719d97 _field2;
    struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> _field3;
    struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> _field4;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field5;
    struct RtcpParameters _field6;
    int _field7;
};

struct RtpReceiverDelegateAdapter;

struct RtpReceiverInterface;

struct RtpRtxParameters {
    struct optional<unsigned int> _field1;
};

struct RtpSenderInterface;

struct RtpTransceiverInit {
    int _field1;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field2;
    struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> _field3;
};

struct RtpTransceiverInterface;

struct SFrame {
    _Bool _field1;
};

struct SampleInfo {
    basic_string_90719d97 _field1;
    int _field2;
    int _field3;
    unsigned long long _field4;
    struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field5;
};

struct ScriptLogger;

struct SdpVideoFormat {
    basic_string_90719d97 _field1;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field2;
};

struct SequencedExecutor;

struct SerialAsyncExecutorFactory;

struct SerialDispatchQueueExecutor;

struct ServiceCreator<msqrd::services::ICameraControlService>;

struct ServiceCreator<msqrd::services::ICameraShareService>;

struct ServiceCreator<msqrd::services::ICreativeToolProxyService>;

struct ServiceCreator<msqrd::services::IDateService>;

struct ServiceCreator<msqrd::services::IDeepLinkAssetProvider>;

struct ServiceCreator<msqrd::services::IHapticService>;

struct ServiceCreator<msqrd::services::IIdentityService>;

struct ServiceCreator<msqrd::services::IInterEffectLinkingService>;

struct ServiceCreator<msqrd::services::ILiveStreamingService>;

struct ServiceCreator<msqrd::services::ILocaleService>;

struct ServiceCreator<msqrd::services::IMusicService>;

struct ServiceCreator<msqrd::services::INativeNavigationService>;

struct ServiceCreator<msqrd::services::INativeUIControlService>;

struct ServiceCreator<msqrd::services::IPersonalizationService>;

struct ServiceCreator<msqrd::services::IRandomGeneratorService>;

struct ServiceCreator<msqrd::services::IScriptAnalyticsService>;

struct ServiceCreator<msqrd::services::ITargetEffectService>;

struct ServiceCreatorRegistry {
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>> dateServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>> identityServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>> interEffectLinkingServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>> personalizationServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>> scriptAnalyticsServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>> localeServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>> musicServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>> nativeUIControlServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>> cameraControlServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>> cameraShareServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>> deepLinkAssetProviderCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>> creativeToolProxyServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>> liveStreamingServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>> randomGeneratorServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHapticService>> hapticServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>> nativeNavigationServiceCreator;
    struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ITargetEffectService>> targetEffectServiceCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>> depthDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>> opticalFlowDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>> objectTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>> motionDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>> volumeDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>> faceTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>> frameBrightnessDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>> targetTrackingDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>> touchGesturesDataProviderCreator;
    struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>> videoDataServiceCreator;
    struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>> platformEventsDataProviderCreator;
    struct vector<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> serviceCreators;
};

struct ServiceFeedbackGenerator;

struct ServiceHost;

struct ServiceNotifier<msqrd::dataprovider::ILocationUpdateListener> {
    struct mutex listenerMutex_;
    struct shared_ptr<std::__1::vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>> listeners_;
};

struct ServiceType {
    int _field1;
};

struct SessionDescriptionInterface {
    CDUnknownFunctionPointerType *_field1;
};

struct SettingsFlags {
    _Bool allowAncillarySettings;
    _Bool allowArchiveSettings;
    _Bool allowReshareSettings;
    _Bool allowShareToFacebook;
};

struct ShaderLogger;

struct SiNativeWebviewRedirectRedirectChainType;

struct SimpleVideoRecorder;

struct SinkPair;

struct SocketServer;

struct SpatialLayer {
    unsigned short _field1;
    unsigned short _field2;
    float _field3;
    unsigned char _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
};

struct SpecOpenCameraDialogConfig {
    id _field1;
};

struct SpecOpenSelectDialogConfig {
    id _field1;
};

struct SpecSendRequestQuery {
    id _field1;
};

struct SpecSetConfigurationConfig {
    id _field1;
};

struct SpeedTestConfig {
    int speedTestPayloadSize;
    int speedTestPayloadChunkSize;
    struct duration<double, std::__1::ratio<1, 1>> speedTestWaitResponseTimeoutInSeconds;
    double speedTestMinimumBandwidthThreshold;
    int speedTestRetryMaxCount;
    struct duration<double, std::__1::ratio<1, 1>> speedTestRetryTimeDelay;
    _Bool speedTestDisable;
    _Bool runAfterConnect;
    _Bool waitForSpeedTest;
    _Bool cancelSpeedTestOnStart;
};

struct SpsState {
    unsigned int width;
    unsigned int height;
    unsigned int delta_pic_order_always_zero_flag;
    unsigned int separate_colour_plane_flag;
    unsigned int frame_mbs_only_flag;
    unsigned int log2_max_frame_num;
    unsigned int log2_max_pic_order_cnt_lsb;
    unsigned int pic_order_cnt_type;
    unsigned int max_num_ref_frames;
    unsigned int vui_params_present;
    unsigned int id;
};

struct Srtp {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
};

struct Stabilizer;

struct StabilizerResult {
    _Bool _field1;
    struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> _field2;
    struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> _field3;
    double _field4;
    int _field5;
    double _field6;
    double _field7;
    double _field8;
};

struct StabilizerSettings;

struct Stash;

struct StashManager;

struct StashPlugin;

struct Stats {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
};

struct StatsReport {
    struct scoped_refptr<webrtc::StatsReport::IdBase> _field1;
    double _field2;
    struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> _field3;
};

struct StencilAttachmentDesc {
    int _field1;
    int _field2;
    unsigned int _field3;
};

struct StreamStartEndTime;

struct StreamingError {
    int _field1;
    basic_string_90719d97 _field2;
    basic_string_90719d97 _field3;
    basic_string_90719d97 _field4;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field5;
    struct shared_ptr<mediastreaming::StreamingError> _field6;
};

struct SupportedOrientationsConfig {
    _Bool _field1;
    _Bool _field2;
};

struct TCPInfo {
    long long _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
    long long _field10;
    long long _field11;
    long long _field12;
};

struct TargetDesc {
    struct vector<igl::RenderPipelineDesc::TargetDesc::ColorAttachment, std::__1::allocator<igl::RenderPipelineDesc::TargetDesc::ColorAttachment>> _field1;
    int _field2;
    int _field3;
};

struct TargetEffect;

struct TasksScheduler;

struct TextureSampler {
    shared_ptr_b95409fc _field1;
    struct shared_ptr<igl::ISamplerState> _field2;
    basic_string_90719d97 _field3;
};

struct TextureTarget;

struct Thread {
    CDUnknownFunctionPointerType *_field1;
    struct signal_with_thread_policy<sigslot::single_threaded> _field2;
    _Bool _field3;
    struct Message _field4;
    struct list<rtc::Message, std::__1::allocator<rtc::Message>> _field5;
    struct PriorityQueue _field6;
    unsigned int _field7;
    struct CriticalSection _field8;
    _Bool _field9;
    _Bool _field10;
    int _field11;
    struct SocketServer *_field12;
    struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> _field13;
    struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> _field14;
    basic_string_90719d97 _field15;
    struct _opaque_pthread_t *_field16;
    _Bool _field17;
    _Bool _field18;
};

struct ThroughputMonitorConfig {
    double exponentialAverageDecayConstant;
};

struct TimeInAppController;

struct TimeProvider;

struct TimeSeriesLog {
    CDUnknownFunctionPointerType *_field1;
    struct mutex _field2;
    unsigned long long _field3;
    struct shared_ptr<unsigned long> _field4;
    unsigned long long _field5;
    struct shared_ptr<rtc::tslog::TsCounterStorageManager> _field6;
    struct shared_ptr<rtc::tslog::TsLogCompactStorage> _field7;
    struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> _field8;
    int _field9;
    struct vector<rtc::tslog::TimeSeriesLog::StreamStartEndTime, std::__1::allocator<rtc::tslog::TimeSeriesLog::StreamStartEndTime>> _field10;
    struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> _field11;
    unsigned long long _field12;
    long long _field13;
    struct TimeSeriesStreamWrapper _field14;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field15;
    struct vector<unsigned int, std::__1::allocator<unsigned int>> _field16;
    struct CompactBitstreamWriter _field17;
    struct function<long long ()> _field18;
};

struct TimeSeriesStream;

struct TimeSeriesStreamWrapper {
    CDUnknownFunctionPointerType *_vptr$TslogStreamFactory;
    struct TslogStreamFactory *tslog_;
    struct shared_ptr<rtc::tslog::TimeSeriesStream> stream_;
    _Bool is_owner_;
};

struct TimestampAligner {
    int _field1;
    long long _field2;
    long long _field3;
    long long _field4;
};

struct Timing {
    unsigned char _field1;
    long long _field2;
    long long _field3;
    long long _field4;
    long long _field5;
    long long _field6;
    long long _field7;
    long long _field8;
    long long _field9;
};

struct TimingFrameTriggerThresholds {
    long long _field1;
    unsigned short _field2;
};

struct TouchGesturesDataProvider;

struct TraceEventObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct TrackerKCF;

struct TrackingControllerFactory;

struct TransportCallbacksHybryd;

struct TsCounter;

struct TsCounterStorageManager;

struct TsLogCompactMemoryStorage;

struct TsLogCompactStorage;

struct TslogFactory;

struct TslogStreamFactory;

struct TurboModule;

struct TurnCustomizer {
    CDUnknownFunctionPointerType *_field1;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIImageView {
    Class _field1;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UIView {
    Class _field1;
};

struct UniformBufferEntry;

struct UniformBufferValue {
    shared_ptr_3ca5f01e _field1;
    id _field2;
};

struct UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>;

struct UpdatableDataProviderCreator<msqrd::services::IVideoDataService>;

struct Version;

struct VersionNumber {
    unsigned int _field1;
    unsigned char _field2;
};

struct VersionedModelCacheProvider;

struct VertexAttribute {
    unsigned long long bufferIndex;
    int format;
    unsigned long long offset;
    basic_string_90719d97 name;
    int location;
};

struct VertexInputBinding {
    unsigned long long stride;
    int sampleFunction;
    unsigned long long sampleRate;
};

struct VertexInputStateDesc {
    unsigned long long numAttributes;
    struct VertexAttribute attributes[31];
    unsigned long long numInputBindings;
    struct VertexInputBinding inputBindings[31];
};

struct VertexInputStatePool {
    CDUnknownFunctionPointerType *_field1;
    struct list<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, std::__1::allocator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>>> _field2;
    struct unordered_map<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>, std::__1::hash<igl::VertexInputStateDesc>, std::__1::equal_to<igl::VertexInputStateDesc>, std::__1::allocator<std::__1::pair<const igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>>> _field3;
    unsigned int _field4;
};

struct Video {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoAdapter {
    CDUnknownFunctionPointerType *_field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    int _field8;
    struct optional<long long> _field9;
    struct optional<std::__1::pair<int, int>> _field10;
    struct optional<int> _field11;
    struct optional<std::__1::pair<int, int>> _field12;
    struct optional<int> _field13;
    struct optional<int> _field14;
    int _field15;
    int _field16;
    int _field17;
    struct CriticalSection _field18;
};

struct VideoBroadcaster {
    CDUnknownFunctionPointerType *_field1;
    struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> _field2;
    CDUnknownFunctionPointerType *_field3;
    struct CriticalSection _field4;
    struct VideoSinkWants _field5;
    struct scoped_refptr<webrtc::VideoFrameBuffer> _field6;
    _Bool _field7;
};

struct VideoCaptureCapability {
    int width;
    int height;
    int maxFPS;
    int videoType;
    _Bool interlaced;
};

struct VideoCaptureIos {
    CDUnknownFunctionPointerType *_field1;
    CDUnknownFunctionPointerType *_field2;
    char *_field3;
    struct CriticalSection _field4;
    struct VideoCaptureCapability _field5;
    long long _field6;
    long long _field7;
    VideoSinkInterface_a6f4a563 *_field8;
    long long _field9;
    long long _field10[90];
    int _field11;
    _Bool _field12;
    id _field13;
    _Bool _field14;
    struct VideoCaptureCapability _field15;
};

struct VideoCodec {
    int _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    unsigned int _field8;
    _Bool _field9;
    unsigned int _field10;
    unsigned char _field11;
    struct SpatialLayer _field12[4];
    struct SpatialLayer _field13[5];
    int _field14;
    _Bool _field15;
    struct TimingFrameTriggerThresholds _field16;
    union VideoCodecUnion _field17;
};

struct VideoCodecH264 {
    _Bool _field1;
    int _field2;
    unsigned char _field3;
    char *_field4;
    unsigned long long _field5;
    char *_field6;
    unsigned long long _field7;
    int _field8;
};

struct VideoCodecH265 {
    _Bool _field1;
    int _field2;
};

struct VideoCodecVP8 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    int _field6;
};

struct VideoCodecVP9 {
    int _field1;
    unsigned char _field2;
    _Bool _field3;
    _Bool _field4;
    int _field5;
    _Bool _field6;
    _Bool _field7;
    unsigned char _field8;
    _Bool _field9;
    int _field10;
};

struct VideoConfig {
    int width;
    int height;
    int bitRate;
    double dataRateToTargetRateRatio;
    int fps;
    _Bool allowBFrames;
    int keyFrameIntervalFrames;
    int keyFrameIntervalSeconds;
    _Bool useMainProfile;
    unsigned char codecType;
};

struct VideoDataProvider;

struct VideoDecoder;

struct VideoDecoderFactory;

struct VideoEncoder;

struct VideoEncoderConfig {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    int _field6;
    int _field7;
    _Bool _field8;
};

struct VideoEncoderFactory;

struct VideoFrame {
    struct shared_ptr<msqrd::renderer::ITexture> _field1;
    duration_6174cf92 _field2;
};

struct VideoFrameBuffer;

struct VideoPacketizer;

struct VideoPacketizerFactory;

struct VideoParams;

struct VideoProtocolEventLogger;

struct VideoProtocolEventProcessor;

struct VideoRendererAdapter;

struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
};

struct VideoSinkWants {
    _Bool _field1;
    _Bool _field2;
    int _field3;
    struct optional<int> _field4;
    int _field5;
};

struct VideoTrackInterface;

struct VideoTrackSourceInterface;

struct WatchEntry;

struct WeakHolder {
    id _field1;
};

struct WhistleConnectionFactory;

struct XAnalytics;

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _EAGLContextPrivate;

struct _GLKMatrix4 {
    float m[16];
};

struct _GLKVector2 {
    float _field1[2];
};

struct _GLKVector3 {
    float _field1[3];
};

struct _GLKVector4 {
    float v[4];
};

struct _IGRange {
    double location;
    double length;
};

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __MCFRuntimeBaseData {
    unsigned char _cfinfo[4];
    unsigned int _rc;
};

struct __MCFRuntimeClass {
    int _field1;
    char *_field2;
    CDUnknownFunctionPointerType _field3;
    CDUnknownFunctionPointerType _field4;
    CDUnknownFunctionPointerType _field5;
    CDUnknownFunctionPointerType _field6;
    CDUnknownFunctionPointerType _field7;
    CDUnknownFunctionPointerType _field8;
    CDUnknownFunctionPointerType _field9;
    CDUnknownFunctionPointerType _field10;
};

struct __assoc_state<folly::Optional<msqrd::services::RecognizedTarget>>;

struct __assoc_state<std::__1::basic_string<char>>;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> *_field1;
};

struct __list_node_base<rtc::Message, void *> {
    struct __list_node_base<rtc::Message, void *> *_field1;
    struct __list_node_base<rtc::Message, void *> *_field2;
};

struct __list_node_base<rtc::_SendMessage, void *> {
    struct __list_node_base<rtc::_SendMessage, void *> *_field1;
    struct __list_node_base<rtc::_SendMessage, void *> *_field2;
};

struct __list_node_base<sigslot::_opaque_connection, void *> {
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    struct __list_node_base<sigslot::_opaque_connection, void *> *_field2;
};

struct __list_node_base<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *> {
    struct __list_node_base<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *> *_field1;
    struct __list_node_base<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *> *_field2;
};

struct __list_node_base<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *> {
    struct __list_node_base<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *> *_field1;
    struct __list_node_base<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *> *_field2;
};

struct __list_node_base<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *> {
    struct __list_node_base<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *> *_field1;
    struct __list_node_base<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *> *_field2;
};

struct __list_node_base<webrtc::ObserverInterface *, void *> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field1;
    struct __list_node_base<webrtc::ObserverInterface *, void *> *_field2;
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct _opaque_pthread_t;

struct a8;

struct aligned_storage<16, 8> {
    union data_t data_;
};

struct aligned_storage<8, 8> {
    union data_t _field1;
};

struct array<double, 4>;

struct array<double, 5> {
    double __elems_[5];
};

struct array<double, 9>;

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct bitset<8> {
    unsigned long long _field1;
};

struct default_initialized_primitive<bool, false> {
    _Bool value_;
};

struct default_initialized_primitive<bool, true> {
    _Bool value_;
};

struct default_initialized_primitive<unsigned int, 0> {
    unsigned int value_;
};

struct dummy_type {
    struct empty_struct data[8];
};

struct duration<double, std::__1::ratio<1, 1>> {
    double __rep_;
};

struct duration<long long, std::__1::ratio<1, 1000000>> {
    long long _field1;
};

struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
};

struct empty_struct;

struct fsid {
    int _field1[2];
};

struct function<long long ()> {
    struct __value_func<long long ()> {
        struct type {
            unsigned char _field1[24];
        } _field1;
        struct __base<long long ()> *_field2;
    } _field1;
};

struct function<void (const mediastreaming::StreamingError &)> {
    struct __value_func<void (const mediastreaming::StreamingError &)> {
        type_52bef59e __buf_;
        struct __base<void (const mediastreaming::StreamingError &)> *__f_;
    } __f_;
};

struct function<void (mediastreaming::AppleEncodedAudioData)> {
    struct __value_func<void (mediastreaming::AppleEncodedAudioData)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::AppleEncodedAudioData)> *__f_;
    } __f_;
};

struct function<void (mediastreaming::CMSampleBufferSmartPtr)> {
    struct __value_func<void (mediastreaming::CMSampleBufferSmartPtr)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::CMSampleBufferSmartPtr)> *__f_;
    } __f_;
};

struct function<void (mediastreaming::StreamingError)> {
    struct __value_func<void (mediastreaming::StreamingError)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::StreamingError)> *__f_;
    } __f_;
};

struct function<void (unsigned long, unsigned long)> {
    struct __value_func<void (unsigned long, unsigned long)> {
        type_52bef59e __buf_;
        struct __base<void (unsigned long, unsigned long)> *__f_;
    } __f_;
};

struct future<folly::Optional<msqrd::services::RecognizedTarget>> {
    struct __assoc_state<folly::Optional<msqrd::services::RecognizedTarget>> *_field1;
};

struct future<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> {
    struct __assoc_state<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
};

struct internal_state;

struct less<rtc::DelayedMessage>;

struct linear_congruential_engine<unsigned int, 48271, 0, 2147483647> {
    unsigned int __x_;
};

struct list<rtc::Message, std::__1::allocator<rtc::Message>> {
    struct __list_node_base<rtc::Message, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::Message, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<rtc::_SendMessage, std::__1::allocator<rtc::_SendMessage>> {
    struct __list_node_base<rtc::_SendMessage, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<rtc::_SendMessage, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> {
    struct __list_node_base<sigslot::_opaque_connection, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<sigslot::_opaque_connection, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, std::__1::allocator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>>> {
    struct __list_node_base<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, std::__1::allocator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>>> {
    struct __list_node_base<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, std::__1::allocator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>>> {
    struct __list_node_base<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<webrtc::ObserverInterface *, std::__1::allocator<webrtc::ObserverInterface *>> {
    struct __list_node_base<webrtc::ObserverInterface *, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<webrtc::ObserverInterface *, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct map<NSString *, UniformBufferValue, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, UniformBufferValue>>> {
    struct __tree<std::__1::__value_type<NSString *, UniformBufferValue>, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, UniformBufferValue>, std::__1::less<NSString *>, true>, std::__1::allocator<std::__1::__value_type<NSString *, UniformBufferValue>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<NSString *, UniformBufferValue>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<NSString *, std::__1::__value_type<NSString *, UniformBufferValue>, std::__1::less<NSString *>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<int, int, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __tree<std::__1::__value_type<int, int>, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, int>, std::__1::less<int>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::shared_ptr<igl::ITexture>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::unique_ptr<const webrtc::RTCStats, std::__1::default_delete<const webrtc::RTCStats>>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, std::__1::basic_string<char>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::basic_string<char>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::basic_string<char>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::basic_string<char>>, std::__1::less<unsigned long>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>, std::__1::less<unsigned long>, std::__1::allocator<std::__1::pair<const unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>>> {
    struct __tree<std::__1::__value_type<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>, std::__1::less<unsigned long>, true>, std::__1::allocator<std::__1::__value_type<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned long, std::__1::__value_type<unsigned long, std::__1::shared_ptr<igl::IRenderPipelineState>>, std::__1::less<unsigned long>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>, std::__1::less<webrtc::StatsReport::StatsValueName>, std::__1::allocator<std::__1::pair<const webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
    struct __tree<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>, std::__1::allocator<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<webrtc::StatsReport::StatsValueName, std::__1::__value_type<webrtc::StatsReport::StatsValueName, rtc::scoped_refptr<webrtc::StatsReport::Value>>, std::__1::less<webrtc::StatsReport::StatsValueName>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct mat<4, 4, float, glm::packed_highp> {
    struct vec<4, float, glm::packed_highp> value[4];
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct opaqueCMSampleBuffer;

struct optional<RTCVideoRotation> {
    _Bool engaged_;
    CDUnion_019de37f ;
};

struct optional<bool> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        _Bool _field2;
    } _field2;
};

struct optional<double> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        double _field2;
    } _field2;
};

struct optional<int> {
    _Bool engaged_;
    CDUnion_1bb239ac ;
};

struct optional<long long> {
    _Bool _field1;
    CDUnion_019de37f _field2;
};

struct optional<rtc::AdapterType> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<rtc::IntervalRange> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct IntervalRange _field2;
    } _field2;
};

struct optional<std::__1::pair<int, int>> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct pair<int, int> _field2;
    } _field2;
};

struct optional<unsigned int> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        unsigned int _field2;
    } _field2;
};

struct optional<webrtc::ColorSpace> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct ColorSpace _field2;
    } _field2;
};

struct optional<webrtc::CryptoOptions> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct CryptoOptions _field2;
    } _field2;
};

struct optional<webrtc::DtxStatus> {
    _Bool _field1;
    CDUnion_1bb239ac _field2;
};

struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
};

struct optional<webrtc::HdrMetadata> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct HdrMetadata _field2;
    } _field2;
};

struct optional<webrtc::PpsParser::PpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct PpsState data_;
    } ;
};

struct optional<webrtc::RtpFecParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpFecParameters _field2;
    } _field2;
};

struct optional<webrtc::RtpRtxParameters> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct RtpRtxParameters _field2;
    } _field2;
};

struct optional<webrtc::SpsParser::SpsState> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct SpsState data_;
    } ;
};

struct optional<webrtc::VideoTrackSourceInterface::Stats> {
    _Bool _field1;
    union {
        struct dummy_type _field1;
        struct Stats _field2;
    } _field2;
};

struct pair<FBMPVideoData *, FBMPDataMetadata> {
    FBMPVideoData *first;
    struct FBMPDataMetadata second;
};

struct pair<NSString *, UniformBufferValue> {
    id _field1;
    struct UniformBufferValue _field2;
};

struct pair<bool, folly::Optional<msqrd::shared_ref<(anonymous namespace)::TargetEffect>>> {
    _Bool _field1;
    struct Optional<msqrd::shared_ref<(anonymous namespace)::TargetEffect>> _field2;
};

struct pair<float, float> {
    float _field1;
    float _field2;
};

struct pair<id<FBCameraCaptureManaging>, FBARCameraSessionType> {
    id _field1;
    unsigned char _field2;
};

struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
};

struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>;

struct pair<int, int> {
    int _field1;
    int _field2;
};

struct pair<std::__1::basic_string<char>, unsigned int>;

struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>;

struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>;

struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>;

struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>;

struct plain_array<float, 2, 0, 0> {
    float _field1[2];
};

struct promise<folly::Optional<msqrd::services::RecognizedTarget>> {
    struct __assoc_state<folly::Optional<msqrd::services::RecognizedTarget>> *_field1;
};

struct promise<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *__state_;
};

struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>;

struct recursive_mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct scoped_refptr<rtc::RTCCertificate>;

struct scoped_refptr<rtc::RefCountedObject<rtc::BufferT<unsigned char, false>>> {
    struct RefCountedObject<rtc::BufferT<unsigned char, false>> *_field1;
};

struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
};

struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
};

struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
};

struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
};

struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
};

struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
};

struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
};

struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
};

struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
};

struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
};

struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
};

struct scoped_refptr<webrtc::StatsReport::IdBase> {
    struct IdBase *_field1;
};

struct scoped_refptr<webrtc::VideoFrameBuffer> {
    struct VideoFrameBuffer *_field1;
};

struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
};

struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
};

struct shared_future<int> {
    struct __assoc_state<int> *_field1;
};

struct shared_future<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *_field1;
};

struct shared_future<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> {
    struct __assoc_state<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> *_field1;
};

struct shared_ptr<(anonymous namespace)::FBVideoBroadcastInputSource> {
    struct FBVideoBroadcastInputSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<(anonymous namespace)::TargetEffect> {
    struct TargetEffect *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Functional::PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *>> {
    PromiseEither_ab4a425c *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> {
    struct Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<FBMQTTChannelConnectEventObserver> {
    struct FBMQTTChannelConnectEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelConnectionStateObserver> {
    struct FBMQTTChannelConnectionStateObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelEventLogger> {
    struct FBMQTTChannelEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelPublishEventObserver> {
    struct FBMQTTChannelPublishEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBMQTTChannelSubscribeEventObserver> {
    struct FBMQTTChannelSubscribeEventObserver *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBStructuredLogger> {
    struct FBStructuredLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<Lispy::Expression> {
    struct Expression *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<RtmpSessionCallback> {
    struct RtmpSessionCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<arfx::analytics::battery_tracking::BatteryLogger> {
    struct BatteryLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<arfx::analytics::memory_usage_tracking::AllocationLogger> {
    struct AllocationLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<arfx::effect_state::apple::EffectStateListener> {
    struct EffectStateListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::attribution::EffectAttribution> {
    struct EffectAttribution *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const msqrd::versioning::Version> {
    struct Version *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::DualTexture> {
    struct DualTexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengine::utils::EffectAssetLoader> {
    struct EffectAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> {
    struct LockedPixelBuffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::arengineservices::ScriptLogger> {
    struct ScriptLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arengineservices::ShaderLogger> {
    struct ShaderLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::AudioPlatformComponentHostImpl> {
    struct AudioPlatformComponentHostImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::CaptureEventInput> {
    struct CaptureEventInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::GestureEventServiceCreator> {
    struct GestureEventServiceCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::arservices::apple::PlatformSLAMDataInput> {
    struct PlatformSLAMDataInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::audio::IAudioGraphClient> {
    struct IAudioGraphClient *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::audiofiltercore::FBAudioFileReader<short>> {
    struct FBAudioFileReader<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::bufferpool::BufferPool> {
    struct BufferPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::ARClassContext> {
    struct ARClassContext *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::ARClassSource> {
    struct ARClassSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassConfigSource> {
    struct IARClassConfigSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassPersistentStore> {
    struct IARClassPersistentStore *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::arclass::IARClassRemoteSource> {
    struct IARClassRemoteSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::ardelivery::Error> {
    struct Error *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cameracore::ardelivery::IAssetsManager> {
    struct IAssetsManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::IAsyncAssetFetcher> {
    struct IAsyncAssetFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::IEffectsManager> {
    struct IEffectsManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::IFileCache> {
    struct IFileCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::IModelManager> {
    struct IModelManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::ModelPaths> {
    struct ModelPaths *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cameracore::ardelivery::ModelPathsBuilder> {
    struct ModelPathsBuilder *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::cp::shortstab::Stabilizer> {
    struct Stabilizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerResult> {
    struct StabilizerResult *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::cp::shortstab::StabilizerSettings> {
    struct StabilizerSettings *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::AsyncExecutor> {
    struct AsyncExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::InlineSerialExecutor> {
    struct InlineSerialExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::SerialAsyncExecutorFactory> {
    struct SerialAsyncExecutorFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::executor::SerialDispatchQueueExecutor> {
    struct SerialDispatchQueueExecutor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithm> {
    struct AdaptiveBitrateAlgorithm *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> {
    struct AdaptiveBitrateAlgorithmFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateInputParameterProcessor> {
    struct AdaptiveBitrateInputParameterProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizer> {
    struct AudioPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::BitrateAdjuster> {
    struct BitrateAdjuster *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::LiveStreamingTslogFactory> {
    struct LiveStreamingTslogFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::TslogFactory> {
    struct TslogFactory *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoFrame> {
    struct VideoFrame *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizer> {
    struct VideoPacketizer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoProtocolEventLogger> {
    struct VideoProtocolEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoProtocolEventProcessor> {
    struct VideoProtocolEventProcessor *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::DefaultConnectScheduler::Analytics> {
    struct Analytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelAnalytics> {
    struct MQTTChannelAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::MQTTChannelCoordinatorProxy> {
    struct MQTTChannelCoordinatorProxy *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::mqttchannel::WhistleConnectionFactory> {
    struct WhistleConnectionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::pointtools::PointCloud<facebook::pointtools::Point3<float>>> {
    struct PointCloud<facebook::pointtools::Point3<float>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::react::CallInvoker> {
    struct CallInvoker *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::react::TurboModule> {
    struct TurboModule *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::stash::EvictionPlugin> {
    struct EvictionPlugin *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::stash::Stash> {
    struct Stash *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::stash::StashManager> {
    struct StashManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::stash::StashPlugin> {
    struct StashPlugin *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<facebook::timeinappcore::TimeInAppController> {
    struct TimeInAppController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<facebook::xanalytics::XAnalytics> {
    struct XAnalytics *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<folly::SequencedExecutor> {
    struct SequencedExecutor *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::ICommandBuffer> {
    struct ICommandBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::ICommandQueue> {
    struct ICommandQueue *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IDepthStencilState> {
    struct IDepthStencilState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IDevice> {
    struct IDevice *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IFramebuffer> {
    struct IFramebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IRenderPipelineState> {
    struct IRenderPipelineState *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::ISamplerState> {
    struct ISamplerState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IShaderModule> {
    struct IShaderModule *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::ITexture> {
    struct ITexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::IVertexInputState> {
    struct IVertexInputState *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<igl::opengl::Framebuffer> {
    struct Framebuffer *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<igl::opengl::TextureTarget> {
    struct TextureTarget *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mediastreaming::AppleLiveStreamingClient> {
    struct AppleLiveStreamingClient *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::AppleStreamingSessionCallbacksHybrid> {
    struct AppleStreamingSessionCallbacksHybrid *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::BaseTimestampManagerService> {
    struct BaseTimestampManagerService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::BroadcastSessionStatsProvider> {
    struct BroadcastSessionStatsProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::DvrManagerService> {
    struct DvrManagerService *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::LiveStreamingTsLogServiceProvider> {
    struct LiveStreamingTsLogServiceProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mediastreaming::StreamingError> {
    struct StreamingError *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mediastreaming::TransportCallbacksHybryd> {
    struct TransportCallbacksHybryd *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> {
    struct IEngineAnalyticsLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::asset::IAsyncAssetLoader> {
    struct IAsyncAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::capture::ICaptureEventInput> {
    struct ICaptureEventInput *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct IPlatformSLAMDataInput *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::IVideoDataProvider> {
    struct IVideoDataProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::dataprovider::VideoDataProvider> {
    struct VideoDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct PlatformEventsInput *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::dataprovider::recognitiontracking::ITrackerCreator> {
    struct ITrackerCreator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::effect_state::EffectStateManager> {
    struct EffectStateManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::effect_state::IEffectStateListener> {
    struct IEffectStateListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::experiment::IExperimentConfig> {
    struct IExperimentConfig *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::EffectRenderData> {
    struct EffectRenderData *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IEffectAssetLoader> {
    struct IEffectAssetLoader *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IScriptingHost> {
    struct IScriptingHost *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::RenderSession> {
    struct RenderSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::fx::augmentations::IAugmentationsController> {
    struct IAugmentationsController *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::fx::augmentations::PreLoadedAugmentationsController> {
    struct PreLoadedAugmentationsController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::location::LocationDataProvider> {
    struct LocationDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::logging::IBugReportLogger> {
    struct IBugReportLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::logging::IRawEventLogger> {
    struct IRawEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::logging::RenderTimeLogger> {
    struct RenderTimeLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::platform::IScriptingLogger> {
    struct IScriptingLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::platform::TimeProvider> {
    struct TimeProvider *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::player::ISessionPlayer> {
    struct ISessionPlayer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::renderer::IRenderTarget> {
    struct IRenderTarget *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::renderer::ITexture> {
    struct ITexture *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::scene::RenderPipelineCollection> {
    struct RenderPipelineCollection *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::scene::VideoParams> {
    struct VideoParams *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IDepthDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFaceTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IFrameBrightnessDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IObjectTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::IOpticalFlowDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider>> {
    struct BufferUpdatableDataProviderCreator<msqrd::dataprovider::ITargetTrackingDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IMotionDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::IMotionDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::IPlatformEventsDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider>> {
    struct DataProviderCreator<msqrd::dataprovider::ITouchGesturesDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::EffectController> {
    struct EffectController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::IEffectSessionListener> {
    struct IEffectSessionListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraControlService>> {
    struct ServiceCreator<msqrd::services::ICameraControlService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICameraShareService>> {
    struct ServiceCreator<msqrd::services::ICameraShareService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ICreativeToolProxyService>> {
    struct ServiceCreator<msqrd::services::ICreativeToolProxyService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDateService>> {
    struct ServiceCreator<msqrd::services::IDateService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IDeepLinkAssetProvider>> {
    struct ServiceCreator<msqrd::services::IDeepLinkAssetProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IHapticService>> {
    struct ServiceCreator<msqrd::services::IHapticService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IIdentityService>> {
    struct ServiceCreator<msqrd::services::IIdentityService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IInterEffectLinkingService>> {
    struct ServiceCreator<msqrd::services::IInterEffectLinkingService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILiveStreamingService>> {
    struct ServiceCreator<msqrd::services::ILiveStreamingService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ILocaleService>> {
    struct ServiceCreator<msqrd::services::ILocaleService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IMusicService>> {
    struct ServiceCreator<msqrd::services::IMusicService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeNavigationService>> {
    struct ServiceCreator<msqrd::services::INativeNavigationService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::INativeUIControlService>> {
    struct ServiceCreator<msqrd::services::INativeUIControlService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IPersonalizationService>> {
    struct ServiceCreator<msqrd::services::IPersonalizationService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IRandomGeneratorService>> {
    struct ServiceCreator<msqrd::services::IRandomGeneratorService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::IScriptAnalyticsService>> {
    struct ServiceCreator<msqrd::services::IScriptAnalyticsService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceCreator<msqrd::services::ITargetEffectService>> {
    struct ServiceCreator<msqrd::services::ITargetEffectService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::ServiceHost> {
    struct ServiceHost *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider>> {
    struct UpdatableDataProviderCreator<msqrd::dataprovider::IVolumeDataProvider> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::servicehost::UpdatableDataProviderCreator<msqrd::services::IVideoDataService>> {
    struct UpdatableDataProviderCreator<msqrd::services::IVideoDataService> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::IServiceAnalyticsLogger> {
    struct IServiceAnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::IServiceConfiguration> {
    struct IServiceConfiguration *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::ITargetEffect> {
    struct ITargetEffect *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::audio::IAudioFileSink> {
    struct IAudioFileSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::audio::IAudioPlatformComponentHost> {
    struct IAudioPlatformComponentHost *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::services::audio::IAudioServiceConfigurationAnnouncer> {
    struct IAudioServiceConfigurationAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::audio::IAudioServiceController> {
    struct IAudioServiceController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::audio::IMicrophoneSink> {
    struct IMicrophoneSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::feedback::ServiceFeedbackGenerator> {
    struct ServiceFeedbackGenerator *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::network::INetworkClientSource> {
    struct INetworkClientSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::network::INetworkConsentManager> {
    struct INetworkConsentManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::persistence::IPersistenceServiceDelegate> {
    struct IPersistenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::services::target_effect::ITargetEffectStateChangeListener> {
    struct ITargetEffectStateChangeListener *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<msqrd::standalone_tracking::ITrackingController> {
    struct ITrackingController *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<msqrd::tree::Node<msqrd::scene::Node>> {
    struct Node<msqrd::scene::Node> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<proxygen::httpclient::AnalyticsLogger> {
    struct AnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rtc::tslog::TimeSeriesStream> {
    struct TimeSeriesStream *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TsCounterStorageManager> {
    struct TsCounterStorageManager *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<rtc::tslog::TsLogCompactMemoryStorage> {
    struct TsLogCompactMemoryStorage *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<rtc::tslog::TsLogCompactStorage> {
    struct TsLogCompactStorage *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>> {
    struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>> {
    struct vector<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>> {
    struct vector<facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPointTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<std::__1::vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>> {
    struct vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    vector_cfeb9b06 *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<unsigned long> {
    unsigned long long *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ref<(anonymous namespace)::TargetEffect> {
    struct shared_ptr<(anonymous namespace)::TargetEffect> target_;
};

struct shared_ref<CallbackInfo>;

struct shared_ref<arfx::analytics::memory_usage_tracking::AllocationLogger> {
    struct shared_ptr<arfx::analytics::memory_usage_tracking::AllocationLogger> _field1;
};

struct shared_ref<const msqrd::manifest::Manifest> {
    shared_ptr_8f3f58d1 _field1;
};

struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
};

struct shared_ref<facebook::bufferpool::BufferPool> {
    struct shared_ptr<facebook::bufferpool::BufferPool> _field1;
};

struct shared_ref<facebook::cameracore::arclass::ARClassContext> {
    struct shared_ptr<facebook::cameracore::arclass::ARClassContext> _field1;
};

struct shared_ref<facebook::cameracore::ardelivery::IAsyncAssetFetcher> {
    shared_ptr_537ac97e _field1;
};

struct shared_ref<facebook::cameracore::ardelivery::ModelPaths> {
    shared_ptr_9808100a _field1;
};

struct shared_ref<folly::SequencedExecutor> {
    struct shared_ptr<folly::SequencedExecutor> _field1;
};

struct shared_ref<igl::IDevice> {
    shared_ptr_eefa0e38 _field1;
};

struct shared_ref<msqrd::analytics::IEngineAnalyticsLogger> {
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _field1;
};

struct shared_ref<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> _field1;
};

struct shared_ref<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> _field1;
};

struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>;

struct shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator> {
    struct shared_ptr<msqrd::dataprovider::recognitiontracking::ITrackerCreator> _field1;
};

struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
};

struct shared_ref<msqrd::fx::EffectRenderData> {
    struct shared_ptr<msqrd::fx::EffectRenderData> _field1;
};

struct shared_ref<msqrd::fx::augmentations::IAugmentationsController> {
    struct shared_ptr<msqrd::fx::augmentations::IAugmentationsController> _field1;
};

struct shared_ref<msqrd::logging::IBugReportLogger> {
    struct shared_ptr<msqrd::logging::IBugReportLogger> _field1;
};

struct shared_ref<msqrd::logging::IRawEventLogger> {
    shared_ptr_614878a6 _field1;
};

struct shared_ref<msqrd::logging::RenderTimeLogger> {
    struct shared_ptr<msqrd::logging::RenderTimeLogger> _field1;
};

struct shared_ref<msqrd::platform::IShaderLogger> {
    shared_ptr_6266c83b _field1;
};

struct shared_ref<msqrd::platform::TimeProvider> {
    struct shared_ptr<msqrd::platform::TimeProvider> _field1;
};

struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
};

struct shared_ref<msqrd::plugins::IDocumentFactoryPlugin>;

struct shared_ref<msqrd::renderer::ITexture> {
    struct shared_ptr<msqrd::renderer::ITexture> _field1;
};

struct shared_ref<msqrd::scene::RenderPipelineCollection> {
    struct shared_ptr<msqrd::scene::RenderPipelineCollection> _field1;
};

struct shared_ref<msqrd::scene::VideoParams> {
    struct shared_ptr<msqrd::scene::VideoParams> _field1;
};

struct shared_ref<msqrd::servicehost::ARServiceCreator>;

struct shared_ref<msqrd::servicehost::EffectController> {
    struct shared_ptr<msqrd::servicehost::EffectController> _field1;
};

struct shared_ref<msqrd::servicehost::IEffectSessionListener> {
    struct shared_ptr<msqrd::servicehost::IEffectSessionListener> _field1;
};

struct shared_ref<msqrd::servicehost::ServiceHost> {
    shared_ptr_ad266505 _field1;
};

struct shared_ref<msqrd::services::IServiceAnalyticsLogger> {
    struct shared_ptr<msqrd::services::IServiceAnalyticsLogger> _field1;
};

struct shared_ref<msqrd::services::ITargetEffect> {
    struct shared_ptr<msqrd::services::ITargetEffect> _field1;
};

struct shared_ref<msqrd::services::audio::IAudioPlatformComponentHost> {
    shared_ptr_27fa6347 _field1;
};

struct shared_ref<msqrd::services::network::INetworkClientSource> {
    struct shared_ptr<msqrd::services::network::INetworkClientSource> _field1;
};

struct shared_ref<msqrd::standalone_tracking::ITrackingController> {
    struct shared_ptr<msqrd::standalone_tracking::ITrackingController> _field1;
};

struct signal_with_thread_policy<sigslot::single_threaded> {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
    struct list<sigslot::_opaque_connection, std::__1::allocator<sigslot::_opaque_connection>> _field3;
    struct __list_iterator<sigslot::_opaque_connection, void *> {
        struct __list_node_base<sigslot::_opaque_connection, void *> *_field1;
    } _field4;
    _Bool _field5;
};

struct statfs {
    unsigned int _field1;
    int _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    unsigned long long _field7;
    struct fsid _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned int _field12;
    char _field13[16];
    char _field14[1024];
    char _field15[1024];
    unsigned int _field16;
    unsigned int _field17[7];
};

struct uniform_int_distribution<unsigned int> {
    struct param_type {
        unsigned int __a_;
        unsigned int __b_;
    } __p_;
};

struct uniform_int_distribution<unsigned long long> {
    struct param_type {
        unsigned long long __a_;
        unsigned long long __b_;
    } __p_;
};

struct unique_ptr<(anonymous namespace)::DestructionGuardAdapter, std::__1::default_delete<(anonymous namespace)::DestructionGuardAdapter>> {
    struct __compressed_pair<(anonymous namespace)::DestructionGuardAdapter *, std::__1::default_delete<(anonymous namespace)::DestructionGuardAdapter>> {
        struct DestructionGuardAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<FBWhistleConnectionStatsLogger, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
    struct __compressed_pair<FBWhistleConnectionStatsLogger *, std::__1::default_delete<FBWhistleConnectionStatsLogger>> {
        struct FBWhistleConnectionStatsLogger *__value_;
    } __ptr_;
};

struct unique_ptr<arfx::engine::profiler::IProfiler, std::__1::default_delete<arfx::engine::profiler::IProfiler>> {
    struct __compressed_pair<arfx::engine::profiler::IProfiler *, std::__1::default_delete<arfx::engine::profiler::IProfiler>> {
        struct IProfiler *_field1;
    } _field1;
};

struct unique_ptr<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct __compressed_pair<const msqrd::services::IEffectDataSnapshotterCreator *, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
        struct IEffectDataSnapshotterCreator *_field1;
    } _field1;
};

struct unique_ptr<facebook::arlink::ARLinkScanner, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
    struct __compressed_pair<facebook::arlink::ARLinkScanner *, std::__1::default_delete<facebook::arlink::ARLinkScanner>> {
        struct ARLinkScanner *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory, std::__1::default_delete<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory *, std::__1::default_delete<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory>> {
        struct FBARAssetsManagerCxxFactory *_field1;
    } _field1;
};

struct unique_ptr<facebook::cameracore::ardelivery::ICancelableToken, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::ICancelableToken *, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> {
        struct ICancelableToken *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::IConnectionInfoProvider, std::__1::default_delete<facebook::cameracore::ardelivery::IConnectionInfoProvider>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IConnectionInfoProvider *, std::__1::default_delete<facebook::cameracore::ardelivery::IConnectionInfoProvider>> {
        struct IConnectionInfoProvider *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::IEffectsManager, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IEffectsManager *, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> {
        struct IEffectsManager *_field1;
    } _field1;
};

struct unique_ptr<facebook::cameracore::ardelivery::IModelManager, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelManager *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> {
        struct IModelManager *_field1;
    } _field1;
};

struct unique_ptr<facebook::cameracore::ardelivery::IModelManagerConfig, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManagerConfig>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelManagerConfig *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManagerConfig>> {
        struct IModelManagerConfig *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::IModelMetadataDownloading, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelMetadataDownloading *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> {
        struct IModelMetadataDownloading *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::IModelVersionFetcher, std::__1::default_delete<facebook::cameracore::ardelivery::IModelVersionFetcher>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelVersionFetcher *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelVersionFetcher>> {
        struct IModelVersionFetcher *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::ModelManagerLogger, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelManagerLogger *, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> {
        struct ModelManagerLogger *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate, std::__1::default_delete<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate *, std::__1::default_delete<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate>> {
        struct PrivacyAwareLoggerDelegate *_field1;
    } _field1;
};

struct unique_ptr<facebook::cameracore::ardelivery::VersionedModelCacheProvider, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheProvider>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::VersionedModelCacheProvider *, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheProvider>> {
        struct VersionedModelCacheProvider *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::cp::regiontracking::TrackerKCF, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
    struct __compressed_pair<facebook::cp::regiontracking::TrackerKCF *, std::__1::default_delete<facebook::cp::regiontracking::TrackerKCF>> {
        struct TrackerKCF *__value_;
    } __ptr_;
};

struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>;

struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
};

struct unique_ptr<folly::IOBuf, std::__1::default_delete<folly::IOBuf>> {
    struct __compressed_pair<folly::IOBuf *, std::__1::default_delete<folly::IOBuf>> {
        struct IOBuf *_field1;
    } _field1;
};

struct unique_ptr<igl::IDevice, std::__1::default_delete<igl::IDevice>> {
    struct __compressed_pair<igl::IDevice *, std::__1::default_delete<igl::IDevice>> {
        struct IDevice *__value_;
    } __ptr_;
};

struct unique_ptr<igl::IRenderCommandEncoder, std::__1::default_delete<igl::IRenderCommandEncoder>> {
    struct __compressed_pair<igl::IRenderCommandEncoder *, std::__1::default_delete<igl::IRenderCommandEncoder>> {
        struct IRenderCommandEncoder *__value_;
    } __ptr_;
};

struct unique_ptr<igl::ITexture, std::__1::default_delete<igl::ITexture>> {
    struct __compressed_pair<igl::ITexture *, std::__1::default_delete<igl::ITexture>> {
        struct ITexture *_field1;
    } _field1;
};

struct unique_ptr<iglu::filtergraph::MeshNode, std::__1::default_delete<iglu::filtergraph::MeshNode>> {
    struct __compressed_pair<iglu::filtergraph::MeshNode *, std::__1::default_delete<iglu::filtergraph::MeshNode>> {
        struct MeshNode *__value_;
    } __ptr_;
};

struct unique_ptr<mediastreaming::VideoEncoderConfig, std::__1::default_delete<mediastreaming::VideoEncoderConfig>> {
    struct __compressed_pair<mediastreaming::VideoEncoderConfig *, std::__1::default_delete<mediastreaming::VideoEncoderConfig>> {
        struct VideoEncoderConfig *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> {
    struct __compressed_pair<msqrd::fx::Effect *, std::__1::default_delete<msqrd::fx::Effect>> {
        struct Effect *_field1;
    } _field1;
};

struct unique_ptr<msqrd::fx::GraphicsEngine, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
    struct __compressed_pair<msqrd::fx::GraphicsEngine *, std::__1::default_delete<msqrd::fx::GraphicsEngine>> {
        struct GraphicsEngine *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::logger::AREngineLogger, std::__1::default_delete<msqrd::logger::AREngineLogger>> {
    struct __compressed_pair<msqrd::logger::AREngineLogger *, std::__1::default_delete<msqrd::logger::AREngineLogger>> {
        struct AREngineLogger *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::plugins::BasePluginConfiguration, std::__1::default_delete<msqrd::plugins::BasePluginConfiguration>> {
    struct __compressed_pair<msqrd::plugins::BasePluginConfiguration *, std::__1::default_delete<msqrd::plugins::BasePluginConfiguration>> {
        struct BasePluginConfiguration *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::renderer::gl::IProgramObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> {
    struct __compressed_pair<msqrd::renderer::gl::IProgramObjectProvider *, std::__1::default_delete<msqrd::renderer::gl::IProgramObjectProvider>> {
        struct IProgramObjectProvider *_field1;
    } _field1;
};

struct unique_ptr<msqrd::renderer::gl::IShaderObjectProvider, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> {
    struct __compressed_pair<msqrd::renderer::gl::IShaderObjectProvider *, std::__1::default_delete<msqrd::renderer::gl::IShaderObjectProvider>> {
        struct IShaderObjectProvider *_field1;
    } _field1;
};

struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct __compressed_pair<msqrd::services::network::INetworkRequestRedirectHandler *, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
        struct INetworkRequestRedirectHandler *__value_;
    } __ptr_;
};

struct unique_ptr<msqrd::services::network::INetworkResult, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
    struct __compressed_pair<msqrd::services::network::INetworkResult *, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
        struct INetworkResult *_field1;
    } _field1;
};

struct unique_ptr<msqrd::standalone_tracking::TrackingControllerFactory, std::__1::default_delete<msqrd::standalone_tracking::TrackingControllerFactory>> {
    struct __compressed_pair<msqrd::standalone_tracking::TrackingControllerFactory *, std::__1::default_delete<msqrd::standalone_tracking::TrackingControllerFactory>> {
        struct TrackingControllerFactory *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::BitrateAllocationStrategy, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<rtc::BitrateAllocationStrategy *, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
};

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::IntervalRange, std::__1::default_delete<rtc::IntervalRange>> {
    struct __compressed_pair<rtc::IntervalRange *, std::__1::default_delete<rtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
};

struct unique_ptr<rtc::LogSink, std::__1::default_delete<rtc::LogSink>> {
    struct __compressed_pair<rtc::LogSink *, std::__1::default_delete<rtc::LogSink>> {
        struct LogSink *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::SocketServer, std::__1::default_delete<rtc::SocketServer>> {
    struct __compressed_pair<rtc::SocketServer *, std::__1::default_delete<rtc::SocketServer>> {
        struct SocketServer *_field1;
    } _field1;
};

struct unique_ptr<rtc::Thread, std::__1::default_delete<rtc::Thread>> {
    struct __compressed_pair<rtc::Thread *, std::__1::default_delete<rtc::Thread>> {
        struct Thread *__value_;
    } __ptr_;
};

struct unique_ptr<rtc::tslog::TasksScheduler, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
    struct __compressed_pair<rtc::tslog::TasksScheduler *, std::__1::default_delete<rtc::tslog::TasksScheduler>> {
        struct TasksScheduler *_field1;
    } _field1;
};

struct unique_ptr<rtc::tslog::TimeSeriesLog, std::__1::default_delete<rtc::tslog::TimeSeriesLog>> {
    struct __compressed_pair<rtc::tslog::TimeSeriesLog *, std::__1::default_delete<rtc::tslog::TimeSeriesLog>> {
        struct TimeSeriesLog *__value_;
    } __ptr_;
};

struct unique_ptr<short [], std::__1::default_delete<short []>> {
    struct __compressed_pair<short *, std::__1::default_delete<short []>> {
        short *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<webrtc::BitrateAdjuster, std::__1::default_delete<webrtc::BitrateAdjuster>> {
    struct __compressed_pair<webrtc::BitrateAdjuster *, std::__1::default_delete<webrtc::BitrateAdjuster>> {
        struct BitrateAdjuster *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataBuffer, std::__1::default_delete<webrtc::DataBuffer>> {
    struct __compressed_pair<webrtc::DataBuffer *, std::__1::default_delete<webrtc::DataBuffer>> {
        struct DataBuffer *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::DataChannelDelegateAdapter, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
    struct __compressed_pair<webrtc::DataChannelDelegateAdapter *, std::__1::default_delete<webrtc::DataChannelDelegateAdapter>> {
        struct DataChannelDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
};

struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::PeerConnectionDelegateAdapter, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
    struct __compressed_pair<webrtc::PeerConnectionDelegateAdapter *, std::__1::default_delete<webrtc::PeerConnectionDelegateAdapter>> {
        struct PeerConnectionDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
};

struct unique_ptr<webrtc::RtpReceiverDelegateAdapter, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
    struct __compressed_pair<webrtc::RtpReceiverDelegateAdapter *, std::__1::default_delete<webrtc::RtpReceiverDelegateAdapter>> {
        struct RtpReceiverDelegateAdapter *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
};

struct unique_ptr<webrtc::VideoRendererAdapter, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
    struct __compressed_pair<webrtc::VideoRendererAdapter *, std::__1::default_delete<webrtc::VideoRendererAdapter>> {
        struct VideoRendererAdapter *__value_;
    } __ptr_;
};

struct unique_ref<arfx::engine::profiler::IProfiler, std::__1::default_delete<arfx::engine::profiler::IProfiler>> {
    struct unique_ptr<arfx::engine::profiler::IProfiler, std::__1::default_delete<arfx::engine::profiler::IProfiler>> _field1;
};

struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> {
    struct unique_ptr<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::ICancelableToken, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> {
    struct unique_ptr<facebook::cameracore::ardelivery::ICancelableToken, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::IEffectsManager, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IEffectsManager, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::IModelManager, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IModelManager, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::IModelMetadataDownloading, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IModelMetadataDownloading, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::ModelManagerLogger, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> {
    struct unique_ptr<facebook::cameracore::ardelivery::ModelManagerLogger, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> _field1;
};

struct unique_ref<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate, std::__1::default_delete<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate>> {
    struct unique_ptr<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate, std::__1::default_delete<facebook::cameracore::ardelivery::PrivacyAwareLoggerDelegate>> _field1;
};

struct unique_ref<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> _field1;
};

struct unordered_map<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>, std::__1::hash<FBARAssetType>, std::__1::equal_to<FBARAssetType>, std::__1::allocator<std::__1::pair<const FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>>> {
    struct __hash_table<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::__unordered_map_hasher<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::hash<FBARAssetType>, true>, std::__1::__unordered_map_equal<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::equal_to<FBARAssetType>, true>, std::__1::allocator<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::hash<FBARAssetType>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<FBARAssetType, std::__1::__hash_value_type<FBARAssetType, std::__1::shared_ptr<facebook::cameracore::ardelivery::IFileCache>>, std::__1::equal_to<FBARAssetType>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<id, FBMPInternalFilterPerf, FBMPHashFunctor<NSObject *>, std::__1::equal_to<id>, std::__1::allocator<std::__1::pair<const id, FBMPInternalFilterPerf>>> {
    struct __hash_table<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>, std::__1::allocator<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, FBMPHashFunctor<NSObject *>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<id, std::__1::__hash_value_type<id, FBMPInternalFilterPerf>, std::__1::equal_to<id>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>, std::__1::hash<igl::DepthStencilStateDesc>, std::__1::equal_to<igl::DepthStencilStateDesc>, std::__1::allocator<std::__1::pair<const igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, std::__1::__unordered_map_hasher<igl::DepthStencilStateDesc, std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, std::__1::hash<igl::DepthStencilStateDesc>, true>, std::__1::__unordered_map_equal<igl::DepthStencilStateDesc, std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, std::__1::equal_to<igl::DepthStencilStateDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<igl::DepthStencilStateDesc, std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, std::__1::hash<igl::DepthStencilStateDesc>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<igl::DepthStencilStateDesc, std::__1::__hash_value_type<igl::DepthStencilStateDesc, std::__1::__list_iterator<std::__1::pair<igl::DepthStencilStateDesc, std::__1::shared_ptr<igl::IDepthStencilState>>, void *>>, std::__1::equal_to<igl::DepthStencilStateDesc>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>, std::__1::hash<igl::RenderPipelineDesc>, std::__1::equal_to<igl::RenderPipelineDesc>, std::__1::allocator<std::__1::pair<const igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, std::__1::__unordered_map_hasher<igl::RenderPipelineDesc, std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, std::__1::hash<igl::RenderPipelineDesc>, true>, std::__1::__unordered_map_equal<igl::RenderPipelineDesc, std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, std::__1::equal_to<igl::RenderPipelineDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<igl::RenderPipelineDesc, std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, std::__1::hash<igl::RenderPipelineDesc>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<igl::RenderPipelineDesc, std::__1::__hash_value_type<igl::RenderPipelineDesc, std::__1::__list_iterator<std::__1::pair<igl::RenderPipelineDesc, std::__1::shared_ptr<igl::IRenderPipelineState>>, void *>>, std::__1::equal_to<igl::RenderPipelineDesc>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>, std::__1::hash<igl::VertexInputStateDesc>, std::__1::equal_to<igl::VertexInputStateDesc>, std::__1::allocator<std::__1::pair<const igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>>> {
    struct __hash_table<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, std::__1::__unordered_map_hasher<igl::VertexInputStateDesc, std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, std::__1::hash<igl::VertexInputStateDesc>, true>, std::__1::__unordered_map_equal<igl::VertexInputStateDesc, std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, std::__1::equal_to<igl::VertexInputStateDesc>, true>, std::__1::allocator<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<igl::VertexInputStateDesc, std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, std::__1::hash<igl::VertexInputStateDesc>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<igl::VertexInputStateDesc, std::__1::__hash_value_type<igl::VertexInputStateDesc, std::__1::__list_iterator<std::__1::pair<igl::VertexInputStateDesc, std::__1::shared_ptr<igl::IVertexInputState>>, void *>>, std::__1::equal_to<igl::VertexInputStateDesc>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, std::__1::hash<long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::shared_ptr<std::__1::vector<Lispy::ValueRef, std::__1::allocator<Lispy::ValueRef>>>>, std::__1::equal_to<long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr, std::__1::hash<msqrd::TypeId>, std::__1::equal_to<msqrd::TypeId>, std::__1::allocator<std::__1::pair<const msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> {
    struct __hash_table<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::__unordered_map_hasher<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::hash<msqrd::TypeId>, true>, std::__1::__unordered_map_equal<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::equal_to<msqrd::TypeId>, true>, std::__1::allocator<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::hash<msqrd::TypeId>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<msqrd::TypeId, std::__1::__hash_value_type<msqrd::TypeId, msqrd::manifest::Manifest::ConfigPtr>, std::__1::equal_to<msqrd::TypeId>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>, std::__1::hash<msqrd::services::ServiceType::Enum>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, std::__1::allocator<std::__1::pair<const msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
    struct __hash_table<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>, std::__1::allocator<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::hash<msqrd::services::ServiceType::Enum>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<msqrd::services::ServiceType::Enum, std::__1::__hash_value_type<msqrd::services::ServiceType::Enum, id<FBARServiceConfiguration>>, std::__1::equal_to<msqrd::services::ServiceType::Enum>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, StructuredLogger::SiNativeWebviewRedirectImagesSizesType>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, double, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, double>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, double>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, double>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, double>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_set<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
    struct __hash_table<std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::basic_string<char>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::basic_string<char>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::basic_string<char>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::hash<std::__1::basic_string<char>>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::equal_to<std::__1::basic_string<char>>> {
            float _field1;
        } _field4;
    } _field1;
};

struct variant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusInterrupted, FBCamera::PerfStatusNoTracking> {
    int _field1;
    struct aligned_storage<8, 8> _field2;
};

struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
};

struct vec<4, float, glm::packed_highp> {
    union {
        CDStruct_f2e236b6 ;
        CDStruct_83984b6f ;
        CDStruct_f8b81486 ;
        struct type {
            unsigned char data[16];
        } data;
    } ;
};

struct vector<BKBloksParseResult, std::__1::allocator<BKBloksParseResult>> {
    struct BKBloksParseResult *_field1;
    struct BKBloksParseResult *_field2;
    struct __compressed_pair<BKBloksParseResult *, std::__1::allocator<BKBloksParseResult>> {
        struct BKBloksParseResult *_field1;
    } _field3;
};

struct vector<CaptureCompletionContext, std::__1::allocator<CaptureCompletionContext>> {
    struct CaptureCompletionContext *__begin_;
    struct CaptureCompletionContext *__end_;
    struct __compressed_pair<CaptureCompletionContext *, std::__1::allocator<CaptureCompletionContext>> {
        struct CaptureCompletionContext *__value_;
    } __end_cap_;
};

struct vector<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__begin_;
    struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__end_;
    struct __compressed_pair<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>*, std::__1::allocator<FB::Functional::PromiseEither<NSError *, FBVideoSimpleRecorderResult *>>> {
        struct PromiseEither<NSError *, FBVideoSimpleRecorderResult *> *__value_;
    } __end_cap_;
};

struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__value_;
    } __end_cap_;
};

struct vector<IGShoppingSizingChartRowEntry, std::__1::allocator<IGShoppingSizingChartRowEntry>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<IGShoppingSizingChartRowEntry *, std::__1::allocator<IGShoppingSizingChartRowEntry>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<StructuredLogger::SiNativeWebviewRedirectRedirectChainType, std::__1::allocator<StructuredLogger::SiNativeWebviewRedirectRedirectChainType>> {
    struct SiNativeWebviewRedirectRedirectChainType *__begin_;
    struct SiNativeWebviewRedirectRedirectChainType *__end_;
    struct __compressed_pair<StructuredLogger::SiNativeWebviewRedirectRedirectChainType *, std::__1::allocator<StructuredLogger::SiNativeWebviewRedirectRedirectChainType>> {
        struct SiNativeWebviewRedirectRedirectChainType *__value_;
    } __end_cap_;
};

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
};

struct vector<char, std::__1::allocator<char>>;

struct vector<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>;

struct vector<facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>;

struct vector<facebook::cameracore::ardelivery::CapabilityMinVersionModel, std::__1::allocator<facebook::cameracore::ardelivery::CapabilityMinVersionModel>> {
    struct CapabilityMinVersionModel *_field1;
    struct CapabilityMinVersionModel *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::CapabilityMinVersionModel *, std::__1::allocator<facebook::cameracore::ardelivery::CapabilityMinVersionModel>> {
        struct CapabilityMinVersionModel *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::EffectAssetBundle, std::__1::allocator<facebook::cameracore::ardelivery::EffectAssetBundle>> {
    struct EffectAssetBundle *_field1;
    struct EffectAssetBundle *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::EffectAssetBundle *, std::__1::allocator<facebook::cameracore::ardelivery::EffectAssetBundle>> {
        struct EffectAssetBundle *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::LocalAsset, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> {
    struct LocalAsset *_field1;
    struct LocalAsset *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::LocalAsset *, std::__1::allocator<facebook::cameracore::ardelivery::LocalAsset>> {
        struct LocalAsset *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::ModelFetcherRequest, std::__1::allocator<facebook::cameracore::ardelivery::ModelFetcherRequest>> {
    struct ModelFetcherRequest *_field1;
    struct ModelFetcherRequest *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelFetcherRequest *, std::__1::allocator<facebook::cameracore::ardelivery::ModelFetcherRequest>> {
        struct ModelFetcherRequest *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::ModelMetadataRequest, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataRequest>> {
    struct ModelMetadataRequest *_field1;
    struct ModelMetadataRequest *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelMetadataRequest *, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataRequest>> {
        struct ModelMetadataRequest *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::ModelMetadataWithType, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataWithType>> {
    struct ModelMetadataWithType *_field1;
    struct ModelMetadataWithType *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelMetadataWithType *, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataWithType>> {
        struct ModelMetadataWithType *_field1;
    } _field3;
};

struct vector<facebook::cameracore::ardelivery::VersionedCapability, std::__1::allocator<facebook::cameracore::ardelivery::VersionedCapability>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::VersionedCapability *, std::__1::allocator<facebook::cameracore::ardelivery::VersionedCapability>> {
        int *_field1;
    } _field3;
};

struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>;

struct vector<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
    struct NetworkSpeedTestPingDetails *__begin_;
    struct NetworkSpeedTestPingDetails *__end_;
    struct __compressed_pair<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails *, std::__1::allocator<facebook::mobile::xplat::livestreaming::NetworkSpeedTestPingDetails>> {
        struct NetworkSpeedTestPingDetails *__value_;
    } __end_cap_;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<igl::RenderPassDesc::ColorAttachmentDesc, std::__1::allocator<igl::RenderPassDesc::ColorAttachmentDesc>> {
    struct ColorAttachmentDesc *_field1;
    struct ColorAttachmentDesc *_field2;
    struct __compressed_pair<igl::RenderPassDesc::ColorAttachmentDesc *, std::__1::allocator<igl::RenderPassDesc::ColorAttachmentDesc>> {
        struct ColorAttachmentDesc *_field1;
    } _field3;
};

struct vector<igl::RenderPipelineDesc::TargetDesc::ColorAttachment, std::__1::allocator<igl::RenderPipelineDesc::TargetDesc::ColorAttachment>> {
    struct ColorAttachment *_field1;
    struct ColorAttachment *_field2;
    struct __compressed_pair<igl::RenderPipelineDesc::TargetDesc::ColorAttachment *, std::__1::allocator<igl::RenderPipelineDesc::TargetDesc::ColorAttachment>> {
        struct ColorAttachment *_field1;
    } _field3;
};

struct vector<igl::UniformBufferEntry, std::__1::allocator<igl::UniformBufferEntry>> {
    struct UniformBufferEntry *__begin_;
    struct UniformBufferEntry *__end_;
    struct __compressed_pair<igl::UniformBufferEntry *, std::__1::allocator<igl::UniformBufferEntry>> {
        struct UniformBufferEntry *__value_;
    } __end_cap_;
};

struct vector<iglu::filtergraph::TextureSampler, std::__1::allocator<iglu::filtergraph::TextureSampler>> {
    struct TextureSampler *_field1;
    struct TextureSampler *_field2;
    struct __compressed_pair<iglu::filtergraph::TextureSampler *, std::__1::allocator<iglu::filtergraph::TextureSampler>> {
        struct TextureSampler *_field1;
    } _field3;
};

struct vector<msqrd::platform::IScriptingLogger::WatchEntry, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
    struct WatchEntry *__begin_;
    struct WatchEntry *__end_;
    struct __compressed_pair<msqrd::platform::IScriptingLogger::WatchEntry *, std::__1::allocator<msqrd::platform::IScriptingLogger::WatchEntry>> {
        struct WatchEntry *__value_;
    } __end_cap_;
};

struct vector<msqrd::shared_ref<CallbackInfo>, std::__1::allocator<msqrd::shared_ref<CallbackInfo>>> {
    struct shared_ref<CallbackInfo> *__begin_;
    struct shared_ref<CallbackInfo> *__end_;
    struct __compressed_pair<msqrd::shared_ref<CallbackInfo>*, std::__1::allocator<msqrd::shared_ref<CallbackInfo>>> {
        struct shared_ref<CallbackInfo> *__value_;
    } __end_cap_;
};

struct vector<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>>> {
    struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__begin_;
    struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>>> {
        struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__value_;
    } __end_cap_;
};

struct vector<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>>> {
    shared_ref_0a2c9345 *__begin_;
    shared_ref_0a2c9345 *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>>> {
        shared_ref_0a2c9345 *__value_;
    } __end_cap_;
};

struct vector<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>, std::__1::allocator<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>>> {
    struct shared_ref<msqrd::plugins::IDocumentFactoryPlugin> *_field1;
    struct shared_ref<msqrd::plugins::IDocumentFactoryPlugin> *_field2;
    struct __compressed_pair<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>*, std::__1::allocator<msqrd::shared_ref<msqrd::plugins::IDocumentFactoryPlugin>>> {
        struct shared_ref<msqrd::plugins::IDocumentFactoryPlugin> *_field1;
    } _field3;
};

struct vector<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> {
    struct shared_ref<msqrd::servicehost::ARServiceCreator> *__begin_;
    struct shared_ref<msqrd::servicehost::ARServiceCreator> *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::servicehost::ARServiceCreator>>> {
        struct shared_ref<msqrd::servicehost::ARServiceCreator> *__value_;
    } __end_cap_;
};

struct vector<rtc::DelayedMessage, std::__1::allocator<rtc::DelayedMessage>> {
    struct DelayedMessage *_field1;
    struct DelayedMessage *_field2;
    struct __compressed_pair<rtc::DelayedMessage *, std::__1::allocator<rtc::DelayedMessage>> {
        struct DelayedMessage *_field1;
    } _field3;
};

struct vector<rtc::VideoSourceBase::SinkPair, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
    struct SinkPair *_field1;
    struct SinkPair *_field2;
    struct __compressed_pair<rtc::VideoSourceBase::SinkPair *, std::__1::allocator<rtc::VideoSourceBase::SinkPair>> {
        struct SinkPair *_field1;
    } _field3;
};

struct vector<rtc::scoped_refptr<rtc::RTCCertificate>, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
    struct scoped_refptr<rtc::RTCCertificate> *_field1;
    struct scoped_refptr<rtc::RTCCertificate> *_field2;
    struct __compressed_pair<rtc::scoped_refptr<rtc::RTCCertificate>*, std::__1::allocator<rtc::scoped_refptr<rtc::RTCCertificate>>> {
        struct scoped_refptr<rtc::RTCCertificate> *_field1;
    } _field3;
};

struct vector<rtc::tslog::TimeSeriesLog::StreamStartEndTime, std::__1::allocator<rtc::tslog::TimeSeriesLog::StreamStartEndTime>> {
    struct StreamStartEndTime *_field1;
    struct StreamStartEndTime *_field2;
    struct __compressed_pair<rtc::tslog::TimeSeriesLog::StreamStartEndTime *, std::__1::allocator<rtc::tslog::TimeSeriesLog::StreamStartEndTime>> {
        struct StreamStartEndTime *_field1;
    } _field3;
};

struct vector<rtc::tslog::TsCounter, std::__1::allocator<rtc::tslog::TsCounter>> {
    struct TsCounter *_field1;
    struct TsCounter *_field2;
    struct __compressed_pair<rtc::tslog::TsCounter *, std::__1::allocator<rtc::tslog::TsCounter>> {
        struct TsCounter *_field1;
    } _field3;
};

struct vector<short, std::__1::allocator<short>> {
    short *__begin_;
    short *__end_;
    struct __compressed_pair<short *, std::__1::allocator<short>> {
        short *__value_;
    } __end_cap_;
};

struct vector<std::__1::array<double, 4>, std::__1::allocator<std::__1::array<double, 4>>> {
    struct array<double, 4> *_field1;
    struct array<double, 4> *_field2;
    struct __compressed_pair<std::__1::array<double, 4>*, std::__1::allocator<std::__1::array<double, 4>>> {
        struct array<double, 4> *_field1;
    } _field3;
};

struct vector<std::__1::array<double, 9>, std::__1::allocator<std::__1::array<double, 9>>> {
    struct array<double, 9> *_field1;
    struct array<double, 9> *_field2;
    struct __compressed_pair<std::__1::array<double, 9>*, std::__1::allocator<std::__1::array<double, 9>>> {
        struct array<double, 9> *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_90719d97 *_field1;
    basic_string_90719d97 *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_90719d97 *_field1;
    } _field3;
};

struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::basic_string<char>, unsigned int>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, unsigned int>>> {
    struct pair<std::__1::basic_string<char>, unsigned int> *_field1;
    struct pair<std::__1::basic_string<char>, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::basic_string<char>, unsigned int>*, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, unsigned int>>> {
        struct pair<std::__1::basic_string<char>, unsigned int> *_field1;
    } _field3;
};

struct vector<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__begin_;
    struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__end_;
    struct __compressed_pair<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>*, std::__1::allocator<std::__1::pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters>>> {
        struct pair<std::__1::unordered_map<std::__1::basic_string<char>, std::__1::pair<double, double>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::pair<double, double>>>>, facebook::mobile::xplat::livestreaming::AdaptiveBitrateControlParameters> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(FBMPVideoData *), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(bool, double), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>, std::__1::allocator<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>>> {
    struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__begin_;
    struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__end_;
    struct __compressed_pair<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>*, std::__1::allocator<std::__1::pair<void (^)(double, double), NSObject<OS_dispatch_queue>*>>> {
        struct pair<void (^)(double, double), NSObject<OS_dispatch_queue>*> *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
    shared_ptr_9c840082 *__begin_;
    shared_ptr_9c840082 *__end_;
    struct __compressed_pair<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>*, std::__1::allocator<std::__1::shared_ptr<facebook::videostreaming::SimpleVideoRecorder>>> {
        shared_ptr_9c840082 *__value_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>*, std::__1::allocator<std::__1::shared_ptr<rtc::tslog::TimeSeriesStream>>> {
        struct shared_ptr<rtc::tslog::TimeSeriesStream> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> {
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field1;
    struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>*, std::__1::allocator<std::__1::unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>>>> {
        struct unique_ptr<msqrd::fx::Effect, std::__1::default_delete<msqrd::fx::Effect>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<char, std::__1::allocator<char>>, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> {
    struct vector<char, std::__1::allocator<char>> *__begin_;
    struct vector<char, std::__1::allocator<char>> *__end_;
    struct __compressed_pair<std::__1::vector<char, std::__1::allocator<char>>*, std::__1::allocator<std::__1::vector<char, std::__1::allocator<char>>>> {
        struct vector<char, std::__1::allocator<char>> *__value_;
    } __end_cap_;
};

struct vector<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>, std::__1::allocator<std::__1::weak_ptr<msqrd::dataprovider::ILocationUpdateListener>>>;

struct vector<std::__1::weak_ptr<msqrd::fx::Viewport>, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> {
    struct weak_ptr<msqrd::fx::Viewport> *_field1;
    struct weak_ptr<msqrd::fx::Viewport> *_field2;
    struct __compressed_pair<std::__1::weak_ptr<msqrd::fx::Viewport>*, std::__1::allocator<std::__1::weak_ptr<msqrd::fx::Viewport>>> {
        struct weak_ptr<msqrd::fx::Viewport> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *__begin_;
    char *__end_;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *__value_;
    } __end_cap_;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *_field1;
    unsigned int *_field2;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *_field1;
    } _field3;
};

struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *_field1;
    } _field3;
};

struct vector<webrtc::PeerConnectionInterface::IceServer, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
    struct IceServer *_field1;
    struct IceServer *_field2;
    struct __compressed_pair<webrtc::PeerConnectionInterface::IceServer *, std::__1::allocator<webrtc::PeerConnectionInterface::IceServer>> {
        struct IceServer *_field1;
    } _field3;
};

struct vector<webrtc::RtcpFeedback, std::__1::allocator<webrtc::RtcpFeedback>> {
    struct RtcpFeedback *_field1;
    struct RtcpFeedback *_field2;
    struct __compressed_pair<webrtc::RtcpFeedback *, std::__1::allocator<webrtc::RtcpFeedback>> {
        struct RtcpFeedback *_field1;
    } _field3;
};

struct vector<webrtc::RtpCodecParameters, std::__1::allocator<webrtc::RtpCodecParameters>> {
    struct RtpCodecParameters *_field1;
    struct RtpCodecParameters *_field2;
    struct __compressed_pair<webrtc::RtpCodecParameters *, std::__1::allocator<webrtc::RtpCodecParameters>> {
        struct RtpCodecParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpEncodingParameters, std::__1::allocator<webrtc::RtpEncodingParameters>> {
    struct RtpEncodingParameters *_field1;
    struct RtpEncodingParameters *_field2;
    struct __compressed_pair<webrtc::RtpEncodingParameters *, std::__1::allocator<webrtc::RtpEncodingParameters>> {
        struct RtpEncodingParameters *_field1;
    } _field3;
};

struct vector<webrtc::RtpExtension, std::__1::allocator<webrtc::RtpExtension>> {
    struct RtpExtension *_field1;
    struct RtpExtension *_field2;
    struct __compressed_pair<webrtc::RtpExtension *, std::__1::allocator<webrtc::RtpExtension>> {
        struct RtpExtension *_field1;
    } _field3;
};

struct weak_ptr<mediastreaming::ISessionLogger> {
    struct ISessionLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct weak_ptr<msqrd::dataprovider::ILocationUpdateListener> {
    struct ILocationUpdateListener *_field1;
    struct __shared_weak_count *_field2;
};

struct weak_ptr<msqrd::fx::Viewport>;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#if 0
// Names with conflicting types:
typedef struct {
    id _field1;
} Options_ba5fdc6f;

typedef struct {
    unsigned char __lx[24];
} type_52bef59e;

typedef struct {
    CDUnknownFunctionPointerType *_field1;
    struct opaqueCMSampleBuffer *_field2;
} CMSampleBufferSmartPtr_6fd6c05b;

typedef struct {
    struct _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_67dca217;

typedef struct {
    union _GLKVector2 _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
} _IGTouchSample_8081ab9f;

#endif

#pragma mark Typedef'd Structures

typedef struct {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
} CDStruct_89ddc8e1;

typedef struct {
    id logger;
    _Bool shouldLogFirstFrameAsFullResolution;
} CDStruct_92083a76;

typedef struct {
    _Bool sandboxEnabled;
    _Bool shouldSubscribeToLiveTopic;
    _Bool shouldAllow24hReplay;
    _Bool shouldLogRealtimeAnalytics;
    _Bool authCacheEnabled;
    _Bool enableFizz;
    _Bool enableCallbackOffMainQueue;
    double timeout;
    _Bool forceReconnectIfTimeout;
    _Bool keepRetryUntilTimeout;
    _Bool adAsyncAdUniverseExposeIsEverclearEnabled;
    _Bool adAsyncAdUniverseExposeIsRtiEnabled;
} CDStruct_b00edf80;

typedef struct {
    _Bool disableLeftEdgeSwiping;
    _Bool disableRightEdgeSwiping;
    _Bool disableRightEdgeSwipeIntoDirect;
    _Bool disableAllSwiping;
    _Bool conservativePanGestureRecognition;
} CDStruct_8ab98ee7;

typedef struct {
    _Bool unselectedVariantsEnabled;
    _Bool lightboxEnabled;
    _Bool productVideosEnabled;
    long long heroCarouselAnimationStyle;
    _Bool isCheckoutEnabled;
    long long displayStyle;
    long long trustSignalsStyle;
} CDStruct_5ca8a1f0;

typedef struct {
    _Bool containsStaticImage;
    _Bool skipServiceHostUpdating;
    unsigned long long deviceSource;
    NSString *deviceType;
    NSString *deviceID;
} CDStruct_50554124;

typedef struct {
    _Bool _field1;
    _Bool _field2;
    long long _field3;
    id _field4;
    id _field5;
} CDStruct_17631a97;

typedef struct {
    _Bool compactTrayDesignEnabled;
    _Bool autoSelectTrayBehaviorEnabled;
    long long initialCameraSwitcherMode;
    long long backgroundType;
    NSString *module;
    _Bool disableInfoSheet;
    _Bool isSavedEffectsEnabled;
} CDStruct_70b37879;

typedef struct {
    _Bool is_enabled;
    int coinflip_rate;
} CDStruct_10634fed;

typedef struct {
    _Bool _field1;
    long long _field2;
    double _field3;
    long long _field4;
    long long _field5;
    _Bool _field6;
} CDStruct_b4323d61;

typedef struct {
    _Bool unselectedVariantsEnabled;
} CDStruct_77bc14f6;

typedef struct {
    unsigned long long watchAndMoreButtonType;
    _Bool watchAndMoreEnabled;
    _Bool isIGTVMedia;
    _Bool igtvMediaPreviewEnabled;
    _Bool audioIndicatorEnabled;
    _Bool videoStitchingEnabled;
    _Bool persistentOverlaysEnabled;
    _Bool imageProgressViewDisabled;
    _Bool allowCaptions;
    _Bool timeIndicatorEnabled;
    _Bool scrubbingEnabled;
    _Bool isVideoCallCowatchItem;
    _Bool supportsLongPress;
    _Bool videoIndicatorDisabled;
    _Bool timeIndicatorLoadingStateEnabled;
    _Bool isClipsMedia;
} CDStruct_6054d0c1;

typedef struct {
    unsigned long long displayNoThumbnailOption;
    unsigned long long verticalAlignment;
    double currentTimeLabelSize;
} CDStruct_3f738656;

typedef struct {
    unsigned long long row;
    unsigned long long col;
} CDStruct_1d3354f4;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long count;
    double *array;
} CDStruct_3b9f1d24;

typedef struct {
    double _field1;
    _Bool _field2;
} CDStruct_fd1107da;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    char _field5[3];
} CDStruct_3781b4b3;

typedef struct {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
} CDStruct_d2b197d1;

typedef struct {
    double x;
    double y;
    double z;
} CDStruct_31142d93;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    float _field1;
    float _field2;
    long long _field3;
} CDStruct_b9ba3679;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
} CDStruct_a734b2e2;

typedef struct {
    int _field1;
    int _field2;
    int _field3;
} CDStruct_77932685;

typedef struct {
    int _field1;
    int _field2;
} CDStruct_1ef3fb1f;

typedef struct {
    long long addToBagBehaviors;
    NSString *merchantBagEntryPoint;
    NSString *pdpEntryPoint;
} CDStruct_ba7c6b20;

typedef struct {
    long long applicationBehavior;
    _Bool shouldSyncOverNetwork;
} CDStruct_39e1c37c;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long itemCountSinceLastAd;
    long long itemCountSinceLastNetego;
    NSMutableSet *consumedItemsIds;
} CDStruct_46fe7aad;

typedef struct {
    long long maximumUntruncatedNumberOfLines;
    long long truncateToNumberOfLines;
} CDStruct_ce671a2f;

typedef struct CDStruct_183601bc;

typedef struct {
    id _field1;
    CDStruct_1b6d18a9 _field2;
    CDStruct_1b6d18a9 _field3;
} CDStruct_0b137d7c;

typedef struct {
    _Bool _field1;
    struct CGSize _field2;
} CDStruct_deb187f0;

typedef struct {
    unsigned long long count;
    double baseLine;
    double lineHeight;
    struct __CTLine **lines;
    double *widths;
} CDStruct_7a56664d;

typedef struct {
    float _field1;
    float _field2;
    CDStruct_1b6d18a9 _field3;
    CDStruct_1b6d18a9 _field4;
    float _field5;
    float _field6;
} CDStruct_15fe95f0;

typedef struct {
    float _field1;
    CDStruct_1b6d18a9 _field2;
    long long _field3;
    float _field4;
    float _field5;
} CDStruct_62455522;

typedef struct {
    long long _field1;
    struct Required<long> _field2;
    long long _field3;
    struct Required<bool> _field4;
    struct Required<bool> _field5;
    struct Required<bool> _field6;
    struct Required<int> _field7;
    struct Required<bool> _field8;
    _Bool _field9;
} CDStruct_88822aa9;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint topLeftPoint;
    struct CGPoint topRightPoint;
    struct CGPoint bottomLeftPoint;
    struct CGPoint bottomRightPoint;
} CDStruct_1475ac9d;

typedef struct {
    struct CGSize cellSize;
    double viewHeight;
} CDStruct_afe9634b;

typedef struct {
    struct CGSize speakerSize;
    struct CGSize smallSoundwaveSize;
    struct CGSize bigSoundwaveSize;
    struct CGSize soundwaveAreaSize;
    struct CGSize crossSize;
    double speakerSoundwavePadding;
    double speakerCrossPadding;
} CDStruct_b17e9ffe;

typedef struct {
    struct CLLocationCoordinate2D center;
    CDStruct_951efa70 span;
} CDStruct_b7cb895d;

typedef struct {
    union _GLKVector3 _field1;
    union _GLKVector2 _field2;
} CDStruct_9d2b6912;

typedef struct {
    union _GLKVector4 _field1;
    union _GLKVector4 _field2;
} CDStruct_8aefd972;

typedef struct {
    union _GLKVector4 _field1;
    unsigned int _field2;
    float _field3;
    float _field4;
} CDStruct_07a05ba3;

typedef struct {
    long long devicePosition;
    struct CGRect faceRect;
} CDStruct_c68f086b;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
    struct CGRect _field7;
    struct CGRect _field8;
} CDStruct_e287b37a;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
    struct CGRect _field3;
    struct CGRect _field4;
    struct CGRect _field5;
    struct CGRect _field6;
    struct CGRect _field7;
} CDStruct_b7a5ad77;

typedef struct {
    struct CGRect _field1;
    struct CGRect _field2;
} CDStruct_b7523c42;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool useTimeSeriesLogging;
    _Bool skipFlushDuringSwap;
    int initialVideoBitrateKbps;
    int minVideoBitrateKbps;
    int maxVideoBitrateKbps;
    int bitrateScalerGranularity;
    int bitrateScalerMinHeight;
    int bitrateScalerMaxHeight;
    int framerate;
    int h264MaxEncodeFailureRetries;
    _Bool h264UseCABAC;
    _Bool audioInterruptionRestartDisabled;
    _Bool aacOverride;
    _Bool useAudioUnitWrapper;
    _Bool rtcH264ResetEncoderOnError;
    _Bool preferWifi;
    NSString *loggingLevels;
    _Bool useSendStreamDry;
    _Bool useNewFrameDropperImplementation;
    _Bool enableSendSidePacer;
    _Bool useMediaFromJoinResponse;
} CDStruct_968ff9e3;

typedef struct {
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    _Bool videoCroppingEnabled;
    struct CGSize encodingDimension;
    long long initialBitrateBps;
} CDStruct_71a17d3c;

typedef struct {
    NSURL *rtmpURL;
    NSURL *fbLiveURL;
    NSURL *fbLiveQuicURL;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> rtmpConnectionToken;
    struct shared_ptr<const std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>> fbLiveConnectionToken;
    struct AudioConfig audioConfig;
    struct VideoConfig videoConfig;
    struct {
        int width;
        int height;
        int frameRate;
        int bitrate;
        int iframeitv;
        _Bool enableCRF;
        double slope;
        double intercept;
        int windowSize;
        double periodTime;
    } crfEncoderConfig;
    struct {
        int sendHardTimeoutMsec;
        int sendCheckTimeoutMsec;
        int queueCapacityInBytes;
        double queueVideoCapacityInSeconds;
        int percentageOfCapacityToDrop;
        int connectionRetryCount;
        int connectionRetryDelay;
        int speedTestPayloadSize;
        int speedTestPayloadChunkSize;
        int speedTestWaitResponseTimeoutInSeconds;
        unsigned long long measurementsIntervalInMs;
        double speedTestMinimumBandwidthThreshold;
        int speedTestRetryMaxCount;
        double speedTestRetryTimeDelay;
        _Bool speedTestDisable;
        _Bool cancelSpeedTestOnStart;
        _Bool waitForSpeedTest;
        _Bool shouldProbeRTTWithPings;
        _Bool useSSLFactory;
        _Bool use1RTTconnectionSetup;
        _Bool useVideoProtocol;
        _Bool enableQuic;
        int quicStreamConfig;
        _Bool useFastQuicWriter;
        NSString *quicCongestionControlType;
        _Bool quicPacingEnabled;
        _Bool quicPartialReliabilityEnabled;
        double copaLatencyFactor;
        long long sendBufferSize;
        int connectTimeoutMs;
        _Bool waitForConnectAck;
        _Bool excludeNotSentBytesFromThroughput;
        _Bool useExperimentalLowLatencyMode;
        _Bool enableClientCounter;
        _Bool fbvpFastReconnect;
        int quicSocketDrainTimeoutMs;
        _Bool sendStreamInterruptionEnded;
        int maxFramesWrittenPerLoop;
        int minBytesLimitTransportWrite;
        int minFramesLimitTransportWrite;
        _Bool enableQuicTcpRacing;
        int tcpConnectDelayMs;
        int statsReportingIntervalMs;
        _Bool enforceFrameWithTrack;
    } networkConfig;
    struct ThroughputMonitorConfig throughputMonitorConfig;
    struct AdaptiveBitrateConfig adaptiveBitrateConfig;
    struct LowLatencyConfig lowLatencyConfig;
    struct GccConfig gccConfig;
    struct DiskVideoRecorderConfig diskRecordingConfig;
    _Bool recordOnDisk;
    struct FBVideoBroadcastSessionTimestampConfig timestampConfig;
    _Bool useMaxBitrateWifiOverride;
    struct LiveTraceConfig liveTraceConfig;
    _Bool useBitrateAdjuster;
    _Bool enableVPLogForSdk;
} CDStruct_62c1d2ec;

// Ambiguous groups
typedef struct {
    _Bool _field1;
    _Bool _field2;
    _Bool _field3;
} CDStruct_2a4d9400;

typedef struct {
    _Bool _field1;
    _Bool _field2;
} CDStruct_3d581f42;

typedef struct {
    _Bool allowPlayingVideoOnCompletionAfterOpeningIGTVFeedPreview;
    _Bool allowEnablingSwipeToSwitchVideoAfterOpeningIGTVFeedPreview;
} CDStruct_f110446c;

typedef struct {
    _Bool includeFixedDestinations;
    _Bool omitTopics;
} CDStruct_3894cc73;

typedef struct {
    double _field1;
    double _field2;
} CDStruct_c3b9c2ee;

typedef struct {
    double latitudeDelta;
    double longitudeDelta;
} CDStruct_951efa70;

typedef struct {
    float r;
    float g;
    float b;
    float a;
} CDStruct_83984b6f;

typedef struct {
    float s;
    float t;
    float p;
    float q;
} CDStruct_f8b81486;

typedef struct {
    float x;
    float y;
    float z;
    float w;
} CDStruct_f2e236b6;

typedef struct Either<NSError *, FBDiskVideoRecorderDiskResults *> {
    NSError *_left;
    FBDiskVideoRecorderDiskResults *_right;
    _Bool _isLeft;
} Either_4472cfe1;

typedef struct Either<NSError *, id<FBMPData>> {
    id _field1;
    id _field2;
    _Bool _field3;
} Either_964923b2;

typedef struct Expected<facebook::cameracore::ardelivery::AssetsManagerResult, facebook::cameracore::ardelivery::Error> {
    union {
        struct AssetsManagerResult _field1;
        struct Error _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
} Expected_9e614797;

typedef struct Expected<msqrd::dataprovider::IVideoDataProviderResult::VideoFrame, msqrd::dataprovider::IVideoDataProviderResult::SkippingReason> {
    union {
        struct VideoFrame _field1;
        int _field2;
        char _field3;
    } _field1;
    unsigned char _field2;
} Expected_4bed3bf9;

typedef struct Function<void (const folly::Expected<std::__1::basic_string<char>, facebook::cameracore::ardelivery::Error>&)> {
    union Data _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
} Function_7d1a6639;

typedef struct Function<void (const folly::Expected<std::__1::vector<facebook::cameracore::ardelivery::ModelMetadataResponse, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataResponse>>, facebook::cameracore::ardelivery::Error>&)> {
    union Data _field1;
    CDUnknownFunctionPointerType _field2;
    CDUnknownFunctionPointerType _field3;
} Function_42f3bc50;

typedef struct Matrix<float, 2, 1, 0, 2, 1> {
    struct DenseStorage<float, 2, 2, 1, 0> _field1;
} Matrix_adcc7caa;

typedef struct Optional<double> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            double _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_64fd2ed9;

typedef struct Optional<msqrd::shared_ref<arfx::analytics::memory_usage_tracking::AllocationLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<arfx::analytics::memory_usage_tracking::AllocationLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_717e6b28;

typedef struct Optional<msqrd::shared_ref<msqrd::logging::RenderTimeLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::logging::RenderTimeLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_cc3bfe46;

typedef struct Optional<msqrd::shared_ref<msqrd::servicehost::IEffectSessionListener>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::servicehost::IEffectSessionListener> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_5fae1a92;

typedef struct Optional<msqrd::shared_ref<msqrd::services::IServiceAnalyticsLogger>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ref<msqrd::services::IServiceAnalyticsLogger> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_515d19e0;

typedef struct Optional<msqrd::unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct unique_ref<const msqrd::services::IEffectDataSnapshotterCreator, std::__1::default_delete<const msqrd::services::IEffectDataSnapshotterCreator>> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_bb731cbb;

typedef struct Optional<std::__1::shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory>> {
    struct StorageNonTriviallyDestructible {
        union {
            char _field1;
            struct shared_ptr<facebook::mobile::xplat::livestreaming::AdaptiveBitrateAlgorithmFactory> _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_038b8a0f;

typedef struct Optional<unsigned int> {
    struct StorageTriviallyDestructible {
        union {
            char _field1;
            unsigned int _field2;
        } _field1;
        _Bool _field2;
    } _field1;
} Optional_0c33f205;

typedef struct PromiseEither<NSError *, FBDiskVideoRecorderDiskResults *> {
    struct shared_ptr<FB::Promise<FB::Functional::Either<NSError *, FBDiskVideoRecorderDiskResults *>>> _field1;
} PromiseEither_ab4a425c;

typedef struct Range<const msqrd::platform::IScriptingLogger::WatchEntry *> {
    struct WatchEntry *_field1;
    struct WatchEntry *_field2;
} Range_88fef6a7;

typedef struct VideoSinkInterface<webrtc::VideoFrame> {
    CDUnknownFunctionPointerType *_field1;
} VideoSinkInterface_a6f4a563;

typedef struct array<double, 5> {
    double __elems_[5];
} array_06c318a3;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_90719d97;

typedef struct bitset<8> {
    unsigned long long _field1;
} bitset_13ab97e2;

typedef struct duration<long long, std::__1::ratio<1, 1000>> {
    long long __rep_;
} duration_6174cf92;

typedef struct function<void (const mediastreaming::StreamingError &)> {
    struct __value_func<void (const mediastreaming::StreamingError &)> {
        type_52bef59e __buf_;
        struct __base<void (const mediastreaming::StreamingError &)> *__f_;
    } __f_;
} function_b4c4b9cd;

typedef struct function<void (mediastreaming::AppleEncodedAudioData)> {
    struct __value_func<void (mediastreaming::AppleEncodedAudioData)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::AppleEncodedAudioData)> *__f_;
    } __f_;
} function_c731ae12;

typedef struct function<void (mediastreaming::CMSampleBufferSmartPtr)> {
    struct __value_func<void (mediastreaming::CMSampleBufferSmartPtr)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::CMSampleBufferSmartPtr)> *__f_;
    } __f_;
} function_5cbebd93;

typedef struct function<void (mediastreaming::StreamingError)> {
    struct __value_func<void (mediastreaming::StreamingError)> {
        type_52bef59e __buf_;
        struct __base<void (mediastreaming::StreamingError)> *__f_;
    } __f_;
} function_2c1bd98d;

typedef struct function<void (unsigned long, unsigned long)> {
    struct __value_func<void (unsigned long, unsigned long)> {
        type_52bef59e __buf_;
        struct __base<void (unsigned long, unsigned long)> *__f_;
    } __f_;
} function_691a7fe3;

typedef struct future<folly::Optional<msqrd::services::RecognizedTarget>> {
    struct __assoc_state<folly::Optional<msqrd::services::RecognizedTarget>> *_field1;
} future_d3047492;

typedef struct future<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> {
    struct __assoc_state<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
} future_388bbd79;

typedef struct map<int, IGRegion, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, IGRegion>>> {
    struct __tree<std::__1::__value_type<int, IGRegion>, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>, std::__1::allocator<std::__1::__value_type<int, IGRegion>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<int, IGRegion>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<int, std::__1::__value_type<int, IGRegion>, std::__1::less<int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
} map_4edb12f9;

typedef struct mat<4, 4, float, glm::packed_highp> {
    struct vec<4, float, glm::packed_highp> value[4];
} mat_399fdf3c;

typedef struct optional<webrtc::H264::ProfileLevelId> {
    _Bool engaged_;
    union {
        struct dummy_type dummy_;
        struct ProfileLevelId data_;
    } ;
} optional_746748f1;

typedef struct pair<NSString *, UniformBufferValue> {
    id _field1;
    struct UniformBufferValue _field2;
} pair_8a5112f5;

typedef struct pair<bool, folly::Optional<msqrd::shared_ref<(anonymous namespace)::TargetEffect>>> {
    _Bool _field1;
    struct Optional<msqrd::shared_ref<(anonymous namespace)::TargetEffect>> _field2;
} pair_7e02c351;

typedef struct pair<id<FBCameraCaptureManaging>, FBARCameraSessionType> {
    id _field1;
    unsigned char _field2;
} pair_56580787;

typedef struct pair<id<FBMPInput>, id<FBMPOutput>> {
    id _field1;
    id _field2;
} pair_c442e4d7;

typedef struct promise<folly::Optional<msqrd::services::RecognizedTarget>> {
    struct __assoc_state<folly::Optional<msqrd::services::RecognizedTarget>> *_field1;
} promise_b9bc7b24;

typedef struct scoped_refptr<webrtc::AudioDecoderFactory> {
    struct AudioDecoderFactory *ptr_;
} scoped_refptr_4605340c;

typedef struct scoped_refptr<webrtc::AudioDeviceModule> {
    struct AudioDeviceModule *ptr_;
} scoped_refptr_0271d9ef;

typedef struct scoped_refptr<webrtc::AudioEncoderFactory> {
    struct AudioEncoderFactory *ptr_;
} scoped_refptr_3a9e6b6a;

typedef struct scoped_refptr<webrtc::AudioProcessing> {
    struct AudioProcessing *ptr_;
} scoped_refptr_9ba5b87d;

typedef struct scoped_refptr<webrtc::AudioSourceInterface> {
    struct AudioSourceInterface *ptr_;
} scoped_refptr_8b29514b;

typedef struct scoped_refptr<webrtc::AudioTrackInterface> {
    struct AudioTrackInterface *_field1;
} scoped_refptr_833c0867;

typedef struct scoped_refptr<webrtc::DataChannelInterface> {
    struct DataChannelInterface *ptr_;
} scoped_refptr_09a33b10;

typedef struct scoped_refptr<webrtc::DtmfSenderInterface> {
    struct DtmfSenderInterface *ptr_;
} scoped_refptr_25177f94;

typedef struct scoped_refptr<webrtc::FrameDecryptorInterface> {
    struct FrameDecryptorInterface *_field1;
} scoped_refptr_976466dd;

typedef struct scoped_refptr<webrtc::FrameEncryptorInterface> {
    struct FrameEncryptorInterface *_field1;
} scoped_refptr_01237151;

typedef struct scoped_refptr<webrtc::I420BufferInterface> {
    struct I420BufferInterface *ptr_;
} scoped_refptr_b674d2a6;

typedef struct scoped_refptr<webrtc::MediaSourceInterface> {
    struct MediaSourceInterface *ptr_;
} scoped_refptr_74f9e477;

typedef struct scoped_refptr<webrtc::MediaStreamInterface> {
    struct MediaStreamInterface *ptr_;
} scoped_refptr_6217ee82;

typedef struct scoped_refptr<webrtc::MediaStreamTrackInterface> {
    struct MediaStreamTrackInterface *ptr_;
} scoped_refptr_7d7e84a9;

typedef struct scoped_refptr<webrtc::PeerConnectionFactoryInterface> {
    struct PeerConnectionFactoryInterface *ptr_;
} scoped_refptr_1eaeeec2;

typedef struct scoped_refptr<webrtc::PeerConnectionInterface> {
    struct PeerConnectionInterface *ptr_;
} scoped_refptr_1f0d680a;

typedef struct scoped_refptr<webrtc::RtpReceiverInterface> {
    struct RtpReceiverInterface *ptr_;
} scoped_refptr_92bf499b;

typedef struct scoped_refptr<webrtc::RtpSenderInterface> {
    struct RtpSenderInterface *ptr_;
} scoped_refptr_3635276f;

typedef struct scoped_refptr<webrtc::RtpTransceiverInterface> {
    struct RtpTransceiverInterface *ptr_;
} scoped_refptr_f1ddbb35;

typedef struct scoped_refptr<webrtc::VideoTrackInterface> {
    struct VideoTrackInterface *_field1;
} scoped_refptr_cae59c25;

typedef struct scoped_refptr<webrtc::VideoTrackSourceInterface> {
    struct VideoTrackSourceInterface *ptr_;
} scoped_refptr_a41c3e90;

typedef struct shared_future<int> {
    struct __assoc_state<int> *_field1;
} shared_future_86484c36;

typedef struct shared_future<std::__1::basic_string<char>> {
    struct __assoc_state<std::__1::basic_string<char>> *_field1;
} shared_future_f64f9e8d;

typedef struct shared_future<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> {
    struct __assoc_state<std::__1::shared_ptr<msqrd::services::music::IMusicItem>> *_field1;
} shared_future_c25994f1;

typedef struct shared_ptr<FBStructuredLogger> {
    struct FBStructuredLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a1ea4606;

typedef struct shared_ptr<FBVideoBroadcastSessionStats> {
    struct FBVideoBroadcastSessionStats *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_44918ef6;

typedef struct shared_ptr<Lispy::Expression> {
    struct Expression *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8b8f8781;

typedef struct shared_ptr<arfx::analytics::battery_tracking::BatteryLogger> {
    struct BatteryLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d84e629b;

typedef struct shared_ptr<const msqrd::attribution::EffectAttribution> {
    struct EffectAttribution *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f86b0e66;

typedef struct shared_ptr<const msqrd::manifest::Manifest> {
    struct Manifest *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8f3f58d1;

typedef struct shared_ptr<const msqrd::services::EffectDataSnapshot> {
    struct EffectDataSnapshot *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_15663ff2;

typedef struct shared_ptr<const msqrd::versioning::Version> {
    struct Version *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_602211e3;

typedef struct shared_ptr<facebook::arservices::apple::AudioPlatformComponentHostImpl> {
    struct AudioPlatformComponentHostImpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f708a341;

typedef struct shared_ptr<facebook::audio::IAudioGraphClient> {
    struct IAudioGraphClient *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b0943105;

typedef struct shared_ptr<facebook::audiofiltercore::FBAudioFileReader<short>> {
    struct FBAudioFileReader<short> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b098e636;

typedef struct shared_ptr<facebook::cameracore::arclass::ARClassSource> {
    struct ARClassSource *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_24c96892;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassConfigSource> {
    struct IARClassConfigSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_83b3d1dc;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassPersistentStore> {
    struct IARClassPersistentStore *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f2a0ceff;

typedef struct shared_ptr<facebook::cameracore::arclass::IARClassRemoteSource> {
    struct IARClassRemoteSource *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f84c9c34;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IAssetsManager> {
    struct IAssetsManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a9a22e4d;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IAsyncAssetFetcher> {
    struct IAsyncAssetFetcher *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_537ac97e;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IFileCache> {
    struct IFileCache *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_232d0224;

typedef struct shared_ptr<facebook::cameracore::ardelivery::IModelManager> {
    struct IModelManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_78f6716f;

typedef struct shared_ptr<facebook::cameracore::ardelivery::ModelPaths> {
    struct ModelPaths *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9808100a;

typedef struct shared_ptr<facebook::cameracore::ardelivery::ModelPathsBuilder> {
    struct ModelPathsBuilder *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_4a89f5e9;

typedef struct shared_ptr<facebook::livestreaming::RtmpSSLFactory> {
    struct RtmpSSLFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f32f4099;

typedef struct shared_ptr<facebook::mobile::perflogger::QuickPerformanceLoggerBase> {
    struct QuickPerformanceLoggerBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_2811b282;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::AudioPacketizerFactory> {
    struct AudioPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b7837d35;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::Exception> {
    struct Exception *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_0529d599;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSession> {
    struct NetworkSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c386cb19;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::NetworkSessionFactory> {
    struct NetworkSessionFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_75e1c217;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::TslogFactory> {
    struct TslogFactory *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_84466e19;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoFrame> {
    struct VideoFrame *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_dcc74f32;

typedef struct shared_ptr<facebook::mobile::xplat::livestreaming::VideoPacketizerFactory> {
    struct VideoPacketizerFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0a7db57b;

typedef struct shared_ptr<facebook::mobile::xplat::reachability::ReachabilityAnnouncer> {
    struct ReachabilityAnnouncer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_d61e43bb;

typedef struct shared_ptr<facebook::pointtools::PointCloud<facebook::pointtools::Point3<float>>> {
    struct PointCloud<facebook::pointtools::Point3<float>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8556e769;

typedef struct shared_ptr<facebook::react::CallInvoker> {
    struct CallInvoker *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_09f1d460;

typedef struct shared_ptr<facebook::react::TurboModule> {
    struct TurboModule *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3725e3cd;

typedef struct shared_ptr<facebook::stash::Stash> {
    struct Stash *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_aa0b0210;

typedef struct shared_ptr<facebook::stash::StashManager> {
    struct StashManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5181b5c0;

typedef struct shared_ptr<facebook::stash::StashPlugin> {
    struct StashPlugin *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_f5685d9f;

typedef struct shared_ptr<facebook::videostreaming::SimpleVideoRecorder> {
    struct SimpleVideoRecorder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_9c840082;

typedef struct shared_ptr<igl::IBuffer> {
    struct IBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_3ca5f01e;

typedef struct shared_ptr<igl::ICommandBuffer> {
    struct ICommandBuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_87f2834a;

typedef struct shared_ptr<igl::ICommandQueue> {
    struct ICommandQueue *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_998cc3cc;

typedef struct shared_ptr<igl::IDevice> {
    struct IDevice *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_eefa0e38;

typedef struct shared_ptr<igl::IFramebuffer> {
    struct IFramebuffer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_f1960820;

typedef struct shared_ptr<igl::IRenderPipelineState> {
    struct IRenderPipelineState *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_32cdf849;

typedef struct shared_ptr<igl::ITexture> {
    struct ITexture *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b95409fc;

typedef struct shared_ptr<igl::opengl::Framebuffer> {
    struct Framebuffer *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_b1f7ea7b;

typedef struct shared_ptr<mediastreaming::DvrManagerService> {
    struct DvrManagerService *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fc0307b8;

typedef struct shared_ptr<msqrd::asset::IAsyncAssetLoader> {
    struct IAsyncAssetLoader *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_63cb3669;

typedef struct shared_ptr<msqrd::capture::CaptureEventService> {
    struct CaptureEventService *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1579b2d5;

typedef struct shared_ptr<msqrd::capture::ICaptureEventInput> {
    struct ICaptureEventInput *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_bd589161;

typedef struct shared_ptr<msqrd::dataprovider::GestureEvent> {
    struct GestureEvent *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_549641cb;

typedef struct shared_ptr<msqrd::dataprovider::IVideoDataProvider> {
    struct IVideoDataProvider *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_53c346d1;

typedef struct shared_ptr<msqrd::fx::IEffectAssetLoader> {
    struct IEffectAssetLoader *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_38e3fcd6;

typedef struct shared_ptr<msqrd::fx::IViewport> {
    struct IViewport *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_28782c24;

typedef struct shared_ptr<msqrd::fx::RenderSession> {
    struct RenderSession *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_179fff5b;

typedef struct shared_ptr<msqrd::location::LocationDataProvider> {
    struct LocationDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a53fea94;

typedef struct shared_ptr<msqrd::logging::IRawEventLogger> {
    struct IRawEventLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_614878a6;

typedef struct shared_ptr<msqrd::motion::MotionDataProvider> {
    struct MotionDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_692abb54;

typedef struct shared_ptr<msqrd::platform::IScriptingLogger> {
    struct IScriptingLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_19a3124c;

typedef struct shared_ptr<msqrd::platform::IShaderLogger> {
    struct IShaderLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_6266c83b;

typedef struct shared_ptr<msqrd::servicehost::ServiceHost> {
    struct ServiceHost *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ad266505;

typedef struct shared_ptr<msqrd::services::IServiceConfiguration> {
    struct IServiceConfiguration *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e7d8ca2a;

typedef struct shared_ptr<msqrd::services::audio::IAudioFileSink> {
    struct IAudioFileSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_0fafba50;

typedef struct shared_ptr<msqrd::services::audio::IAudioPlatformComponentHost> {
    struct IAudioPlatformComponentHost *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_27fa6347;

typedef struct shared_ptr<msqrd::services::audio::IAudioServiceController> {
    struct IAudioServiceController *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_de289cca;

typedef struct shared_ptr<msqrd::services::audio::IMicrophoneSink> {
    struct IMicrophoneSink *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_89031f2b;

typedef struct shared_ptr<msqrd::services::network::INetworkConsentManager> {
    struct INetworkConsentManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ae76abe8;

typedef struct shared_ptr<msqrd::services::persistence::IPersistenceServiceDelegate> {
    struct IPersistenceServiceDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5e1d7b9d;

typedef struct shared_ptr<msqrd::services::target_effect::ITargetEffectStateChangeListener> {
    struct ITargetEffectStateChangeListener *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_7edd399f;

typedef struct shared_ptr<msqrd::touch::TouchGesturesDataProvider> {
    struct TouchGesturesDataProvider *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e0e6635;

typedef struct shared_ptr<proxygen::httpclient::AnalyticsLogger> {
    struct AnalyticsLogger *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_896dd83c;

typedef struct shared_ptr<std::__1::promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>>> {
    struct promise<std::__1::vector<facebook::artech::anchorservice::datawrappers::HitTestResultData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::HitTestResultData>>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_e0047530;

typedef struct shared_ptr<std::__1::vector<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>>> {
    struct vector<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPlaneTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_608d6416;

typedef struct shared_ptr<std::__1::vector<facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPointTrackableData>>> {
    struct vector<facebook::artech::anchorservice::datawrappers::ARPointTrackableData, std::__1::allocator<facebook::artech::anchorservice::datawrappers::ARPointTrackableData>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_7c1062ef;

typedef struct shared_ptr<std::__1::vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>>> {
    struct vector<facebook::mobile::xplat::livestreaming::DroppedFrame, std::__1::allocator<facebook::mobile::xplat::livestreaming::DroppedFrame>> *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_3f407d03;

typedef struct shared_ptr<std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>> {
    vector_cfeb9b06 *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_97dceaa7;

typedef struct shared_ref<const msqrd::manifest::Manifest> {
    shared_ptr_8f3f58d1 _field1;
} shared_ref_a9344986;

typedef struct shared_ref<facebook::arengineservices::LockedPixelBuffer> {
    struct shared_ptr<facebook::arengineservices::LockedPixelBuffer> _field1;
} shared_ref_ee0a2387;

typedef struct shared_ref<facebook::bufferpool::BufferPool> {
    struct shared_ptr<facebook::bufferpool::BufferPool> _field1;
} shared_ref_c863b8ca;

typedef struct shared_ref<facebook::cameracore::arclass::ARClassContext> {
    struct shared_ptr<facebook::cameracore::arclass::ARClassContext> _field1;
} shared_ref_49fe85fd;

typedef struct shared_ref<facebook::cameracore::ardelivery::IAsyncAssetFetcher> {
    shared_ptr_537ac97e _field1;
} shared_ref_a2f2313a;

typedef struct shared_ref<facebook::cameracore::ardelivery::ModelPaths> {
    shared_ptr_9808100a _field1;
} shared_ref_79d83bfc;

typedef struct shared_ref<folly::SequencedExecutor> {
    struct shared_ptr<folly::SequencedExecutor> _field1;
} shared_ref_3666eab9;

typedef struct shared_ref<msqrd::analytics::IEngineAnalyticsLogger> {
    struct shared_ptr<msqrd::analytics::IEngineAnalyticsLogger> _field1;
} shared_ref_c3a6841c;

typedef struct shared_ref<msqrd::dataprovider::IPlatformSLAMDataInput> {
    struct shared_ptr<msqrd::dataprovider::IPlatformSLAMDataInput> _field1;
} shared_ref_67afbc20;

typedef struct shared_ref<msqrd::dataprovider::platform_events::PlatformEventsInput> {
    struct shared_ptr<msqrd::dataprovider::platform_events::PlatformEventsInput> _field1;
} shared_ref_4ba0611f;

typedef struct shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator> {
    struct shared_ptr<msqrd::dataprovider::recognitiontracking::ITrackerCreator> _field1;
} shared_ref_0a2c9345;

typedef struct shared_ref<msqrd::experiment::IExperimentConfig> {
    struct shared_ptr<msqrd::experiment::IExperimentConfig> _field1;
} shared_ref_5cdfb9eb;

typedef struct shared_ref<msqrd::fx::augmentations::IAugmentationsController> {
    struct shared_ptr<msqrd::fx::augmentations::IAugmentationsController> _field1;
} shared_ref_b0069baa;

typedef struct shared_ref<msqrd::logging::IBugReportLogger> {
    struct shared_ptr<msqrd::logging::IBugReportLogger> _field1;
} shared_ref_80593006;

typedef struct shared_ref<msqrd::logging::IRawEventLogger> {
    shared_ptr_614878a6 _field1;
} shared_ref_c47c2ea2;

typedef struct shared_ref<msqrd::player::ISessionPlayer> {
    struct shared_ptr<msqrd::player::ISessionPlayer> _field1;
} shared_ref_d7b05e06;

typedef struct shared_ref<msqrd::servicehost::EffectController> {
    struct shared_ptr<msqrd::servicehost::EffectController> _field1;
} shared_ref_344acd93;

typedef struct shared_ref<msqrd::servicehost::ServiceHost> {
    shared_ptr_ad266505 _field1;
} shared_ref_f3fa7b41;

typedef struct shared_ref<msqrd::services::ITargetEffect> {
    struct shared_ptr<msqrd::services::ITargetEffect> _field1;
} shared_ref_4c31aced;

typedef struct shared_ref<msqrd::services::audio::IAudioPlatformComponentHost> {
    shared_ptr_27fa6347 _field1;
} shared_ref_a585b04f;

typedef struct shared_ref<msqrd::services::network::INetworkClientSource> {
    struct shared_ptr<msqrd::services::network::INetworkClientSource> _field1;
} shared_ref_855019a2;

typedef struct shared_ref<msqrd::standalone_tracking::ITrackingController> {
    struct shared_ptr<msqrd::standalone_tracking::ITrackingController> _field1;
} shared_ref_401cd246;

typedef struct unique_ptr<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory, std::__1::default_delete<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory *, std::__1::default_delete<facebook::cameracore::ardelivery::FBARAssetsManagerCxxFactory>> {
        struct FBARAssetsManagerCxxFactory *_field1;
    } _field1;
} unique_ptr_39eeb6d3;

typedef struct unique_ptr<facebook::cameracore::ardelivery::IConnectionInfoProvider, std::__1::default_delete<facebook::cameracore::ardelivery::IConnectionInfoProvider>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IConnectionInfoProvider *, std::__1::default_delete<facebook::cameracore::ardelivery::IConnectionInfoProvider>> {
        struct IConnectionInfoProvider *__value_;
    } __ptr_;
} unique_ptr_48720d16;

typedef struct unique_ptr<facebook::cameracore::ardelivery::IModelManagerConfig, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManagerConfig>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelManagerConfig *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManagerConfig>> {
        struct IModelManagerConfig *__value_;
    } __ptr_;
} unique_ptr_f5b95950;

typedef struct unique_ptr<facebook::cameracore::ardelivery::IModelVersionFetcher, std::__1::default_delete<facebook::cameracore::ardelivery::IModelVersionFetcher>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::IModelVersionFetcher *, std::__1::default_delete<facebook::cameracore::ardelivery::IModelVersionFetcher>> {
        struct IModelVersionFetcher *__value_;
    } __ptr_;
} unique_ptr_16761994;

typedef struct unique_ptr<facebook::cameracore::ardelivery::VersionedModelCacheProvider, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheProvider>> {
    struct __compressed_pair<facebook::cameracore::ardelivery::VersionedModelCacheProvider *, std::__1::default_delete<facebook::cameracore::ardelivery::VersionedModelCacheProvider>> {
        struct VersionedModelCacheProvider *__value_;
    } __ptr_;
} unique_ptr_1179c039;

typedef struct unique_ptr<facebook::react::JSExecutorFactory, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
    struct __compressed_pair<facebook::react::JSExecutorFactory *, std::__1::default_delete<facebook::react::JSExecutorFactory>> {
        struct JSExecutorFactory *_field1;
    } _field1;
} unique_ptr_0e0e1873;

typedef struct unique_ptr<folly::IOBuf, std::__1::default_delete<folly::IOBuf>> {
    struct __compressed_pair<folly::IOBuf *, std::__1::default_delete<folly::IOBuf>> {
        struct IOBuf *_field1;
    } _field1;
} unique_ptr_e802a309;

typedef struct unique_ptr<igl::IDevice, std::__1::default_delete<igl::IDevice>> {
    struct __compressed_pair<igl::IDevice *, std::__1::default_delete<igl::IDevice>> {
        struct IDevice *__value_;
    } __ptr_;
} unique_ptr_bc5927be;

typedef struct unique_ptr<igl::IRenderCommandEncoder, std::__1::default_delete<igl::IRenderCommandEncoder>> {
    struct __compressed_pair<igl::IRenderCommandEncoder *, std::__1::default_delete<igl::IRenderCommandEncoder>> {
        struct IRenderCommandEncoder *__value_;
    } __ptr_;
} unique_ptr_d491fbc2;

typedef struct unique_ptr<igl::ITexture, std::__1::default_delete<igl::ITexture>> {
    struct __compressed_pair<igl::ITexture *, std::__1::default_delete<igl::ITexture>> {
        struct ITexture *_field1;
    } _field1;
} unique_ptr_f156dad0;

typedef struct unique_ptr<msqrd::plugins::BasePluginConfiguration, std::__1::default_delete<msqrd::plugins::BasePluginConfiguration>> {
    struct __compressed_pair<msqrd::plugins::BasePluginConfiguration *, std::__1::default_delete<msqrd::plugins::BasePluginConfiguration>> {
        struct BasePluginConfiguration *__value_;
    } __ptr_;
} unique_ptr_cb497687;

typedef struct unique_ptr<msqrd::services::network::INetworkResult, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
    struct __compressed_pair<msqrd::services::network::INetworkResult *, std::__1::default_delete<msqrd::services::network::INetworkResult>> {
        struct INetworkResult *_field1;
    } _field1;
} unique_ptr_e88c7864;

typedef struct unique_ptr<rtc::BitrateAllocationStrategy, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
    struct __compressed_pair<rtc::BitrateAllocationStrategy *, std::__1::default_delete<rtc::BitrateAllocationStrategy>> {
        struct BitrateAllocationStrategy *_field1;
    } _field1;
} unique_ptr_e9310bd8;

typedef struct unique_ptr<rtc::IntervalRange, std::__1::default_delete<rtc::IntervalRange>> {
    struct __compressed_pair<rtc::IntervalRange *, std::__1::default_delete<rtc::IntervalRange>> {
        struct IntervalRange *_field1;
    } _field1;
} unique_ptr_f1df6efd;

typedef struct unique_ptr<webrtc::IceCandidateInterface, std::__1::default_delete<webrtc::IceCandidateInterface>> {
    struct __compressed_pair<webrtc::IceCandidateInterface *, std::__1::default_delete<webrtc::IceCandidateInterface>> {
        struct IceCandidateInterface *_field1;
    } _field1;
} unique_ptr_eddc2ff2;

typedef struct unique_ptr<webrtc::MediaConstraints, std::__1::default_delete<webrtc::MediaConstraints>> {
    struct __compressed_pair<webrtc::MediaConstraints *, std::__1::default_delete<webrtc::MediaConstraints>> {
        struct MediaConstraints *__value_;
    } __ptr_;
} unique_ptr_9751165c;

typedef struct unique_ptr<webrtc::MediaTransportFactory, std::__1::default_delete<webrtc::MediaTransportFactory>> {
    struct __compressed_pair<webrtc::MediaTransportFactory *, std::__1::default_delete<webrtc::MediaTransportFactory>> {
        struct MediaTransportFactory *__value_;
    } __ptr_;
} unique_ptr_20e123b6;

typedef struct unique_ptr<webrtc::RTPFragmentationHeader, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
    struct __compressed_pair<webrtc::RTPFragmentationHeader *, std::__1::default_delete<webrtc::RTPFragmentationHeader>> {
        struct RTPFragmentationHeader *_field1;
    } _field1;
} unique_ptr_91070b9b;

typedef struct unique_ptr<webrtc::VideoDecoder, std::__1::default_delete<webrtc::VideoDecoder>> {
    struct __compressed_pair<webrtc::VideoDecoder *, std::__1::default_delete<webrtc::VideoDecoder>> {
        struct VideoDecoder *__value_;
    } __ptr_;
} unique_ptr_28850a1b;

typedef struct unique_ptr<webrtc::VideoDecoderFactory, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
    struct __compressed_pair<webrtc::VideoDecoderFactory *, std::__1::default_delete<webrtc::VideoDecoderFactory>> {
        struct VideoDecoderFactory *__value_;
    } __ptr_;
} unique_ptr_6d0f5cf1;

typedef struct unique_ptr<webrtc::VideoEncoder, std::__1::default_delete<webrtc::VideoEncoder>> {
    struct __compressed_pair<webrtc::VideoEncoder *, std::__1::default_delete<webrtc::VideoEncoder>> {
        struct VideoEncoder *__value_;
    } __ptr_;
} unique_ptr_2722152f;

typedef struct unique_ptr<webrtc::VideoEncoderFactory, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
    struct __compressed_pair<webrtc::VideoEncoderFactory *, std::__1::default_delete<webrtc::VideoEncoderFactory>> {
        struct VideoEncoderFactory *__value_;
    } __ptr_;
} unique_ptr_5191721b;

typedef struct unique_ref<facebook::cameracore::ardelivery::ICancelableToken, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> {
    struct unique_ptr<facebook::cameracore::ardelivery::ICancelableToken, std::__1::default_delete<facebook::cameracore::ardelivery::ICancelableToken>> _field1;
} unique_ref_6a296fc1;

typedef struct unique_ref<facebook::cameracore::ardelivery::IEffectsManager, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IEffectsManager, std::__1::default_delete<facebook::cameracore::ardelivery::IEffectsManager>> _field1;
} unique_ref_d9627080;

typedef struct unique_ref<facebook::cameracore::ardelivery::IModelManager, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IModelManager, std::__1::default_delete<facebook::cameracore::ardelivery::IModelManager>> _field1;
} unique_ref_f5f3cdcf;

typedef struct unique_ref<facebook::cameracore::ardelivery::IModelMetadataDownloading, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> {
    struct unique_ptr<facebook::cameracore::ardelivery::IModelMetadataDownloading, std::__1::default_delete<facebook::cameracore::ardelivery::IModelMetadataDownloading>> _field1;
} unique_ref_afa66c71;

typedef struct unique_ref<facebook::cameracore::ardelivery::ModelManagerLogger, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> {
    struct unique_ptr<facebook::cameracore::ardelivery::ModelManagerLogger, std::__1::default_delete<facebook::cameracore::ardelivery::ModelManagerLogger>> _field1;
} unique_ref_e2ed66ff;

typedef struct unique_ref<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> {
    struct unique_ptr<msqrd::services::network::INetworkRequestRedirectHandler, std::__1::default_delete<msqrd::services::network::INetworkRequestRedirectHandler>> _field1;
} unique_ref_ae0e2fe6;

typedef struct variant<FBCamera::PerfStatusSuccess, FBCamera::PerfStatusAbort, FBCamera::PerfStatusFail, FBCamera::PerfStatusInterrupted, FBCamera::PerfStatusNoTracking> {
    int _field1;
    struct aligned_storage<8, 8> _field2;
} variant_f50e7bf6;

typedef struct variant<FBMPSessionConnectOperation, FBMPSessionConnectPortsOperation, FBMPSessionDisconnectOperation, FBMPSessionDisconnectPortsOperation, FBMPSessionReplaceOperation, FBMPSessionRemoveOperation> {
    int which_;
    struct aligned_storage<16, 8> storage_;
} variant_d68ec686;

typedef struct vector<BKBloksParseResult, std::__1::allocator<BKBloksParseResult>> {
    struct BKBloksParseResult *_field1;
    struct BKBloksParseResult *_field2;
    struct __compressed_pair<BKBloksParseResult *, std::__1::allocator<BKBloksParseResult>> {
        struct BKBloksParseResult *_field1;
    } _field3;
} vector_3d38e0e1;

typedef struct vector<IGGallerySectionLayout, std::__1::allocator<IGGallerySectionLayout>> {
    struct IGGallerySectionLayout *__begin_;
    struct IGGallerySectionLayout *__end_;
    struct __compressed_pair<IGGallerySectionLayout *, std::__1::allocator<IGGallerySectionLayout>> {
        struct IGGallerySectionLayout *__value_;
    } __end_cap_;
} vector_18be7935;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__value_;
    } __end_cap_;
} vector_03b67401;

typedef struct vector<facebook::cameracore::ardelivery::CapabilityMinVersionModel, std::__1::allocator<facebook::cameracore::ardelivery::CapabilityMinVersionModel>> {
    struct CapabilityMinVersionModel *_field1;
    struct CapabilityMinVersionModel *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::CapabilityMinVersionModel *, std::__1::allocator<facebook::cameracore::ardelivery::CapabilityMinVersionModel>> {
        struct CapabilityMinVersionModel *_field1;
    } _field3;
} vector_82fe7ddd;

typedef struct vector<facebook::cameracore::ardelivery::ModelFetcherRequest, std::__1::allocator<facebook::cameracore::ardelivery::ModelFetcherRequest>> {
    struct ModelFetcherRequest *_field1;
    struct ModelFetcherRequest *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelFetcherRequest *, std::__1::allocator<facebook::cameracore::ardelivery::ModelFetcherRequest>> {
        struct ModelFetcherRequest *_field1;
    } _field3;
} vector_10e5ccd4;

typedef struct vector<facebook::cameracore::ardelivery::ModelMetadataRequest, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataRequest>> {
    struct ModelMetadataRequest *_field1;
    struct ModelMetadataRequest *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::ModelMetadataRequest *, std::__1::allocator<facebook::cameracore::ardelivery::ModelMetadataRequest>> {
        struct ModelMetadataRequest *_field1;
    } _field3;
} vector_7dab966a;

typedef struct vector<facebook::cameracore::ardelivery::VersionedCapability, std::__1::allocator<facebook::cameracore::ardelivery::VersionedCapability>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<facebook::cameracore::ardelivery::VersionedCapability *, std::__1::allocator<facebook::cameracore::ardelivery::VersionedCapability>> {
        int *_field1;
    } _field3;
} vector_6290d399;

typedef struct vector<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>>> {
    struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__begin_;
    struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator>>> {
        struct shared_ref<msqrd::dataprovider::recognitiontracking::IRecognizerCreator> *__value_;
    } __end_cap_;
} vector_706b8664;

typedef struct vector<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>>> {
    shared_ref_0a2c9345 *__begin_;
    shared_ref_0a2c9345 *__end_;
    struct __compressed_pair<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>*, std::__1::allocator<msqrd::shared_ref<msqrd::dataprovider::recognitiontracking::ITrackerCreator>>> {
        shared_ref_0a2c9345 *__value_;
    } __end_cap_;
} vector_da41a25b;

typedef struct vector<rtc::tslog::TsCounter, std::__1::allocator<rtc::tslog::TsCounter>> {
    struct TsCounter *_field1;
    struct TsCounter *_field2;
    struct __compressed_pair<rtc::tslog::TsCounter *, std::__1::allocator<rtc::tslog::TsCounter>> {
        struct TsCounter *_field1;
    } _field3;
} vector_6566990d;

typedef struct vector<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field2;
    struct __compressed_pair<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>*, std::__1::allocator<std::__1::pair<id<FBMPProducerPort>, id<FBMPConsumerPort>>>> {
        struct pair<id<FBMPProducerPort>, id<FBMPConsumerPort>> *_field1;
    } _field3;
} vector_5871b4ad;

typedef struct vector<std::__1::pair<std::__1::basic_string<char>, unsigned int>, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, unsigned int>>> {
    struct pair<std::__1::basic_string<char>, unsigned int> *_field1;
    struct pair<std::__1::basic_string<char>, unsigned int> *_field2;
    struct __compressed_pair<std::__1::pair<std::__1::basic_string<char>, unsigned int>*, std::__1::allocator<std::__1::pair<std::__1::basic_string<char>, unsigned int>>> {
        struct pair<std::__1::basic_string<char>, unsigned int> *_field1;
    } _field3;
} vector_35fe9598;

typedef struct vector<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>*, std::__1::allocator<std::__1::unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>>>> {
        struct unique_ptr<facebook::mqttchannel::TopicListener, std::__1::default_delete<facebook::mqttchannel::TopicListener>> *_field1;
    } _field3;
} vector_88f2426d;

typedef struct vector<unsigned long long, std::__1::allocator<unsigned long long>> {
    unsigned long long *_field1;
    unsigned long long *_field2;
    struct __compressed_pair<unsigned long long *, std::__1::allocator<unsigned long long>> {
        unsigned long long *_field1;
    } _field3;
} vector_cfeb9b06;

typedef struct weak_ptr<mediastreaming::ISessionLogger> {
    struct ISessionLogger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} weak_ptr_a6535127;

typedef struct weak_ptr<msqrd::dataprovider::ILocationUpdateListener> {
    struct ILocationUpdateListener *_field1;
    struct __shared_weak_count *_field2;
} weak_ptr_892112ed;

#pragma mark Named Unions

union CodecSpecificInfoUnion {
    struct CodecSpecificInfoVP8 _field1;
    struct CodecSpecificInfoVP9 _field2;
    struct CodecSpecificInfoH264 _field3;
    struct CodecSpecificInfoH265 _field4;
};

union Data {
    void *_field1;
    struct type {
        unsigned char _field1[48];
    } _field2;
};

union VideoCodecUnion {
    struct VideoCodecVP8 _field1;
    struct VideoCodecVP9 _field2;
    struct VideoCodecH264 _field3;
    struct VideoCodecH265 _field4;
};

union _GLKMatrix2 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
    } _field1;
    float _field2[2][2];
    float _field3[4];
};

union _GLKMatrix3 {
    struct {
        float _field1;
        float _field2;
        float _field3;
        float _field4;
        float _field5;
        float _field6;
        float _field7;
        float _field8;
        float _field9;
    } _field1;
    float _field2[9];
};

union _GLKMatrix4 {
    struct {
        float m00;
        float m01;
        float m02;
        float m03;
        float m10;
        float m11;
        float m12;
        float m13;
        float m20;
        float m21;
        float m22;
        float m23;
        float m30;
        float m31;
        float m32;
        float m33;
    } ;
    float m[16];
};

union _GLKVector2 {
    struct {
        float x;
        float y;
    } ;
    struct {
        float s;
        float t;
    } ;
    float v[2];
};

union _GLKVector3 {
    CDStruct_869f9c67 _field1;
    CDStruct_869f9c67 _field2;
    CDStruct_869f9c67 _field3;
    float _field4[3];
};

union _GLKVector4 {
    CDStruct_f2e236b6 ;
    CDStruct_83984b6f ;
    CDStruct_f8b81486 ;
    float v[4];
};

union _IGGLKIntVector2 {
    CDStruct_1ef3fb1f _field1;
    CDStruct_1ef3fb1f _field2;
    int _field3[2];
};

union _IGGLKIntVector3 {
    CDStruct_77932685 _field1;
    CDStruct_77932685 _field2;
    CDStruct_77932685 _field3;
    int _field4[3];
};

union _IGGLKIntVector4 {
    CDStruct_a734b2e2 _field1;
    CDStruct_a734b2e2 _field2;
    CDStruct_a734b2e2 _field3;
    int _field4[4];
};

union data_t {
    char buf[8];
    struct a8 align_;
};

#pragma mark Typedef'd Unions

typedef union {
    struct {
        struct _GLKVector3 _field1;
        struct _GLKVector3 _field2;
        struct _GLKVector3 _field3;
        struct _GLKVector3 _field4;
    } _field1;
    float _field2[12];
} CDUnion_c755e54d;

typedef union {
    struct dummy_type dummy_;
    int data_;
} CDUnion_1bb239ac;

typedef union {
    struct dummy_type dummy_;
    long long data_;
} CDUnion_019de37f;

typedef union {
    struct {
        union _GLKVector3 _field1;
        union _GLKVector3 _field2;
        union _GLKVector3 _field3;
        union _GLKVector3 _field4;
    } _field1;
    float _field2[12];
} CDUnion_0bf14acb;

