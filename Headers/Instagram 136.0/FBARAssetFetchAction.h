//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBARAssetModel, FBARAssetsManagerImpl, FBAREffectLoggingInfo, FBARRemoteAssetModel, NSFileManager, NSMutableArray, NSURL;
@protocol FBARAssetFetchActionDelegate, FBARAssetsDownloading, FBARAssetsManagerLogging, FBARAssetsStoring, FBCancelable, FBFileUnarchiving, OS_dispatch_queue;

@interface FBARAssetFetchAction : NSObject
{
    unsigned long long _instanceIdentifier;
    NSObject<OS_dispatch_queue> *_processingQueue;
    FBARAssetsManagerImpl *_weakAssetsManager;
    id <FBARAssetsDownloading> _downloader;
    id <FBARAssetsStoring> _storage;
    id <FBFileUnarchiving> _fileUnarchiver;
    NSURL *_unarchivingTemporaryCacheURL;
    NSFileManager *_fileManager;
    id <FBARAssetsManagerLogging> _logger;
    FBARRemoteAssetModel *_remoteAssetModel;
    FBAREffectLoggingInfo *_loggingInfo;
    long long _downloadPriority;
    struct mutex _unsafeVariablesMutex;
    NSMutableArray *_unsafeRequests;
    _Bool _unsafeFetchFinished;
    id <FBCancelable> _unsafeDownloadCancelable;
    id <FBARAssetFetchActionDelegate> _delegate;
}

@property(nonatomic) __weak id <FBARAssetFetchActionDelegate> delegate; // @synthesize delegate=_delegate;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_logDidFailToMoveAssetIntoStorageWithFailureReason:(id)arg1;
- (void)_logDidSuccessfullyMoveAssetIntoStorage;
- (void)_logWillMoveAssetIntoStorage;
- (void)_logDidFailToUnarchiveAssetWithFailureReason:(id)arg1;
- (void)_logDidSuccessfullyUnarchiveAsset;
- (void)_logWillUnarchiveAsset;
- (void)_logDidFailToDownloadAssetWithFailureReason:(id)arg1;
- (void)_logDidSuccessfullyDownloadAssetWithDownloadedBytes:(unsigned long long)arg1;
- (void)_logWillDownloadAsset;
- (void)_logDidCheckAssetExistenceWithHit:(_Bool)arg1;
- (void)_logWillCheckAssetExistence;
- (void)_notifyFetchCanceledWithInFlightDownload:(_Bool)arg1;
- (void)_notifyFetchFailureWithError:(id)arg1;
- (void)_notifyFetchSuccess;
- (void)_notifyFetchStart;
- (_Bool)_markFetchFinished;
- (_Bool)_isFetchFinished;
- (void)_cancelFetchRequest:(id)arg1;
- (void)_moveCompletedWithStoredAssetFileResource:(id)arg1 moveError:(id)arg2 downloadedBytes:(unsigned long long)arg3;
- (_Bool)_ensureMoveSuccessWithStoredAssetFileResource:(id)arg1 moveError:(id)arg2;
- (void)_moveAssetIntoStorageFromUnarchivedFileResource:(id)arg1 downloadedBytes:(unsigned long long)arg2;
- (id)_ensureUnarchivedForDownloadedFileResource:(id)arg1;
- (unsigned long long)_downloadedBytesForDownloadedFileResource:(id)arg1;
- (id)_sanitizeDownloadedFileResource:(id)arg1 remoteAssetModel:(id)arg2 downloadedBytes:(unsigned long long)arg3;
- (void)_downloadCompletedWithDownloadedFileResource:(id)arg1 downloadError:(id)arg2 remoteAssetModel:(id)arg3;
- (void)_ensureNotDuplicateCompletionWithDownloadedFileResource:(id)arg1 downloadedBytes:(unsigned long long)arg2 duplicateStoredFileResource:(id)arg3 duplicateFetchCheckError:(id)arg4 remoteAssetModel:(id)arg5;
- (void)_ensureNotDuplicateWithDownloadedFileResource:(id)arg1 downloadedBytes:(unsigned long long)arg2 remoteAssetModel:(id)arg3;
- (_Bool)_notifyAboutDownloadStatusWithDownloadedBytes:(unsigned long long)arg1 failureReasonIfAny:(id)arg2;
- (void)_reportDownloadProgress:(double)arg1;
- (void)_downloadAsset;
- (void)_fetchAssetFileResourceFromStorageCompletedWithStoredFileResource:(id)arg1 fetchError:(id)arg2;
- (void)_fetchAssetFileResourceFromStorage;
- (void)_execute;
- (void)_enumerateFetchRequestsUsingBlock:(CDUnknownBlockType)arg1;
- (id)fetchAssetForRemoteAssetModel:(id)arg1 downloadPriority:(long long)arg2 loggingInfo:(id)arg3 callbackQueue:(id)arg4 progressBlock:(CDUnknownBlockType)arg5 completionBlock:(CDUnknownBlockType)arg6;
@property(readonly, copy, nonatomic) FBARAssetModel *assetModel;
- (id)initWithInstanceIdentifier:(unsigned long long)arg1 remoteAssetModel:(id)arg2 loggingInfo:(id)arg3 processingQueue:(id)arg4 dowloaderProvider:(id)arg5 storageProvider:(id)arg6 fileUnarchiverProvider:(id)arg7 unarchivingTemporaryCacheURL:(id)arg8 fileManager:(id)arg9 assetsManager:(id)arg10 logger:(id)arg11;

@end

