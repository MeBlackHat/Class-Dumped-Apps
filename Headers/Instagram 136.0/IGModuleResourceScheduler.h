//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <FBSharedFramework/IGBaseNetworking-Protocol.h>
#import <FBSharedFramework/IGModuleResourceGraphDelegate-Protocol.h>
#import <FBSharedFramework/IGNetworkLayer-Protocol.h>
#import <FBSharedFramework/IGResourceOperationStateListener-Protocol.h>
#import <FBSharedFramework/IGResourceScheduler-Protocol.h>
#import <FBSharedFramework/IGSchedulerRequestTaskDelegate-Protocol.h>
#import <FBSharedFramework/IGSchedulerRequestTokenDelegate-Protocol.h>
#import <FBSharedFramework/IGUserSessionEndingObject-Protocol.h>

@class IGMediaCoordinationCoverageLogger, IGModuleResourceGraph, IGSchedulerAsyncExecutor, NSMutableArray, NSMutableOrderedSet, NSString;
@protocol IGBaseNetworking, IGExecutionOperationManaging, IGNetworkLayer, IGResourceSchedulerProcessorStateListenerAnnouncer, IGResourceSchedulerStateListenerAnnouncer;

@interface IGModuleResourceScheduler : NSObject <IGModuleResourceGraphDelegate, IGResourceOperationStateListener, IGSchedulerRequestTokenDelegate, IGSchedulerRequestTaskDelegate, IGResourceScheduler, IGUserSessionEndingObject, IGBaseNetworking, IGNetworkLayer>
{
    IGModuleResourceGraph *_graph;
    IGSchedulerAsyncExecutor *_executor;
    IGMediaCoordinationCoverageLogger *_coverageLogger;
    NSMutableArray *_operationsQueue;
    id <IGResourceSchedulerStateListenerAnnouncer> _announcer;
    id <IGResourceSchedulerProcessorStateListenerAnnouncer> _queueProcessorAnnouncer;
    NSMutableOrderedSet *_allOperations;
    id <IGExecutionOperationManaging> _executionSet;
    id <IGBaseNetworking> _networker;
    id <IGNetworkLayer> _nextLayer;
    CDStruct_9924149c _schedulerConfiguration;
}

+ (void)configureSchedulerWithModuleResourceGraph:(id)arg1 nextLayer:(id)arg2 baseNetworker:(id)arg3 executor:(id)arg4 coverageLogger:(id)arg5 schedulerConfiguration:(CDStruct_9924149c)arg6;
+ (id)sharedScheduler;
- (void).cxx_destruct;
- (void)elevatePrivlagesForSchedulerTask:(id)arg1;
- (id)startRequest:(id)arg1 policy:(id)arg2 callbacks:(id)arg3;
- (void)cancelAllRequestsWithCancellationIdentifier:(id)arg1;
- (id)startRequest:(id)arg1 policy:(id)arg2 callbackQueue:(id)arg3 retryHandler:(CDUnknownBlockType)arg4 cachedResponseHandler:(CDUnknownBlockType)arg5 startHandler:(CDUnknownBlockType)arg6 bytesSentHandler:(CDUnknownBlockType)arg7 responseReceivedHandler:(CDUnknownBlockType)arg8 bytesReceivedHandler:(CDUnknownBlockType)arg9 successHandler:(CDUnknownBlockType)arg10 failureHandler:(CDUnknownBlockType)arg11;
- (id)startOffProcessRequest:(id)arg1 policy:(id)arg2 requestInfo:(id)arg3;
- (void)userSessionWillEnd;
- (void)elevatePrivlagesForSchedulerToken:(id)arg1;
- (void)operation:(id)arg1 didTransitionFrom:(id)arg2 to:(id)arg3;
- (void)moduleResourceGraph:(id)arg1 didUpdateStateOfModule:(id)arg2 change:(unsigned long long)arg3;
- (void)moduleResourceGraph:(id)arg1 moduleDidChangeFrom:(id)arg2 to:(id)arg3;
- (void)_elevatePrivlagesForOperationIfNeeded:(id)arg1;
- (void)_elevatePrivilagesForOperation:(id)arg1;
- (void)_startOperation:(id)arg1 inQueue:(id)arg2 usingExecutionSet:(id)arg3;
- (void)_startQueuedOperation:(id)arg1 executionSet:(id)arg2;
- (void)_drainSingularQueueForSnapshot:(id)arg1;
- (void)_scheduleDrain;
- (void)_scoredBaseScheduleDrain:(id)arg1;
- (void)_sortAllOperationsWithOnscreenModule:(id)arg1;
- (void)_graphUpdated;
- (void)_addOperationToScheduler:(id)arg1 graph:(id)arg2;
- (void)removeQueueProcessorListener:(id)arg1;
- (void)addQueueProcessorListener:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)invalidate;
- (void)scheduleOperation:(id)arg1;
- (id)initWithModuleResourceGraph:(id)arg1 executor:(id)arg2 coverageLogger:(id)arg3 nextLayer:(id)arg4 baseNetworker:(id)arg5 schedulerConfiguration:(CDStruct_9924149c)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

