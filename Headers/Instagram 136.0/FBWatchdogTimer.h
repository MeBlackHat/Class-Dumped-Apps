//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FBWatchdogTimerConfiguration, NSSet, NSString, NSThread;
@protocol FBWatchdogExpiryHandling;

@interface FBWatchdogTimer : NSObject
{
    NSThread *_watchdogThread;
    struct __CFRunLoopObserver *_keepaliveObserver;
    struct __CFRunLoopObserver *_firstRunloopPassObserver;
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _lastIdleEndTime
    // Error parsing type: {atomic<bool>="__a_"AB}, name: _idle
    // Error parsing type: {atomic<bool>="__a_"AB}, name: _firstRunLoopIteration
    // Error parsing type: {atomic<double>="__a_"Ad}, name: _largestTimeoutExpired
    // Error parsing type: {atomic<unsigned long>="__a_"AQ}, name: _currentRunLoopActivity
    NSSet *_timeouts;
    double _timerWakeupInterval;
    NSString *_userID;
    NSString *_deviceID;
    // Error parsing type: {atomic<bool>="__a_"AB}, name: _suspendedForExceptionHandler
    id <FBWatchdogExpiryHandling> _watchdogExpiryHandler;
    _Bool _enabled;
    _Bool _forceWatchdogTimerForTesting;
    FBWatchdogTimerConfiguration *_configuration;
    double _watchdogThreadCancelInterval;
    struct __CFRunLoop *_runLoop;
}

+ (id)mainThreadWatchdog;
+ (void)createMainThreadWatchdogWithConfiguration:(id)arg1 watchdogExpiryHandler:(id)arg2;
@property(nonatomic) struct __CFRunLoop *runLoop; // @synthesize runLoop=_runLoop;
@property(nonatomic) double watchdogThreadCancelInterval; // @synthesize watchdogThreadCancelInterval=_watchdogThreadCancelInterval;
@property(nonatomic) _Bool forceWatchdogTimerForTesting; // @synthesize forceWatchdogTimerForTesting=_forceWatchdogTimerForTesting;
@property(copy, nonatomic) FBWatchdogTimerConfiguration *configuration; // @synthesize configuration=_configuration;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)_stopMonitoringThreads;
- (void)_startMonitoringThreads;
- (void)_watchdogThreadMethod;
- (void)_watchdogMethod;
- (void)_stopObservingNotifications;
- (void)_startObservingNotifications;
- (void)_onResignActive;
- (void)_stopWatchdog;
- (void)_startWatchdog;
- (id)description;
- (void)dealloc;
- (void)_calculateTimerWakeupInterval;
- (void)_processTimeouts;
- (id)lastStallTraceID;
- (id)initWithConfiguration:(id)arg1 watchdogExpiryHandler:(id)arg2;

@end

