//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "MTKViewDelegate-Protocol.h"

@class IESLiveMTAssetReaderOutput, IESLiveMTGiftTransformModel, IESLiveMTVideoGiftResourceModel, MTKView, NSString;
@protocol MTLBuffer, MTLCommandQueue, MTLRenderPipelineState, MTLTexture;

@interface IESLiveMTMetalRenderer : NSObject <MTKViewDelegate>
{
    _Bool _needRecordAverageFPS;
    _Bool _enableRecordAverageFPS;
    CDUnknownBlockType _recordFPSBlock;
    MTKView *_mtkView;
    IESLiveMTAssetReaderOutput *_output;
    struct __CVMetalTextureCache *_textureCache;
    IESLiveMTVideoGiftResourceModel *_resourceModel;
    IESLiveMTGiftTransformModel *_transformModel;
    id <MTLRenderPipelineState> _pipelineState;
    id <MTLCommandQueue> _commandQueue;
    id <MTLTexture> _texture;
    id <MTLBuffer> _vertices;
    id <MTLBuffer> _convertMatrix;
    id <MTLBuffer> _mvpMatrix;
    unsigned long long _numVertices;
    CDUnknownBlockType _completion;
    id <MTLBuffer> _renderRatio;
    double _videoPlayTime;
    double _lastFrameTime;
    long long _playedFrames;
    // Error parsing type: , name: _viewportSize
}

@property(nonatomic) _Bool enableRecordAverageFPS; // @synthesize enableRecordAverageFPS=_enableRecordAverageFPS;
@property(nonatomic) _Bool needRecordAverageFPS; // @synthesize needRecordAverageFPS=_needRecordAverageFPS;
@property(nonatomic) long long playedFrames; // @synthesize playedFrames=_playedFrames;
@property(nonatomic) double lastFrameTime; // @synthesize lastFrameTime=_lastFrameTime;
@property(nonatomic) double videoPlayTime; // @synthesize videoPlayTime=_videoPlayTime;
@property(retain, nonatomic) id <MTLBuffer> renderRatio; // @synthesize renderRatio=_renderRatio;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(nonatomic) unsigned long long numVertices; // @synthesize numVertices=_numVertices;
@property(retain, nonatomic) id <MTLBuffer> mvpMatrix; // @synthesize mvpMatrix=_mvpMatrix;
@property(retain, nonatomic) id <MTLBuffer> convertMatrix; // @synthesize convertMatrix=_convertMatrix;
@property(retain, nonatomic) id <MTLBuffer> vertices; // @synthesize vertices=_vertices;
@property(retain, nonatomic) id <MTLTexture> texture; // @synthesize texture=_texture;
@property(retain, nonatomic) id <MTLCommandQueue> commandQueue; // @synthesize commandQueue=_commandQueue;
@property(retain, nonatomic) id <MTLRenderPipelineState> pipelineState; // @synthesize pipelineState=_pipelineState;
// Error parsing type for property viewportSize:
// Property attributes: T,N,V_viewportSize

@property(retain, nonatomic) IESLiveMTGiftTransformModel *transformModel; // @synthesize transformModel=_transformModel;
@property(retain, nonatomic) IESLiveMTVideoGiftResourceModel *resourceModel; // @synthesize resourceModel=_resourceModel;
@property(nonatomic) struct __CVMetalTextureCache *textureCache; // @synthesize textureCache=_textureCache;
@property(retain, nonatomic) IESLiveMTAssetReaderOutput *output; // @synthesize output=_output;
@property(nonatomic) __weak MTKView *mtkView; // @synthesize mtkView=_mtkView;
@property(copy, nonatomic) CDUnknownBlockType recordFPSBlock; // @synthesize recordFPSBlock=_recordFPSBlock;
- (void).cxx_destruct;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)recordFPSIfNeededWithBlock:(CDUnknownBlockType)arg1;
- (void)drawInMTKView:(id)arg1;
- (void)mtkView:(id)arg1 drawableSizeWillChange:(struct CGSize)arg2;
- (void)setupPipeline;
- (void)setupVertex;
- (void)setupMatrix;
- (void)cleanTextureCache;
- (void)createTextureCacheIfNeeded;
- (void)updateMVPMatrix;
- (void)setup;
- (void)onVideoStartPlay;
- (void)renderOutput:(id)arg1 resourceModel:(id)arg2 transformModel:(id)arg3 needRecordAverageFPS:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)flush;
- (id)initWithMetalKitView:(id)arg1;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

