//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "TikTokKidsFeedPreloadManagerDelegate-Protocol.h"
#import "TikTokKidsUserMessage-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class AWEListDataController, AWEUILoadingView, NSDictionary, NSMutableDictionary, NSString, TikTokKidsFeedPreloadManager, UITableView, UITableViewCell;
@protocol TikTokKidsFeedTableViewCellProtocol;

@interface TikTokKidsFeedTableViewController : UIViewController <TikTokKidsFeedPreloadManagerDelegate, TikTokKidsUserMessage, UITableViewDelegate, UITableViewDataSource, UIGestureRecognizerDelegate>
{
    NSMutableDictionary *_videoDownloadCompletedDict;
    _Bool _hasFirstFetched;
    _Bool _hasRefreshedFlag;
    _Bool _hasShowLastView;
    _Bool _reuseUnreachedDataForCurrentRefresh;
    _Bool _isScrolling;
    _Bool _scrollEnabled;
    _Bool _shouldShowLoadingView;
    _Bool _needPreFetch;
    UITableView *_tableView;
    AWEListDataController *_dataController;
    CDUnknownBlockType _didEndDisplayAwemeModel;
    NSDictionary *_enterTrackerInfo;
    long long _playState;
    CDUnknownBlockType _animatedRefreshCompletion;
    double _feedRequestTime;
    long long _willPlayIndex;
    long long _currentPlayIndex;
    unsigned long long _maxReachedIndex;
    AWEUILoadingView *_loadingView;
    long long _didEndPlayIndex;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_preloadedCell;
    TikTokKidsFeedPreloadManager *_preloadManager;
    long long _videoIndex;
    double _startTimestamp;
    NSString *_referString;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_currentCell;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_willDisplayCell;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_beforeTrackingCell;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_preloadDisplayCell;
    double _cellPreloadDelay;
    long long _scheduledPreloadIndex;
    UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *_willDisplayPreloadedCell;
}

- (void).cxx_destruct;
@property(nonatomic) __weak UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *willDisplayPreloadedCell; // @synthesize willDisplayPreloadedCell=_willDisplayPreloadedCell;
@property(nonatomic) long long scheduledPreloadIndex; // @synthesize scheduledPreloadIndex=_scheduledPreloadIndex;
@property(nonatomic) double cellPreloadDelay; // @synthesize cellPreloadDelay=_cellPreloadDelay;
@property(retain, nonatomic) NSMutableDictionary *videoDownloadCompletedDict; // @synthesize videoDownloadCompletedDict=_videoDownloadCompletedDict;
@property(nonatomic) _Bool needPreFetch; // @synthesize needPreFetch=_needPreFetch;
@property(nonatomic) __weak UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *preloadDisplayCell; // @synthesize preloadDisplayCell=_preloadDisplayCell;
@property(nonatomic) __weak UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *beforeTrackingCell; // @synthesize beforeTrackingCell=_beforeTrackingCell;
@property(nonatomic) __weak UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *willDisplayCell; // @synthesize willDisplayCell=_willDisplayCell;
@property(nonatomic) __weak UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *currentCell; // @synthesize currentCell=_currentCell;
@property(nonatomic) _Bool shouldShowLoadingView; // @synthesize shouldShowLoadingView=_shouldShowLoadingView;
@property(copy, nonatomic) NSString *referString; // @synthesize referString=_referString;
@property(nonatomic) double startTimestamp; // @synthesize startTimestamp=_startTimestamp;
@property(nonatomic) _Bool scrollEnabled; // @synthesize scrollEnabled=_scrollEnabled;
@property(nonatomic) long long videoIndex; // @synthesize videoIndex=_videoIndex;
@property(retain, nonatomic) TikTokKidsFeedPreloadManager *preloadManager; // @synthesize preloadManager=_preloadManager;
@property(retain, nonatomic) UITableViewCell<TikTokKidsFeedTableViewCellProtocol> *preloadedCell; // @synthesize preloadedCell=_preloadedCell;
@property(nonatomic) _Bool isScrolling; // @synthesize isScrolling=_isScrolling;
@property(nonatomic) long long didEndPlayIndex; // @synthesize didEndPlayIndex=_didEndPlayIndex;
@property(retain, nonatomic) AWEUILoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(nonatomic) _Bool reuseUnreachedDataForCurrentRefresh; // @synthesize reuseUnreachedDataForCurrentRefresh=_reuseUnreachedDataForCurrentRefresh;
@property(nonatomic) unsigned long long maxReachedIndex; // @synthesize maxReachedIndex=_maxReachedIndex;
@property(nonatomic) long long currentPlayIndex; // @synthesize currentPlayIndex=_currentPlayIndex;
@property(nonatomic) long long willPlayIndex; // @synthesize willPlayIndex=_willPlayIndex;
@property(nonatomic) _Bool hasShowLastView; // @synthesize hasShowLastView=_hasShowLastView;
@property(nonatomic) _Bool hasRefreshedFlag; // @synthesize hasRefreshedFlag=_hasRefreshedFlag;
@property(nonatomic) double feedRequestTime; // @synthesize feedRequestTime=_feedRequestTime;
@property(copy, nonatomic) CDUnknownBlockType animatedRefreshCompletion; // @synthesize animatedRefreshCompletion=_animatedRefreshCompletion;
@property(nonatomic) long long playState; // @synthesize playState=_playState;
@property(copy, nonatomic) NSDictionary *enterTrackerInfo; // @synthesize enterTrackerInfo=_enterTrackerInfo;
@property(nonatomic) _Bool hasFirstFetched; // @synthesize hasFirstFetched=_hasFirstFetched;
@property(copy, nonatomic) CDUnknownBlockType didEndDisplayAwemeModel; // @synthesize didEndDisplayAwemeModel=_didEndDisplayAwemeModel;
@property(retain, nonatomic) AWEListDataController *dataController; // @synthesize dataController=_dataController;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
- (void)_hideBadNetworkingState;
- (void)_showBadNetworkingState;
- (id)aweui_emptyPageConfigForState:(unsigned long long)arg1;
- (void)checkDeceleratingScrollView:(id)arg1;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_onScrollDidEnd;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)playVideoOnScrollDidEnd;
- (void)playVideo:(id)arg1;
- (double)cellHeight;
- (void)configureCell:(id)arg1 withModel:(id)arg2 atIndexPath:(id)arg3;
- (id)cellForRowAtIndexPath:(id)arg1;
- (void)tableView:(id)arg1 didEndDisplayingCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)dequeueAndConfigureCellForRowWithModel:(id)arg1 atIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)didFinishLogout;
- (void)removeNotifications;
- (void)addNotifications;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)handleConnectionChanged:(id)arg1;
- (void)didReceiveTikTokKidsPlayVideoViewControllerVideoRequestResponseNotification:(id)arg1;
- (void)didReceiveAwemeBaseViewControllerClickPlayNotification:(id)arg1;
- (void)forceRefreshWithCompletion:(CDUnknownBlockType)arg1;
- (void)reload;
- (_Bool)canRefresh;
- (void)initialFetch;
- (void)loadMore;
- (void)refreshDataController:(CDUnknownBlockType)arg1;
- (void)refreshWithoutAnimation;
- (_Bool)checkForPreloadFeed;
- (void)prefetchFeedListIfNeeded:(long long)arg1;
- (void)refresh:(_Bool)arg1;
- (void)triggerToRefreshForcible:(_Bool)arg1;
- (void)loadmoreAnimation;
- (void)animatedRefresh:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)animatedRefreshByReusingUnreachedDataWithCompletion:(CDUnknownBlockType)arg1;
- (void)animatedRefreshWithCompletion:(CDUnknownBlockType)arg1;
- (void)onReloadDataSource;
- (void)addRefreshHeaderAndFooter;
- (void)triggerToRefreshIfNeeded;
- (void)_trackStayTime;
- (void)logFeedListLoadedTimeWithList:(id)arg1 error:(id)arg2;
- (void)beginFirstVideoUIMonitor;
- (void)trackEventWithFeedResponseWhenLoadMoreWithError:(id)arg1 videoNum:(long long)arg2 imageNum:(long long)arg3;
- (void)trackEventWithFeedRequestWhenLoadMore;
- (void)trackEventWithFeedResponseWithError:(id)arg1 responseDuration:(double)arg2 videoNum:(long long)arg3 imageNum:(long long)arg4 isFirstFetchResponse:(_Bool)arg5 isListFromPreloadFeedsCache:(_Bool)arg6;
- (void)trackEventWithFeedRequestWithPreloadFeedTimeInterval:(double)arg1 isFirstFetch:(_Bool)arg2;
- (void)trackEventVideoShowWithModel:(id)arg1;
- (void)pause;
- (void)stop;
- (void)play;
- (void)playIfActive;
- (_Bool)isActive;
- (long long)findFirstItemWithID:(id)arg1;
- (_Bool)currentTabIsTop;
- (id)currentAwemeID;
- (id)currentAweme;
- (long long)currentIndex;
- (long long)numberOfRows;
- (id)getModelSafelyForRow:(long long)arg1;
- (void)resetFeedCount;
- (void)deleteAwemeWithIDs:(id)arg1;
- (void)handleCleanAllCaches;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)dealloc;
- (id)initWithDataController:(id)arg1;
- (void)cancelCellPreloading;
- (void)scheduleCellPreloading;
- (void)preloadNextCellIfNeeded;
- (id)fetchPreloadedCellForRowWithModel:(id)arg1 atIndexPath:(id)arg2;
- (_Bool)isCellPreloadingEnabled;
- (void)prepareForDisplayWithCell:(id)arg1;
- (void)setupCellPreload;
- (void)preloadCoverImageWithModel:(id)arg1;
- (void)cacheExistsWithModel:(id)arg1;
- (void)preloadCoverImageWithIndexPath:(id)arg1;
- (void)cancelVideoPreload;
- (void)setupPreloadManager;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

