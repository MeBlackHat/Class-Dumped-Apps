//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DownloadGlobalParameters, NSFileManager, NSLock, NSMutableDictionary, NSString, TTDownloadStorageCenter, TTDownloadTncConfigManager;

@interface TTDownloadManager : NSObject
{
    _Bool _isHadLoadConfigFromStorage;
    _Bool _isTryRestoreTaskWhenRestart;
    short _downloadingTaskMax;
    NSString *_cachePath;
    NSString *_appSupportPath;
    CDUnknownBlockType _bgCompletedHandler;
    CDUnknownBlockType _onCompletionHandler;
    CDUnknownBlockType _eventBlock;
    DownloadGlobalParameters *_downloadGlobalParameter;
    NSMutableDictionary *_downloadTaskConfigDic;
    NSMutableDictionary *_downloadingTaskDic;
    NSMutableDictionary *_bgIdentifierDic;
    NSMutableDictionary *_checkCancelTaskDic;
    NSLock *_checkCancelTaskDicLock;
    NSLock *_bgIdentifierDicLock;
    NSLock *_downloadTaskConfigDicLock;
    NSLock *_downloadingTaskDicLock;
    NSLock *_loadConfigFromStorageLock;
    TTDownloadStorageCenter *_downloadStorageCenter;
    NSFileManager *_fileManager;
    long long _previousNetStatus;
    TTDownloadTncConfigManager *_tncConfigManager;
}

+ (_Bool)createNewFileAtPath:(id)arg1 error:(id *)arg2;
+ (id)calculateUrlMd5:(id)arg1;
+ (long long)getHadDownloadedLength:(id)arg1 isReadLastSubSlice:(_Bool)arg2;
+ (_Bool)isTaskConfigValid:(id)arg1;
+ (id)parseResumeData:(id)arg1;
+ (_Bool)createDir:(id)arg1;
+ (_Bool)isArrayValid:(id)arg1;
+ (void)load;
+ (long long)getCurrentNetType;
+ (_Bool)isMobileNet;
+ (_Bool)isNetworkUnreachable;
+ (_Bool)isWifi;
+ (_Bool)addSkipBackupAttributeToItemAtPath:(id)arg1;
+ (_Bool)moveItemAtPath:(id)arg1 toPath:(id)arg2 overwrite:(_Bool)arg3;
+ (long long)freeDiskSpace;
+ (id)shareInstance;
@property(retain, nonatomic) TTDownloadTncConfigManager *tncConfigManager; // @synthesize tncConfigManager=_tncConfigManager;
@property _Bool isTryRestoreTaskWhenRestart; // @synthesize isTryRestoreTaskWhenRestart=_isTryRestoreTaskWhenRestart;
@property long long previousNetStatus; // @synthesize previousNetStatus=_previousNetStatus;
@property(retain, nonatomic) NSFileManager *fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) TTDownloadStorageCenter *downloadStorageCenter; // @synthesize downloadStorageCenter=_downloadStorageCenter;
@property(retain) NSLock *loadConfigFromStorageLock; // @synthesize loadConfigFromStorageLock=_loadConfigFromStorageLock;
@property(retain) NSLock *downloadingTaskDicLock; // @synthesize downloadingTaskDicLock=_downloadingTaskDicLock;
@property(retain) NSLock *downloadTaskConfigDicLock; // @synthesize downloadTaskConfigDicLock=_downloadTaskConfigDicLock;
@property(retain) NSLock *bgIdentifierDicLock; // @synthesize bgIdentifierDicLock=_bgIdentifierDicLock;
@property(retain) NSLock *checkCancelTaskDicLock; // @synthesize checkCancelTaskDicLock=_checkCancelTaskDicLock;
@property(retain) NSMutableDictionary *checkCancelTaskDic; // @synthesize checkCancelTaskDic=_checkCancelTaskDic;
@property(retain) NSMutableDictionary *bgIdentifierDic; // @synthesize bgIdentifierDic=_bgIdentifierDic;
@property(retain) NSMutableDictionary *downloadingTaskDic; // @synthesize downloadingTaskDic=_downloadingTaskDic;
@property(retain) NSMutableDictionary *downloadTaskConfigDic; // @synthesize downloadTaskConfigDic=_downloadTaskConfigDic;
@property short downloadingTaskMax; // @synthesize downloadingTaskMax=_downloadingTaskMax;
@property(retain) DownloadGlobalParameters *downloadGlobalParameter; // @synthesize downloadGlobalParameter=_downloadGlobalParameter;
@property(copy, nonatomic) CDUnknownBlockType eventBlock; // @synthesize eventBlock=_eventBlock;
@property(copy) CDUnknownBlockType onCompletionHandler; // @synthesize onCompletionHandler=_onCompletionHandler;
@property(copy) CDUnknownBlockType bgCompletedHandler; // @synthesize bgCompletedHandler=_bgCompletedHandler;
@property(copy, nonatomic) NSString *appSupportPath; // @synthesize appSupportPath=_appSupportPath;
@property(copy, nonatomic) NSString *cachePath; // @synthesize cachePath=_cachePath;
@property _Bool isHadLoadConfigFromStorage; // @synthesize isHadLoadConfigFromStorage=_isHadLoadConfigFromStorage;
- (void).cxx_destruct;
- (void)runBgCompletedHandler;
- (_Bool)deleteSubSliceInfo:(id)arg1;
- (_Bool)insertOrUpdateSubSliceInfo:(id)arg1;
- (void)postRestoreResultNotification:(id)arg1;
- (void)restoreTask:(id)arg1 secondUrl:(id)arg2 resultNotification:(CDUnknownBlockType)arg3 progress:(CDUnknownBlockType)arg4;
- (void)restartAppTryRestroreTask;
- (void)appFinishLaunching;
- (void)appReachabilityChanged:(id)arg1;
- (void)tryRestoreTask;
- (_Bool)getTrackModelFromDBForTask:(id)arg1;
- (_Bool)addTrackModelToDB:(id)arg1;
- (void)calculateDownloadSize:(id)arg1 taskConfig:(id)arg2;
- (void)runQueryDownloadInfo:(id)arg1 status:(long long)arg2;
- (_Bool)deleteFile:(id)arg1;
- (_Bool)deleteDownloadFile:(id)arg1 isDeleteDB:(_Bool)arg2 isDeleteMergeFile:(_Bool)arg3 isDeleteSliceFile:(_Bool)arg4;
- (void)runDeleteDownloadFile:(id)arg1;
- (_Bool)updateDownloadTaskConfig:(id)arg1 status:(long long)arg2;
- (_Bool)updateTaskConfigInDicLock:(id)arg1;
- (_Bool)deleteTaskConfigInDicLock:(id)arg1;
- (_Bool)addTaskConfigToDicLock:(id)arg1;
- (id)findTaskConfigInDicLock:(id)arg1;
- (unsigned long long)getDownloadingTaskDicCount;
- (_Bool)updateDownloadingTaskInDicLock:(id)arg1;
- (_Bool)deleteDownloadingTaskInDicLock:(id)arg1;
- (_Bool)addDownloadingTaskToDicLock:(id)arg1;
- (id)findDownloadingTaskInDicLock:(id)arg1;
- (void)clearBgIdentifierDicLock;
- (_Bool)deleteBgIdentifierDicLock:(id)arg1;
- (_Bool)deleteBgIdentifierWithValueLock:(id)arg1;
- (_Bool)addBgIdentifierDicLock:(id)arg1 value:(id)arg2;
- (_Bool)findBgIdentifierDicLock:(id)arg1;
- (_Bool)findCheckCancelTaskDicLock:(id)arg1;
- (_Bool)deleteCheckCancelTaskDicLock:(id)arg1;
- (_Bool)addCheckCancelTaskDicLock:(id)arg1;
- (_Bool)removeDownloadTaskConfig:(id)arg1;
- (_Bool)addDownloadTaskConfig:(id)arg1;
- (_Bool)loadConfigFromStorage;
- (void)checkDownloadTaskConfigDic:(id)arg1;
- (int)startDownloadCommon:(id)arg1 fileName:(id)arg2 md5Value:(id)arg3 urlLists:(id)arg4 isResume:(_Bool)arg5 isUseKey:(_Bool)arg6 progressCallBack:(CDUnknownBlockType)arg7 resultNotificationCallBack:(CDUnknownBlockType)arg8 userParameters:(id)arg9;
- (void)asyncStatusReport:(id)arg1 secondUrl:(id)arg2 status:(long long)arg3 resultBlock:(CDUnknownBlockType)arg4 taskConfig:(id)arg5;
- (short)getDownlodingTaskCountMax;
- (_Bool)setDownlodingTaskCountMax:(short)arg1;
- (void)deleteDownloadWithURL:(id)arg1 resultBlock:(CDUnknownBlockType)arg2;
- (void)cancelDownloadWithURL:(id)arg1 block:(CDUnknownBlockType)arg2;
- (_Bool)setThrottleNetSpeedWithURL:(id)arg1 bytesPerSecond:(long long)arg2;
- (void)queryDownloadInfoWithURL:(id)arg1 downloadInfoBlock:(CDUnknownBlockType)arg2 status:(long long)arg3;
- (int)resumeDownloadWithURL:(id)arg1 isUseKey:(_Bool)arg2 urlLists:(id)arg3 progress:(CDUnknownBlockType)arg4 status:(CDUnknownBlockType)arg5 userParameters:(id)arg6;
- (int)startDownloadWithURL:(id)arg1 isUseKey:(_Bool)arg2 fileName:(id)arg3 md5Value:(id)arg4 urlLists:(id)arg5 progress:(CDUnknownBlockType)arg6 status:(CDUnknownBlockType)arg7 userParameters:(id)arg8;
- (id)getGlobalDownloadParameters;
- (_Bool)setGlobalDownloadParameters:(id)arg1;
- (_Bool)checkInvalidValue:(id)arg1;
- (id)getTncConfig;
- (void)dealloc;
- (id)init;

@end

