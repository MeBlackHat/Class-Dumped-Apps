//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString, NSTimer;
@protocol OnerVideoFrozenStatisticsDelegate;

@interface OnerVideoFrozenStatistics : NSObject
{
    struct Render_TTMutex _mutex;
    _Bool _isStalling;
    _Bool _isActive;
    _Bool _NeedRestByActive;
    NSTimer *_frozenCheckTimer;
    id <OnerVideoFrozenStatisticsDelegate> _videoFrozenStatisticsDelegate;
    NSString *_userID;
    long long _lastTime;
    long long _stallTime;
    long long _stallTimeStrict;
    long long _stallCount;
    long long _stallCountStrict;
    long long _videoState;
    long long _renderCount;
    long long _lastFrozenTime;
}

- (id).cxx_construct;
- (void).cxx_destruct;
@property(nonatomic) long long lastFrozenTime; // @synthesize lastFrozenTime=_lastFrozenTime;
@property(nonatomic) long long renderCount; // @synthesize renderCount=_renderCount;
@property(nonatomic) _Bool NeedRestByActive; // @synthesize NeedRestByActive=_NeedRestByActive;
@property(nonatomic) _Bool isActive; // @synthesize isActive=_isActive;
@property(nonatomic) long long videoState; // @synthesize videoState=_videoState;
@property(nonatomic) _Bool isStalling; // @synthesize isStalling=_isStalling;
@property(nonatomic) long long stallCountStrict; // @synthesize stallCountStrict=_stallCountStrict;
@property(nonatomic) long long stallCount; // @synthesize stallCount=_stallCount;
@property(nonatomic) long long stallTimeStrict; // @synthesize stallTimeStrict=_stallTimeStrict;
@property(nonatomic) long long stallTime; // @synthesize stallTime=_stallTime;
@property(nonatomic) long long lastTime; // @synthesize lastTime=_lastTime;
@property(retain, nonatomic) NSString *userID; // @synthesize userID=_userID;
@property(nonatomic) __weak id <OnerVideoFrozenStatisticsDelegate> videoFrozenStatisticsDelegate; // @synthesize videoFrozenStatisticsDelegate=_videoFrozenStatisticsDelegate;
@property(retain, nonatomic) NSTimer *frozenCheckTimer; // @synthesize frozenCheckTimer=_frozenCheckTimer;
- (void)updateFronzenStatistics:(long long)arg1 ElapseTime:(long long)arg2;
- (void)restStatistics:(id)arg1;
- (void)onTimer;
- (void)onVideoFrameRender;
- (void)updateStatusWhenVideoFrameRender;
- (void)stopStatistics;
- (void)startStatistics;
- (void)resetValue;
- (void)appBecomeActive;
- (void)appBecomeInActive;
- (void)dealloc;
- (id)initWithVideoFrozenStatisticsProtocol:(id)arg1 Uid:(id)arg2;

@end

