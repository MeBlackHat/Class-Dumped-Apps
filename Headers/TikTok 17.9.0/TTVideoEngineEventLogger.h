//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TTVideoEngineEventLoggerProtocol-Protocol.h"
#import "TTVideoEnginePerformancePoint-Protocol.h"

@class NSArray, NSMutableArray, NSMutableDictionary, NSString, TTVideoEngineEvent, TTVideoEngineEventBase;
@protocol TTVideoEngineEventLoggerDelegate, TTVideoEngineEventOneErrorProtocol, TTVideoEngineEventOneEventProtocol, TTVideoEngineEventOneOperaProtocol;

@interface TTVideoEngineEventLogger : NSObject <TTVideoEnginePerformancePoint, TTVideoEngineEventLoggerProtocol>
{
    _Bool _performancePointSwitch;
    _Bool _isLocal;
    _Bool _isLooping;
    _Bool _leaveWithoutPlay;
    id <TTVideoEngineEventLoggerDelegate> _delegate;
    NSString *_vid;
    NSArray *_vu;
    long long _loopCount;
    long long _loopway;
    double _accumulatedStalledTime;
    long long _seekCount;
    TTVideoEngineEvent *_event;
    TTVideoEngineEventBase *_eventBase;
    id <TTVideoEngineEventOneEventProtocol> _eventOneEvent;
    id <TTVideoEngineEventOneErrorProtocol> _eventOneError;
    id <TTVideoEngineEventOneOperaProtocol> _eventOneOpera;
    long long _exitTime;
    NSMutableArray *_retryFetchErrorInfo;
    NSMutableArray *_firstDNSErrorInfo;
    NSMutableArray *_errorInfo;
    NSArray *_urlArray;
    NSMutableDictionary *_mainError;
    long long _stallStartTs;
    long long _pauseStartTs;
    long long _seekStartTs;
    NSString *_apiString;
    long long _apiver;
    NSString *_auth;
    NSMutableArray *_cpuUsages;
    NSMutableArray *_memUsages;
    NSString *_logInfo;
    long long _dnsMode;
    long long _mAccumVPS;
    long long _mAccumVDS;
    long long _leaveBlockT;
    long long _loggerState;
    long long _logVersion;
    NSMutableDictionary *_metricsInfo;
}

@property(retain, nonatomic) NSMutableDictionary *metricsInfo; // @synthesize metricsInfo=_metricsInfo;
@property(nonatomic) long long logVersion; // @synthesize logVersion=_logVersion;
@property(nonatomic) long long loggerState; // @synthesize loggerState=_loggerState;
@property(nonatomic) long long leaveBlockT; // @synthesize leaveBlockT=_leaveBlockT;
@property(nonatomic) long long mAccumVDS; // @synthesize mAccumVDS=_mAccumVDS;
@property(nonatomic) long long mAccumVPS; // @synthesize mAccumVPS=_mAccumVPS;
@property(nonatomic) long long dnsMode; // @synthesize dnsMode=_dnsMode;
@property(copy, nonatomic) NSString *logInfo; // @synthesize logInfo=_logInfo;
@property(retain, nonatomic) NSMutableArray *memUsages; // @synthesize memUsages=_memUsages;
@property(retain, nonatomic) NSMutableArray *cpuUsages; // @synthesize cpuUsages=_cpuUsages;
@property(copy, nonatomic) NSString *auth; // @synthesize auth=_auth;
@property(nonatomic) long long apiver; // @synthesize apiver=_apiver;
@property(copy, nonatomic) NSString *apiString; // @synthesize apiString=_apiString;
@property(nonatomic) long long seekStartTs; // @synthesize seekStartTs=_seekStartTs;
@property(nonatomic) long long pauseStartTs; // @synthesize pauseStartTs=_pauseStartTs;
@property(nonatomic) long long stallStartTs; // @synthesize stallStartTs=_stallStartTs;
@property(retain, nonatomic) NSMutableDictionary *mainError; // @synthesize mainError=_mainError;
@property(copy, nonatomic) NSArray *urlArray; // @synthesize urlArray=_urlArray;
@property(retain, nonatomic) NSMutableArray *errorInfo; // @synthesize errorInfo=_errorInfo;
@property(retain, nonatomic) NSMutableArray *firstDNSErrorInfo; // @synthesize firstDNSErrorInfo=_firstDNSErrorInfo;
@property(retain, nonatomic) NSMutableArray *retryFetchErrorInfo; // @synthesize retryFetchErrorInfo=_retryFetchErrorInfo;
@property(nonatomic) long long exitTime; // @synthesize exitTime=_exitTime;
@property(nonatomic) _Bool leaveWithoutPlay; // @synthesize leaveWithoutPlay=_leaveWithoutPlay;
@property(retain, nonatomic) id <TTVideoEngineEventOneOperaProtocol> eventOneOpera; // @synthesize eventOneOpera=_eventOneOpera;
@property(retain, nonatomic) id <TTVideoEngineEventOneErrorProtocol> eventOneError; // @synthesize eventOneError=_eventOneError;
@property(retain, nonatomic) id <TTVideoEngineEventOneEventProtocol> eventOneEvent; // @synthesize eventOneEvent=_eventOneEvent;
@property(retain, nonatomic) TTVideoEngineEventBase *eventBase; // @synthesize eventBase=_eventBase;
@property(retain, nonatomic) TTVideoEngineEvent *event; // @synthesize event=_event;
@property(nonatomic) long long seekCount; // @synthesize seekCount=_seekCount;
@property(nonatomic) double accumulatedStalledTime; // @synthesize accumulatedStalledTime=_accumulatedStalledTime;
@property(nonatomic) long long loopway; // @synthesize loopway=_loopway;
@property(nonatomic) _Bool isLooping; // @synthesize isLooping=_isLooping;
@property(nonatomic) long long loopCount; // @synthesize loopCount=_loopCount;
@property(copy, nonatomic) NSArray *vu; // @synthesize vu=_vu;
@property(copy, nonatomic) NSString *vid; // @synthesize vid=_vid;
@property(nonatomic) _Bool isLocal; // @synthesize isLocal=_isLocal;
@property(nonatomic) _Bool performancePointSwitch; // @synthesize performancePointSwitch=_performancePointSwitch;
@property(nonatomic) __weak id <TTVideoEngineEventLoggerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setEnableNNSR:(_Bool)arg1;
- (void)setAbrInfo:(id)arg1;
- (void)setHijackCode:(long long)arg1;
- (void)setCheckHijack:(long long)arg1;
- (void)setSettingLogType:(long long)arg1 value:(int)arg2;
- (void)videoChangeSizeWidth:(long long)arg1 height:(long long)arg2;
- (void)sendEvent;
- (void)parseUrlLogID;
- (void)setStringOption:(long long)arg1 value:(id)arg2;
- (void)setIntOption:(long long)arg1 value:(long long)arg2;
- (void)setInt64Option:(long long)arg1 value:(long long)arg2;
- (void)setAVSyncStartEnable:(long long)arg1;
- (void)recordFirstFrameMetrics:(id)arg1;
- (void)finishReason:(long long)arg1;
- (void)flushEvent;
- (void)clear;
- (void)recordExitReason:(long long)arg1 isStart:(_Bool)arg2;
- (void)_recordExitTime;
- (void)logPlayerInfo:(id)arg1;
- (void)addMemUsagesPoint:(double)arg1;
- (void)addCpuUsagesPoint:(double)arg1;
- (void)setEnableBash:(long long)arg1;
- (void)setEnableBoe:(long long)arg1;
- (id)getTraceId;
- (void)setTraceId:(id)arg1;
- (void)setDynamicType:(id)arg1;
- (void)logCodecName:(id)arg1 video:(id)arg2;
- (void)logBitrate:(long long)arg1;
- (void)updateMediaDuration:(double)arg1;
- (void)setPlayAPIVersion:(unsigned long long)arg1 auth:(id)arg2;
- (void)setNetClient:(id)arg1;
- (void)setDrmTokenUrl:(id)arg1;
- (void)setDrmType:(long long)arg1;
- (void)engineState:(unsigned long long)arg1;
- (void)proxyUrl:(id)arg1;
- (void)loadState:(unsigned long long)arg1;
- (void)playbackState:(long long)arg1;
- (void)logWatchDuration:(long long)arg1;
- (void)setDisableAccurateStart:(long long)arg1;
- (void)setReuseSocket:(long long)arg1;
- (void)setVideoOutFPS:(double)arg1;
- (void)setPlayerSourceType:(long long)arg1;
- (void)setDecoderType:(long long)arg1;
- (void)updateCustomPlayerParms:(id)arg1;
- (void)updateCalculateErrorCount:(long long)arg1;
- (void)updateTryErrorCount:(long long)arg1;
- (void)endLoadDataWhenBufferEmpty;
- (void)beginLoadDataWhenBufferEmpty;
- (void)playerPlay;
- (void)playerPause;
- (void)logCurPos:(long long)arg1;
- (void)logFormatType:(long long)arg1;
- (void)logCodecNameId:(long long)arg1 video:(long long)arg2;
- (void)setStartTime:(long long)arg1;
- (void)setVideoPreloadSize:(long long)arg1;
- (void)enablePreload:(long long)arg1;
- (void)setRenderType:(id)arg1;
- (void)setPrepareEndTime:(long long)arg1;
- (void)setPrepareStartTime:(long long)arg1;
- (void)setVideoModelVersion:(long long)arg1;
- (void)setInitialQuality:(id)arg1;
- (void)setInitialResolution:(id)arg1;
- (void)setIp:(id)arg1;
- (void)setInitialHost:(id)arg1;
- (void)enableCacheFile;
- (void)useHardware:(_Bool)arg1;
- (void)setCustomStr:(id)arg1;
- (void)setCurrentURL:(id)arg1;
- (void)setInitalURL:(id)arg1;
- (void)setPlayItemInfo:(id)arg1;
- (void)setPreloadInfo:(id)arg1;
- (void)userCancelled;
- (void)videoStatusException:(long long)arg1;
- (void)watchFinish;
- (void)playbackFinish:(long long)arg1;
- (void)closeVideo;
- (void)accumulateSize;
- (void)movieFinishError:(id)arg1 currentPlaybackTime:(double)arg2 apiver:(unsigned long long)arg3;
- (void)validateVideoMetaDataError:(id)arg1;
- (void)moviePlayRetryWithError:(id)arg1 strategy:(long long)arg2 apiver:(unsigned long long)arg3;
- (void)_logFirstError:(id)arg1;
- (void)setLoopWay:(long long)arg1;
- (void)setLooping:(_Bool)arg1;
- (void)loopAgain;
- (void)movieBufferDidReachEnd;
- (void)stallEnd;
- (void)movieStalledAfterFirstScreen:(unsigned long long)arg1 curPos:(long long)arg2;
- (void)movieStalled;
- (void)renderSeekComplete:(_Bool)arg1;
- (void)seekCompleted;
- (void)seekToTime:(double)arg1 afterSeekTime:(double)arg2 cachedDuration:(double)arg3 switchingResolution:(_Bool)arg4;
- (void)switchResolutionEnd;
- (void)switchToDefinition:(id)arg1 fromDefinition:(id)arg2;
- (void)setCurrentDefinition:(id)arg1 lastDefinition:(id)arg2;
- (void)setDNSParseTime:(long long)arg1;
- (void)beginToParseDNS;
- (void)showedOneFrame;
- (void)fetchedVideoURL:(id)arg1 error:(id)arg2 apiVersion:(long long)arg3;
- (void)firstDNSFailed:(id)arg1;
- (void)mainURLHTTPDNSError:(id)arg1;
- (void)mainURLLocalDNSError:(id)arg1;
- (void)mainURLCDNError:(id)arg1 url:(id)arg2;
- (void)playerError:(id)arg1 url:(id)arg2;
- (void)needRetryToFetchVideoURL:(id)arg1 apiVersion:(long long)arg2;
- (void)setSubtag:(id)arg1;
- (void)setTag:(id)arg1;
- (void)beginToPlayVideo:(id)arg1;
- (void)prepareBeforePlay;
- (void)initPlay:(id)arg1;
- (void)setDNSMode:(long long)arg1;
- (void)setSourceType:(long long)arg1 vid:(id)arg2;
- (void)setURLArray:(id)arg1;
- (id)getEventBase;
- (id)getEvent;
- (id)firstFrameTimestamp;
- (id)getMetrics:(id)arg1;
- (void)initEvents;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

