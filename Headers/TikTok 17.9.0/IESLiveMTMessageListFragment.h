//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HTSLiveComponent-Protocol.h"
#import "IESLiveMTMessageListBaseDelegate-Protocol.h"
#import "IESLiveMTMessageListReactions-Protocol.h"
#import "IESLiveMTMessageListRouter-Protocol.h"
#import "IESLiveMTMessageListViewDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"

@class HTSLiveMessageListUnreadTipView, IESLiveMTMessageListGiftMaskView, IESLiveMTMessageListMaskView, IESLiveMTMessageListStore, IESLiveMTMessageListView, NSString, RACCompoundDisposable, UIImageView;
@protocol HTSLiveDetailRouter, HTSLivePluginLayoutMachineProvider, HTSLiveViewHierarchyProvider, IESLiveLandscapeService, IESLiveLayoutContainerProvider, IESLiveMTAutoHideRouter, IESLiveMTCommentRouter, IESLiveMTCommentService, IESLiveMTGameBottomMessageAction, IESLiveMTMessageListActions, IESLiveMTMessageListPreferenceService, IESLiveMTMessageListScrollActions, IESLiveMTMessageMuteRouter, IESLiveMTPKAnchorRouter, IESLiveMTPushMessageActions, IESLiveMTUserPreviewRouter, IESLiveRoomService, IESLiveSettings, IESLiveTracker, IESLiveUserService;

@interface IESLiveMTMessageListFragment : NSObject <UITableViewDelegate, UITableViewDataSource, UIScrollViewDelegate, IESLiveMTMessageListBaseDelegate, IESLiveMTMessageListViewDelegate, IESLiveMTMessageListReactions, HTSLiveComponent, IESLiveMTMessageListRouter>
{
    _Bool _hideForLanscape;
    _Bool _messageListViewDidHidden;
    _Bool _unreadTipViewDidHidden;
    _Bool _enableTouchStopUpdate;
    _Bool _needResetTapView;
    IESLiveMTMessageListStore *_store;
    IESLiveMTMessageListView *_messageListView;
    IESLiveMTMessageListMaskView *_messageListMaskView;
    HTSLiveMessageListUnreadTipView *_unreadTipView;
    IESLiveMTMessageListGiftMaskView *_giftMaskView;
    long long _orientation;
    RACCompoundDisposable *_disposableBag;
    id <IESLiveMTMessageListActions> _dispatcher;
    id <IESLiveMTGameBottomMessageAction> _gameBottomDispatcher;
    id <HTSLiveDetailRouter> _router;
    id <IESLiveMTMessageListScrollActions> _scrollDispatcher;
    id <HTSLiveViewHierarchyProvider> _viewProvider;
    id <HTSLivePluginLayoutMachineProvider> _layoutProvider;
    id <IESLiveSettings> _settings;
    id <IESLiveRoomService> _roomService;
    id <IESLiveUserService> _userService;
    id <IESLiveMTPushMessageActions> _pushMessageDispatcher;
    id <IESLiveTracker> _tracker;
    id <IESLiveMTMessageMuteRouter> _messageMuteRouter;
    id <IESLiveMTCommentRouter> _commentRouter;
    id <IESLiveLandscapeService> _landscapeService;
    id <IESLiveMTAutoHideRouter> _autoHideRouter;
    id <IESLiveMTUserPreviewRouter> _userPreviewRouter;
    id <IESLiveMTPKAnchorRouter> _newPKRouter;
    id <IESLiveLayoutContainerProvider> _containerProvider;
    id <IESLiveMTCommentService> _commentService;
    id <IESLiveMTMessageListPreferenceService> _messageListPreference;
    UIImageView *_noInteractionMask;
    struct CGPoint _currentOffset;
    struct CGAffineTransform _messageListTransform;
}

+ (long long)preferredLoadPhase;
+ (id)componentWithRoom:(id)arg1 trackContext:(id)arg2 componentContext:(id)arg3;
- (void).cxx_destruct;
@property(nonatomic) __weak UIImageView *noInteractionMask; // @synthesize noInteractionMask=_noInteractionMask;
@property(nonatomic) struct CGPoint currentOffset; // @synthesize currentOffset=_currentOffset;
@property(retain, nonatomic) id <IESLiveMTMessageListPreferenceService> messageListPreference; // @synthesize messageListPreference=_messageListPreference;
@property(nonatomic) struct CGAffineTransform messageListTransform; // @synthesize messageListTransform=_messageListTransform;
@property(nonatomic) _Bool needResetTapView; // @synthesize needResetTapView=_needResetTapView;
@property(retain, nonatomic) id <IESLiveMTCommentService> commentService; // @synthesize commentService=_commentService;
@property(retain, nonatomic) id <IESLiveLayoutContainerProvider> containerProvider; // @synthesize containerProvider=_containerProvider;
@property(retain, nonatomic) id <IESLiveMTPKAnchorRouter> newPKRouter; // @synthesize newPKRouter=_newPKRouter;
@property(retain, nonatomic) id <IESLiveMTUserPreviewRouter> userPreviewRouter; // @synthesize userPreviewRouter=_userPreviewRouter;
@property(retain, nonatomic) id <IESLiveMTAutoHideRouter> autoHideRouter; // @synthesize autoHideRouter=_autoHideRouter;
@property(retain, nonatomic) id <IESLiveLandscapeService> landscapeService; // @synthesize landscapeService=_landscapeService;
@property(retain, nonatomic) id <IESLiveMTCommentRouter> commentRouter; // @synthesize commentRouter=_commentRouter;
@property(retain, nonatomic) id <IESLiveMTMessageMuteRouter> messageMuteRouter; // @synthesize messageMuteRouter=_messageMuteRouter;
@property(retain, nonatomic) id <IESLiveTracker> tracker; // @synthesize tracker=_tracker;
@property(retain, nonatomic) id <IESLiveMTPushMessageActions> pushMessageDispatcher; // @synthesize pushMessageDispatcher=_pushMessageDispatcher;
@property(retain, nonatomic) id <IESLiveUserService> userService; // @synthesize userService=_userService;
@property(retain, nonatomic) id <IESLiveRoomService> roomService; // @synthesize roomService=_roomService;
@property(retain, nonatomic) id <IESLiveSettings> settings; // @synthesize settings=_settings;
@property(nonatomic) __weak id <HTSLivePluginLayoutMachineProvider> layoutProvider; // @synthesize layoutProvider=_layoutProvider;
@property(nonatomic) __weak id <HTSLiveViewHierarchyProvider> viewProvider; // @synthesize viewProvider=_viewProvider;
@property(retain, nonatomic) id <IESLiveMTMessageListScrollActions> scrollDispatcher; // @synthesize scrollDispatcher=_scrollDispatcher;
@property(nonatomic) __weak id <HTSLiveDetailRouter> router; // @synthesize router=_router;
@property(retain, nonatomic) id <IESLiveMTGameBottomMessageAction> gameBottomDispatcher; // @synthesize gameBottomDispatcher=_gameBottomDispatcher;
@property(retain, nonatomic) id <IESLiveMTMessageListActions> dispatcher; // @synthesize dispatcher=_dispatcher;
@property(retain, nonatomic) RACCompoundDisposable *disposableBag; // @synthesize disposableBag=_disposableBag;
@property(nonatomic) long long orientation; // @synthesize orientation=_orientation;
@property(nonatomic) _Bool enableTouchStopUpdate; // @synthesize enableTouchStopUpdate=_enableTouchStopUpdate;
@property(nonatomic) _Bool unreadTipViewDidHidden; // @synthesize unreadTipViewDidHidden=_unreadTipViewDidHidden;
@property(nonatomic) _Bool messageListViewDidHidden; // @synthesize messageListViewDidHidden=_messageListViewDidHidden;
@property(nonatomic) _Bool hideForLanscape; // @synthesize hideForLanscape=_hideForLanscape;
@property(retain, nonatomic) IESLiveMTMessageListGiftMaskView *giftMaskView; // @synthesize giftMaskView=_giftMaskView;
@property(retain, nonatomic) HTSLiveMessageListUnreadTipView *unreadTipView; // @synthesize unreadTipView=_unreadTipView;
@property(retain, nonatomic) IESLiveMTMessageListMaskView *messageListMaskView; // @synthesize messageListMaskView=_messageListMaskView;
@property(retain, nonatomic) IESLiveMTMessageListView *messageListView; // @synthesize messageListView=_messageListView;
@property(retain, nonatomic) IESLiveMTMessageListStore *store; // @synthesize store=_store;
- (void)trackDidWatchHistoryMessage;
- (void)tapOnMessageListView:(id)arg1;
- (void)tapOnWhiteSpace;
- (void)createNoInteractionMaskIfNeeded;
- (void)removeNoInteractionViewIfNeeded;
- (void)addNoInteractionViewIfNeeded;
- (void)resetListView;
- (void)stopAutoUpdateList;
- (_Bool)p_nodeContainsAvatar:(id)arg1;
- (void)enableAnimationIfNeeded;
- (void)disableAnimationIfNeeded;
- (void)tapUnreadTipView;
- (void)changeUnreadTipViewFrame;
- (void)loadUnreadTipView;
- (id)messageListLayer;
- (void)setupTopGradient;
- (id)createMessageListView;
- (void)p_updateMessageHierarchy;
- (void)p_cleanMessageHierarchy;
- (void)p_addMessageListView;
- (void)loadMessageListView;
- (void)cellViewDidClickedWithModule:(id)arg1 message:(id)arg2;
- (void)cellViewDidClickedOnInteraction:(id)arg1;
- (void)showUserPreviewWithNode:(id)arg1 clickOnAvatar:(_Bool)arg2;
- (void)cellViewDidCliekedOnSpaceArea:(id)arg1;
- (_Bool)cellViewIsAvatarSupported:(id)arg1;
- (void)cellViewDidClickedOnContent:(id)arg1;
- (void)cellViewDidClickedOnAvatar:(id)arg1;
- (void)cellViewDidClickedOnName:(id)arg1;
- (void)cellViewDidLongPressed:(id)arg1;
- (void)loadMessageListMaskView;
- (void)updateMessageListGiftMask;
- (void)setMessageListContentOffset:(struct CGPoint)arg1;
- (void)showMessageList:(_Bool)arg1;
- (void)addGameBottomSpecalMessage:(id)arg1;
- (void)processKeyboardHide;
- (void)processKeyboardShow;
- (void)onShowLiveCommentKeyBoard:(_Bool)arg1;
- (void)deleteRows:(id)arg1;
- (void)adjustMessageListWidth:(double)arg1;
- (void)refreshUnreadTipView;
- (void)_updateMessageListForAniamtion;
- (void)updateMessageList:(_Bool)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (_Bool)getGiftMaskViewStatus;
- (void)notifyGiftMaskView;
- (void)scrollToMessageListBottom;
- (struct CGPoint)currentTransformOffset;
- (void)transformWithOffset:(struct CGPoint)arg1;
- (void)showMessageListView;
- (void)reloadMessageListView:(_Bool)arg1;
- (void)hideMessageListView;
- (void)componentOrientationChanged:(long long)arg1;
- (void)componentWillUnmount;
- (void)componentDidMount;
- (id)initWithStore:(id)arg1;
- (void)didSetAttachingDIContext;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

