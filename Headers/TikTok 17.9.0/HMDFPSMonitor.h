//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HMDMonitor.h"

@class CADisplayLink, HMDFrameDropMonitor, NSMutableArray, NSObject, NSString;
@protocol OS_dispatch_queue;

@interface HMDFPSMonitor : HMDMonitor
{
    CADisplayLink *_displayLink;
    double _lastUpdateTime;
    unsigned long long _frameCount;
    double _lastFPS;
    NSObject<OS_dispatch_queue> *_fpsQueue;
    NSMutableArray *_customScenes;
    NSString *_customSceneStr;
    NSMutableArray *_fpsCallbacks;
    unsigned long long _maximumFramesPerSecond;
    HMDFrameDropMonitor *_frameDropMonitor;
}

+ (id)sharedMonitor;
@property(retain, nonatomic) HMDFrameDropMonitor *frameDropMonitor; // @synthesize frameDropMonitor=_frameDropMonitor;
@property(nonatomic) unsigned long long maximumFramesPerSecond; // @synthesize maximumFramesPerSecond=_maximumFramesPerSecond;
@property(retain, nonatomic) NSMutableArray *fpsCallbacks; // @synthesize fpsCallbacks=_fpsCallbacks;
@property(copy, nonatomic) NSString *customSceneStr; // @synthesize customSceneStr=_customSceneStr;
@property(retain, nonatomic) NSMutableArray *customScenes; // @synthesize customScenes=_customScenes;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *fpsQueue; // @synthesize fpsQueue=_fpsQueue;
@property(nonatomic) double lastFPS; // @synthesize lastFPS=_lastFPS;
@property(nonatomic) unsigned long long frameCount; // @synthesize frameCount=_frameCount;
@property(nonatomic) double lastUpdateTime; // @synthesize lastUpdateTime=_lastUpdateTime;
@property(retain, nonatomic) CADisplayLink *displayLink; // @synthesize displayLink=_displayLink;
- (void).cxx_destruct;
- (unsigned long long)reporterPriority;
- (void)updateConfig:(id)arg1;
- (void)dealloc;
- (void)leaveCustomScene:(id)arg1;
- (void)callFPSMonitorCallback:(id)arg1;
- (void)removeFPSMoitorCallback:(CDUnknownBlockType)arg1;
- (void)addFPSMonitorCallback:(CDUnknownBlockType)arg1;
- (void)leaveFluencyCustomSceneWithUniq:(id)arg1;
- (void)enterFluencyCustomSceneWithUniq:(id)arg1;
- (void)enterCustomScene:(id)arg1;
- (void)addFPSRecordWithFPSValue:(double)arg1 scene:(id)arg2 isScrolling:(_Bool)arg3 extralValue:(id)arg4;
- (id)refresh_async;
- (void)updateFPS:(id)arg1;
- (_Bool)tryToStopDisplayLink;
- (_Bool)tryToStartDisplayLink;
- (_Bool)isDisplayLinkStarted;
- (void)applicationWillResignActiveNotification:(id)arg1;
- (void)applicationDidBecomeActiveNotification:(id)arg1;
- (void)stop;
- (void)startWithInterval:(double)arg1;
- (Class)storeClass;
- (id)init;

@end

