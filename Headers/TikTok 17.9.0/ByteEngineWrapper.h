//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RTCVendor.h"

#import "ByteExternalVideoRenderEventDelegate-Protocol.h"
#import "ByteRtcEngineDelegate-Protocol.h"
#import "OnerVideoFrozenStatisticsDelegate-Protocol.h"

@class ByteAudioDeviceObserverInside, ByteRtcEngineKit, ByteRtcLiveTranscoding, NSMutableDictionary, NSString, OnerRtcVideoCanvas, rtcStatsCollection;

@interface ByteEngineWrapper : RTCVendor <ByteRtcEngineDelegate, OnerVideoFrozenStatisticsDelegate, ByteExternalVideoRenderEventDelegate>
{
    _Bool _isCreateSubEngine;
    ByteRtcEngineKit *_rtcEngineKit;
    NSMutableDictionary *_externalVideoRenderMap;
    NSMutableDictionary *_streamMap;
    rtcStatsCollection *_rtcStats;
    NSString *_trascodingURL;
    ByteRtcLiveTranscoding *_transcodingSetting;
    OnerRtcVideoCanvas *_localCanvas;
    ByteAudioDeviceObserverInside *_byteAudioDeviceObserverInside;
    long long _audioVolumeIndicationsmooth;
}

+ (long long)videostate2Oner:(unsigned long long)arg1;
+ (unsigned long long)networkQuality2Oner:(unsigned long long)arg1;
+ (unsigned long long)offlineReason2Oner:(unsigned long long)arg1;
+ (long long)audioroute2Oner:(long long)arg1;
+ (long long)rotation2Oner:(long long)arg1;
+ (long long)warningcode2Oner:(long long)arg1;
+ (long long)errcode2Oner:(long long)arg1;
+ (id)uicolor2HexString:(id)arg1;
+ (unsigned long long)streamFallbackOptions:(long long)arg1;
+ (long long)rtcRole:(long long)arg1;
+ (int)levelConvert:(int)arg1;
- (void).cxx_destruct;
@property(nonatomic) long long audioVolumeIndicationsmooth; // @synthesize audioVolumeIndicationsmooth=_audioVolumeIndicationsmooth;
@property(retain, nonatomic) ByteAudioDeviceObserverInside *byteAudioDeviceObserverInside; // @synthesize byteAudioDeviceObserverInside=_byteAudioDeviceObserverInside;
@property(retain, nonatomic) OnerRtcVideoCanvas *localCanvas; // @synthesize localCanvas=_localCanvas;
@property(retain, nonatomic) ByteRtcLiveTranscoding *transcodingSetting; // @synthesize transcodingSetting=_transcodingSetting;
@property(retain, nonatomic) NSString *trascodingURL; // @synthesize trascodingURL=_trascodingURL;
@property(retain, nonatomic) rtcStatsCollection *rtcStats; // @synthesize rtcStats=_rtcStats;
@property(retain, nonatomic) NSMutableDictionary *streamMap; // @synthesize streamMap=_streamMap;
@property(retain, nonatomic) NSMutableDictionary *externalVideoRenderMap; // @synthesize externalVideoRenderMap=_externalVideoRenderMap;
@property(retain, nonatomic) ByteRtcEngineKit *rtcEngineKit; // @synthesize rtcEngineKit=_rtcEngineKit;
@property(nonatomic) _Bool isCreateSubEngine; // @synthesize isCreateSubEngine=_isCreateSubEngine;
- (void)rtcEngine:(id)arg1 connectionChangedToState:(long long)arg2;
- (void)rtcEngine:(id)arg1 didMessageSendResult:(long long)arg2 error:(long long)arg3;
- (void)rtcEngine:(id)arg1 didMessageReceived:(id)arg2 message:(id)arg3;
- (void)reportVideoStatusWithVideoStallInfo:(id)arg1;
- (void)videoStatusChangeWithUid:(id)arg1 Status:(long long)arg2 StallTime:(long long)arg3;
- (void)videoStatusChangeWithUid:(id)arg1 Status:(long long)arg2;
- (void)rtcEngine:(id)arg1 reportRtcStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didPublishSucceedOfStream:(id)arg2;
- (void)rtcEngine:(id)arg1 didStreamRemoved:(id)arg2 stream:(id)arg3;
- (void)rtcEngine:(id)arg1 onStreamSubscribed:(long long)arg2 streamID:(id)arg3 subscribeConfig:(id)arg4;
- (void)rtcEngine:(id)arg1 onStreamAdd:(id)arg2;
- (void)rtcEngine:(id)arg1 localVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 localAudioStats:(id)arg2;
- (void)rtcEngine:(id)arg1 remoteVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 remoteAudioStats:(id)arg2;
- (void)rtcEngine:(id)arg1 remoteVideoStateChangedOfUid:(id)arg2 state:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 reportAudioVolumeIndicationOfSpeakers:(id)arg2 totalVolume:(long long)arg3;
- (void)rtcEngine:(id)arg1 TransCodingWithUrl:(id)arg2 errorCode:(long long)arg3;
- (void)rtcEngine:(id)arg1 didLocalAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didLocalVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 networkQuality:(id)arg2 txQuality:(unsigned long long)arg3 rxQuality:(unsigned long long)arg4;
- (void)rtcEngine:(id)arg1 didOfflineOfUid:(id)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didAudioRouteChanged:(long long)arg2;
- (long long)byteRole;
- (void)videoFrameCallBack:(struct __CVBuffer *)arg1 rotation:(int)arg2 UID:(id)arg3 extendedData:(id)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteVideoDecodedOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteVideoFrameOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteScreenDecodedOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 videoSizeChangedOfUid:(id)arg2 size:(struct CGSize)arg3 rotation:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteAudioFrameOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstLocalAudioFrame:(long long)arg2;
- (void)rtcEngine:(id)arg1 firstLocalVideoFrameWithSize:(struct CGSize)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didJoinedOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didRejoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didJoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didOccurWarning:(long long)arg2;
- (void)rtcEngine:(id)arg1 didOccurError:(long long)arg2;
- (int)unloadEffect:(int)arg1;
- (int)stopAllEffects;
- (int)stopEffect:(int)arg1;
- (int)playEffect:(int)arg1 filePath:(id)arg2 loopCount:(int)arg3 pitch:(double)arg4 pan:(double)arg5 gain:(double)arg6 publish:(_Bool)arg7;
- (int)preloadEffect:(int)arg1 filePath:(id)arg2;
- (int)resumeAudioMixing;
- (int)pauseAudioMixing;
- (int)stopAudioMixing;
- (int)startAudioMixing:(id)arg1 loopback:(_Bool)arg2 replace:(_Bool)arg3 cycle:(long long)arg4;
- (_Bool)pushAudioMixingStreamData:(void *)arg1 frameNum:(long long)arg2 sampleRate:(long long)arg3 channelNum:(long long)arg4;
- (int)getAudioMixingStreamCachedFrameNum;
- (_Bool)setAudioPlayoutMixStream:(_Bool)arg1 sampleRate:(long long)arg2 channelNum:(long long)arg3;
- (void)setMediaServerAddr:(id)arg1;
- (void)adjustRecordingSignalVolume:(long long)arg1;
- (void)adjustPlaybackSignalVolume:(long long)arg1;
- (long long)sendMessage:(id)arg1 message:(id)arg2;
- (int)pullExternalAudioFrame:(void *)arg1 size:(int)arg2;
- (int)pushExternalAudioFrame:(void *)arg1 size:(int)arg2 timestamp:(double)arg3;
- (void)loadAudioConfig;
- (long long)getClientType;
- (int)setParameters:(id)arg1;
- (void)setLogFile:(id)arg1;
- (int)enableAudioVolumeIndication:(long long)arg1 smooth:(long long)arg2;
- (int)enableInEarMonitoring:(_Bool)arg1;
- (_Bool)isSpeakerphoneEnabled;
- (int)setEnableSpeakerphone:(_Bool)arg1;
- (int)setDefaultAudioRoutetoSpeakerphone:(_Bool)arg1;
- (int)setDefaultMuteAllRemoteAudioStreams:(_Bool)arg1;
- (int)muteAllRemoteAudioStreams:(_Bool)arg1;
- (int)muteRemoteAudioStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalAudioStream:(_Bool)arg1;
- (int)enableLocalAudio:(_Bool)arg1;
- (void)disableAudio;
- (void)enableAudio;
- (int)removePublishStreamUrl:(id)arg1;
- (int)addPublishStreamUrl:(id)arg1 transcodingEnabled:(_Bool)arg2;
- (int)setLiveTranscoding:(id)arg1;
- (id)transcoding2Byte:(id)arg1;
- (int)setupLocalPublishFallbackOption:(long long)arg1;
- (void)setVideoLowStreamResolution:(struct CGSize)arg1 andFrameRate:(long long)arg2 maxKbps:(long long)arg3 orientationMode:(long long)arg4;
- (int)setRemoteVideoStream:(id)arg1 type:(long long)arg2;
- (int)setRemoteDefaultVideoStreamType:(long long)arg1;
- (void)enableRecvDualStream:(_Bool)arg1;
- (void)enableSendDualStream:(_Bool)arg1;
- (int)setDefaultMuteAllRemoteVideoStreams:(_Bool)arg1;
- (int)muteAllRemoteVideoStreams:(_Bool)arg1;
- (int)muteRemoteVideoStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalVideoStream:(_Bool)arg1;
- (int)enableLocalVideo:(_Bool)arg1;
- (void)disableVideo;
- (void)enableVideo;
- (int)stopPreview;
- (int)startPreview;
- (int)setupRemoteVideo:(id)arg1;
- (id)getRtcCanvas:(id)arg1;
- (unsigned long long)getRenderMode:(unsigned long long)arg1;
- (int)setLocalVideoMirrorMode:(unsigned long long)arg1;
- (int)setupLocalVideo:(id)arg1;
- (id)createExternalVideoRenderInsideWith:(id)arg1 UID:(id)arg2;
- (int)switchCamera;
- (int)pushExternalVideoFrame:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2 rotation:(long long)arg3 extendedData:(id)arg4 supplementaryInfo:(id)arg5;
- (void)videoExtSourceEnable:(_Bool)arg1 useTexture:(_Bool)arg2 pushMode:(_Bool)arg3;
- (void)subStreamWithUID:(id)arg1 SubVideoStreamType:(long long)arg2;
- (int)setVideoResolution:(struct CGSize)arg1 andFrameRate:(long long)arg2 maxKbps:(long long)arg3 orientationMode:(long long)arg4;
- (int)leaveChannel:(CDUnknownBlockType)arg1;
- (void)opendualStreamRecvFunction;
- (int)joinChannelByKey:(id)arg1 channelName:(id)arg2 info:(id)arg3 uid:(id)arg4;
- (int)setClientRole:(long long)arg1;
- (int)setChannelProfile:(long long)arg1;
- (int)setupWithAppId:(id)arg1 token:(id)arg2 delegate:(id)arg3;
- (void)destroySubEngineKit;
- (id)subEngineKitVersion;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

