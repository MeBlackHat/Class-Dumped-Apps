//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class VEReadWriteLock;

@interface VERLContextResourceManager : NSObject
{
    struct map<void *, void *, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, void *>>> _deviceContextMap;
    struct map<void *, void *, std::__1::less<void *>, std::__1::allocator<std::__1::pair<void *const, void *>>> _pipelineCacheContextMap;
    VEReadWriteLock *_rwLock;
}

+ (id)defaultManager;
@property(retain, nonatomic) VEReadWriteLock *rwLock; // @synthesize rwLock=_rwLock;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)p_cleanupResourcesForEAGLContext:(id)arg1;
- (void)p_destroyResourcesForEAGLContext:(id)arg1;
- (void)destroyDevice:(void *)arg1 pipelineCache:(void *)arg2;
- (void)cleanupResourcesForTEGLContext:(struct TESharedGLContext *)arg1;
- (void)cleanupResourcesForHTSGLContext:(id)arg1;
- (void)destroyResourcesForTEGLContext:(struct TESharedGLContext *)arg1;
- (void)destroyResourcesForHTSGLContext:(id)arg1;
- (void *)p_pipelineCacheForEAGLContext:(id)arg1 glVersion:(int)arg2;
- (void *)newPipelineCacheWithDevice:(void *)arg1;
- (void *)pipelineCacheFromHTSGLContext:(id)arg1;
- (void *)pipelineCacheFromTEGLContext:(struct TESharedGLContext *)arg1;
- (void *)p_renderingDeviceFromEAGLContext:(id)arg1 glVersion:(int)arg2;
- (void *)renderingDeviceFromTEGLContext:(struct TESharedGLContext *)arg1;
- (void *)renderingDeviceFromHTSGLContext:(id)arg1;
- (id)initPrivate;

@end

