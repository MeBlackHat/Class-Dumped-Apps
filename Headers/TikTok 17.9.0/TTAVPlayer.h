//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "NotifyHandler-Protocol.h"

@class NSDictionary, NSMutableString, NSString, TTAVPlayerItem, TTPlayerView, UIImage;
@protocol OS_dispatch_queue, TTMediaWriter;

@interface TTAVPlayer : NSObject <NotifyHandler>
{
    // Error parsing type: ^{TTPlayer=^^?^^?{atomic<com::ss::ttm::utils::AVState::States>=Ai}iiiB*^{AVSource}^{AVHandler}^^?^v^?^?{_opaque_pthread_rwlock_t=q[192c]}^{AVHandler}BBii{list<com::ss::ttm::AVSource *, std::__1::allocator<com::ss::ttm::AVSource *> >={__list_node_base<com::ss::ttm::AVSource *, void *>=^{__list_node_base<com::ss::ttm::AVSource *, void *>}^{__list_node_base<com::ss::ttm::AVSource *, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<com::ss::ttm::AVSource *, void *> > >=Q}}^{AVBasePlayer}**[3^{AVSource}]^{AVSource}^{VideoOut}^{AudioOut}^{VideoOutlet}^{AudioOutlet}^{AVFactory}^{AVSource}^^?^{APPWRAPPER}^{AVLooper}^{AVWindow}{SeekInfo=q{atomic<long long>=Aq}qqqq}{SwitchStreamInfo=iii}{NextPlayInfo=*i*i*i{_opaque_pthread_mutex_t=q[56c]}}^{SocketPool}BqB{atomic<bool>=AB}iiiii*iiiiiiiiif[3q][3q][3q][3q]{TTPlayerConfig=^^?BB*******************ffffffffffffffiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiqqqqqqqqq^v^v^vifff}{SpeedSampler2=qqqqq}i^v^?^{LoadControlInterface}^{MaskInfoInterface}^{MediaTransportInterface}{AbrInfo=iif}^vi}, name: _player
    TTPlayerView *_playerView;
    struct ApApp *_wrapper;
    struct APPWRAPPER *_appWrapper;
    // Error parsing type: ^{YUVCapture=^^?^^?{atomic<com::ss::ttm::utils::AVState::States>=Ai}iiiB*^{AVSource}^{AVHandler}^v^?}, name: _capture
    // Error parsing type: ^{AVSource=^^?^^?{atomic<com::ss::ttm::utils::AVState::States>=Ai}iiiB*^{AVSource}^{AVHandler}}, name: _pcmWriter
    // Error parsing type: ^{AVSource=^^?^^?{atomic<com::ss::ttm::utils::AVState::States>=Ai}iiiB*^{AVSource}^{AVHandler}}, name: _yuvWriter
    _Bool _prepared;
    float _volume;
    int _playerErrorCode;
    NSMutableString *_playerErrorInfo;
    NSString *_bufferInfo;
    NSString *_voiceInfo;
    id _observer;
    id _interruptObserver;
    struct TTAVPlayerLoadControl *_loadControl;
    struct TTAVPlayerMaskInfo *_maskInfo;
    _Bool _ignoreAudioInterruption;
    _Bool _isPlayingBeforeInterruption;
    _Bool _looping;
    _Bool _isCapturing;
    float _speed;
    int _medialoaderNativeRegistered;
    TTAVPlayerItem *_currentItem;
    long long _playbackState;
    long long _loadState;
    unsigned long long _stallReason;
    void *_videoProcessor;
    CDUnknownBlockType _packetDidReceiveCallback;
    CDUnknownBlockType _frameWillRenderCallback;
    CDUnknownBlockType _videoFrameWillProcessCallback;
    CDUnknownBlockType _bufferCallback;
    CDUnknownBlockType _captureCompletionCallback;
    CDUnknownBlockType _seekCompletionBlock;
    CDUnknownBlockType _renderSeekCompleteBlock;
    CDUnknownBlockType _playNextCompletionBlock;
    CDUnknownBlockType _switchStreamCompletionBlock;
    CDUnknownBlockType _screenshotCompletionBlock;
    NSDictionary *_header;
    NSString *_audioFilePath;
    NSString *_videoFilePath;
    NSString *_mp4FilePath;
    id <TTMediaWriter> _mediaWriter;
    NSObject<OS_dispatch_queue> *_notifyQueue;
    UIImage *_attachedPic;
    long long _playerSRType;
}

+ (id)playerWithItem:(id)arg1 options:(id)arg2;
+ (id)playerWithItem:(id)arg1;
+ (id)playerWithURL:(id)arg1 options:(id)arg2;
+ (id)playerWithURL:(id)arg1;
+ (void)configThreadWaitMilliSeconds:(int)arg1;
+ (void)setStackSizeOptimized:(_Bool)arg1;
+ (_Bool)isMetalCapable;
+ (_Bool)supportsSSL;
+ (id)versionInfo;
+ (id)playerVersion;
+ (void)setLogFileEnabled:(_Bool)arg1;
+ (void)initialize;
@property(nonatomic) long long playerSRType; // @synthesize playerSRType=_playerSRType;
@property(nonatomic) int medialoaderNativeRegistered; // @synthesize medialoaderNativeRegistered=_medialoaderNativeRegistered;
@property(retain, nonatomic) UIImage *attachedPic; // @synthesize attachedPic=_attachedPic;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *notifyQueue; // @synthesize notifyQueue=_notifyQueue;
@property(retain, nonatomic) id <TTMediaWriter> mediaWriter; // @synthesize mediaWriter=_mediaWriter;
@property(copy, nonatomic) NSString *mp4FilePath; // @synthesize mp4FilePath=_mp4FilePath;
@property(copy, nonatomic) NSString *videoFilePath; // @synthesize videoFilePath=_videoFilePath;
@property(copy, nonatomic) NSString *audioFilePath; // @synthesize audioFilePath=_audioFilePath;
@property(retain, nonatomic) NSDictionary *header; // @synthesize header=_header;
@property(nonatomic) _Bool isCapturing; // @synthesize isCapturing=_isCapturing;
@property(nonatomic) _Bool looping; // @synthesize looping=_looping;
@property _Bool isPlayingBeforeInterruption; // @synthesize isPlayingBeforeInterruption=_isPlayingBeforeInterruption;
@property _Bool ignoreAudioInterruption; // @synthesize ignoreAudioInterruption=_ignoreAudioInterruption;
@property(copy, nonatomic) CDUnknownBlockType screenshotCompletionBlock; // @synthesize screenshotCompletionBlock=_screenshotCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType switchStreamCompletionBlock; // @synthesize switchStreamCompletionBlock=_switchStreamCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType playNextCompletionBlock; // @synthesize playNextCompletionBlock=_playNextCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType renderSeekCompleteBlock; // @synthesize renderSeekCompleteBlock=_renderSeekCompleteBlock;
@property(copy, nonatomic) CDUnknownBlockType seekCompletionBlock; // @synthesize seekCompletionBlock=_seekCompletionBlock;
@property(copy, nonatomic) CDUnknownBlockType captureCompletionCallback; // @synthesize captureCompletionCallback=_captureCompletionCallback;
@property(copy, nonatomic) CDUnknownBlockType bufferCallback; // @synthesize bufferCallback=_bufferCallback;
@property(copy, nonatomic) CDUnknownBlockType videoFrameWillProcessCallback; // @synthesize videoFrameWillProcessCallback=_videoFrameWillProcessCallback;
@property(copy, nonatomic) CDUnknownBlockType frameWillRenderCallback; // @synthesize frameWillRenderCallback=_frameWillRenderCallback;
@property(copy, nonatomic) CDUnknownBlockType packetDidReceiveCallback; // @synthesize packetDidReceiveCallback=_packetDidReceiveCallback;
@property(nonatomic) void *videoProcessor; // @synthesize videoProcessor=_videoProcessor;
@property(nonatomic) unsigned long long stallReason; // @synthesize stallReason=_stallReason;
@property(nonatomic) long long loadState; // @synthesize loadState=_loadState;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) float speed; // @synthesize speed=_speed;
@property(retain, nonatomic) TTAVPlayerItem *currentItem; // @synthesize currentItem=_currentItem;
- (void).cxx_destruct;
- (void)setMaskInfoInterface:(id)arg1;
- (void)setLoadControlInterface:(id)arg1;
- (id)parseCommentString:(id)arg1;
- (struct __CVBuffer *)copyPixelBuffer;
- (void)setDrmCreater:(CDUnknownFunctionPointerType)arg1;
- (void)playNextWithURL:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)buildFilePath;
- (void)screenshotSuccess;
- (void)takeScreenshot:(CDUnknownBlockType)arg1;
- (void)endRecording:(CDUnknownBlockType)arg1;
- (_Bool)startToRecord;
- (void)endCaptureBuffer:(CDUnknownBlockType)arg1;
- (void)startToCaptureBuffer:(CDUnknownBlockType)arg1;
- (void)setAutoRotation:(_Bool)arg1;
- (void)setViewRotation:(long long)arg1;
- (void)rotateCamera:(struct CGPoint)arg1;
- (void)setAudioDevice:(int)arg1;
- (void)setValue:(int)arg1 forKey:(int)arg2;
- (void)setValueString:(id)arg1 forKey:(int)arg2;
- (void)setValueVoidPTR:(void *)arg1 forKey:(int)arg2;
- (void)setFloatValue:(float)arg1 forKey:(int)arg2;
- (int)getIntValue:(int)arg1 forKey:(int)arg2;
- (long long)getInt64Value:(long long)arg1 forKey:(int)arg2;
- (id)getStringValueForKey:(int)arg1;
- (float)getFloatValueForKey:(int)arg1;
- (id)getIPAddress;
- (void)audioSessionDidChangeInterruptionType:(id)arg1;
- (struct CGRect)cropAreaFrame;
- (void)setCropAreaFrame:(struct CGRect)arg1;
- (void)setCacheFile:(id)arg1 mode:(int)arg2;
@property(nonatomic) float volume;
@property(nonatomic, getter=isHardwareDecode) _Bool hardwareDecode;
@property(nonatomic, getter=isMuted) _Bool muted;
- (void)_renderSeekComplete:(_Bool)arg1;
- (void)_seekComplete:(int)arg1;
- (void)onNotify:(id)arg1 withObject:(id)arg2 userInfo:(id)arg3;
- (void)handleNotify:(id)arg1;
- (void)paseLogInfo:(id)arg1;
- (id)buildErrorInfo;
- (void)handleNotify:(id)arg1 playID:(int)arg2;
- (void)setContentURL:(id)arg1;
- (void)addHeader;
- (void)resetError;
- (void)create;
- (void)setLoop:(_Bool)arg1;
- (void)close;
- (void)closeWithoutRelease;
- (void)switchStreamBitrate:(unsigned long long)arg1 type:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2 renderCompleteHandler:(CDUnknownBlockType)arg3;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (CDStruct_1b6d18a9)currentTime;
- (void)stop;
- (void)pause;
- (void)pause:(_Bool)arg1;
- (void)play;
- (void)prepare;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1 options:(id)arg2;
- (void)replaceCurrentItemWithPlayerItem:(id)arg1;
- (id)initWithPlayerItem:(id)arg1 options:(id)arg2;
- (id)initWithPlayerItem:(id)arg1;
- (id)initWithURL:(id)arg1 options:(id)arg2;
- (id)initWithURL:(id)arg1;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

