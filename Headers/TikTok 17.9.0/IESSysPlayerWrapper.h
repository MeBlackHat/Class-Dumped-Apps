//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AWEVideoPlayerControllerDelegate-Protocol.h"
#import "AWEVideoPlayerInternalDelegate-Protocol.h"
#import "IESVideoPlayerProtocol-Protocol.h"

@class AVURLAsset, AWEVideoPlayerController, NSArray, NSDictionary, NSString, NSURL, UIView;
@protocol IESVideoPlayerDelegate;

@interface IESSysPlayerWrapper : NSObject <AWEVideoPlayerControllerDelegate, AWEVideoPlayerInternalDelegate, IESVideoPlayerProtocol>
{
    _Bool _playByRestored;
    _Bool enableBytevc1Decode;
    _Bool enableHardDecode;
    _Bool ownPlayerPlayWithURLs;
    _Bool _enableVideoOutput;
    _Bool _repeated;
    _Bool _mute;
    _Bool _truncateTailWhenRepeated;
    _Bool _useCache;
    _Bool _playingWithCache;
    _Bool _ignoreAudioInterruption;
    _Bool _supportsReserveIfNeeded;
    _Bool _isURLChanged;
    _Bool _isReserved;
    unsigned long long _sessionId;
    long long _rotateType;
    long long _scalingMode;
    unsigned long long _renderType;
    unsigned long long _imageScaleType;
    long long _imageLayoutType;
    unsigned long long _enhancementType;
    unsigned long long _netWorkType;
    NSString *_videoID;
    NSString *_urlKey;
    NSArray *_videoPlayURLs;
    NSDictionary *_metaformateDic;
    double _volume;
    long long _networkTime;
    id <IESVideoPlayerDelegate> _deleagte;
    long long _cacheSize;
    CDUnknownBlockType _cacheSizeBlock;
    AWEVideoPlayerController *_player;
    long long _playbackState;
    long long _actionState;
    NSURL *_currentURL;
    double _playTimeBeforeReserved;
}

+ (void)setUpCacheLifeTimeForDisableAutoTrimFile:(unsigned long long)arg1;
+ (void)setPlayerIdleTimerAuto:(_Bool)arg1;
+ (void)setPlayerAudioEffectPredelay:(double)arg1;
+ (void)setPlayerAudioEffectRatio:(double)arg1;
+ (void)setPlayerAudioEffectThreshold:(double)arg1;
+ (void)setPlayerAudioEffectPregain:(double)arg1;
+ (void)setPlayerAudioEffectEnable:(_Bool)arg1;
+ (void)setUpBackupDNSParserWaitTime:(double)arg1;
+ (void)setUpDNSTTL:(long long)arg1;
+ (void)setUpFirstDNSParseType:(long long)arg1 backup:(long long)arg2;
+ (void)setForcePlayWithHTTPS:(_Bool)arg1;
+ (_Bool)forcePlayWithHTTPS;
+ (id)forcePlayWithHTTPSUrls:(id)arg1;
- (void).cxx_destruct;
@property(nonatomic) double playTimeBeforeReserved; // @synthesize playTimeBeforeReserved=_playTimeBeforeReserved;
@property(nonatomic) _Bool isReserved; // @synthesize isReserved=_isReserved;
@property(retain, nonatomic) NSURL *currentURL; // @synthesize currentURL=_currentURL;
@property(nonatomic) _Bool isURLChanged; // @synthesize isURLChanged=_isURLChanged;
@property(nonatomic) long long actionState; // @synthesize actionState=_actionState;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(retain, nonatomic) AWEVideoPlayerController *player; // @synthesize player=_player;
@property(copy, nonatomic) CDUnknownBlockType cacheSizeBlock; // @synthesize cacheSizeBlock=_cacheSizeBlock;
@property(nonatomic) _Bool supportsReserveIfNeeded; // @synthesize supportsReserveIfNeeded=_supportsReserveIfNeeded;
@property(nonatomic) _Bool ignoreAudioInterruption; // @synthesize ignoreAudioInterruption=_ignoreAudioInterruption;
@property(nonatomic) long long cacheSize; // @synthesize cacheSize=_cacheSize;
@property(nonatomic) _Bool playingWithCache; // @synthesize playingWithCache=_playingWithCache;
@property(nonatomic) _Bool useCache; // @synthesize useCache=_useCache;
@property(nonatomic) __weak id <IESVideoPlayerDelegate> deleagte; // @synthesize deleagte=_deleagte;
@property(nonatomic) _Bool truncateTailWhenRepeated; // @synthesize truncateTailWhenRepeated=_truncateTailWhenRepeated;
@property(nonatomic) long long networkTime; // @synthesize networkTime=_networkTime;
@property(nonatomic) double volume; // @synthesize volume=_volume;
@property(nonatomic) _Bool mute; // @synthesize mute=_mute;
@property(nonatomic) _Bool repeated; // @synthesize repeated=_repeated;
@property(copy, nonatomic) NSDictionary *metaformateDic; // @synthesize metaformateDic=_metaformateDic;
@property(nonatomic) _Bool enableVideoOutput; // @synthesize enableVideoOutput=_enableVideoOutput;
@property(copy, nonatomic) NSArray *videoPlayURLs; // @synthesize videoPlayURLs=_videoPlayURLs;
@property(copy, nonatomic) NSString *urlKey; // @synthesize urlKey=_urlKey;
@property(copy, nonatomic) NSString *videoID; // @synthesize videoID=_videoID;
@property(nonatomic) unsigned long long netWorkType; // @synthesize netWorkType=_netWorkType;
@property(nonatomic) unsigned long long enhancementType; // @synthesize enhancementType=_enhancementType;
@property(nonatomic) long long imageLayoutType; // @synthesize imageLayoutType=_imageLayoutType;
@property(nonatomic) unsigned long long imageScaleType; // @synthesize imageScaleType=_imageScaleType;
@property(nonatomic) unsigned long long renderType; // @synthesize renderType=_renderType;
@property(nonatomic) long long scalingMode; // @synthesize scalingMode=_scalingMode;
@property(nonatomic) long long rotateType; // @synthesize rotateType=_rotateType;
@property(nonatomic) _Bool ownPlayerPlayWithURLs; // @synthesize ownPlayerPlayWithURLs;
@property(nonatomic) _Bool enableHardDecode; // @synthesize enableHardDecode;
@property(nonatomic) _Bool enableBytevc1Decode; // @synthesize enableBytevc1Decode;
@property(nonatomic) _Bool playByRestored; // @synthesize playByRestored=_playByRestored;
@property(nonatomic) unsigned long long sessionId; // @synthesize sessionId=_sessionId;
- (void)noVideoDataToDownloadForURL:(id)arg1;
- (void)didFinishVideoDataDownloadForURL:(id)arg1;
- (void)failToRetrieveMetaForURL:(id)arg1 error:(id)arg2;
- (void)didReceiveMetaForURL:(id)arg1 mimeType:(id)arg2 cacheSize:(unsigned long long)arg3 fileSize:(unsigned long long)arg4;
- (void)playbackDidFailWithErrorDict:(id)arg1;
- (void)playbackDidFailForURL:(id)arg1 error:(id)arg2;
- (void)readyForDisplayForURL:(id)arg1 metaFormat:(id)arg2;
- (void)playbackStateDidChangeForURL:(id)arg1 oldState:(long long)arg2 newState:(long long)arg3;
- (void)playbackDidFinishForURL:(id)arg1;
- (void)setPlayerAudioDevice:(unsigned long long)arg1;
- (void)setPlayerResolution:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setPlayerPlaybackSpeed:(double)arg1;
- (void)setPlayerChangePlaybackSpeedEnabled:(_Bool)arg1;
- (void)setPlayerCheckHijackEnabled:(_Bool)arg1;
- (void)setPlayerBashVideoEnabled:(_Bool)arg1;
- (void)setPlayerDashVideoHosts:(id)arg1;
- (void)setPlayerDashVideoInfo:(id)arg1;
- (void)setTTVideoEngineRenderEngine:(unsigned long long)arg1;
- (void)setResourceLoaderErrorStrategy:(unsigned long long)arg1;
@property(readonly, nonatomic) struct CGSize videoOriginSize;
- (void)addVideoPlayWithURL:(id)arg1 forTimes:(id)arg2;
@property(readonly, nonatomic) UIView *view;
- (void)setUpMemoryOptimize:(_Bool)arg1;
- (void)setCustomLog:(id)arg1;
- (void)setPlayerSubTag:(id)arg1;
- (void)setPlayerTag:(id)arg1;
- (void)setCacheDuration:(double)arg1;
- (void)setStartPlayTime:(double)arg1;
- (void)seekToTime:(double)arg1 completion:(CDUnknownBlockType)arg2;
- (void)stop;
- (void)pause;
- (void)reserve;
- (void)play;
- (void)prepareToPlay;
- (id)playerConsumedBytes;
- (float)currPlaybackRate;
- (double)currPlayableDuration;
- (double)currPlaybackTime;
@property(readonly, nonatomic) _Bool isDashSource;
@property(nonatomic) double playbackRate;
- (struct __CVBuffer *)currentPixelBuffer;
@property(readonly, nonatomic) double currTimeScale;
@property(readonly, copy, nonatomic) AVURLAsset *currPlayAsset;
@property(readonly, copy, nonatomic) NSString *currPlayURL;
- (double)playFPS;
- (id)itemTrack;
- (id)firstFrameTimestamp;
- (double)playBitrate;
- (id)accessLog;
- (unsigned long long)playerType;
- (double)videoDuration;
- (void)dealloc;
- (void)removeTimeObserver;
- (void)addBoundaryTimeObserverForTimes:(id)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)addPeriodicTimeObserverForInterval:(double)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)resetDecryptionKey:(id)arg1;
- (void)resetVideoID:(id)arg1 andPlayURLs:(id)arg2 urlKey:(id)arg3;
- (void)resetVideoID:(id)arg1 andPlayURLs:(id)arg2 urlKey:(id)arg3 fileCs:(id)arg4;
- (void)resetVideoID:(id)arg1 andPlayURLs:(id)arg2;
- (void)resetLocalVideoURLPath:(id)arg1;
- (id)initWithVideoID:(id)arg1 andPlayURLs:(id)arg2 andUrlKey:(id)arg3;
- (id)initWithVideoID:(id)arg1 andPlayURLs:(id)arg2;
- (void)truelyRemoveTimeObserver;
- (void)reactiveTimeObserver;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

