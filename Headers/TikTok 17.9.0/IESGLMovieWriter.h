//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HTSGLInput-Protocol.h"

@class AVAssetWriter, AVAssetWriterInput, AVAssetWriterInputPixelBufferAdaptor, HTSGLContext, HTSGLFramebuffer, NSArray, NSDictionary, NSString, NSURL, VEAudioEncodeConfig, VELimitLogger, VEMVPRenderer;
@protocol IESGLMovieWriterDelegate, OS_dispatch_queue;

@interface IESGLMovieWriter : NSObject <HTSGLInput>
{
    _Bool _alreadyFinishedRecording;
    NSURL *_movieURL;
    NSString *_fileType;
    AVAssetWriter *_assetWriter;
    AVAssetWriterInput *_assetWriterAudioInput;
    AVAssetWriterInput *_assetWriterVideoInput;
    AVAssetWriterInputPixelBufferAdaptor *_assetWriterPixelBufferInput;
    HTSGLContext *_movieWriterContext;
    struct CGSize _videoSize;
    unsigned long long _inputRotation;
    HTSGLFramebuffer *_movieFramebuffer;
    HTSGLFramebuffer *_firstInputFramebuffer;
    CDStruct_1b6d18a9 _startTime;
    CDStruct_1b6d18a9 _previousFrameTime;
    CDStruct_1b6d18a9 _previousAudioTime;
    NSObject<OS_dispatch_queue> *_audioQueue;
    NSObject<OS_dispatch_queue> *_videoQueue;
    _Bool _audioEncodingIsFinished;
    _Bool _videoEncodingIsFinished;
    _Bool _isRecording;
    _Bool _dropFrame;
    double _startFrameTime;
    _Bool _hasAudioTrack;
    _Bool _encodingLiveVideo;
    _Bool _shouldPassthroughAudio;
    _Bool _shouldInvalidateAudioSampleWhenDone;
    _Bool _paused;
    _Bool _needStatisticProgress;
    _Bool _isFromRecorder;
    _Bool _isAudioReady;
    _Bool _isVideoReady;
    _Bool _enabled;
    _Bool _disableWriteAuido;
    _Bool _isBytevc;
    int _controlFrameRate;
    CDUnknownBlockType _completionBlock;
    CDUnknownBlockType _failureBlock;
    CDUnknownBlockType _videoInputReadyCallback;
    CDUnknownBlockType _audioInputReadyCallback;
    id <IESGLMovieWriterDelegate> _delegate;
    HTSGLContext *_context;
    double _progressStartTime;
    double _progressTotalTime;
    double _progressCurrentTime;
    CDUnknownBlockType _audioProcessingCallback;
    CDUnknownBlockType _videoProcessingCallback;
    double _recordRate;
    VEAudioEncodeConfig *_audioSettings;
    VEMVPRenderer *_textureMvpRenderer;
    VELimitLogger *_limitLogger;
    NSDictionary *_videoSettings;
    CDStruct_1b6d18a9 _maxLimitTime;
    CDStruct_1b6d18a9 _duration;
}

@property(retain, nonatomic) NSDictionary *videoSettings; // @synthesize videoSettings=_videoSettings;
@property(retain, nonatomic) VELimitLogger *limitLogger; // @synthesize limitLogger=_limitLogger;
@property(retain, nonatomic) VEMVPRenderer *textureMvpRenderer; // @synthesize textureMvpRenderer=_textureMvpRenderer;
@property(retain, nonatomic) VEAudioEncodeConfig *audioSettings; // @synthesize audioSettings=_audioSettings;
@property(nonatomic) CDStruct_1b6d18a9 duration; // @synthesize duration=_duration;
@property(nonatomic) _Bool isBytevc; // @synthesize isBytevc=_isBytevc;
@property(nonatomic) _Bool disableWriteAuido; // @synthesize disableWriteAuido=_disableWriteAuido;
@property(nonatomic) CDStruct_1b6d18a9 maxLimitTime; // @synthesize maxLimitTime=_maxLimitTime;
@property(nonatomic) double recordRate; // @synthesize recordRate=_recordRate;
@property(nonatomic) _Bool enabled; // @synthesize enabled=_enabled;
@property(copy, nonatomic) CDUnknownBlockType videoProcessingCallback; // @synthesize videoProcessingCallback=_videoProcessingCallback;
@property(copy, nonatomic) CDUnknownBlockType audioProcessingCallback; // @synthesize audioProcessingCallback=_audioProcessingCallback;
@property(nonatomic) _Bool isVideoReady; // @synthesize isVideoReady=_isVideoReady;
@property(nonatomic) _Bool isAudioReady; // @synthesize isAudioReady=_isAudioReady;
@property(nonatomic) _Bool isFromRecorder; // @synthesize isFromRecorder=_isFromRecorder;
@property(nonatomic) _Bool needStatisticProgress; // @synthesize needStatisticProgress=_needStatisticProgress;
@property(nonatomic) double progressCurrentTime; // @synthesize progressCurrentTime=_progressCurrentTime;
@property(nonatomic) double progressTotalTime; // @synthesize progressTotalTime=_progressTotalTime;
@property(nonatomic) double progressStartTime; // @synthesize progressStartTime=_progressStartTime;
@property(retain, nonatomic) HTSGLContext *context; // @synthesize context=_context;
@property(nonatomic) __weak id <IESGLMovieWriterDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) HTSGLContext *movieWriterContext; // @synthesize movieWriterContext=_movieWriterContext;
@property(nonatomic, getter=isPaused) _Bool paused; // @synthesize paused=_paused;
@property(nonatomic) _Bool shouldInvalidateAudioSampleWhenDone; // @synthesize shouldInvalidateAudioSampleWhenDone=_shouldInvalidateAudioSampleWhenDone;
@property(copy, nonatomic) CDUnknownBlockType audioInputReadyCallback; // @synthesize audioInputReadyCallback=_audioInputReadyCallback;
@property(copy, nonatomic) CDUnknownBlockType videoInputReadyCallback; // @synthesize videoInputReadyCallback=_videoInputReadyCallback;
@property(copy, nonatomic) CDUnknownBlockType failureBlock; // @synthesize failureBlock=_failureBlock;
@property(copy, nonatomic) CDUnknownBlockType completionBlock; // @synthesize completionBlock=_completionBlock;
@property(nonatomic) _Bool shouldPassthroughAudio; // @synthesize shouldPassthroughAudio=_shouldPassthroughAudio;
@property(nonatomic) _Bool encodingLiveVideo; // @synthesize encodingLiveVideo=_encodingLiveVideo;
@property(nonatomic) _Bool hasAudioTrack; // @synthesize hasAudioTrack=_hasAudioTrack;
- (void).cxx_destruct;
- (double)getSuitableSampleRate:(double)arg1;
- (void)checkReachedMaxLimitTime:(CDStruct_1b6d18a9)arg1;
@property(readonly, nonatomic) AVAssetWriter *assetWriter;
@property(nonatomic) struct CGAffineTransform transform;
@property(copy, nonatomic) NSArray *metaData;
- (void)setHasAudioTrack:(_Bool)arg1 audioSettings:(id)arg2;
- (void)setCurrentlyReceivingMonochromeInput:(_Bool)arg1;
- (_Bool)wantsMonochromeInput;
- (_Bool)shouldIgnoreUpdatesToThisTarget;
- (void)endProcessing;
- (struct CGSize)maximumOutputSize;
- (void)setInputSize:(struct CGSize)arg1 atIndex:(long long)arg2;
- (void)setInputRotation:(unsigned long long)arg1 atIndex:(long long)arg2;
- (void)setInputFramebuffer:(id)arg1 atIndex:(long long)arg2;
- (long long)nextAvailableTextureIndex;
- (void)appendPixelBufferAttachment:(struct __CVBuffer *)arg1;
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2 exceptionBlock:(CDUnknownBlockType)arg3;
- (void)processVideoBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (_Bool)renderAtInternalSizeUsingFramebuffer:(id)arg1;
- (_Bool)setFilterFBO;
- (void)destroyDataFBO;
- (_Bool)createDataFBO;
- (void)setDropFrame:(_Bool)arg1;
- (void)enableSynchronizationCallbacks;
- (void)processAudioBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)finishRecordingWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)finishRecording;
- (void)cancelRecording;
- (void)startRecordingInOrientation:(struct CGAffineTransform)arg1;
- (void)p_trackWriterStartCode:(long long)arg1;
- (_Bool)p_startWritingWithRetry;
- (void)startRecording;
@property(nonatomic) int controlFrameRate; // @synthesize controlFrameRate=_controlFrameRate;
- (void)initializeMovieWithOutputSettings:(id)arg1;
- (void)dealloc;
- (id)initWithMovieURL:(id)arg1 size:(struct CGSize)arg2 fileType:(id)arg3 videoSettings:(id)arg4 audioSettings:(id)arg5;
- (id)initWithMovieURL:(id)arg1 size:(struct CGSize)arg2;
- (double)getProgress;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

