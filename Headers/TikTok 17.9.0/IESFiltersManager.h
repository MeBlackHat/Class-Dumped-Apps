//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IESMMObject.h"

@class AVAsset, FilterManagerConfig, HTSEffectManager, HTSGLFilter, HTSGLFilterGroup, HTSRawDataOutputRender, IESEffectTransitionRenderer, IESEffectVideoAnimatedRenderer, IESImageAnimationStickerFilter, IESKeyframeTimeAndCountInfo, IESMMCanvasConfig, IESMMEffectStickerInfo, IESMMMVEffectFilter, IESMediaFilterInfo, IESSampleBuffer, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, VEAmazingEffectFilter, VEEffectTextInfo;
@protocol IESMMEffectGroupProtocol, IESVideoEngineEffectProtocol;

@interface IESFiltersManager : IESMMObject
{
    _Bool _transFilterDidChanged;
    _Bool _needResetFilters;
    _Bool _needResetCanvasGroups;
    _Bool _needCurrentFrame;
    _Bool _isSwitchFilter;
    _Bool _useZoomFilter;
    float _colorFilterIntensity;
    struct __CVBuffer *_destPixelBuffer;
    IESSampleBuffer *_destSampleBuffer;
    HTSRawDataOutputRender *_rawDataOutput;
    NSMutableDictionary *_inputFilters;
    HTSGLFilter *_transFilter;
    IESMediaFilterInfo *_transFilterInfo;
    HTSGLFilter<IESVideoEngineEffectProtocol> *_engineFilter;
    IESEffectTransitionRenderer *_transitionRenderer;
    IESEffectVideoAnimatedRenderer *_videoAnimatedRenderer;
    IESEffectVideoAnimatedRenderer *_multiTrackAnimatedRenderer;
    NSArray *_filterTimeLine;
    NSDictionary *_canvasInfo;
    NSDictionary *_canvasConfigsMap;
    IESMMCanvasConfig *_preferCanvasConfig;
    HTSEffectManager *_effectOperationManager;
    unsigned long long _outputRotationMode;
    CDUnknownBlockType _canvasObservableEvent;
    AVAsset *_stillImageAsset;
    CDUnknownBlockType _keyFrameJsonBlock;
    long long _effectMaxMemCache;
    NSDictionary *_assetAnimateInfos;
    NSDictionary *_textureVerticesMap;
    CDUnknownBlockType _getCurrentImageBlock;
    CDUnknownBlockType _effectFilterPathBlock;
    NSString *_colorFilterPath;
    IESMMEffectStickerInfo *_HDREffectInfo;
    IESMMEffectStickerInfo *_currentEffectInfo;
    NSString *_effectFontPath;
    long long _effectFaceIndex;
    struct IESSrtDdata *_effctSrtData;
    CDUnknownBlockType _srtBitmapBlock;
    CDUnknownBlockType _srtBitmapUtf32Block;
    VEEffectTextInfo *_effectTextInfo;
    CDUnknownBlockType _playTimeCallback;
    NSMutableDictionary *_imageInputFilters;
    NSMutableDictionary *_beautyEffectGroup;
    NSMutableDictionary *_effectGroups;
    HTSGLFilterGroup<IESMMEffectGroupProtocol> *_globalEffectGroup;
    NSMutableDictionary *_currentEffectOneInputFilter;
    NSMutableDictionary *_effectInfo;
    NSMutableDictionary *_featuresInfo;
    NSArray *_globalFeaturesInfo;
    NSMutableDictionary *_effectFilters;
    VEAmazingEffectFilter *_globalAmazingFilter;
    NSMutableDictionary *_assetLayers;
    NSMutableDictionary *_colorFilterDict;
    NSMutableDictionary *_extractorFilters;
    NSMutableDictionary *_zoomTransforms;
    FilterManagerConfig *_managerConfig;
    NSMutableDictionary *_extractFrameDrivers;
    IESImageAnimationStickerFilter *_imageStickerFilter;
    NSMutableDictionary *_canvasGroups;
    HTSGLFilter *_multiTrackFilter;
    IESMMMVEffectFilter *_mvEffectFilter;
    NSMutableArray *_currentTrackInfos;
    IESKeyframeTimeAndCountInfo *_keyFrameTimeAndCountInfo;
    struct CGSize _canvasSize;
    struct IESIndensityParam_t _HDRIndensity;
}

@property(retain, nonatomic) IESKeyframeTimeAndCountInfo *keyFrameTimeAndCountInfo; // @synthesize keyFrameTimeAndCountInfo=_keyFrameTimeAndCountInfo;
@property(retain, nonatomic) NSMutableArray *currentTrackInfos; // @synthesize currentTrackInfos=_currentTrackInfos;
@property(retain, nonatomic) IESMMMVEffectFilter *mvEffectFilter; // @synthesize mvEffectFilter=_mvEffectFilter;
@property(retain, nonatomic) HTSGLFilter *multiTrackFilter; // @synthesize multiTrackFilter=_multiTrackFilter;
@property(retain, nonatomic) NSMutableDictionary *canvasGroups; // @synthesize canvasGroups=_canvasGroups;
@property(retain, nonatomic) IESImageAnimationStickerFilter *imageStickerFilter; // @synthesize imageStickerFilter=_imageStickerFilter;
@property(retain, nonatomic) NSMutableDictionary *extractFrameDrivers; // @synthesize extractFrameDrivers=_extractFrameDrivers;
@property(retain, nonatomic) FilterManagerConfig *managerConfig; // @synthesize managerConfig=_managerConfig;
@property(nonatomic) _Bool useZoomFilter; // @synthesize useZoomFilter=_useZoomFilter;
@property(retain, nonatomic) NSMutableDictionary *zoomTransforms; // @synthesize zoomTransforms=_zoomTransforms;
@property(retain, nonatomic) NSMutableDictionary *extractorFilters; // @synthesize extractorFilters=_extractorFilters;
@property(retain, nonatomic) NSMutableDictionary *colorFilterDict; // @synthesize colorFilterDict=_colorFilterDict;
@property(retain, nonatomic) NSMutableDictionary *assetLayers; // @synthesize assetLayers=_assetLayers;
@property(retain, nonatomic) VEAmazingEffectFilter *globalAmazingFilter; // @synthesize globalAmazingFilter=_globalAmazingFilter;
@property(retain, nonatomic) NSMutableDictionary *effectFilters; // @synthesize effectFilters=_effectFilters;
@property(retain, nonatomic) NSArray *globalFeaturesInfo; // @synthesize globalFeaturesInfo=_globalFeaturesInfo;
@property(retain, nonatomic) NSMutableDictionary *featuresInfo; // @synthesize featuresInfo=_featuresInfo;
@property(retain, nonatomic) NSMutableDictionary *effectInfo; // @synthesize effectInfo=_effectInfo;
@property(retain, nonatomic) NSMutableDictionary *currentEffectOneInputFilter; // @synthesize currentEffectOneInputFilter=_currentEffectOneInputFilter;
@property(retain, nonatomic) HTSGLFilterGroup<IESMMEffectGroupProtocol> *globalEffectGroup; // @synthesize globalEffectGroup=_globalEffectGroup;
@property(retain, nonatomic) NSMutableDictionary *effectGroups; // @synthesize effectGroups=_effectGroups;
@property(retain, nonatomic) NSMutableDictionary *beautyEffectGroup; // @synthesize beautyEffectGroup=_beautyEffectGroup;
@property(retain, nonatomic) NSMutableDictionary *imageInputFilters; // @synthesize imageInputFilters=_imageInputFilters;
@property(copy, nonatomic) CDUnknownBlockType playTimeCallback; // @synthesize playTimeCallback=_playTimeCallback;
@property(retain, nonatomic) VEEffectTextInfo *effectTextInfo; // @synthesize effectTextInfo=_effectTextInfo;
@property(copy, nonatomic) CDUnknownBlockType srtBitmapUtf32Block; // @synthesize srtBitmapUtf32Block=_srtBitmapUtf32Block;
@property(copy, nonatomic) CDUnknownBlockType srtBitmapBlock; // @synthesize srtBitmapBlock=_srtBitmapBlock;
@property(nonatomic) struct IESSrtDdata *effctSrtData; // @synthesize effctSrtData=_effctSrtData;
@property(nonatomic) long long effectFaceIndex; // @synthesize effectFaceIndex=_effectFaceIndex;
@property(retain, nonatomic) NSString *effectFontPath; // @synthesize effectFontPath=_effectFontPath;
@property(nonatomic) _Bool isSwitchFilter; // @synthesize isSwitchFilter=_isSwitchFilter;
@property(retain, nonatomic) IESMMEffectStickerInfo *currentEffectInfo; // @synthesize currentEffectInfo=_currentEffectInfo;
@property(nonatomic) struct IESIndensityParam_t HDRIndensity; // @synthesize HDRIndensity=_HDRIndensity;
@property(retain, nonatomic) IESMMEffectStickerInfo *HDREffectInfo; // @synthesize HDREffectInfo=_HDREffectInfo;
@property(nonatomic) float colorFilterIntensity; // @synthesize colorFilterIntensity=_colorFilterIntensity;
@property(copy, nonatomic) NSString *colorFilterPath; // @synthesize colorFilterPath=_colorFilterPath;
@property(copy, nonatomic) CDUnknownBlockType effectFilterPathBlock; // @synthesize effectFilterPathBlock=_effectFilterPathBlock;
@property(copy, nonatomic) CDUnknownBlockType getCurrentImageBlock; // @synthesize getCurrentImageBlock=_getCurrentImageBlock;
@property(retain, nonatomic) NSDictionary *textureVerticesMap; // @synthesize textureVerticesMap=_textureVerticesMap;
@property(retain, nonatomic) NSDictionary *assetAnimateInfos; // @synthesize assetAnimateInfos=_assetAnimateInfos;
@property(nonatomic) long long effectMaxMemCache; // @synthesize effectMaxMemCache=_effectMaxMemCache;
@property(copy, nonatomic) CDUnknownBlockType keyFrameJsonBlock; // @synthesize keyFrameJsonBlock=_keyFrameJsonBlock;
@property(retain, nonatomic) AVAsset *stillImageAsset; // @synthesize stillImageAsset=_stillImageAsset;
@property(nonatomic) _Bool needCurrentFrame; // @synthesize needCurrentFrame=_needCurrentFrame;
@property(copy, nonatomic) CDUnknownBlockType canvasObservableEvent; // @synthesize canvasObservableEvent=_canvasObservableEvent;
@property(nonatomic) unsigned long long outputRotationMode; // @synthesize outputRotationMode=_outputRotationMode;
@property(retain, nonatomic) HTSEffectManager *effectOperationManager; // @synthesize effectOperationManager=_effectOperationManager;
@property(retain, nonatomic) IESMMCanvasConfig *preferCanvasConfig; // @synthesize preferCanvasConfig=_preferCanvasConfig;
@property(retain, nonatomic) NSDictionary *canvasConfigsMap; // @synthesize canvasConfigsMap=_canvasConfigsMap;
@property(retain, nonatomic) NSDictionary *canvasInfo; // @synthesize canvasInfo=_canvasInfo;
@property(nonatomic) _Bool needResetCanvasGroups; // @synthesize needResetCanvasGroups=_needResetCanvasGroups;
@property(retain, nonatomic) NSArray *filterTimeLine; // @synthesize filterTimeLine=_filterTimeLine;
@property(retain, nonatomic) IESEffectVideoAnimatedRenderer *multiTrackAnimatedRenderer; // @synthesize multiTrackAnimatedRenderer=_multiTrackAnimatedRenderer;
@property(retain, nonatomic) IESEffectVideoAnimatedRenderer *videoAnimatedRenderer; // @synthesize videoAnimatedRenderer=_videoAnimatedRenderer;
@property(nonatomic) _Bool needResetFilters; // @synthesize needResetFilters=_needResetFilters;
@property(nonatomic) struct CGSize canvasSize; // @synthesize canvasSize=_canvasSize;
@property(retain, nonatomic) IESEffectTransitionRenderer *transitionRenderer; // @synthesize transitionRenderer=_transitionRenderer;
@property(retain, nonatomic) HTSGLFilter<IESVideoEngineEffectProtocol> *engineFilter; // @synthesize engineFilter=_engineFilter;
@property(nonatomic) _Bool transFilterDidChanged; // @synthesize transFilterDidChanged=_transFilterDidChanged;
@property(retain, nonatomic) IESMediaFilterInfo *transFilterInfo; // @synthesize transFilterInfo=_transFilterInfo;
@property(retain, nonatomic) HTSGLFilter *transFilter; // @synthesize transFilter=_transFilter;
@property(retain, nonatomic) NSMutableDictionary *inputFilters; // @synthesize inputFilters=_inputFilters;
@property(retain, nonatomic) HTSRawDataOutputRender *rawDataOutput; // @synthesize rawDataOutput=_rawDataOutput;
@property(readonly, nonatomic) IESSampleBuffer *destSampleBuffer; // @synthesize destSampleBuffer=_destSampleBuffer;
@property(readonly, nonatomic) struct __CVBuffer *destPixelBuffer; // @synthesize destPixelBuffer=_destPixelBuffer;
- (void).cxx_destruct;
- (id)getAllKeyFramesAtPts:(unsigned long long)arg1;
- (void)addFrameExtractDriver:(id)arg1 asset:(id)arg2;
- (void)removeImageStickerWithKey:(id)arg1;
- (void)addImageSticker:(id)arg1;
- (void)switchColorFilterIntensity:(id)arg1 inFilterPath:(id)arg2 inPosition:(float)arg3 inLeftIntensity:(float)arg4 inRightIntensity:(float)arg5;
- (void)p_updateTrackInfoLayer:(id)arg1;
- (void)updateSubTrackAssetLayer:(id)arg1 layer:(long long)arg2;
- (_Bool)checkPixelSizeEqualsNaturalSize:(id)arg1 samples:(id)arg2;
- (void)updateTrackFilterInfos:(id)arg1;
- (id)makeCanvasGroupWithConfig:(id)arg1 observable:(CDUnknownBlockType)arg2 canvasSize:(struct CGSize)arg3 renderer:(id)arg4;
- (id)buildInputFilter:(id)arg1;
- (void)addFiltersIn:(id)arg1;
- (void)removeFiltersIn:(id)arg1;
- (void)removeCanvasGroup;
- (void)addCanvasGroupIfNeed:(id)arg1 inArray:(id)arg2;
- (void)addEffectGroupFiter:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2 inArray:(id)arg3 isPlaying:(_Bool)arg4;
- (void)addFrameExtractFilter:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2 inArray:(id)arg3;
- (void)addBeautyEffectFiter:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2 inArray:(id)arg3 isPlaying:(_Bool)arg4;
- (void)updateEffectGroupPath:(CDStruct_1b6d18a9)arg1 WithAsset:(id)arg2;
- (void)updateZoomFilterTransform:(CDStruct_1b6d18a9)arg1 withTrackInfo:(id)arg2;
- (void)addWatermarkFilter:(id)arg1;
- (void)addZoomTransformFilter:(id)arg1 inArray:(id)arg2;
- (void)setEffectGenBitmap:(CDUnknownBlockType)arg1 utf32Gen:(CDUnknownBlockType)arg2;
- (void)setEffectFontPath:(id)arg1 faceIndex:(long long)arg2;
- (void)setEffectSrtData:(const struct IESSrtDdata *)arg1;
- (void)addMaskLayerFilter:(id)arg1 inArray:(id)arg2;
- (void)addFillModeFilter:(id)arg1 inArray:(id)arg2;
- (void)addMirrorFilter:(id)arg1 inArray:(id)arg2;
- (_Bool)p_needTransformFilter:(id)arg1;
- (void)addTransformFilterIfNeed:(id)arg1 inArray:(id)arg2;
- (id)getAmazingFilterConfig;
- (void)addGlobalEffectGroup:(id)arg1;
- (void)addInfoStickerEngineFilter:(id)arg1;
- (void)addGlobalAmazingFilterIfNeeded:(id)arg1;
- (void)addGlobalOutputRotateMode:(id)arg1;
- (id)buildPostFilterArrays;
- (void)addAmazingEffectFilter:(id)arg1 inArray:(id)arg2;
- (void)addCropFilterIfNeed:(id)arg1 inArray:(id)arg2;
- (void)addOutputRotateFilterIfNeed:(id)arg1 inArray:(id)arg2;
- (void)addInterfaceFilter:(id)arg1 inArray:(id)arg2 naturalSize:(struct CGSize)arg3;
- (void)updateFiltersInRenderPipelineAtTime:(CDStruct_1b6d18a9)arg1 inTrack:(id)arg2;
- (id)newTransFilterInfoAtTime:(CDStruct_1b6d18a9)arg1;
- (void)updateTransFilterProgressAtTime:(CDStruct_1b6d18a9)arg1;
- (void)updateTransFilterInfo:(CDStruct_1b6d18a9)arg1 trackInfos:(id)arg2;
- (void)updateTransFilterInfoForRequest:(id)arg1 trackInfos:(id)arg2;
- (id)filterForTrackInfo:(id)arg1;
- (void)rebuildFiltersWithTrackInfos:(id)arg1 samples:(id)arg2 atTime:(CDStruct_1b6d18a9)arg3 isPlaying:(_Bool)arg4;
- (void)updateStillFrame:(struct __CVBuffer *)arg1 trackInfo:(id)arg2;
- (void)caculateKeyframesWithTrackInfo:(id)arg1 frameTime:(CDStruct_1b6d18a9)arg2 allkeyframes:(id)arg3;
- (void)renderSampleBuffers:(id)arg1 frameTime:(CDStruct_1b6d18a9)arg2 tracks:(id)arg3;
- (void)renderPixelBuffer:(struct __CVBuffer *)arg1 tracks:(id)arg2 forRequest:(id)arg3 isPlaying:(_Bool)arg4;
- (void)dealloc;
- (void)releaseFilters;
- (void)deleteFeatureKeyFrame:(id)arg1 forAsset:(id)arg2;
- (void)updateFeatureInfo:(id)arg1 forAsset:(id)arg2;
- (void)updateEffetContext:(id)arg1 forAsset:(id)arg2;
- (void)updateWithMediaInfo:(id)arg1;
- (void)p_restoreInfostickers:(id)arg1;
- (void)p_printConfig:(id)arg1;
- (id)initWith:(id)arg1 config:(id)arg2;

@end

