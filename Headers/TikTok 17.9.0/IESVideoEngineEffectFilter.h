//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "HTSGLFilter.h"

#import "IESVideoEngineEffectProtocol-Protocol.h"

@class HTSGLFramebuffer, IESMMEngineConfig, NSMutableArray, NSString;

@interface IESVideoEngineEffectFilter : HTSGLFilter <IESVideoEngineEffectProtocol>
{
    _Bool _needHighResolution;
    _Bool _isBrushisDrawing;
    _Bool _needPin;
    _Bool _useAmazing;
    _Bool _needCachePinBuffer;
    _Bool _isStickerFirstRender;
    _Bool _isInitedSuccess;
    float _resizeScale;
    NSMutableArray *_infoStickers;
    CDUnknownBlockType _imageBlock;
    CDUnknownBlockType _stickerAddBlock;
    double _frameTimestamp;
    void *_engineHandle;
    long long _curStickerID;
    IESMMEngineConfig *_config;
    HTSGLFramebuffer *_pinFrameBuffer;
    struct CGSize _curFrameSize;
}

+ (void)load;
@property(nonatomic) _Bool isInitedSuccess; // @synthesize isInitedSuccess=_isInitedSuccess;
@property(nonatomic) _Bool isStickerFirstRender; // @synthesize isStickerFirstRender=_isStickerFirstRender;
@property(nonatomic) float resizeScale; // @synthesize resizeScale=_resizeScale;
@property(retain, nonatomic) HTSGLFramebuffer *pinFrameBuffer; // @synthesize pinFrameBuffer=_pinFrameBuffer;
@property(nonatomic) _Bool needCachePinBuffer; // @synthesize needCachePinBuffer=_needCachePinBuffer;
@property(retain, nonatomic) IESMMEngineConfig *config; // @synthesize config=_config;
@property(nonatomic) _Bool useAmazing; // @synthesize useAmazing=_useAmazing;
@property(nonatomic) _Bool needPin; // @synthesize needPin=_needPin;
@property(nonatomic) long long curStickerID; // @synthesize curStickerID=_curStickerID;
@property(nonatomic) struct CGSize curFrameSize; // @synthesize curFrameSize=_curFrameSize;
@property(nonatomic) void *engineHandle; // @synthesize engineHandle=_engineHandle;
@property(nonatomic) _Bool isBrushisDrawing; // @synthesize isBrushisDrawing=_isBrushisDrawing;
@property(nonatomic) double frameTimestamp; // @synthesize frameTimestamp=_frameTimestamp;
@property(copy, nonatomic) CDUnknownBlockType stickerAddBlock; // @synthesize stickerAddBlock=_stickerAddBlock;
@property(copy, nonatomic) CDUnknownBlockType imageBlock; // @synthesize imageBlock=_imageBlock;
@property(retain, nonatomic) NSMutableArray *infoStickers; // @synthesize infoStickers=_infoStickers;
@property(nonatomic) _Bool needHighResolution; // @synthesize needHighResolution=_needHighResolution;
- (void).cxx_destruct;
- (void)getSrtOffset:(long long)arg1 offsetX:(float *)arg2 offsetY:(float *)arg3;
- (void)setSrtInitialPos:(long long)arg1 posX:(double)arg2 posY:(double)arg3;
- (void)setSrtAudioInfo:(long long)arg1 seqIn:(double)arg2 trimIn:(double)arg3 duration:(double)arg4 audioCycle:(_Bool)arg5;
- (void)setSrtManipulate:(long long)arg1 state:(_Bool)arg2;
- (void)setSrtFont:(long long)arg1 fontPath:(id)arg2;
- (void)setSrtInfo:(long long)arg1 srt:(id)arg2;
- (void)setSrtColor:(long long)arg1 red:(double)arg2 green:(double)arg3 blue:(double)arg4 alpha:(double)arg5;
- (_Bool)handleRotationEvent:(double)arg1;
- (_Bool)handleScaleEvent:(double)arg1;
- (_Bool)handlePanEventWithTranslation:(struct CGPoint)arg1 location:(struct CGPoint)arg2;
- (_Bool)handleLongPressEventWithLocation:(struct CGPoint)arg1;
- (_Bool)handleTouchEvent:(struct CGPoint)arg1;
- (_Bool)toggleGestureRecognition:(_Bool)arg1 type:(int)arg2;
- (_Bool)isTouchGestureRecognitionEnabled:(int)arg1;
- (_Bool)updateTouchInfoForRecognition:(struct _VETouchInfo)arg1;
- (_Bool)handleTouchUp:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (_Bool)handleTouchDown:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (_Bool)isAnimationSticker:(long long)arg1;
- (void)updateSticker:(long long)arg1;
- (int)setStickerPreviewMode:(long long)arg1 previewMode:(int)arg2;
- (int)setStickerAnim:(long long)arg1 animType:(int)arg2 animPath:(id)arg3 duration:(double)arg4;
- (int)setTextStickerTextParams:(long long)arg1 textParams:(id)arg2;
- (long long)addTextSticker;
- (long long)addEmojiSticker:(id)arg1;
- (long long)addSubtitleSticker;
- (long long)addStickerbyUIImage:(id)arg1;
- (long long)currentBrushNumber;
- (void)setBrushCanvasAlpha:(double)arg1;
- (void)setBrushSize:(double)arg1;
- (void)setBrushColorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpah:(double)arg4;
- (void)removeLastBrush;
- (_Bool)brushStart;
- (_Bool)brushEnd;
- (void)newFrameReadyAtTime:(CDStruct_1b6d18a9)arg1 atIndex:(long long)arg2 exceptionBlock:(CDUnknownBlockType)arg3;
- (void)setInputFramebuffer:(id)arg1 atIndex:(long long)arg2;
- (long long)nextAvailableTextureIndex;
- (int)p_processFrameForAlgorithmWithFrameBuffers:(id)arg1 timeStamp:(double)arg2;
- (void)renderToTextureWithVertices:(const float *)arg1 textureCoordinates:(const float *)arg2;
- (void)setStickerVisible:(id)arg1 visible:(_Bool)arg2;
- (void)getSticker:(long long)arg1 props:(id)arg2;
- (long long)stickerCount;
- (void)updateStickerLayers;
- (void)setStickerLayer:(long long)arg1 layer:(long long)arg2;
- (void)setStickerAbove:(long long)arg1;
- (id)getInfoStickerKeyFrameInfo:(unsigned long long)arg1 stickerID:(unsigned long long)arg2;
- (void)updateInfoStickerKeyFrameInfoWithStickerId:(long long)arg1;
- (void)updateInfoStickerKeyFrameInfo;
- (void)setSticker:(long long)arg1 startTime:(double)arg2 duration:(double)arg3;
- (void)stopChangeStickerDuration:(long long)arg1;
- (void)startChangeStickerDuration:(long long)arg1;
- (void)setSticker:(long long)arg1 alpha:(double)arg2;
- (void)setSticker:(long long)arg1 pauseAnimation:(_Bool)arg2;
- (void)getSticker:(long long)arg1 flipX:(_Bool *)arg2 flipY:(_Bool *)arg3;
- (void)stopAllStickerAnimAbsoluteUpdate;
- (void)setSticker:(long long)arg1 animId:(int)arg2 inTime:(double)arg3 stillTime:(double)arg4 outTime:(double)arg5;
- (void)setSticker:(long long)arg1 flipX:(_Bool)arg2 flipY:(_Bool)arg3;
- (void)setStickerScale:(long long)arg1 scale:(double)arg2;
- (void)setStickerRelativeScale:(long long)arg1 scale:(double)arg2;
- (void)setStickerAngle:(long long)arg1 angle:(double)arg2;
- (void)setSticker:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3;
- (void)removeInfoSticker:(long long)arg1;
- (struct CGRect)getstickerEditBoundBox:(long long)arg1;
- (void)setInfoStickerRestoreMode:(long long)arg1;
- (long long)getStickerPinStatus:(long long)arg1;
- (void)recoveryPinResult:(long long)arg1;
- (void)savePinResult:(long long)arg1 realVideoSize:(struct CGSize)arg2;
- (void)cancelPin:(long long)arg1;
- (void)stopPin:(long long)arg1;
- (int)startPin:(long long)arg1 pinTime:(float)arg2 startTime:(float)arg3 duration:(float)arg4;
- (void)preparePin:(CDStruct_1b6d18a9)arg1;
- (_Bool)getStickerVisible:(long long)arg1;
- (struct CGPoint)getStickerPosition:(long long)arg1;
- (double)getStickerRotation:(long long)arg1;
- (struct CGSize)getstickerEditBoxSize:(long long)arg1;
- (long long)addInfoSticker:(id)arg1 withEffectInfo:(id)arg2 userInfo:(id)arg3;
- (id)getStickerById:(long long)arg1;
- (void)releaseEngine;
- (_Bool)checkInitSuccessed;
- (void)innerInit;
- (void)dealloc;
- (id)initWithConfig:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

