//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HTSEventContext, IESLiveComponentContext, LiveRoomModel, RACCompoundDisposable;
@protocol IESLiveMTRealStreamingProvider;

@interface IESLiveMTBitrateMonitorStore : NSObject
{
    _Bool _changeNetworkAfterToast;
    LiveRoomModel *_room;
    HTSEventContext *_trackContext;
    IESLiveComponentContext *_componentContext;
    RACCompoundDisposable *_disposable;
    double _previousStuckTime;
    double _previousShowTime;
    long long _networkStatusWhenToast;
    unsigned long long _lastNetworkQuailty;
    id <IESLiveMTRealStreamingProvider> _dataSourceProvider;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <IESLiveMTRealStreamingProvider> dataSourceProvider; // @synthesize dataSourceProvider=_dataSourceProvider;
@property(nonatomic) _Bool changeNetworkAfterToast; // @synthesize changeNetworkAfterToast=_changeNetworkAfterToast;
@property(nonatomic) unsigned long long lastNetworkQuailty; // @synthesize lastNetworkQuailty=_lastNetworkQuailty;
@property(nonatomic) long long networkStatusWhenToast; // @synthesize networkStatusWhenToast=_networkStatusWhenToast;
@property(nonatomic) double previousShowTime; // @synthesize previousShowTime=_previousShowTime;
@property(nonatomic) double previousStuckTime; // @synthesize previousStuckTime=_previousStuckTime;
@property(retain, nonatomic) RACCompoundDisposable *disposable; // @synthesize disposable=_disposable;
@property(retain, nonatomic) IESLiveComponentContext *componentContext; // @synthesize componentContext=_componentContext;
@property(retain, nonatomic) HTSEventContext *trackContext; // @synthesize trackContext=_trackContext;
@property(retain, nonatomic) LiveRoomModel *room; // @synthesize room=_room;
- (id)netSpeedToTrackStr:(unsigned long long)arg1;
- (id)networkStatusToTrackStr:(long long)arg1;
- (void)trackChangeNetSpeedShow:(unsigned long long)arg1;
- (void)trackNetworkSwitch;
- (void)trackNetSpeedStuckShow;
- (void)trackNetSpeedShow:(unsigned long long)arg1;
- (id)startIntervalBitrateUpdate;
- (void)onNetworkStatusChanged:(id)arg1;
- (_Bool)isBitrateMonitorEnable;
- (id)initWithRoom:(id)arg1 trackContext:(id)arg2 componentContext:(id)arg3;
- (void)dealloc;

@end

