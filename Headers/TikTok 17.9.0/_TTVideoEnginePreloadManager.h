//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class AVMDLDataLoader, NSString, NSTimer, TTVideoEnginePreloadQueue, _TTVideoEngineTaskQueue;
@protocol IVCMediaLoadManager, OS_dispatch_queue, TTVideoEnginePreloadDelegate;

@interface _TTVideoEnginePreloadManager : NSObject
{
    struct _opaque_pthread_mutex_t _runStateLock;
    _Bool _running;
    id <TTVideoEnginePreloadDelegate> _preloadDelegate;
    CDUnknownBlockType _speedInfoBlock;
    _TTVideoEngineTaskQueue *_preloadTasks;
    _TTVideoEngineTaskQueue *_executeTasks;
    _TTVideoEngineTaskQueue *_allPlayTasks;
    _TTVideoEngineTaskQueue *_allPreloadTasks;
    TTVideoEnginePreloadQueue *_observes;
    TTVideoEnginePreloadQueue *_progressObjects;
    AVMDLDataLoader *_preloader;
    long long _heartBeatInterval;
    NSTimer *_heartBeatTimer;
    NSObject<OS_dispatch_queue> *_heartBeatQueue;
    id <IVCMediaLoadManager> _mediaLoad;
    TTVideoEnginePreloadQueue *_medias;
    TTVideoEnginePreloadQueue *_mediaPlayTasks;
    NSString *_updatingSourceId;
}

+ (id)shareLoader;
@property(copy) NSString *updatingSourceId; // @synthesize updatingSourceId=_updatingSourceId;
@property(retain, nonatomic) TTVideoEnginePreloadQueue *mediaPlayTasks; // @synthesize mediaPlayTasks=_mediaPlayTasks;
@property(retain, nonatomic) TTVideoEnginePreloadQueue *medias; // @synthesize medias=_medias;
@property(retain, nonatomic) id <IVCMediaLoadManager> mediaLoad; // @synthesize mediaLoad=_mediaLoad;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *heartBeatQueue; // @synthesize heartBeatQueue=_heartBeatQueue;
@property(retain, nonatomic) NSTimer *heartBeatTimer; // @synthesize heartBeatTimer=_heartBeatTimer;
@property(nonatomic) long long heartBeatInterval; // @synthesize heartBeatInterval=_heartBeatInterval;
@property(nonatomic, getter=isRunning) _Bool running; // @synthesize running=_running;
@property(retain, nonatomic) AVMDLDataLoader *preloader; // @synthesize preloader=_preloader;
@property(retain, nonatomic) TTVideoEnginePreloadQueue *progressObjects; // @synthesize progressObjects=_progressObjects;
@property(retain, nonatomic) TTVideoEnginePreloadQueue *observes; // @synthesize observes=_observes;
@property(retain, nonatomic) _TTVideoEngineTaskQueue *allPreloadTasks; // @synthesize allPreloadTasks=_allPreloadTasks;
@property(retain, nonatomic) _TTVideoEngineTaskQueue *allPlayTasks; // @synthesize allPlayTasks=_allPlayTasks;
@property(retain, nonatomic) _TTVideoEngineTaskQueue *executeTasks; // @synthesize executeTasks=_executeTasks;
@property(retain, nonatomic) _TTVideoEngineTaskQueue *preloadTasks; // @synthesize preloadTasks=_preloadTasks;
@property(copy, nonatomic) CDUnknownBlockType speedInfoBlock; // @synthesize speedInfoBlock=_speedInfoBlock;
@property(nonatomic) __weak id <TTVideoEnginePreloadDelegate> preloadDelegate; // @synthesize preloadDelegate=_preloadDelegate;
- (void).cxx_destruct;
- (void)_playTaskEndNotify:(id)arg1 flag:(long long)arg2;
- (id)_processTaskInfo:(id)arg1 isPreload:(_Bool)arg2 flag:(long long)arg3;
- (void)taskStateChange:(id)arg1 taskType:(long long)arg2 state:(long long)arg3;
- (void)testSpeedInfoByTime:(long long)arg1 sizeByte:(long long)arg2 type:(id)arg3 key:(id)arg4;
- (void)dataloader:(id)arg1 downloadSuspend:(id)arg2;
- (void)dataloader:(id)arg1 downloadFail:(id)arg2 error:(id)arg3;
- (void)dataloader:(id)arg1 downloadProgress:(id)arg2;
- (void)onCDNLog:(id)arg1;
- (id)getCustomHttpHeader:(id)arg1;
- (id)getStringBykey:(id)arg1 code:(long long)arg2 type:(long long)arg3;
- (void)preloadTaskCanceled:(id)arg1;
- (void)preloadEnd:(id)arg1;
- (void)taskFailed:(id)arg1 taskType:(long long)arg2 error:(id)arg3;
- (void)taskProgress:(id)arg1 taskType:(long long)arg2 flag:(long long)arg3;
- (void)testSpeedInfo:(long long)arg1 size:(long long)arg2;
- (void)logUpdate:(id)arg1;
- (void)didFinishTask:(id)arg1 error:(id)arg2;
- (id)_headerString:(id)arg1;
- (void)_prepareUrlInfo:(id)arg1 task:(id)arg2 track:(id)arg3;
- (void)_startMDLPreloadTask:(id)arg1 track:(id)arg2;
- (void)_exectTask:(id)arg1;
- (void)taskFinished:(id)arg1;
- (void)_configureMdlAlog;
- (void)_configureSetting;
- (void)stopPreloadTask:(id)arg1;
- (void)startPreloadTask:(id)arg1;
- (Class)_mediaLoadManagerClass;
- (Class)_mediaLoadMediaClass;
- (id)getCurrentPlaySourceId;
- (id)getCacheState;
- (float)getNetworkSpeed;
- (float)getPlayPos;
- (void)removeObserver:(id)arg1;
- (void)addObserver:(id)arg1;
- (void)_preConnectUrl:(id)arg1;
- (void)_cancelAllTasks;
- (void)_notifyCanceled:(id)arg1;
- (void *)getNativeMedialoaderHandle;
- (void)getCacheSizeByFilePath:(id)arg1 result:(CDUnknownBlockType)arg2;
- (void)enableAutoTrimForKey:(id)arg1;
- (void)disableAutoTrimForKey:(id)arg1;
- (void)getCacheSizeByKey:(id)arg1 result:(CDUnknownBlockType)arg2;
- (id)getCacheInfoByFilePath:(id)arg1;
- (id)getCacheInfoByKey:(id)arg1;
- (long long)getCacheSizeByFilePath:(id)arg1;
- (long long)getCacheSizeByKey:(id)arg1;
- (long long)getAllCacheSize;
- (void)removeFileCacheByKey:(id)arg1;
- (void)clearAllCaches;
- (void)cancelAllTasks;
- (void)cancelTaskByKey:(id)arg1;
- (void)cancelTaskByVideoId:(id)arg1;
- (void)_startExecuteTask;
- (void)_addTask:(id)arg1 vid:(id)arg2 preSize:(long long)arg3 urlItem:(id)arg4 vidItem:(id)arg5 videoModeltem:(id)arg6;
- (void)_addMediaWithTask:(id)arg1 track:(id)arg2;
- (void)_addMediaTask:(id)arg1 mediaInfo:(id)arg2;
- (void)addTask:(id)arg1;
- (void)addTaskWithURLItem:(id)arg1;
- (void)addTask:(id)arg1 vidItem:(id)arg2;
- (void)updateTimer;
- (void)close;
- (void)start;
- (id)init;
- (void)dealloc;

@end

