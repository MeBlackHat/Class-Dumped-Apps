//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSString, WKWebView;
@protocol HTSKVStore, IESLiveAppInfo, IESLiveDebugService, IESLiveEnvironment, IESLiveLanguageService, IESLiveSettings, IESLiveWebViewService;

@interface IESLiveHybridManager : NSObject
{
    _Bool _hasInjectedBaseInnerDomains;
    NSArray *_innerDomains;
    NSString *_systemUserAgent;
    WKWebView *_uaWebView;
    id <IESLiveAppInfo> _appInfo;
    id <IESLiveEnvironment> _environment;
    id <IESLiveLanguageService> _languageService;
    id <IESLiveSettings> _settings;
    id <IESLiveWebViewService> _webViewService;
    id <HTSKVStore> _kvStore;
    id <IESLiveDebugService> _debugService;
}

+ (id)shared;
- (void).cxx_destruct;
@property(retain, nonatomic) id <IESLiveDebugService> debugService; // @synthesize debugService=_debugService;
@property(retain, nonatomic) id <HTSKVStore> kvStore; // @synthesize kvStore=_kvStore;
@property(retain, nonatomic) id <IESLiveWebViewService> webViewService; // @synthesize webViewService=_webViewService;
@property(retain, nonatomic) id <IESLiveSettings> settings; // @synthesize settings=_settings;
@property(retain, nonatomic) id <IESLiveLanguageService> languageService; // @synthesize languageService=_languageService;
@property(retain, nonatomic) id <IESLiveEnvironment> environment; // @synthesize environment=_environment;
@property(retain, nonatomic) id <IESLiveAppInfo> appInfo; // @synthesize appInfo=_appInfo;
@property(retain, nonatomic) WKWebView *uaWebView; // @synthesize uaWebView=_uaWebView;
@property(copy, nonatomic) NSString *systemUserAgent; // @synthesize systemUserAgent=_systemUserAgent;
@property(nonatomic) _Bool hasInjectedBaseInnerDomains; // @synthesize hasInjectedBaseInnerDomains=_hasInjectedBaseInnerDomains;
@property(copy, nonatomic) NSArray *innerDomains; // @synthesize innerDomains=_innerDomains;
- (_Bool)isOfflineForURL:(id)arg1;
- (id)extraJSPathFromGeckoWithURL:(id)arg1 lynxRuntimeFileName:(id)arg2 metaData:(id *)arg3;
- (id)extraJSPathFromCDNWithURL:(id)arg1 lynxRuntimeFileName:(id)arg2;
- (id)fetchTaroPathIfExists:(CDUnknownBlockType)arg1;
- (id)fetchTaroPathIfExists;
- (void)addPrivateDomains:(id)arg1;
- (id)innderDomainsForSettings;
- (void)addInnerDomainsFromSettings;
- (void)configInnerDomainsIfNeed;
- (id)allowList;
- (id)secondLevelDomainForHost:(id)arg1;
- (_Bool)inAllowListWith:(id)arg1;
- (id)uaRemoveBlankIfNeed:(id)arg1;
- (id)customUserAgent;
- (id)hostUserAgent;
- (id)didReceiveSystemUA:(id)arg1;
- (id)fetchSystemUserAgent;
- (void)registerUserAgentWithWKWebView:(id)arg1;
- (void)buildInnerDomains;
- (id)init;

@end

