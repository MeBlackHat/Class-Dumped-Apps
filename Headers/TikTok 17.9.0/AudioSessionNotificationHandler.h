//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface AudioSessionNotificationHandler : NSObject
{
    // Error parsing type: ^{AudioDevice={mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}@^{OpaqueAudioComponentInstance}^{OpaqueAudioComponentInstance}^{OpaqueAudioComponent}^{AudioBufferList}ddiBBBBBBB@{AudioStreamBasicDescription=dIIIIIIII}{atomic<bool>=AB}BBBB{function<void (AudioBufferList *, int, int, int, int, void *)>={type=[24C]}^{__base<void (AudioBufferList *, int, int, int, int, void *)>}}{function<void (AudioBufferList *, const AudioTimeStamp *, int, AudioBufferList *, AudioBufferList *, void *)>={type=[24C]}^{__base<void (AudioBufferList *, const AudioTimeStamp *, int, AudioBufferList *, AudioBufferList *, void *)>}}^v^v^vqq{queue<AudioBufferList *, std::__1::deque<AudioBufferList *, std::__1::allocator<AudioBufferList *> > >={deque<AudioBufferList *, std::__1::allocator<AudioBufferList *> >={__split_buffer<AudioBufferList **, std::__1::allocator<AudioBufferList **> >=^^^{AudioBufferList}^^^{AudioBufferList}^^^{AudioBufferList}{__compressed_pair<AudioBufferList ***, std::__1::allocator<AudioBufferList **> >=^^^{AudioBufferList}}}Q{__compressed_pair<unsigned long, std::__1::allocator<AudioBufferList *> >=Q}}}{queue<AudioTimeStamp *, std::__1::deque<AudioTimeStamp *, std::__1::allocator<AudioTimeStamp *> > >={deque<AudioTimeStamp *, std::__1::allocator<AudioTimeStamp *> >={__split_buffer<AudioTimeStamp **, std::__1::allocator<AudioTimeStamp **> >=^^^{AudioTimeStamp}^^^{AudioTimeStamp}^^^{AudioTimeStamp}{__compressed_pair<AudioTimeStamp ***, std::__1::allocator<AudioTimeStamp **> >=^^^{AudioTimeStamp}}}Q{__compressed_pair<unsigned long, std::__1::allocator<AudioTimeStamp *> >=Q}}}B{thread=^{_opaque_pthread_t}}d}, name: _source
    struct mutex _mutex;
}

- (id).cxx_construct;
- (void).cxx_destruct;
-     // Error parsing type: v24@0:8^{AudioDevice={mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{condition_variable={_opaque_pthread_cond_t=q[40c]}}@^{OpaqueAudioComponentInstance}^{OpaqueAudioComponentInstance}^{OpaqueAudioComponent}^{AudioBufferList}ddiBBBBBBB@{AudioStreamBasicDescription=dIIIIIIII}{atomic<bool>=AB}BBBB{function<void (AudioBufferList *, int, int, int, int, void *)>={type=[24C]}^{__base<void (AudioBufferList *, int, int, int, int, void *)>}}{function<void (AudioBufferList *, const AudioTimeStamp *, int, AudioBufferList *, AudioBufferList *, void *)>={type=[24C]}^{__base<void (AudioBufferList *, const AudioTimeStamp *, int, AudioBufferList *, AudioBufferList *, void *)>}}^v^v^vqq{queue<AudioBufferList *, std::__1::deque<AudioBufferList *, std::__1::allocator<AudioBufferList *> > >={deque<AudioBufferList *, std::__1::allocator<AudioBufferList *> >={__split_buffer<AudioBufferList **, std::__1::allocator<AudioBufferList **> >=^^^{AudioBufferList}^^^{AudioBufferList}^^^{AudioBufferList}{__compressed_pair<AudioBufferList ***, std::__1::allocator<AudioBufferList **> >=^^^{AudioBufferList}}}Q{__compressed_pair<unsigned long, std::__1::allocator<AudioBufferList *> >=Q}}}{queue<AudioTimeStamp *, std::__1::deque<AudioTimeStamp *, std::__1::allocator<AudioTimeStamp *> > >={deque<AudioTimeStamp *, std::__1::allocator<AudioTimeStamp *> >={__split_buffer<AudioTimeStamp **, std::__1::allocator<AudioTimeStamp **> >=^^^{AudioTimeStamp}^^^{AudioTimeStamp}^^^{AudioTimeStamp}{__compressed_pair<AudioTimeStamp ***, std::__1::allocator<AudioTimeStamp **> >=^^^{AudioTimeStamp}}}Q{__compressed_pair<unsigned long, std::__1::allocator<AudioTimeStamp *> >=Q}}}B{thread=^{_opaque_pthread_t}}d}16, name: setAudioSource:
- (void)handleInterruption:(id)arg1;
- (void)handleRouteChangeNotification:(id)arg1;

@end

