//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class FMDatabase, FMDatabaseQueue, NSMutableArray, NSMutableDictionary, NSString;
@protocol OS_dispatch_semaphore;

@interface BGDB : NSObject
{
    _Bool _debug;
    _Bool _disableCloseDB;
    _Bool _inTransaction;
    unsigned int _transactionThread;
    NSObject<OS_dispatch_semaphore> *_semaphore;
    NSString *_sqliteName;
    NSString *_rootPath;
    FMDatabaseQueue *_queue;
    FMDatabase *_db;
    long long _delteErrorCode;
    NSMutableDictionary *_changeBlocks;
    NSMutableArray *_transactionBlocks;
}

+ (unsigned int)currentDBUserVersion;
@property(retain, nonatomic) NSMutableArray *transactionBlocks; // @synthesize transactionBlocks=_transactionBlocks;
@property(retain, nonatomic) NSMutableDictionary *changeBlocks; // @synthesize changeBlocks=_changeBlocks;
@property(nonatomic) long long delteErrorCode; // @synthesize delteErrorCode=_delteErrorCode;
@property(nonatomic) unsigned int transactionThread; // @synthesize transactionThread=_transactionThread;
@property(nonatomic) _Bool inTransaction; // @synthesize inTransaction=_inTransaction;
@property(retain, nonatomic) FMDatabase *db; // @synthesize db=_db;
@property(retain, nonatomic) FMDatabaseQueue *queue; // @synthesize queue=_queue;
@property(copy, nonatomic) NSString *rootPath; // @synthesize rootPath=_rootPath;
@property(nonatomic) _Bool disableCloseDB; // @synthesize disableCloseDB=_disableCloseDB;
@property(copy, nonatomic) NSString *sqliteName; // @synthesize sqliteName=_sqliteName;
@property(nonatomic) _Bool debug; // @synthesize debug=_debug;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *semaphore; // @synthesize semaphore=_semaphore;
- (void).cxx_destruct;
- (long long)deleteErrorCode;
- (void)vacuumDB;
- (_Bool)ifNotExistWillCreateTableWithObject:(id)arg1 ignoredKeys:(id)arg2;
- (_Bool)bg_deleteValueForKey:(id)arg1;
- (id)bg_valueForKey:(id)arg1;
- (void)bg_enumerateKeysAndObjectsUsingBlock:(CDUnknownBlockType)arg1;
- (_Bool)bg_updateValue:(id)arg1 forKey:(id)arg2;
- (_Bool)bg_setValue:(id)arg1 forKey:(id)arg2;
- (void)saveDictionary:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (_Bool)deleteObjectWithName:(id)arg1 index:(long long)arg2;
- (_Bool)updateObjectWithName:(id)arg1 object:(id)arg2 index:(long long)arg3;
- (id)queryArrayWithName:(id)arg1 index:(long long)arg2;
- (void)queryArrayWithName:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)saveArray:(id)arg1 name:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (id)bg_executeSql:(id)arg1 tablename:(id)arg2 class:(Class)arg3;
- (void)copyTable:(id)arg1 to:(id)arg2 keyDict:(id)arg3 append:(_Bool)arg4 complete:(CDUnknownBlockType)arg5;
- (void)copyQueueTable:(id)arg1 to:(id)arg2 keyDict:(id)arg3 append:(_Bool)arg4 complete:(CDUnknownBlockType)arg5;
- (void)dropWithTableName:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)clearWithObject:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)updateWithObject:(id)arg1 forKeyPathAndValues:(id)arg2 ignoreKeys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateQueueWithObject:(id)arg1 forKeyPathAndValues:(id)arg2 ignoreKeys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateWithObject:(id)arg1 where:(id)arg2 ignoreKeys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateQueueWithObject:(id)arg1 where:(id)arg2 ignoreKeys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)queryObjectWithTableName:(id)arg1 class:(Class)arg2 where:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)queryObjectQueueWithTableName:(id)arg1 class:(Class)arg2 where:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)saveObject:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)bg_saveOrUpateArray:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)updateObjects:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)saveObjects:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)updateSetWithObjects:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)insertWithObjects:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (id)getArray:(id)arg1 ignoredKeys:(id)arg2 filtModelInfoType:(long long)arg3;
- (void)insertWithObject:(id)arg1 ignoredKeys:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)ifIvarChangeForObject:(id)arg1 ignoredKeys:(id)arg2;
- (void)refreshTable:(id)arg1 class:(Class)arg2 keys:(id)arg3 keyDict:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (void)refreshQueueTable:(id)arg1 class:(Class)arg2 keys:(id)arg3 keyDict:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (void)copyA:(id)arg1 toB:(id)arg2 keyDict:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)refreshTable:(id)arg1 class:(Class)arg2 keys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)refreshQueueTable:(id)arg1 class:(Class)arg2 keys:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)copyA:(id)arg1 toB:(id)arg2 class:(Class)arg3 keys:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (long long)countForTable:(id)arg1 forKeyPathAndValues:(id)arg2;
- (long long)countQueueForTable:(id)arg1 forKeyPathAndValues:(id)arg2;
- (double)sqliteMethodForTable:(id)arg1 type:(long long)arg2 key:(id)arg3 where:(id)arg4;
- (double)sqliteMethodQueueForTable:(id)arg1 type:(long long)arg2 key:(id)arg3 where:(id)arg4;
- (long long)countForTable:(id)arg1 conditions:(id)arg2;
- (long long)countQueueForTable:(id)arg1 conditions:(id)arg2;
- (long long)countForTable:(id)arg1 where:(id)arg2;
- (long long)countQueueForTable:(id)arg1 where:(id)arg2;
- (void)addTable:(id)arg1 key:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)dropSafeTable:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)dropTable:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)clearTable:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)deleteWithTableName:(id)arg1 forKeyPathAndValues:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)deleteQueueWithTableName:(id)arg1 forKeyPathAndValues:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)deleteWithTableName:(id)arg1 conditions:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)deleteQueueWithTableName:(id)arg1 conditions:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)deleteWithTableName:(id)arg1 where:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)updateWithTableName:(id)arg1 forKeyPathAndValues:(id)arg2 valueDict:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateQueueWithTableName:(id)arg1 conditions:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)updateObject:(id)arg1 propertyName:(id)arg2 propertyValue:(id)arg3 conditions:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (void)updateObject:(id)arg1 ignoreKeys:(id)arg2 conditions:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateWithObject:(id)arg1 valueDict:(id)arg2 conditions:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateQueueWithTableName:(id)arg1 valueDict:(id)arg2 conditions:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateWithTableName:(id)arg1 valueDict:(id)arg2 where:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)queryWithTableName:(id)arg1 where:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)queryWithTableName:(id)arg1 keys:(id)arg2 where:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)queryWithTableName:(id)arg1 conditions:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)queryQueueWithTableName:(id)arg1 conditions:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)bg_saveOrUpdateWithTableName:(id)arg1 class:(Class)arg2 DictArray:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)updateSetTableName:(id)arg1 class:(Class)arg2 DictArray:(id)arg3 complete:(CDUnknownBlockType)arg4;
- (void)insertIntoTableName:(id)arg1 DictArray:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (void)insertIntoTableName:(id)arg1 Dict:(id)arg2 complete:(CDUnknownBlockType)arg3;
- (long long)getKeyMaxForTable:(id)arg1 key:(id)arg2 db:(id)arg3;
- (void)createTableWithTableName:(id)arg1 keys:(id)arg2 unionPrimaryKeys:(id)arg3 uniqueKeys:(id)arg4 complete:(CDUnknownBlockType)arg5;
- (_Bool)bg_isExistWithTableName:(id)arg1;
- (void)isExistWithTableName:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (void)doChangeWithName:(id)arg1 flag:(_Bool)arg2 state:(long long)arg3;
- (_Bool)removeChangeWithName:(id)arg1;
- (_Bool)registerChangeWithName:(id)arg1 block:(CDUnknownBlockType)arg2;
- (void)executeDB:(CDUnknownBlockType)arg1;
- (void)executeTransationBlocks;
- (void)executeCheckpoint;
- (void)executeTransation:(CDUnknownBlockType)arg1;
- (void)inTransaction:(CDUnknownBlockType)arg1;
- (id)initWithPath:(id)arg1;
- (id)init;
- (void)closeDB;
- (void)destroy;
- (void)dealloc;

@end

