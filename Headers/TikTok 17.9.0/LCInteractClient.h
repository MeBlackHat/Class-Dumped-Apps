//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "LCInteractVideoFrozenStatisticsDelegate-Protocol.h"
#import "OnerRtcEngineDelegate-Protocol.h"

@class LCInteractConfiguration, LCInteractQosInfo, LCInteractRtcClientParams, LCInteractRtcTranscodeAVParams, LCInteractSession, LCInteractVideosDurationStatistics, LiveRtc, NSLock, NSMutableArray, NSMutableDictionary, NSString, NSTimer;
@protocol LCInteractClientDelegate;

@interface LCInteractClient : NSObject <OnerRtcEngineDelegate, LCInteractVideoFrozenStatisticsDelegate>
{
    _Bool _preJoinChannel;
    _Bool _shouldEnableLogReport;
    _Bool _enableTranscoding;
    _Bool _isNeedStartVolumeBySelf;
    _Bool _displayDirect;
    int _reportTimeInterval;
    CDUnknownBlockType _requestChannelKeyBlock;
    CDUnknownBlockType _clientVideoFrameCallback;
    CDUnknownBlockType _clientLayoutChangedCallback;
    CDUnknownBlockType _logBlock;
    CDUnknownBlockType _debugLogBlock;
    id <LCInteractClientDelegate> _delegate;
    LiveRtc *_rtcEngine;
    CDUnknownBlockType _internAudioVolumeReportBlock;
    LCInteractConfiguration *_config;
    NSMutableDictionary *_remoteUsersMap;
    NSMutableDictionary *_warningCodeMap;
    NSMutableArray *_internSessions;
    NSLock *_sessionsLock;
    LCInteractSession *_localSession;
    LCInteractSession *_hostSession;
    long long _runState;
    LCInteractRtcClientParams *_rtcClientParams;
    LCInteractRtcTranscodeAVParams *_rtcTranscodeAVParams;
    LCInteractQosInfo *_qosInfo;
    NSTimer *_statisticsTimer;
    long long _timeTickCnt;
    LCInteractVideosDurationStatistics *_videosDurationStatistics;
    unsigned long long _rtcReportId;
    NSMutableArray *_retainLastVideoSessions;
    NSString *_lastRtcConfigDescription;
    NSString *_stream_name;
}

+ (unsigned long long)convertByteNetworkQuality:(unsigned long long)arg1;
+ (id)getPlayModeDescription:(long long)arg1;
+ (id)getSdkVersion;
@property(retain, nonatomic) NSString *stream_name; // @synthesize stream_name=_stream_name;
@property(nonatomic) _Bool displayDirect; // @synthesize displayDirect=_displayDirect;
@property(retain, nonatomic) NSString *lastRtcConfigDescription; // @synthesize lastRtcConfigDescription=_lastRtcConfigDescription;
@property(retain, nonatomic) NSMutableArray *retainLastVideoSessions; // @synthesize retainLastVideoSessions=_retainLastVideoSessions;
@property unsigned long long rtcReportId; // @synthesize rtcReportId=_rtcReportId;
@property(retain, nonatomic) LCInteractVideosDurationStatistics *videosDurationStatistics; // @synthesize videosDurationStatistics=_videosDurationStatistics;
@property long long timeTickCnt; // @synthesize timeTickCnt=_timeTickCnt;
@property(retain, nonatomic) NSTimer *statisticsTimer; // @synthesize statisticsTimer=_statisticsTimer;
@property(retain, nonatomic) LCInteractQosInfo *qosInfo; // @synthesize qosInfo=_qosInfo;
@property(nonatomic) _Bool isNeedStartVolumeBySelf; // @synthesize isNeedStartVolumeBySelf=_isNeedStartVolumeBySelf;
@property(retain, nonatomic) LCInteractRtcTranscodeAVParams *rtcTranscodeAVParams; // @synthesize rtcTranscodeAVParams=_rtcTranscodeAVParams;
@property(retain, nonatomic) LCInteractRtcClientParams *rtcClientParams; // @synthesize rtcClientParams=_rtcClientParams;
@property(nonatomic) _Bool enableTranscoding; // @synthesize enableTranscoding=_enableTranscoding;
@property(nonatomic) long long runState; // @synthesize runState=_runState;
@property(nonatomic) __weak LCInteractSession *hostSession; // @synthesize hostSession=_hostSession;
@property(retain, nonatomic) LCInteractSession *localSession; // @synthesize localSession=_localSession;
@property(retain, nonatomic) NSLock *sessionsLock; // @synthesize sessionsLock=_sessionsLock;
@property(retain, nonatomic) NSMutableArray *internSessions; // @synthesize internSessions=_internSessions;
@property(retain, nonatomic) NSMutableDictionary *warningCodeMap; // @synthesize warningCodeMap=_warningCodeMap;
@property(retain, nonatomic) NSMutableDictionary *remoteUsersMap; // @synthesize remoteUsersMap=_remoteUsersMap;
@property(retain, nonatomic) LCInteractConfiguration *config; // @synthesize config=_config;
@property(copy, nonatomic) CDUnknownBlockType internAudioVolumeReportBlock; // @synthesize internAudioVolumeReportBlock=_internAudioVolumeReportBlock;
@property(retain, nonatomic) LiveRtc *rtcEngine; // @synthesize rtcEngine=_rtcEngine;
@property(nonatomic) __weak id <LCInteractClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) CDUnknownBlockType debugLogBlock; // @synthesize debugLogBlock=_debugLogBlock;
@property(copy, nonatomic) CDUnknownBlockType logBlock; // @synthesize logBlock=_logBlock;
@property(nonatomic) int reportTimeInterval; // @synthesize reportTimeInterval=_reportTimeInterval;
@property(nonatomic) _Bool shouldEnableLogReport; // @synthesize shouldEnableLogReport=_shouldEnableLogReport;
@property(copy, nonatomic) CDUnknownBlockType clientLayoutChangedCallback; // @synthesize clientLayoutChangedCallback=_clientLayoutChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType clientVideoFrameCallback; // @synthesize clientVideoFrameCallback=_clientVideoFrameCallback;
@property(copy, nonatomic) CDUnknownBlockType requestChannelKeyBlock; // @synthesize requestChannelKeyBlock=_requestChannelKeyBlock;
@property(nonatomic) _Bool preJoinChannel; // @synthesize preJoinChannel=_preJoinChannel;
- (void).cxx_destruct;
- (void)setRemoteVideoDisplayDirect:(_Bool)arg1;
- (id)descriptionWithReason:(unsigned long long)arg1;
- (_Bool)useExtVideoRender:(id)arg1;
- (_Bool)useExtVideoSink:(id)arg1;
- (_Bool)useExtVideoSource:(id)arg1;
- (_Bool)useExtAudioRender:(id)arg1;
- (_Bool)useExtAudioSink:(id)arg1;
- (_Bool)useExtAudioSource:(id)arg1;
- (_Bool)useExtLiveTranscoding:(id)arg1;
- (void)appBecomeActive;
- (void)appBecomeInActive;
- (void)removeAllRetainLastSessions;
- (void)removeAllSessions;
- (void)deleteSessionWithUID:(id)arg1;
- (id)fetchSessionOfUID:(id)arg1;
- (id)fullSession;
- (id)sessions;
- (_Bool)isHost;
- (id)currentLog;
- (void)reportInteractStatusLog:(id)arg1 params:(id)arg2;
- (id)commonLog;
- (id)VideosDurationStatistics;
- (void)updateStat:(id)arg1;
- (void)_stopStatisticsTimer;
- (void)_startStatisticsTimer;
- (id)QoSInfo;
- (void)debugLog:(id)arg1;
- (void)interactClientWillLeaveChannel:(id)arg1;
- (void)rtcEngine:(id)arg1 log:(id)arg2;
- (void)rtcEngine:(id)arg1 didProviderSwitchEndSuccess:(id)arg2;
- (void)rtcEngine:(id)arg1 didProviderSwitchEndFailed:(long long)arg2 Message:(id)arg3;
- (void)rtcEngine:(id)arg1 didProviderSwitchStart:(_Bool)arg2;
- (void)rtcEngine:(id)arg1 didAudioRouteChanged:(long long)arg2;
- (void)rtcEngine:(id)arg1 lastmileQuality:(unsigned long long)arg2;
- (void)rtcEngine:(id)arg1 audioQualityOfUid:(id)arg2 quality:(unsigned long long)arg3 delay:(unsigned long long)arg4 lost:(unsigned long long)arg5;
- (void)rtcEngine:(id)arg1 videoSizeChangedOfUid:(id)arg2 size:(struct CGSize)arg3 rotation:(long long)arg4;
- (void)rtcEngineDidAudioEffectFinish:(id)arg1 soundId:(long long)arg2;
- (void)rtcEngineLocalAudioMixingDidFinish:(id)arg1;
- (void)rtcEngine:(id)arg1 didLocalAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 onStreamAdd:(id)arg2 info:(id)arg3;
- (void)rtcEngine:(id)arg1 didPublishSucceedOfStream:(id)arg2;
- (void)rtcEngine:(id)arg1 didStreamRemoved:(id)arg2 info:(id)arg3;
- (void)rtcEngine:(id)arg1 didRegisteredLocalUser:(id)arg2 withUid:(id)arg3;
- (_Bool)needUpdateRemoteFirstAudioOrVideo:(int)arg1 uid:(id)arg2;
- (void)reportVideoFrozenWithUid:(id)arg1 Elapse:(unsigned long long)arg2;
- (void)videoFrameAvailableWithStreamID:(id)arg1;
- (int)enableAudioVolumeIndication:(long long)arg1 smooth:(long long)arg2;
- (int)muteAllRemoteVideoStreams:(_Bool)arg1;
- (int)muteRemoteVideoStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalVideoStream:(_Bool)arg1;
- (int)enableLocalVideo:(_Bool)arg1;
- (int)disableVideo;
- (int)enableVideo;
- (int)muteAllRemoteAudioStreams:(_Bool)arg1;
- (int)muteRemoteAudioStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalAudioStream:(_Bool)arg1;
- (int)enableLocalAudio:(_Bool)arg1;
- (int)disableAudio;
- (int)enableAudio;
- (int)adjustRecordingSignalVolume:(long long)arg1;
- (int)startAudioMixing:(id)arg1 loopback:(_Bool)arg2 replace:(_Bool)arg3 cycle:(long long)arg4;
- (int)resumeAudioMixing;
- (int)pauseAudioMixing;
- (int)stopAudioMixing;
- (int)adjustPlaybackSignalVolume:(int)arg1;
- (void)rtcEngine:(id)arg1 networkQuality:(id)arg2 txQuality:(unsigned long long)arg3 rxQuality:(unsigned long long)arg4;
- (void)rtcEngine:(id)arg1 localVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 reportRtcStats:(id)arg2;
- (void)rtcEngine:(id)arg1 remoteVideoStateChangedOfUid:(id)arg2 state:(long long)arg3 stalltime:(long long)arg4;
- (void)rtcEngine:(id)arg1 remoteVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 connectionChangedToState:(long long)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didLocalVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngineConnectionDidInterrupted:(id)arg1;
- (void)rtcEngineConnectionDidLost:(id)arg1;
- (void)rtcEngine:(id)arg1 didOccurWarning:(long long)arg2;
- (void)rtcEngine:(id)arg1 didOccurError:(long long)arg2 originalError:(id)arg3;
- (void)rtcEngine:(id)arg1 firstLocalAudioFrame:(long long)arg2;
- (void)rtcEngine:(id)arg1 firstLocalVideoFrameWithSize:(struct CGSize)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didOfflineOfUid:(id)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didJoinedOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 videoFrameSinkCallBack:(struct __CVBuffer *)arg2 rotation:(int)arg3 UID:(id)arg4 extendedData:(id)arg5;
- (void)rtcEngine:(id)arg1 firstRemoteAudioFrameDecodedOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteAudioFrameOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteVideoFrameOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteVideoDecodedOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didRejoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didJoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 reportAudioVolumeIndicationOfSpeakers:(id)arg2 totalVolume:(long long)arg3;
- (void)reportRtmpStreamingPublishError;
- (void)publishStream;
- (void)didJoinChannel:(id)arg1 withUid:(id)arg2 elapsed:(long long)arg3;
- (void)p_didJoinChannel:(id)arg1 withUid:(id)arg2 elapsed:(long long)arg3;
- (void)compositingLayoutOfPublisher;
- (id)getTranscoding;
- (_Bool)supportPublish;
- (int)renewChannelKey:(id)arg1;
- (void)layoutSessionViews:(_Bool)arg1;
- (void)addLocalSessionWithMode:(long long)arg1;
- (void)bindRenderer:(id)arg1;
- (void)setRemoteVideoStream:(id)arg1 withStreamType:(long long)arg2;
- (_Bool)isSendDualStream;
- (struct LCVideoProfile)getRtcVideoResolution;
- (int)reportAudioVolumeIndicationWithDuration:(double)arg1 callback:(CDUnknownBlockType)arg2;
- (_Bool)isJoined;
- (_Bool)pullAudioFrame:(void *)arg1 size:(int)arg2 uid:(id)arg3;
- (void)processAudio:(void *)arg1 size:(unsigned int)arg2 timestamp:(double)arg3;
- (void)processVideo:(struct __CVBuffer *)arg1 timeInfo:(CDStruct_1b6d18a9)arg2 extData:(id)arg3;
- (void)layoutAndPublishStream;
- (void)leaveChannel;
- (void)clearVideoCompositingLayout;
- (_Bool)joinChannel;
- (id)newSessionOfUid:(id)arg1;
- (id)sessionOfStrUid:(id)arg1;
- (long long)countRemoteUser;
- (void)setClientConfig:(id)arg1;
- (long long)getMixType:(id)arg1;
- (_Bool)setupWith:(id)arg1 delegate:(id)arg2;
- (void)p_parseStreamName:(id)arg1;
- (_Bool)rtcEngineInitWithConfig:(id)arg1 delegate:(id)arg2;
- (id)init;
- (void)dealloc;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

