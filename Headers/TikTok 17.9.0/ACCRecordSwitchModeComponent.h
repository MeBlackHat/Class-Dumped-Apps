//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ACCFeatureComponent.h"

#import "ACCRecordVideoEventHandler-Protocol.h"

@class ACCSwitchModeViewModel, NSString;
@protocol ACCCameraService, ACCRecordSwitchModeTabConfig, ACCRecorderViewContainer, IESServiceProvider;

@interface ACCRecordSwitchModeComponent : ACCFeatureComponent <ACCRecordVideoEventHandler>
{
    _Bool _isFirstAppear;
    id <IESServiceProvider> _serviceProvider;
    id <ACCRecorderViewContainer> _viewContainer;
    id <ACCRecordSwitchModeTabConfig> _tabConfig;
    id <ACCCameraService> _cameraService;
    ACCSwitchModeViewModel *_viewModel;
}

- (void).cxx_destruct;
@property(retain, nonatomic) ACCSwitchModeViewModel *viewModel; // @synthesize viewModel=_viewModel;
@property(nonatomic) _Bool isFirstAppear; // @synthesize isFirstAppear=_isFirstAppear;
@property(retain, nonatomic) id <ACCCameraService> cameraService; // @synthesize cameraService=_cameraService;
@property(retain, nonatomic) id <ACCRecordSwitchModeTabConfig> tabConfig; // @synthesize tabConfig=_tabConfig;
@property(retain, nonatomic) id <ACCRecorderViewContainer> viewContainer; // @synthesize viewContainer=_viewContainer;
- (id)serviceProvider;
- (id)p_recordModeMap;
- (id)p_getRecordType;
- (id)p_getRecordMode;
- (id)recordVideoEvent;
- (void)setServiceProvider:(id)arg1;
- (id)flowViewModel;
- (_Bool)isSplitting;
- (void)updateSwitchModeViewHidden:(_Bool)arg1;
- (void)handleExclusiveLiveTabIfNeeded;
- (void)showSwitchContainerViewIfNeed;
- (void)bindViewModel;
- (unsigned long long)preferredLoadPhase;
- (void)componentWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)componentDidAppear;
- (void)componentDidMount;
- (id)publishModel;
- (id)init;
- (id)initWithComponentController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

