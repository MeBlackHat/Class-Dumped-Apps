//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IESMMObject.h"

#import "NSCopying-Protocol.h"

@class AVAsset, HTSEffectManager, IESComposEffectProcess, IESMMCanvasConfig, IESMMEffectStickerInfo, IESMMImageMovieInfo, IESMMMVEffectFilter, IESMMMVModel, IESMMStoryConfig, IESMMTimeMachine, IESMMTranscoderParam, IESVideoAddEdgeData, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, VEAudioEncodeConfig, VEImageFetchAsset, VEReadWriteLock, VERecordRecoveryData;

@interface HTSVideoData : IESMMObject <NSCopying>
{
    _Bool _useStitchHeader;
    _Bool _isMicMuted;
    _Bool _isBgmMuted;
    _Bool _isRetainOriginalSound;
    _Bool _isExportTapProcess;
    _Bool _notSupportCrossplat;
    _Bool _isRecordFromCamera;
    _Bool _hasRecordAudioTrack;
    _Bool _isFastImport;
    _Bool _isFromDrafts;
    _Bool _useMVFps;
    _Bool _isPlaying;
    _Bool _useSystemVideoCompostion;
    _Bool _videoCompostionUseCustomClass;
    _Bool _isReencoded;
    _Bool _isInRemakeMode;
    _Bool _forceUseAttachSeconds;
    int _previewFrameRate;
    float _colorFilterIntensity;
    int _mvFps;
    IESMMTranscoderParam *_transParam;
    NSString *_identifier;
    VEAudioEncodeConfig *_audioEncodeConfig;
    VEImageFetchAsset *_imageAsset;
    AVAsset *_videoHeader;
    NSMutableArray *_videoAssets;
    NSMutableArray *_subTrackVideoAssets;
    NSMutableArray *_albumVideoAssets;
    NSMutableDictionary *_assetAnimateInfos;
    NSMutableDictionary *_assetLayers;
    NSMutableDictionary *_videoDuration;
    NSMutableDictionary *_draftFileList;
    NSMutableDictionary *_urlDict;
    NSArray *_infoStickers;
    NSArray *_stickers;
    NSMutableDictionary *_videoTimeClipInfo;
    NSMutableDictionary *_videoVolumnTimeClipInfo;
    NSMutableDictionary *_effectInfo;
    HTSEffectManager *_effectOperationManager;
    double _effectOperationStartTime;
    unsigned long long _currentEffectType;
    NSString *_effectPathId;
    CDUnknownBlockType _effectFilterPathBlock;
    IESMMEffectStickerInfo *_HDREffectInfo;
    NSMutableDictionary *_videoTimeScaleInfo;
    NSMutableDictionary *_videoAudioReservePitch;
    NSMutableDictionary *_videoCurves;
    double _recordRate;
    NSMutableArray *_audioAssets;
    NSMutableArray *_soundsAssets;
    NSMutableDictionary *_videoSoundFilterInfo;
    NSMutableArray *_videoSoundEntireFilters;
    NSMutableDictionary *_audioSoundFilterInfo;
    NSMutableArray *_effectAudioAssets;
    AVAsset *_endingWaterMarkAudio;
    NSMutableDictionary *_audioTimeClipInfo;
    NSMutableDictionary *_audioTimeScaleInfo;
    NSMutableDictionary *_audioStartTimeInfo;
    NSMutableArray *_extraMusicEffectInfo;
    NSMutableArray *_extraMusicEffectAsset;
    NSMutableDictionary *_photoAssetsInfo;
    NSMutableDictionary *_assetCropRectsInfo;
    NSMutableDictionary *_assetRotationsInfo;
    NSMutableDictionary *_assetTransformInfo;
    NSMutableDictionary *_assetMaskAlphaInfo;
    long long _photoMovieTransType;
    NSMutableDictionary *_canvasInfo;
    NSMutableDictionary *_canvasConfigsMap;
    NSMutableDictionary *_textureVerticesMap;
    IESMMCanvasConfig *_preferCanvasConfig;
    NSMutableDictionary *_canvasTimeRange;
    NSMutableDictionary *_colorVideoInfo;
    NSMutableDictionary *_colorVideoTimeRange;
    NSMutableDictionary *_featuresInfo;
    NSMutableArray *_globalFeaturesInfo;
    NSMutableDictionary *_cameraPositionInfo;
    NSMutableDictionary *_videoSpeeds;
    double _photoMovieTransShowDuration;
    long long _followPostion;
    unsigned long long _notRemuxErrorCode;
    double _photoMoiveTransDuraion;
    double _photoMovieDuration;
    NSMutableArray *_photoMovieAssets;
    unsigned long long _audioRepeatCount;
    IESMMImageMovieInfo *_imageMovieInfo;
    NSMutableDictionary *_textsInfo;
    NSMutableDictionary *_volumnInfo;
    IESMMTimeMachine *_timeMachine;
    NSMutableDictionary *_extraInfo;
    NSMutableDictionary *_accelerateInfo;
    NSMutableDictionary *_metadataInfo;
    NSDictionary *_metaRecordInfo;
    NSString *_customMetadataInfo;
    NSString *_artworkMetadataJsonString;
    double _freezeFrameStartTime;
    double _freezeFrameDuration;
    NSMutableDictionary *_freezeFrameInfo;
    long long _contentSource;
    NSMutableDictionary *_lastMetadataInfo;
    double _currentTotalDuration;
    double _totalDurationWithTimeMachine;
    double _brightnessStrength;
    NSString *_musicID;
    NSString *_antiCheckingInfo;
    IESMMStoryConfig *_storyConfig;
    NSString *_reportVid;
    NSString *_extraMetaInfo;
    NSString *_currentFilterPath;
    NSString *_colorFilterPath;
    NSDictionary *_dataInfo;
    NSMutableDictionary *_transFileDict;
    double _maxTrackDuration;
    double _crossplatVideoDuration;
    long long _outputDirection;
    unsigned long long _outputRotationMode;
    NSMutableArray *_effectRanges;
    NSMutableDictionary *_movieAnimationType;
    NSMutableDictionary *_movieAnimationTransform;
    NSMutableDictionary *_movieInputFillType;
    IESMMMVEffectFilter *_mvEffectFilter;
    IESMMMVModel *_mvModel;
    NSMutableDictionary *_mvResourceID;
    NSMutableArray *_mvResourceText;
    NSMutableDictionary *_mvResourceAVAssetDic;
    double _HDREffectIntensity;
    IESVideoAddEdgeData *_infoStickerAddEdgeData;
    unsigned long long _pixelFormat;
    IESComposEffectProcess *_composEffectProcess;
    AVAsset *_lvCompletionAsset;
    AVAsset *_backgroundAsset;
    AVAsset *_cameraBgAsset;
    long long _effectMaxMemCache;
    NSMutableDictionary *_bingoVideoKeys;
    long long _sourceType;
    VERecordRecoveryData *_recordData;
    NSMutableArray *_customMetadataArray;
    unsigned long long _curRemakeIndex;
    NSMutableDictionary *_remakeVideoAssetsDict;
    NSMutableArray *_storeVideoAssets;
    NSMutableArray *_storeLastVideoAssets;
    NSMutableArray *_storeAudioAssets;
    NSMutableDictionary *_storeAudioTimeClipInfo;
    NSMutableArray *_bgAudioAssets;
    VEReadWriteLock *_rwlock;
    NSString *_videoTimeLineHash;
    struct CGSize _normalizeSize;
    struct CGSize _canvasSize;
    struct CGSize _canvasAndMVSize;
    CDStruct_1b6d18a9 _totalVideoDurationForMusically;
    struct CGAffineTransform _importTransform;
    struct IESIndensityParam_t _HDRIndensity;
}

+ (_Bool)remakePlan;
+ (id)stringFromDictionary:(id)arg1;
+ (id)videoData;
+ (void)clearAllCache;
+ (id)cacheDirPath;
+ (_Bool)isCacheDirPathSetted;
+ (void)setCacheDirPath:(id)arg1;
+ (id)p_videoDataApplyTimeMachine:(id)arg1 useForVideo:(_Bool)arg2;
+ (void)p_videoDataApplyReverse:(id)arg1 useForVideo:(_Bool)arg2;
+ (void)deleteVideoDataFromDictionary:(id)arg1;
+ (void)loadVideoDataFromDictionary:(id)arg1 fileFolder:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (id)restoreVideoAssetsFromUrls:(id)arg1 fileFolder:(id)arg2;
+ (id)generateDictFromAssets:(id)arg1 dirPath:(id)arg2;
+ (_Bool)checkIsBlankUrlValue:(id)arg1;
+ (id)getFilePathWithVideoData:(id)arg1 videoProcess:(id)arg2 transConfig:(id)arg3;
+ (void)loadVideoDataFromFile:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)readDictionaryFromPath:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) NSString *videoTimeLineHash; // @synthesize videoTimeLineHash=_videoTimeLineHash;
@property(retain, nonatomic) VEReadWriteLock *rwlock; // @synthesize rwlock=_rwlock;
@property(retain, nonatomic) NSMutableArray *bgAudioAssets; // @synthesize bgAudioAssets=_bgAudioAssets;
@property(nonatomic) _Bool forceUseAttachSeconds; // @synthesize forceUseAttachSeconds=_forceUseAttachSeconds;
@property(retain, nonatomic) NSMutableDictionary *storeAudioTimeClipInfo; // @synthesize storeAudioTimeClipInfo=_storeAudioTimeClipInfo;
@property(retain, nonatomic) NSMutableArray *storeAudioAssets; // @synthesize storeAudioAssets=_storeAudioAssets;
@property(retain, nonatomic) NSMutableArray *storeLastVideoAssets; // @synthesize storeLastVideoAssets=_storeLastVideoAssets;
@property(retain, nonatomic) NSMutableArray *storeVideoAssets; // @synthesize storeVideoAssets=_storeVideoAssets;
@property(retain, nonatomic) NSMutableDictionary *remakeVideoAssetsDict; // @synthesize remakeVideoAssetsDict=_remakeVideoAssetsDict;
@property(nonatomic) unsigned long long curRemakeIndex; // @synthesize curRemakeIndex=_curRemakeIndex;
@property(nonatomic) _Bool isInRemakeMode; // @synthesize isInRemakeMode=_isInRemakeMode;
@property(retain, nonatomic) NSMutableArray *customMetadataArray; // @synthesize customMetadataArray=_customMetadataArray;
@property(retain, nonatomic) VERecordRecoveryData *recordData; // @synthesize recordData=_recordData;
@property(nonatomic) long long sourceType; // @synthesize sourceType=_sourceType;
@property(nonatomic) _Bool isReencoded; // @synthesize isReencoded=_isReencoded;
@property(nonatomic) _Bool videoCompostionUseCustomClass; // @synthesize videoCompostionUseCustomClass=_videoCompostionUseCustomClass;
@property(retain, nonatomic) NSMutableDictionary *bingoVideoKeys; // @synthesize bingoVideoKeys=_bingoVideoKeys;
@property(nonatomic) _Bool useSystemVideoCompostion; // @synthesize useSystemVideoCompostion=_useSystemVideoCompostion;
@property(nonatomic) long long effectMaxMemCache; // @synthesize effectMaxMemCache=_effectMaxMemCache;
@property(nonatomic) _Bool isPlaying; // @synthesize isPlaying=_isPlaying;
@property(retain, nonatomic) AVAsset *cameraBgAsset; // @synthesize cameraBgAsset=_cameraBgAsset;
@property(retain, nonatomic) AVAsset *backgroundAsset; // @synthesize backgroundAsset=_backgroundAsset;
@property(retain, nonatomic) AVAsset *lvCompletionAsset; // @synthesize lvCompletionAsset=_lvCompletionAsset;
@property(retain, nonatomic) IESComposEffectProcess *composEffectProcess; // @synthesize composEffectProcess=_composEffectProcess;
@property(nonatomic) unsigned long long pixelFormat; // @synthesize pixelFormat=_pixelFormat;
@property(retain, nonatomic) IESVideoAddEdgeData *infoStickerAddEdgeData; // @synthesize infoStickerAddEdgeData=_infoStickerAddEdgeData;
@property(nonatomic) double HDREffectIntensity; // @synthesize HDREffectIntensity=_HDREffectIntensity;
@property(retain, nonatomic) NSMutableDictionary *mvResourceAVAssetDic; // @synthesize mvResourceAVAssetDic=_mvResourceAVAssetDic;
@property(retain, nonatomic) NSMutableArray *mvResourceText; // @synthesize mvResourceText=_mvResourceText;
@property(retain, nonatomic) NSMutableDictionary *mvResourceID; // @synthesize mvResourceID=_mvResourceID;
@property(nonatomic) int mvFps; // @synthesize mvFps=_mvFps;
@property(nonatomic) _Bool useMVFps; // @synthesize useMVFps=_useMVFps;
@property(nonatomic) __weak IESMMMVModel *mvModel; // @synthesize mvModel=_mvModel;
@property(nonatomic) __weak IESMMMVEffectFilter *mvEffectFilter; // @synthesize mvEffectFilter=_mvEffectFilter;
@property(retain, nonatomic) NSMutableDictionary *movieInputFillType; // @synthesize movieInputFillType=_movieInputFillType;
@property(retain, nonatomic) NSMutableDictionary *movieAnimationTransform; // @synthesize movieAnimationTransform=_movieAnimationTransform;
@property(retain, nonatomic) NSMutableDictionary *movieAnimationType; // @synthesize movieAnimationType=_movieAnimationType;
@property(retain, nonatomic) NSMutableArray *effectRanges; // @synthesize effectRanges=_effectRanges;
@property(nonatomic) unsigned long long outputRotationMode; // @synthesize outputRotationMode=_outputRotationMode;
@property(nonatomic) long long outputDirection; // @synthesize outputDirection=_outputDirection;
@property(nonatomic) double crossplatVideoDuration; // @synthesize crossplatVideoDuration=_crossplatVideoDuration;
@property(nonatomic) double maxTrackDuration; // @synthesize maxTrackDuration=_maxTrackDuration;
@property(retain, nonatomic) NSMutableDictionary *transFileDict; // @synthesize transFileDict=_transFileDict;
@property(retain, nonatomic) NSDictionary *dataInfo; // @synthesize dataInfo=_dataInfo;
@property(nonatomic) float colorFilterIntensity; // @synthesize colorFilterIntensity=_colorFilterIntensity;
@property(copy, nonatomic) NSString *colorFilterPath; // @synthesize colorFilterPath=_colorFilterPath;
@property(retain, nonatomic) NSString *currentFilterPath; // @synthesize currentFilterPath=_currentFilterPath;
@property(nonatomic) _Bool isFromDrafts; // @synthesize isFromDrafts=_isFromDrafts;
@property(retain, nonatomic) NSString *extraMetaInfo; // @synthesize extraMetaInfo=_extraMetaInfo;
@property(retain, nonatomic) NSString *reportVid; // @synthesize reportVid=_reportVid;
@property(retain, nonatomic) IESMMStoryConfig *storyConfig; // @synthesize storyConfig=_storyConfig;
@property(nonatomic) _Bool isFastImport; // @synthesize isFastImport=_isFastImport;
@property(nonatomic) struct CGAffineTransform importTransform; // @synthesize importTransform=_importTransform;
@property(nonatomic) _Bool hasRecordAudioTrack; // @synthesize hasRecordAudioTrack=_hasRecordAudioTrack;
@property(retain, nonatomic) NSString *antiCheckingInfo; // @synthesize antiCheckingInfo=_antiCheckingInfo;
@property(retain, nonatomic) NSString *musicID; // @synthesize musicID=_musicID;
@property(nonatomic) double brightnessStrength; // @synthesize brightnessStrength=_brightnessStrength;
@property(nonatomic) double totalDurationWithTimeMachine; // @synthesize totalDurationWithTimeMachine=_totalDurationWithTimeMachine;
@property(nonatomic) double currentTotalDuration; // @synthesize currentTotalDuration=_currentTotalDuration;
@property(retain, nonatomic) NSMutableDictionary *lastMetadataInfo; // @synthesize lastMetadataInfo=_lastMetadataInfo;
@property(nonatomic) long long contentSource; // @synthesize contentSource=_contentSource;
@property(nonatomic) _Bool isRecordFromCamera; // @synthesize isRecordFromCamera=_isRecordFromCamera;
@property(retain, nonatomic) NSMutableDictionary *freezeFrameInfo; // @synthesize freezeFrameInfo=_freezeFrameInfo;
@property(nonatomic) double freezeFrameDuration; // @synthesize freezeFrameDuration=_freezeFrameDuration;
@property(nonatomic) double freezeFrameStartTime; // @synthesize freezeFrameStartTime=_freezeFrameStartTime;
@property(copy, nonatomic) NSString *artworkMetadataJsonString; // @synthesize artworkMetadataJsonString=_artworkMetadataJsonString;
@property(retain, nonatomic) NSString *customMetadataInfo; // @synthesize customMetadataInfo=_customMetadataInfo;
@property(copy, nonatomic) NSDictionary *metaRecordInfo; // @synthesize metaRecordInfo=_metaRecordInfo;
@property(retain, nonatomic) NSMutableDictionary *metadataInfo; // @synthesize metadataInfo=_metadataInfo;
@property(retain, nonatomic) NSMutableDictionary *accelerateInfo; // @synthesize accelerateInfo=_accelerateInfo;
@property(retain, nonatomic) NSMutableDictionary *extraInfo; // @synthesize extraInfo=_extraInfo;
@property(retain, nonatomic) IESMMTimeMachine *timeMachine; // @synthesize timeMachine=_timeMachine;
@property(retain, nonatomic) NSMutableDictionary *volumnInfo; // @synthesize volumnInfo=_volumnInfo;
@property(retain, nonatomic) NSMutableDictionary *textsInfo; // @synthesize textsInfo=_textsInfo;
@property(retain, nonatomic) IESMMImageMovieInfo *imageMovieInfo; // @synthesize imageMovieInfo=_imageMovieInfo;
@property(nonatomic) unsigned long long audioRepeatCount; // @synthesize audioRepeatCount=_audioRepeatCount;
@property(retain, nonatomic) NSMutableArray *photoMovieAssets; // @synthesize photoMovieAssets=_photoMovieAssets;
@property(nonatomic) _Bool notSupportCrossplat; // @synthesize notSupportCrossplat=_notSupportCrossplat;
@property(nonatomic) double photoMovieDuration; // @synthesize photoMovieDuration=_photoMovieDuration;
@property(nonatomic) double photoMoiveTransDuraion; // @synthesize photoMoiveTransDuraion=_photoMoiveTransDuraion;
@property(nonatomic) unsigned long long notRemuxErrorCode; // @synthesize notRemuxErrorCode=_notRemuxErrorCode;
@property(nonatomic) long long followPostion; // @synthesize followPostion=_followPostion;
@property(nonatomic) double photoMovieTransShowDuration; // @synthesize photoMovieTransShowDuration=_photoMovieTransShowDuration;
@property(retain, nonatomic) NSMutableDictionary *videoSpeeds; // @synthesize videoSpeeds=_videoSpeeds;
@property(retain, nonatomic) NSMutableDictionary *cameraPositionInfo; // @synthesize cameraPositionInfo=_cameraPositionInfo;
@property(retain, nonatomic) NSMutableArray *globalFeaturesInfo; // @synthesize globalFeaturesInfo=_globalFeaturesInfo;
@property(retain, nonatomic) NSMutableDictionary *featuresInfo; // @synthesize featuresInfo=_featuresInfo;
@property(retain, nonatomic) NSMutableDictionary *colorVideoTimeRange; // @synthesize colorVideoTimeRange=_colorVideoTimeRange;
@property(retain, nonatomic) NSMutableDictionary *colorVideoInfo; // @synthesize colorVideoInfo=_colorVideoInfo;
@property(retain, nonatomic) NSMutableDictionary *canvasTimeRange; // @synthesize canvasTimeRange=_canvasTimeRange;
@property(nonatomic) struct CGSize canvasAndMVSize; // @synthesize canvasAndMVSize=_canvasAndMVSize;
@property(nonatomic) struct CGSize canvasSize; // @synthesize canvasSize=_canvasSize;
@property(retain, nonatomic) IESMMCanvasConfig *preferCanvasConfig; // @synthesize preferCanvasConfig=_preferCanvasConfig;
@property(retain, nonatomic) NSMutableDictionary *textureVerticesMap; // @synthesize textureVerticesMap=_textureVerticesMap;
@property(retain, nonatomic) NSMutableDictionary *canvasConfigsMap; // @synthesize canvasConfigsMap=_canvasConfigsMap;
@property(retain, nonatomic) NSMutableDictionary *canvasInfo; // @synthesize canvasInfo=_canvasInfo;
@property(nonatomic) long long photoMovieTransType; // @synthesize photoMovieTransType=_photoMovieTransType;
@property(retain, nonatomic) NSMutableDictionary *assetMaskAlphaInfo; // @synthesize assetMaskAlphaInfo=_assetMaskAlphaInfo;
@property(retain, nonatomic) NSMutableDictionary *assetTransformInfo; // @synthesize assetTransformInfo=_assetTransformInfo;
@property(retain, nonatomic) NSMutableDictionary *assetRotationsInfo; // @synthesize assetRotationsInfo=_assetRotationsInfo;
@property(retain, nonatomic) NSMutableDictionary *assetCropRectsInfo; // @synthesize assetCropRectsInfo=_assetCropRectsInfo;
@property(retain, nonatomic) NSMutableDictionary *photoAssetsInfo; // @synthesize photoAssetsInfo=_photoAssetsInfo;
@property(retain, nonatomic) NSMutableArray *extraMusicEffectAsset; // @synthesize extraMusicEffectAsset=_extraMusicEffectAsset;
@property(retain, nonatomic) NSMutableArray *extraMusicEffectInfo; // @synthesize extraMusicEffectInfo=_extraMusicEffectInfo;
@property(retain, nonatomic) NSMutableDictionary *audioStartTimeInfo; // @synthesize audioStartTimeInfo=_audioStartTimeInfo;
@property(retain, nonatomic) NSMutableDictionary *audioTimeScaleInfo; // @synthesize audioTimeScaleInfo=_audioTimeScaleInfo;
@property(retain, nonatomic) NSMutableDictionary *audioTimeClipInfo; // @synthesize audioTimeClipInfo=_audioTimeClipInfo;
@property(retain, nonatomic) AVAsset *endingWaterMarkAudio; // @synthesize endingWaterMarkAudio=_endingWaterMarkAudio;
@property(retain, nonatomic) NSMutableArray *effectAudioAssets; // @synthesize effectAudioAssets=_effectAudioAssets;
@property(readonly, nonatomic) NSMutableDictionary *audioSoundFilterInfo; // @synthesize audioSoundFilterInfo=_audioSoundFilterInfo;
@property(nonatomic) _Bool isExportTapProcess; // @synthesize isExportTapProcess=_isExportTapProcess;
@property(retain, nonatomic) NSMutableArray *videoSoundEntireFilters; // @synthesize videoSoundEntireFilters=_videoSoundEntireFilters;
@property(readonly, nonatomic) NSMutableDictionary *videoSoundFilterInfo; // @synthesize videoSoundFilterInfo=_videoSoundFilterInfo;
@property(nonatomic) _Bool isRetainOriginalSound; // @synthesize isRetainOriginalSound=_isRetainOriginalSound;
@property(retain, nonatomic) NSMutableArray *soundsAssets; // @synthesize soundsAssets=_soundsAssets;
@property(retain, nonatomic) NSMutableArray *audioAssets; // @synthesize audioAssets=_audioAssets;
@property(nonatomic) _Bool isBgmMuted; // @synthesize isBgmMuted=_isBgmMuted;
@property(nonatomic) _Bool isMicMuted; // @synthesize isMicMuted=_isMicMuted;
@property(nonatomic) double recordRate; // @synthesize recordRate=_recordRate;
@property(nonatomic) int previewFrameRate; // @synthesize previewFrameRate=_previewFrameRate;
@property(retain, nonatomic) NSMutableDictionary *videoCurves; // @synthesize videoCurves=_videoCurves;
@property(retain, nonatomic) NSMutableDictionary *videoAudioReservePitch; // @synthesize videoAudioReservePitch=_videoAudioReservePitch;
@property(retain, nonatomic) NSMutableDictionary *videoTimeScaleInfo; // @synthesize videoTimeScaleInfo=_videoTimeScaleInfo;
@property(nonatomic) struct IESIndensityParam_t HDRIndensity; // @synthesize HDRIndensity=_HDRIndensity;
@property(retain, nonatomic) IESMMEffectStickerInfo *HDREffectInfo; // @synthesize HDREffectInfo=_HDREffectInfo;
@property(copy, nonatomic) CDUnknownBlockType effectFilterPathBlock; // @synthesize effectFilterPathBlock=_effectFilterPathBlock;
@property(copy, nonatomic) NSString *effectPathId; // @synthesize effectPathId=_effectPathId;
@property(nonatomic) unsigned long long currentEffectType; // @synthesize currentEffectType=_currentEffectType;
@property(nonatomic) double effectOperationStartTime; // @synthesize effectOperationStartTime=_effectOperationStartTime;
@property(retain, nonatomic) HTSEffectManager *effectOperationManager; // @synthesize effectOperationManager=_effectOperationManager;
@property(retain, nonatomic) NSMutableDictionary *effectInfo; // @synthesize effectInfo=_effectInfo;
@property(retain, nonatomic) NSMutableDictionary *videoVolumnTimeClipInfo; // @synthesize videoVolumnTimeClipInfo=_videoVolumnTimeClipInfo;
@property(retain, nonatomic) NSMutableDictionary *videoTimeClipInfo; // @synthesize videoTimeClipInfo=_videoTimeClipInfo;
@property(retain, nonatomic) NSArray *stickers; // @synthesize stickers=_stickers;
@property(nonatomic) struct CGSize normalizeSize; // @synthesize normalizeSize=_normalizeSize;
@property(copy, nonatomic) NSArray *infoStickers; // @synthesize infoStickers=_infoStickers;
@property(retain) NSMutableDictionary *urlDict; // @synthesize urlDict=_urlDict;
@property(retain) NSMutableDictionary *draftFileList; // @synthesize draftFileList=_draftFileList;
@property(nonatomic) CDStruct_1b6d18a9 totalVideoDurationForMusically; // @synthesize totalVideoDurationForMusically=_totalVideoDurationForMusically;
@property(retain, nonatomic) NSMutableDictionary *videoDuration; // @synthesize videoDuration=_videoDuration;
@property(retain, nonatomic) NSMutableDictionary *assetLayers; // @synthesize assetLayers=_assetLayers;
@property(retain, nonatomic) NSMutableDictionary *assetAnimateInfos; // @synthesize assetAnimateInfos=_assetAnimateInfos;
@property(retain, nonatomic) NSMutableArray *albumVideoAssets; // @synthesize albumVideoAssets=_albumVideoAssets;
@property(retain, nonatomic) NSMutableArray *subTrackVideoAssets; // @synthesize subTrackVideoAssets=_subTrackVideoAssets;
@property(retain, nonatomic) NSMutableArray *videoAssets; // @synthesize videoAssets=_videoAssets;
@property(retain, nonatomic) AVAsset *videoHeader; // @synthesize videoHeader=_videoHeader;
@property(nonatomic) _Bool useStitchHeader; // @synthesize useStitchHeader=_useStitchHeader;
@property(retain, nonatomic) VEImageFetchAsset *imageAsset; // @synthesize imageAsset=_imageAsset;
@property(retain, nonatomic) VEAudioEncodeConfig *audioEncodeConfig; // @synthesize audioEncodeConfig=_audioEncodeConfig;
@property(copy, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (void)updateVideoTextureVertices:(id)arg1 withResource:(id)arg2;
- (void)updateClipStart:(double)arg1 withResource:(id)arg2;
- (CDStruct_1b6d18a9)getVideoDuration:(id)arg1;
- (void)remakeRefresh;
- (CDStruct_1b6d18a9)remakeVideoDuration;
- (CDStruct_1b6d18a9)remakeTotalVideoDuration;
- (void)remakeRemoveLast;
- (void)remakeClearAll;
- (void)remakeResumeLastVideoAssets;
- (void)remakeStop:(_Bool)arg1;
- (void)remakeStart:(unsigned long long)arg1;
- (void)remakeResumeVideoAssets;
- (void)remakeStoreVideoAssets;
- (id)colorVideoInfoForTimeline:(double)arg1;
- (id)colorVideoInfoForVideoAsset:(id)arg1;
- (id)canvasSourceForTimeline:(double)arg1;
- (id)canvasVideoAssetForTimeline:(double)arg1;
- (void)setVolume:(float)arg1 forAudioAtIndex:(unsigned long long)arg2;
- (void)setVolume:(float)arg1 forVideoAtIndex:(unsigned long long)arg2;
- (void)setVolumeForAudio:(float)arg1;
- (void)setVolumeForSubTrackVideo:(float)arg1;
- (void)setVolumeForVideo:(float)arg1;
- (_Bool)getAndJudgeAudioInfo:(int *)arg1 outSampleRate:(int *)arg2 outError:(id *)arg3;
- (id)getStringFromFourCharCode:(unsigned int)arg1;
- (id)canvasSourceForVideoAsset:(id)arg1;
- (void)autoCompletionCanvas;
- (void)updateTimeLine;
- (void)trackVideoDatatoVEMediaEffect;
- (id)adjustAccordingAccelate:(unsigned long long)arg1 resolutionRatio:(double)arg2;
- (double)adjustAccordingEffectFilter:(unsigned long long)arg1;
- (double)adjustAccordingMaxrate:(unsigned long long)arg1 resolutionRatio:(double)arg2;
- (unsigned long long)adjustAccordingResolutionRatio:(unsigned long long)arg1 resolutionRatio:(double)arg2;
- (double)getMaxTimeScale;
- (long long)transBitrate;
- (id)transParamNoLock;
@property(retain, nonatomic) IESMMTranscoderParam *transParam; // @synthesize transParam=_transParam;
- (_Bool)hasRecordAudio;
- (void)p_copyInfoFromVideoData:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (void)clearAllEffectAndTimeMachine;
- (void)clearReverseAsset;
- (void)muteAllVideos;
- (void)setRetainOriginalSound:(_Bool)arg1;
- (void)setExportTapProcess:(_Bool)arg1;
- (void)muteBgm:(_Bool)arg1;
- (void)muteMicrophone:(_Bool)arg1;
- (void)addAudioWithAssets:(id)arg1;
- (void)addAudioWithAsset:(id)arg1;
- (void)removeAllAudioAsset;
- (void)removeAudioAsset:(id)arg1;
- (void)addSubTrackWithAssets:(id)arg1;
- (void)addSubTrackWithAsset:(id)arg1;
- (void)addVideoWithAssets:(id)arg1;
- (void)addVideoWithAsset:(id)arg1;
- (void)removeAllSubTracks;
- (void)removeAllVideoAsset;
- (void)removeSubTrack:(id)arg1;
- (void)removeVideoAsset:(id)arg1;
- (void)removeVideoAssetDict:(id)arg1;
- (void)setMetaDatawithAsset:(id)arg1 isCropped:(_Bool)arg2;
- (void)setMetaData:(id)arg1 recordInfo:(long long)arg2 MD5:(id)arg3 importPath:(id)arg4 needStore:(_Bool)arg5;
- (void)setMetaData:(id)arg1 recordInfo:(long long)arg2 MD5:(id)arg3 needStore:(_Bool)arg4;
- (void)setMetaData:(id)arg1 recordInfo:(long long)arg2;
- (id)reloadAsset:(id)arg1;
- (void)checkAudioClipRange;
- (_Bool)checkVideoAssets:(id *)arg1;
- (_Bool)checkVideoAssets;
- (id)volumeForAsset:(id)arg1;
- (long long)audioRepeatCountForAsset:(id)arg1;
- (CDStruct_1b6d18a9)audioStartTimeForAsset:(id)arg1;
- (CDStruct_e83c9415)audioTimeClipRangeForAsset:(id)arg1;
- (CDStruct_1b6d18a9)audioTimeAttachTimeForAsset:(id)arg1;
- (double)videoRateForAsset:(id)arg1;
- (CDStruct_e83c9415)videoVolumeClipRangeForAsset:(id)arg1;
- (CDStruct_e83c9415)videoTimeClipRangeForAsset:(id)arg1;
- (id)effectContextForAsset:(id)arg1;
- (id)videoAssetForTimeline:(CDStruct_1b6d18a9)arg1;
- (double)totalVideoDurationAddTimeMachine;
- (double)totalVideoDuration;
- (void)updateVideoDuration;
- (int)totalFrameNum;
- (unsigned long long)getNotRemuxErrorCode;
- (_Bool)hasMediaData;
- (_Bool)needRemuxerOrRecoder;
- (_Bool)forceEncodeByRecord;
- (_Bool)forceEncodeByFastImport;
- (_Bool)needReencode;
- (void)dealloc;
- (id)init;
- (void)setSyncTimeClipRange:(id)arg1 toAudioAtIndex:(unsigned long long)arg2;
- (void)setTimeClipRange:(id)arg1 toAudioAtIndex:(unsigned long long)arg2;
- (void)setTimeClipRange:(id)arg1 toVideoAtIndex:(unsigned long long)arg2;
- (void)updateDataInfo:(id)arg1;
- (void)saveAVAsset:(id)arg1 toFilePath:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)saveVideoDataToPath:(id)arg1 withExistUrlDict:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)isBlankVideo:(id)arg1;
- (double)getEffectTotalDuration;
- (id)getInfosticker:(long long)arg1;
- (void)setSticker:(long long)arg1 animId:(int)arg2 inTime:(double)arg3 stillTime:(double)arg4 outTime:(double)arg5;
- (void)setStickerLayer:(long long)arg1 layer:(long long)arg2;
- (void)setSticker:(long long)arg1 startTime:(double)arg2 duration:(double)arg3;
- (void)setSticker:(long long)arg1 alpha:(double)arg2;
- (void)setSticker:(long long)arg1 flipX:(_Bool)arg2 flipY:(_Bool)arg3;
- (void)setStickerRelativeScale:(long long)arg1 scale:(double)arg2;
- (void)setStickerScale:(long long)arg1 scale:(double)arg2;
- (void)setStickerAngle:(long long)arg1 angle:(double)arg2;
- (void)setStickerAnim:(long long)arg1 animType:(int)arg2 animPath:(id)arg3 duration:(double)arg4;
- (void)setSticker:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3;
- (void)setTextStickerTextParams:(long long)arg1 textParams:(id)arg2;
- (id)getStickerById:(long long)arg1;
- (long long)addEmojiSticker:(id)arg1;
- (long long)addTextSticker;
- (long long)addInfoSticker:(id)arg1 withEffectInfo:(id)arg2 userInfo:(id)arg3;
- (_Bool)isAllByteVC1Video;
- (_Bool)isAllH264Video;
- (_Bool)isAVCCKeyDiff;
- (id)getReverseVideoDataMD5;
- (id)getVideoDataMD5;
- (void)addAudioAssetDictForAsset:(id)arg1 fromAsset:(id)arg2 andVideoData:(id)arg3;
- (void)addVideoAssetDictForAsset:(id)arg1 fromAsset:(id)arg2 andVideoData:(id)arg3;
- (void)addAudioAssetDict:(id)arg1 fromVideoData:(id)arg2;
- (void)addVideoAssetDict:(id)arg1 fromVideoData:(id)arg2;
- (void)moveVideoAssetFromIndex:(long long)arg1 toIndex:(long long)arg2;
- (void)replaceVideoAssetsInRange:(struct _NSRange)arg1 withAssets:(id)arg2 fromVideoData:(id)arg3;
- (void)replaceVideoAssetAtIndex:(long long)arg1 withAsset:(id)arg2 fromVideoData:(id)arg3;
- (void)replaceVideoAssetAtIndex:(long long)arg1 withAsset:(id)arg2;
- (_Bool)videoAssetsAllHaveAudioTrack;
- (_Bool)videoAssetsAllMuted;
- (double)acc_totalVideoDuration;
- (_Bool)assetA:(id)arg1 isSameLocalResourceWithAssetB:(id)arg2;
- (_Bool)acc_audioAssetHasChangedCompareWith:(id)arg1;
- (_Bool)acc_videoAssetHasChangedCompareWith:(id)arg1;
- (void)acc_getRestoreVideoDurationWithSegmentCompletion:(CDUnknownBlockType)arg1;
@property(nonatomic) unsigned long long studio_videoClipResolveType;
- (void)awe_setMutedWithAsset:(id)arg1;
- (void)saveVideoDataToFileUsePropertyListSerialization:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)saveDictionaryToPath:(id)arg1 dict:(id)arg2 error:(id *)arg3;

@end

