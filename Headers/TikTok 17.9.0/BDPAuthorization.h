//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "BDPJSBridgeAuthorizationProtocol-Protocol.h"

@class BDPModel, NSArray, NSDictionary, NSMutableArray, NSMutableDictionary, NSString, TMAKVStorage;

@interface BDPAuthorization : NSObject <BDPJSBridgeAuthorizationProtocol>
{
    _Bool _shouldCombinedAuthorize;
    NSDictionary *_scope;
    TMAKVStorage *_storage;
    NSDictionary *_permission;
    NSDictionary *_userInfo;
    BDPModel *_model;
    NSMutableDictionary *_scopeQueue;
    CDUnknownBlockType _completion;
    NSArray *_authList;
    NSMutableArray *_recordFailedScopes;
}

+ (void)showViewController:(id)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)showAlertNoPermission:(long long)arg1;
+ (long long)authorizationFreeTypeForInnerScope:(id)arg1;
+ (id)mapForStorageKeyToScopeKey;
+ (long long)transformScopeToScopeType:(id)arg1;
+ (id)transformScopeToDict:(id)arg1 value:(id)arg2 dictionary:(id)arg3;
+ (id)transfromScopeTypeToInnerScope:(long long)arg1;
+ (id)transfromScopeToInnerScope:(id)arg1;
@property(retain, nonatomic) NSMutableArray *recordFailedScopes; // @synthesize recordFailedScopes=_recordFailedScopes;
@property(copy, nonatomic) NSArray *authList; // @synthesize authList=_authList;
@property(copy, nonatomic) CDUnknownBlockType completion; // @synthesize completion=_completion;
@property(nonatomic) _Bool shouldCombinedAuthorize; // @synthesize shouldCombinedAuthorize=_shouldCombinedAuthorize;
@property(retain, nonatomic) NSMutableDictionary *scopeQueue; // @synthesize scopeQueue=_scopeQueue;
@property(retain, nonatomic) BDPModel *model; // @synthesize model=_model;
@property(copy, nonatomic) NSDictionary *userInfo; // @synthesize userInfo=_userInfo;
@property(copy, nonatomic) NSDictionary *permission; // @synthesize permission=_permission;
@property(retain, nonatomic) TMAKVStorage *storage; // @synthesize storage=_storage;
@property(copy, nonatomic) NSDictionary *scope; // @synthesize scope=_scope;
- (void).cxx_destruct;
- (void)hasUserinfoWithengine:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)onPersmissionDisabledForScope:(id)arg1 firstTime:(_Bool)arg2 engine:(id)arg3;
- (void)recordFailedScopeType:(long long)arg1;
- (void)removeFailedRecordScopeType:(long long)arg1;
- (void)recordAuthorization:(long long)arg1 on:(_Bool)arg2;
- (void)checkAuthorization:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)usedScopesStorageKVDict;
- (id)usedScopesDict;
- (id)usedScopes;
- (id)statusForScope:(id)arg1;
- (_Bool)updateScopes:(id)arg1 notify:(_Bool)arg2;
- (_Bool)updateScope:(id)arg1 approved:(_Bool)arg2 notify:(_Bool)arg3;
- (_Bool)updateScope:(id)arg1 approved:(_Bool)arg2;
- (void)dealloc;
- (id)initWithModel:(id)arg1 storage:(id)arg2;
- (id)eventAuthTypeForScopeType:(long long)arg1;
- (void)eventAuthResultForScope:(long long)arg1 result:(unsigned long long)arg2 uniqueID:(id)arg3 multipleAuth:(_Bool)arg4;
- (void)eventAlertShowForScope:(long long)arg1 uniqueID:(id)arg2 multipleAuth:(_Bool)arg3;
- (void)eventCombineAuthRessltWithUniqueID:(id)arg1 authResult:(id)arg2;
- (id)urlByAddEntranceInfoToURL:(id)arg1 withCurrentScheme:(id)arg2;
- (_Bool)checkSchema:(id *)arg1 errorMsg:(id *)arg2;
- (id)domainsListWithAuthType:(long long)arg1;
- (id)webViewComponentSpecialSchemaSupportList;
- (id)defaultSchemaSupportList;
- (_Bool)checkAuthorizationURL:(id)arg1 authType:(long long)arg2;
- (id)systemPermissionTypeListForScope:(id)arg1;
- (void)checkAlbumPermission:(CDUnknownBlockType)arg1;
- (void)checkCameraPermission:(CDUnknownBlockType)arg1;
- (void)checkMicrophonePermission:(CDUnknownBlockType)arg1;
- (void)checkLocPermisssion:(CDUnknownBlockType)arg1;
- (void)checkSystemPermission:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)checkSystemPermissionWithTips:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestSystemPermissions:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)requestSystemPermissionForScopeIfNeed:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_requestSystemPermissionForScopeListIfNeeded:(id)arg1 engine:(id)arg2 resultDic:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)requestSystemPermissionForScopeListIfNeeded:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showFacialRecognitionPermissionControllerWithUserName:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showInnerPhoneNumberPermissionControllerWithPhoneNumber:(id)arg1 title:(id)arg2 description:(id)arg3 engine:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)showPhoneNumberPermissionControllerWithPhoneNumber:(id)arg1 title:(id)arg2 description:(id)arg3 engine:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)showInnerPermissionControllerWithScopeType:(long long)arg1 title:(id)arg2 description:(id)arg3 engine:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)sheetFacialRecognitionPermissionControllerWithUserName:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)sheetPhoneNumberPermissionControllerWithPhoneNumber:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)sheetPermissionControllerWithScopeType:(long long)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)permissionControllerWithScopeType:(long long)arg1 title:(id)arg2 description:(id)arg3 engine:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)showCustomPermissionVCWithTitle:(id)arg1 description:(id)arg2 scopeType:(long long)arg3 engine:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (_Bool)isAuthFreeScope:(id)arg1;
- (void)_requestUserPermissionQueuedForScopeList:(id)arg1 engine:(id)arg2 resultDic:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)requestUserPermissionQueuedForScopeList:(id)arg1 engine:(id)arg2 withDetailedCompletion:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionBatchedForScopeList:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionHybridForScopeList:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionQeueuedForScopeList:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionForScopeIfNeeded:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)requestUserPermissionIfNeed:(id)arg1 engine:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)localizationScope;
- (void)scopeQueueExcuteAllCompletion:(unsigned long long)arg1 scope:(id)arg2;
- (_Bool)scopeQueueIsWaiting:(id)arg1;
- (void)scopeQueueAddCompletion:(CDUnknownBlockType)arg1 scope:(id)arg2;
- (void)scopeQueueStartWaiting:(id)arg1;
- (_Bool)scopeQueueCreateIfNeeded:(id)arg1;
- (CDUnknownBlockType)generateSafeCompletion:(CDUnknownBlockType)arg1 engine:(id)arg2 method:(id)arg3;
- (CDUnknownBlockType)generateSafeCompletion:(CDUnknownBlockType)arg1 engine:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

