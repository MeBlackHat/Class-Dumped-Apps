//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IESMMCamera.h"

#import "HTSMediaMixPlayerDelegate-Protocol.h"
#import "IESMMRecoderProtocol-Protocol.h"
#import "VECameraWriterDelegate-Protocol.h"

@class HTSCameraWriter, HTSFilterInterface, HTSGLFilterInput, HTSMediaMixPlayer, HTSVideoData, IESMMBGVideoPlayer, NSMutableArray, NSString, UIImage, VEAudioReaderUnit, VEEffectAuidoPlayerFactory;

@interface IESMMRecoder : IESMMCamera <VECameraWriterDelegate, HTSMediaMixPlayerDelegate, IESMMRecoderProtocol>
{
    _Bool _useEffectRecognize;
    _Bool _pureCameraMode;
    _Bool _needProcessAudio;
    _Bool _needResolveAudio;
    _Bool _forceRecord;
    _Bool _isAudioPlayerEnd;
    _Bool _shouldReplay;
    _Bool _captureImageProcessed;
    _Bool _isVideoRecorded;
    _Bool _isPlayerProgressSyncReady;
    _Bool _hasBGVideo;
    _Bool _hasMultiVideo;
    _Bool _isFirstRecordImageCaptured;
    HTSMediaMixPlayer *_mixPlayer;
    long long fillMode;
    double _audioSyncStart;
    VEEffectAuidoPlayerFactory *_audioFactory;
    HTSGLFilterInput *_writerInput;
    HTSFilterInterface *_writerOutput;
    NSString *_generalAudioKey;
    NSString *_generalAudioPath;
    double _generalAudioStartTime;
    VEAudioReaderUnit *_audioReaderUnit;
    CDUnknownBlockType _motionDetectBlock;
    double _maxAcceleration;
    HTSVideoData *_videoData;
    double _videoRecordStartTime;
    double _recordRate;
    long long _recordStatus;
    HTSCameraWriter *_videoWriter;
    id _audioPlayerObserver;
    double _audioPlayerStartedTime;
    NSMutableArray *_audioPlayerCache;
    NSMutableArray *_activeAudioPlayers;
    unsigned long long _bgVideoStartFragment;
    NSString *_bgVideoKey;
    IESMMBGVideoPlayer *_bgVideoPlayer;
    unsigned long long _multiVideoStartFragment;
    IESMMBGVideoPlayer *_multiVideoPlayer;
    HTSGLFilterInput *_multiVideoInput;
    UIImage *_firstRecordImage;
    struct CGSize _outputSize;
}

+ (id)effectVersion;
+ (void)releaseMediaTranscoder;
+ (void)exportVideoWithVideoData:(id)arg1 shouldNOCopy:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
@property(nonatomic) _Bool isFirstRecordImageCaptured; // @synthesize isFirstRecordImageCaptured=_isFirstRecordImageCaptured;
@property(retain, nonatomic) UIImage *firstRecordImage; // @synthesize firstRecordImage=_firstRecordImage;
@property(retain, nonatomic) HTSGLFilterInput *multiVideoInput; // @synthesize multiVideoInput=_multiVideoInput;
@property(retain, nonatomic) IESMMBGVideoPlayer *multiVideoPlayer; // @synthesize multiVideoPlayer=_multiVideoPlayer;
@property(nonatomic) unsigned long long multiVideoStartFragment; // @synthesize multiVideoStartFragment=_multiVideoStartFragment;
@property(nonatomic) _Bool hasMultiVideo; // @synthesize hasMultiVideo=_hasMultiVideo;
@property(retain, nonatomic) IESMMBGVideoPlayer *bgVideoPlayer; // @synthesize bgVideoPlayer=_bgVideoPlayer;
@property(retain, nonatomic) NSString *bgVideoKey; // @synthesize bgVideoKey=_bgVideoKey;
@property(nonatomic) unsigned long long bgVideoStartFragment; // @synthesize bgVideoStartFragment=_bgVideoStartFragment;
@property(nonatomic) _Bool hasBGVideo; // @synthesize hasBGVideo=_hasBGVideo;
@property(retain, nonatomic) NSMutableArray *activeAudioPlayers; // @synthesize activeAudioPlayers=_activeAudioPlayers;
@property(retain, nonatomic) NSMutableArray *audioPlayerCache; // @synthesize audioPlayerCache=_audioPlayerCache;
@property(nonatomic) _Bool isPlayerProgressSyncReady; // @synthesize isPlayerProgressSyncReady=_isPlayerProgressSyncReady;
@property(nonatomic) double audioPlayerStartedTime; // @synthesize audioPlayerStartedTime=_audioPlayerStartedTime;
@property(retain, nonatomic) id audioPlayerObserver; // @synthesize audioPlayerObserver=_audioPlayerObserver;
@property(retain, nonatomic) HTSCameraWriter *videoWriter; // @synthesize videoWriter=_videoWriter;
@property(nonatomic) struct CGSize outputSize; // @synthesize outputSize=_outputSize;
@property(nonatomic) long long recordStatus; // @synthesize recordStatus=_recordStatus;
@property(nonatomic) double recordRate; // @synthesize recordRate=_recordRate;
@property(nonatomic) double videoRecordStartTime; // @synthesize videoRecordStartTime=_videoRecordStartTime;
@property(readonly, nonatomic) _Bool isVideoRecorded; // @synthesize isVideoRecorded=_isVideoRecorded;
@property(nonatomic) _Bool captureImageProcessed; // @synthesize captureImageProcessed=_captureImageProcessed;
@property(nonatomic) _Bool shouldReplay; // @synthesize shouldReplay=_shouldReplay;
@property(nonatomic) _Bool isAudioPlayerEnd; // @synthesize isAudioPlayerEnd=_isAudioPlayerEnd;
@property(retain, nonatomic) HTSVideoData *videoData; // @synthesize videoData=_videoData;
@property(nonatomic) double maxAcceleration; // @synthesize maxAcceleration=_maxAcceleration;
@property(copy, nonatomic) CDUnknownBlockType motionDetectBlock; // @synthesize motionDetectBlock=_motionDetectBlock;
@property(retain, nonatomic) VEAudioReaderUnit *audioReaderUnit; // @synthesize audioReaderUnit=_audioReaderUnit;
@property(nonatomic) double generalAudioStartTime; // @synthesize generalAudioStartTime=_generalAudioStartTime;
@property(retain, nonatomic) NSString *generalAudioPath; // @synthesize generalAudioPath=_generalAudioPath;
@property(retain, nonatomic) NSString *generalAudioKey; // @synthesize generalAudioKey=_generalAudioKey;
@property(nonatomic) _Bool forceRecord; // @synthesize forceRecord=_forceRecord;
@property(retain, nonatomic) HTSFilterInterface *writerOutput; // @synthesize writerOutput=_writerOutput;
@property(retain, nonatomic) HTSGLFilterInput *writerInput; // @synthesize writerInput=_writerInput;
@property(retain, nonatomic) VEEffectAuidoPlayerFactory *audioFactory; // @synthesize audioFactory=_audioFactory;
@property(nonatomic) _Bool needResolveAudio; // @synthesize needResolveAudio=_needResolveAudio;
@property(nonatomic) _Bool needProcessAudio; // @synthesize needProcessAudio=_needProcessAudio;
@property(nonatomic) double audioSyncStart; // @synthesize audioSyncStart=_audioSyncStart;
@property(nonatomic) long long fillMode; // @synthesize fillMode;
- (_Bool)pureCameraMode;
@property(nonatomic) _Bool useEffectRecognize; // @synthesize useEffectRecognize=_useEffectRecognize;
@property(retain, nonatomic) HTSMediaMixPlayer *mixPlayer; // @synthesize mixPlayer=_mixPlayer;
- (void).cxx_destruct;
- (void)clearGeneralAudioStatus;
- (_Bool)videoOrAudioIsReady;
- (void)startRecordWithGeneralAudioStatus;
- (void)setDirToGeneralAudio;
- (void)reciveEffectMessage:(id)arg1;
- (void)setForceRecordWithMusicEnd:(_Bool)arg1;
- (void)setForceRecordAudio:(_Bool)arg1;
- (void)movieRecordingDuration:(double)arg1;
- (void)movieRecordingReachedLimitMaxTime;
- (id)getFirstRecordFrame;
- (void)setMaxLimitTime:(CDStruct_1b6d18a9)arg1;
- (void)remakeRefresh;
- (CDStruct_1b6d18a9)remakeVideoDuration;
- (CDStruct_1b6d18a9)remakeTotalVideoDuration;
- (void)remakeClearAll;
- (void)remakeResumeLastVideoAssets;
- (void)remakeStop:(_Bool)arg1;
- (void)remakeStart:(unsigned long long)arg1;
- (void)remakeResumeVideoAssets;
- (void)remakeStoreVideoAssets;
- (void)updateVideoData:(id)arg1;
- (unsigned long long)imageOrientationToHTSRotation:(long long)arg1;
- (void)mediaMixPlayer:(id)arg1 didResetItem:(id)arg2;
- (void)resetStoryModeWithConfig:(id)arg1;
- (void)registerMediaServicesResetNotify;
- (void)registerEnterForegroundNotify;
- (void)registerEnterBackgroundNotify;
- (void)startAudioCaptureSync;
- (void)startAudioCapture:(CDUnknownBlockType)arg1;
- (void)startAudioCapture;
- (void)initAudioCapture:(CDUnknownBlockType)arg1;
- (void)startVideoCapture;
- (void)setupAudioSession;
- (void)p_storeCaptureBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)p_initVideoWriter;
- (struct CGSize)cameraCaptureSize;
- (void)switchAudioMode:(long long)arg1;
- (void)resetVideoRecordReady;
- (void)removePlayer:(CDUnknownBlockType)arg1;
- (void)removePlayer;
- (void)setMusicWithURL:(id)arg1 startTime:(double)arg2 clipDuration:(double)arg3 repeatCount:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setMusicWithURL:(id)arg1 startTime:(double)arg2 clipDuration:(double)arg3 repeatCount:(long long)arg4;
- (void)changeMusicStartTime:(double)arg1 clipDuration:(double)arg2;
- (void)setMusicWithURL:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setMusicWithURL:(id)arg1;
- (void)setBGMVolume:(float)arg1;
- (void)p_createAudioPlayerIfNeeded;
@property(readonly, nonatomic) unsigned long long fragmentCount;
- (void)resetRecordMetadataInfoIfNeeded;
- (void)setOutputDirection:(long long)arg1;
- (void)resetCaptureRatio:(long long)arg1 preferredPreset:(id)arg2 previewSize:(struct CGSize)arg3 outputSize:(struct CGSize)arg4 then:(CDUnknownBlockType)arg5;
- (void)setOrientation:(long long)arg1;
- (void)setPureCameraMode:(_Bool)arg1;
- (void)resetRecorderWriter;
- (void)enableAudioEffectSticker:(_Bool)arg1;
- (void)multiVideoIsReady;
- (id)getMultiPlayer;
- (_Bool)multiVideoIsPlaying;
- (void)multiVideoChangeRate:(float)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)multiVideoSeekToPercent:(float)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)multiVideoSeekToTime:(CDStruct_1b6d18a9)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (float)multiVideoCurrentRecordPercent;
- (float)multiVideoCurrentPlayPercent;
- (CDStruct_1b6d18a9)multiVideoCurrentTime;
- (void)multiVideoMutePlayer:(_Bool)arg1;
- (void)multiVideoPause;
- (void)multiVideoPlayWithTime:(CDStruct_1b6d18a9)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)multiVideoPlay;
- (void)resetMultiVideo;
- (void)setMultiVideoAutoRepeat:(_Bool)arg1;
- (void)setMultiVideoWithVideoURL:(id)arg1 rate:(float)arg2 completeBlock:(CDUnknownBlockType)arg3;
- (_Bool)bgVideoIsPlaying;
- (void)bgVideoChangeRate:(float)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)bgVideoSeekToPercent:(float)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)bgVideoSeekToTime:(CDStruct_1b6d18a9)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (float)bgVideoCurrentRecordPercent;
- (float)bgVideoCurrentPlayPercent;
- (CDStruct_1b6d18a9)bgVideoCurrentTime;
- (void)bgVideoMutePlayer:(_Bool)arg1;
- (void)bgVideoPause;
- (void)bgVideoPlay;
- (void)resetBGVideo;
- (void)setBGVideoAutoRepeat:(_Bool)arg1;
- (void)setBGVideoWithVideoURL:(id)arg1 key:(id)arg2 rate:(float)arg3 completeBlock:(CDUnknownBlockType)arg4 didPlayToEndBlock:(CDUnknownBlockType)arg5;
- (void)setBGVideoWithVideoURL:(id)arg1 key:(id)arg2 rate:(float)arg3 completeBlock:(CDUnknownBlockType)arg4;
- (void)setDropFrame:(_Bool)arg1;
- (void)removeAllVideoFragments:(CDUnknownBlockType)arg1;
- (void)removeAllVideoFragments;
- (void)removeLastVideoFragment;
- (double)getTotalDuration;
- (void)cancelVideoRecord;
- (void)pauseVideoRecordWithAction:(long long)arg1;
- (void)pauseVideoRecord;
- (void)_cameraWriterEnable:(_Bool)arg1;
- (void)startVideoRecordWithRate:(double)arg1;
- (void)cancelVideoRecordReady;
- (id)videoRecordReadyWithSyncFlag:(_Bool)arg1;
- (id)videoRecordReady;
- (void)reSyncAudioProgress;
- (void)removeObserverForAVPlayerStatus;
- (void)addObserverForAVPlayerStatus;
- (void)addAudioPlayerObserver;
- (void)removeAudioPlayerObserver;
- (void)p_pauseCameraCapture;
- (void)p_resumeCameraCapture;
- (void)resumeCameraCapture;
- (void)motionDetectRun;
- (void)p_stopMotionDetect;
- (void)p_startMotionDetect;
- (void)p_resetFilterChain;
- (void)dealloc;
- (id)initWithView:(id)arg1 config:(id)arg2 cameraComplete:(CDUnknownBlockType)arg3;
- (void)removeStickerWithKey:(id)arg1;
- (void)addSticker:(id)arg1;
- (void)startBGMAsync:(unsigned long long)arg1 complete:(CDUnknownBlockType)arg2;
- (void)startBGM:(unsigned long long)arg1;
- (void)releaseCaptureImage:(id)arg1;
- (id)getEffectCapturedImageWithKey:(id)arg1;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)addRealTimeMusic:(id)arg1;
- (void)applyRealPlayWithInfo:(id)arg1;
- (void)applyRealPlay:(id)arg1;
- (void)enableEffectMusicPlayerProgress:(_Bool)arg1;
- (void)applyMusicNodes:(id)arg1;
- (_Bool)exportVideoWithMicMuted:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)exportWithVideo:(id)arg1 completion:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

