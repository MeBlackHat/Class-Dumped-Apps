//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSSet, NSString;

@interface BDPLocalFileManager : NSObject
{
    _Bool _appMoveToCacheFolder;
    NSString *_cacheFolderPath;
    NSString *_innerMetaDictPath;
    NSString *_batchMetaFolderPath;
    NSString *_baseFolerPath;
    NSString *_tempFolderPath;
    NSString *_appFolderPath;
    NSString *_JSLibPath;
    NSString *_offlineFolderPath;
    NSString *_resourceFolderPath;
    NSString *_internalBundleFolderPath;
    NSString *_innerJSPkgFolderPath;
    NSString *_appCacheFolderPath;
    NSSet *_appFolderNameSet;
}

+ (id)appFileUserPrefix;
+ (id)addTimorAParamsIfNeededForPath:(id)arg1 sandbox:(id)arg2;
+ (id)convertToTTFileWithRPath:(id)arg1 folderType:(long long)arg2 sandbox:(id)arg3;
+ (id)convertToTTFileWithPath:(id)arg1 sandbox:(id)arg2;
+ (id)generateRandomFilePathWithType:(long long)arg1 sandbox:(id)arg2 extension:(id)arg3 addFileScheme:(_Bool)arg4;
+ (id)generateRandomTTFilePathWithType:(long long)arg1 extension:(id)arg2 sandbox:(id)arg3;
+ (_Bool)hasAccessRightsForPath:(id)arg1 onSandbox:(id)arg2;
+ (_Bool)hasWriteRightsForRootPathOrSubpath:(id)arg1 onAppId:(id)arg2;
+ (_Bool)hasWriteRightsForPath:(id)arg1 onAppId:(id)arg2;
+ (void)clearFolderInBackground:(id)arg1;
+ (id)dataToHexString:(id)arg1;
+ (id)hexStringToData:(id)arg1;
+ (long long)sizeWithPath:(id)arg1;
+ (long long)fileSizeAtPath:(id)arg1;
+ (long long)folderSizeAtPath:(id)arg1;
+ (_Bool)createFolderIfNeed:(id)arg1;
+ (_Bool)removeFolderIfNeed:(id)arg1;
+ (struct BDPMatchResult)checkScheme:(id)arg1 andPrefixPath:(id)arg2 ofUrl:(id)arg3;
+ (id)fileInfoWithRelativePath:(id)arg1 appModel:(id)arg2 useFileScheme:(_Bool)arg3;
+ (id)offlineFolderName;
+ (id)JSLibFolderName;
+ (void)clearSharedInstance;
+ (id)sharedInstance;
@property(copy, nonatomic) NSSet *appFolderNameSet; // @synthesize appFolderNameSet=_appFolderNameSet;
@property(copy, nonatomic) NSString *appCacheFolderPath; // @synthesize appCacheFolderPath=_appCacheFolderPath;
@property(copy, nonatomic) NSString *innerJSPkgFolderPath; // @synthesize innerJSPkgFolderPath=_innerJSPkgFolderPath;
@property(copy, nonatomic) NSString *internalBundleFolderPath; // @synthesize internalBundleFolderPath=_internalBundleFolderPath;
@property(copy, nonatomic) NSString *resourceFolderPath; // @synthesize resourceFolderPath=_resourceFolderPath;
@property(copy, nonatomic) NSString *offlineFolderPath; // @synthesize offlineFolderPath=_offlineFolderPath;
@property(copy, nonatomic) NSString *JSLibPath; // @synthesize JSLibPath=_JSLibPath;
@property(copy, nonatomic) NSString *appFolderPath; // @synthesize appFolderPath=_appFolderPath;
@property(copy, nonatomic) NSString *tempFolderPath; // @synthesize tempFolderPath=_tempFolderPath;
@property(copy, nonatomic) NSString *baseFolerPath; // @synthesize baseFolerPath=_baseFolerPath;
@property(copy, nonatomic) NSString *batchMetaFolderPath; // @synthesize batchMetaFolderPath=_batchMetaFolderPath;
@property(copy, nonatomic) NSString *innerMetaDictPath; // @synthesize innerMetaDictPath=_innerMetaDictPath;
@property(copy, nonatomic) NSString *cacheFolderPath; // @synthesize cacheFolderPath=_cacheFolderPath;
@property(nonatomic) _Bool appMoveToCacheFolder; // @synthesize appMoveToCacheFolder=_appMoveToCacheFolder;
- (void).cxx_destruct;
- (void)restoreAppFolderToOriginalState;
- (void)restoreToOriginalStateExceptAppFolder;
- (void)restoreToOriginalState;
- (void)cleanAllUnnecessaryInTMA;
- (void)cleanAllAppCacheExceptAppIds:(id)arg1;
- (void)cleanOldAppCacheExceptAppIds:(id)arg1;
- (void)cleanAllUserCacheExceptAppIds:(id)arg1;
- (_Bool)appVersionFolderExistForModel:(id)arg1;
- (id)resourcePathWithResourceID:(id)arg1;
- (id)appResourcePathWithID:(id)arg1 resourceID:(id)arg2;
- (id)appResourceFolderPathWithID:(id)arg1;
- (id)JSLibWebpHookPath;
- (id)JSLibGameCorePath;
- (id)JSLibAppCorePath;
- (id)appFolderSpecialFileNames;
- (id)appStorageFilePathWithID:(id)arg1;
- (id)appSandboxPathWithID:(id)arg1;
- (id)appTempPathWithID:(id)arg1;
- (id)appPkgAuxiliaryPathWithID:(id)arg1 pkgName:(id)arg2 fileName:(id)arg3;
- (id)appPkgAuxiliaryDirWithID:(id)arg1 name:(id)arg2;
- (id)appPkgPathWithID:(id)arg1 name:(id)arg2;
- (id)appPkgDirPathWithID:(id)arg1 name:(id)arg2;
- (id)appVersionPathWithID:(id)arg1 version:(id)arg2;
- (id)oldAppBasicPathWithId:(id)arg1;
- (id)appBasicPathWithID:(id)arg1;
- (id)appListCachePathWithUserID:(id)arg1;
- (void)buildLocalFileManager;
- (id)init;

@end

