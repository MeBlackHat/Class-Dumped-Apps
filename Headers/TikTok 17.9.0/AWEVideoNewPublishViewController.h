//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "AWECommerceAnchorMessageProtocol-Protocol.h"
#import "AWENewPublishMultiAnchorTableViewCellDelegate-Protocol.h"
#import "AWETextInputControllerDelegate-Protocol.h"
#import "AWEUserMessage-Protocol.h"
#import "AWEZoomTransitionOuterContextProvider-Protocol.h"
#import "IESAVAssetAsynchronousLoaderDelegate-Protocol.h"
#import "UITableViewDataSource-Protocol.h"
#import "UITableViewDelegate-Protocol.h"
#import "UITextViewDelegate-Protocol.h"

@class AWEAnimatedButton, AWEBubble, AWECheckMusicConfirmationView, AWENewPublishAnchorTableViewCell, AWENewPublishCommentsSwitchCell, AWENewPublishEntranceTableCell, AWENewPublishGeneralI18NAnchorCell, AWENewPublishTableCell, AWEPlayer, AWEPrePostCheckResponseModel, AWEPublishMultiAnchorManager, AWEPublishNormalVideoTask, AWEPublishPrivateTableViewCell, AWEPublishVCManager, AWEResourceUploadParametersResponseModel, AWESaveVideoToAlbumTaskForModeo, AWESensitiveWordsCheckResponseModel, AWEStudioCaptionsManager, AWETextView, AWETextViewManager, AWEUITextLoadingView, AWEVideoPublishInputSuggestionView, AWEVideoPublishSettingsViewController, AWEVideoPublishSettingsViewModel, AWEVideoPublishViewModel, IESVideoInfoProvider, NSArray, NSMutableDictionary, NSNumber, NSObject, NSSet, NSString, UIButton, UIImageView, UILabel, UITableView, UITableViewCell, UIView;
@protocol ACCVideoConfigProtocol, AWETextInputControllerProtocol, OS_dispatch_group;

@interface AWEVideoNewPublishViewController : UIViewController <AWECommerceAnchorMessageProtocol, UITableViewDelegate, UITableViewDataSource, UITextViewDelegate, AWETextInputControllerDelegate, AWEZoomTransitionOuterContextProvider, AWEUserMessage, IESAVAssetAsynchronousLoaderDelegate, AWENewPublishMultiAnchorTableViewCellDelegate>
{
    _Bool _lockTextEditing;
    _Bool _suggestionSelected;
    _Bool _shouldEnablePrivacyCell;
    _Bool _shouldShowDraftReCaptureTip;
    _Bool _itemDuetReactHasCache;
    _Bool _itemStitchHasCache;
    _Bool _originIsPublishExclusion;
    _Bool _needsSaveToAlbum;
    _Bool _hitCaptionLimit;
    _Bool _hitHashtagLimit;
    _Bool _didLoginWhenViewLoad;
    _Bool _hashTagButtonTap;
    _Bool _lastOperationDelete;
    _Bool _hasCalledContinuePlayIfNeeded;
    _Bool _shouldReloadRegions;
    _Bool _willDismiss;
    _Bool _hasChangedPrivacy;
    _Bool _hasShownPrivateAccountAlert;
    AWEPlayer *_player;
    NSArray *_cellList;
    AWEStudioCaptionsManager *_captionManager;
    AWEResourceUploadParametersResponseModel *_uploadParamsCache;
    AWEUITextLoadingView *_loadingView;
    UIButton *_buttonSyncToInstagram;
    UIButton *_buttonSyncToInstagramStory;
    AWEBubble *_privateTipBubble;
    UIButton *_buttonPublishSettings;
    NSArray *_regionList;
    AWEPublishVCManager *_vcManager;
    NSArray *_observers;
    AWEPublishNormalVideoTask *_taskV2;
    AWEVideoPublishViewModel *_publishViewModel;
    AWESaveVideoToAlbumTaskForModeo *_modeoSaveToAlbumTask;
    id <AWETextInputControllerProtocol> _textViewController;
    UIButton *_cancelButton;
    UITableView *_tableView;
    UITableViewCell *_inputTableViewCell;
    AWENewPublishTableCell *_challenageTableViewCell;
    AWEPublishPrivateTableViewCell *_privateTableViewCell;
    AWENewPublishTableCell *_targetedLocationsCell;
    AWENewPublishCommentsSwitchCell *_commentsCell;
    AWENewPublishCommentsSwitchCell *_duetReactCell;
    AWENewPublishCommentsSwitchCell *_stitchCell;
    AWENewPublishCommentsSwitchCell *_downloadCell;
    AWENewPublishCommentsSwitchCell *_saveToAlbumCell;
    AWENewPublishEntranceTableCell *_privacySettingsTableViewCell;
    AWEVideoPublishSettingsViewController *_publishSettingsViewController;
    AWENewPublishTableCell *_advanceSettingsTableCell;
    NSNumber *_itemDuetReact;
    AWETextView *_titleTextView;
    UIImageView *_coverImageView;
    UIButton *_chooseCoverButton;
    UILabel *_chooseCoverLabel;
    AWEAnimatedButton *_hashtagButton;
    UIButton *_atButton;
    AWECheckMusicConfirmationView *_musicConfirmationView;
    UIButton *_buttonPublish;
    UIButton *_buttonDraft;
    UIButton *_buttonSaveAlbum;
    UIView *_keyboardAppearMaskView;
    UIView *_keyboardAppearMidMaskView;
    UIButton *_draftBackButton;
    UIView *_footerView;
    UILabel *_syncToLabel;
    UIButton *_buttonSaveAlbumTikTok;
    NSArray *_shareButtons;
    long long _timesOfToolTipBeenShown;
    AWEVideoPublishInputSuggestionView *_suggestionView;
    UIView *_expediteMentionContainerView;
    unsigned long long _orignalPrivacyType;
    NSNumber *_orignalItemDuetReact;
    NSNumber *_orignalItemStitch;
    long long _orignalItemComment;
    NSArray *_originExclusionSecUidList;
    AWETextViewManager *_textViewManager;
    NSObject<OS_dispatch_group> *_group;
    long long _groupCount;
    NSString *_lastTagString;
    id <ACCVideoConfigProtocol> _videoConfig;
    AWEVideoPublishSettingsViewModel *_viewModel;
    IESVideoInfoProvider *_vInfoProvider;
    NSNumber *_hdVideoCnt;
    AWEBubble *_hdPublishBubble;
    NSArray *_unloginHashtags;
    AWEPublishMultiAnchorManager *_multiAnchorManager;
}

+ (unsigned long long)p_PrivacySetting;
- (void).cxx_destruct;
@property(retain, nonatomic) AWEPublishMultiAnchorManager *multiAnchorManager; // @synthesize multiAnchorManager=_multiAnchorManager;
@property(copy, nonatomic) NSArray *unloginHashtags; // @synthesize unloginHashtags=_unloginHashtags;
@property(nonatomic) _Bool hasShownPrivateAccountAlert; // @synthesize hasShownPrivateAccountAlert=_hasShownPrivateAccountAlert;
@property(nonatomic) _Bool hasChangedPrivacy; // @synthesize hasChangedPrivacy=_hasChangedPrivacy;
@property(retain, nonatomic) AWEBubble *hdPublishBubble; // @synthesize hdPublishBubble=_hdPublishBubble;
@property(retain, nonatomic) NSNumber *hdVideoCnt; // @synthesize hdVideoCnt=_hdVideoCnt;
@property(retain, nonatomic) IESVideoInfoProvider *vInfoProvider; // @synthesize vInfoProvider=_vInfoProvider;
@property(nonatomic) __weak AWEVideoPublishSettingsViewModel *viewModel; // @synthesize viewModel=_viewModel;
@property(nonatomic) _Bool willDismiss; // @synthesize willDismiss=_willDismiss;
@property(nonatomic) _Bool shouldReloadRegions; // @synthesize shouldReloadRegions=_shouldReloadRegions;
@property(nonatomic) _Bool hasCalledContinuePlayIfNeeded; // @synthesize hasCalledContinuePlayIfNeeded=_hasCalledContinuePlayIfNeeded;
@property(retain, nonatomic) id <ACCVideoConfigProtocol> videoConfig; // @synthesize videoConfig=_videoConfig;
@property(nonatomic) _Bool lastOperationDelete; // @synthesize lastOperationDelete=_lastOperationDelete;
@property(retain, nonatomic) NSString *lastTagString; // @synthesize lastTagString=_lastTagString;
@property(nonatomic) _Bool hashTagButtonTap; // @synthesize hashTagButtonTap=_hashTagButtonTap;
@property(nonatomic) _Bool didLoginWhenViewLoad; // @synthesize didLoginWhenViewLoad=_didLoginWhenViewLoad;
@property(nonatomic) _Bool hitHashtagLimit; // @synthesize hitHashtagLimit=_hitHashtagLimit;
@property(nonatomic) _Bool hitCaptionLimit; // @synthesize hitCaptionLimit=_hitCaptionLimit;
@property(nonatomic) long long groupCount; // @synthesize groupCount=_groupCount;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *group; // @synthesize group=_group;
@property(retain, nonatomic) AWETextViewManager *textViewManager; // @synthesize textViewManager=_textViewManager;
@property(readonly, nonatomic) _Bool needsSaveToAlbum; // @synthesize needsSaveToAlbum=_needsSaveToAlbum;
@property(copy, nonatomic) NSArray *originExclusionSecUidList; // @synthesize originExclusionSecUidList=_originExclusionSecUidList;
@property(nonatomic) _Bool originIsPublishExclusion; // @synthesize originIsPublishExclusion=_originIsPublishExclusion;
@property(nonatomic) long long orignalItemComment; // @synthesize orignalItemComment=_orignalItemComment;
@property(retain, nonatomic) NSNumber *orignalItemStitch; // @synthesize orignalItemStitch=_orignalItemStitch;
@property(retain, nonatomic) NSNumber *orignalItemDuetReact; // @synthesize orignalItemDuetReact=_orignalItemDuetReact;
@property(nonatomic) unsigned long long orignalPrivacyType; // @synthesize orignalPrivacyType=_orignalPrivacyType;
@property(retain, nonatomic) UIView *expediteMentionContainerView; // @synthesize expediteMentionContainerView=_expediteMentionContainerView;
@property(retain, nonatomic) AWEVideoPublishInputSuggestionView *suggestionView; // @synthesize suggestionView=_suggestionView;
@property(nonatomic) long long timesOfToolTipBeenShown; // @synthesize timesOfToolTipBeenShown=_timesOfToolTipBeenShown;
@property(copy, nonatomic) NSArray *shareButtons; // @synthesize shareButtons=_shareButtons;
@property(retain, nonatomic) UIButton *buttonSaveAlbumTikTok; // @synthesize buttonSaveAlbumTikTok=_buttonSaveAlbumTikTok;
@property(retain, nonatomic) UILabel *syncToLabel; // @synthesize syncToLabel=_syncToLabel;
@property(retain, nonatomic) UIView *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UIButton *draftBackButton; // @synthesize draftBackButton=_draftBackButton;
@property(retain, nonatomic) UIView *keyboardAppearMidMaskView; // @synthesize keyboardAppearMidMaskView=_keyboardAppearMidMaskView;
@property(retain, nonatomic) UIView *keyboardAppearMaskView; // @synthesize keyboardAppearMaskView=_keyboardAppearMaskView;
@property(retain, nonatomic) UIButton *buttonSaveAlbum; // @synthesize buttonSaveAlbum=_buttonSaveAlbum;
@property(retain, nonatomic) UIButton *buttonDraft; // @synthesize buttonDraft=_buttonDraft;
@property(retain, nonatomic) UIButton *buttonPublish; // @synthesize buttonPublish=_buttonPublish;
@property(retain, nonatomic) AWECheckMusicConfirmationView *musicConfirmationView; // @synthesize musicConfirmationView=_musicConfirmationView;
@property(retain, nonatomic) UIButton *atButton; // @synthesize atButton=_atButton;
@property(retain, nonatomic) AWEAnimatedButton *hashtagButton; // @synthesize hashtagButton=_hashtagButton;
@property(retain, nonatomic) UILabel *chooseCoverLabel; // @synthesize chooseCoverLabel=_chooseCoverLabel;
@property(retain, nonatomic) UIButton *chooseCoverButton; // @synthesize chooseCoverButton=_chooseCoverButton;
@property(retain, nonatomic) UIImageView *coverImageView; // @synthesize coverImageView=_coverImageView;
@property(retain, nonatomic) AWETextView *titleTextView; // @synthesize titleTextView=_titleTextView;
@property(retain, nonatomic) NSNumber *itemDuetReact; // @synthesize itemDuetReact=_itemDuetReact;
@property(nonatomic) _Bool itemStitchHasCache; // @synthesize itemStitchHasCache=_itemStitchHasCache;
@property(nonatomic) _Bool itemDuetReactHasCache; // @synthesize itemDuetReactHasCache=_itemDuetReactHasCache;
@property(retain, nonatomic) AWENewPublishTableCell *advanceSettingsTableCell; // @synthesize advanceSettingsTableCell=_advanceSettingsTableCell;
@property(retain, nonatomic) AWEVideoPublishSettingsViewController *publishSettingsViewController; // @synthesize publishSettingsViewController=_publishSettingsViewController;
@property(retain, nonatomic) AWENewPublishEntranceTableCell *privacySettingsTableViewCell; // @synthesize privacySettingsTableViewCell=_privacySettingsTableViewCell;
@property(retain, nonatomic) AWENewPublishCommentsSwitchCell *saveToAlbumCell; // @synthesize saveToAlbumCell=_saveToAlbumCell;
@property(retain, nonatomic) AWENewPublishCommentsSwitchCell *downloadCell; // @synthesize downloadCell=_downloadCell;
@property(retain, nonatomic) AWENewPublishCommentsSwitchCell *stitchCell; // @synthesize stitchCell=_stitchCell;
@property(retain, nonatomic) AWENewPublishCommentsSwitchCell *duetReactCell; // @synthesize duetReactCell=_duetReactCell;
@property(retain, nonatomic) AWENewPublishCommentsSwitchCell *commentsCell; // @synthesize commentsCell=_commentsCell;
@property(retain, nonatomic) AWENewPublishTableCell *targetedLocationsCell; // @synthesize targetedLocationsCell=_targetedLocationsCell;
@property(retain, nonatomic) AWEPublishPrivateTableViewCell *privateTableViewCell; // @synthesize privateTableViewCell=_privateTableViewCell;
@property(retain, nonatomic) AWENewPublishTableCell *challenageTableViewCell; // @synthesize challenageTableViewCell=_challenageTableViewCell;
@property(retain, nonatomic) UITableViewCell *inputTableViewCell; // @synthesize inputTableViewCell=_inputTableViewCell;
@property(retain, nonatomic) UITableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) UIButton *cancelButton; // @synthesize cancelButton=_cancelButton;
@property(retain, nonatomic) id <AWETextInputControllerProtocol> textViewController; // @synthesize textViewController=_textViewController;
@property(retain, nonatomic) AWESaveVideoToAlbumTaskForModeo *modeoSaveToAlbumTask; // @synthesize modeoSaveToAlbumTask=_modeoSaveToAlbumTask;
@property(retain, nonatomic) AWEVideoPublishViewModel *publishViewModel; // @synthesize publishViewModel=_publishViewModel;
@property(retain, nonatomic) AWEPublishNormalVideoTask *taskV2; // @synthesize taskV2=_taskV2;
@property(nonatomic) _Bool shouldShowDraftReCaptureTip; // @synthesize shouldShowDraftReCaptureTip=_shouldShowDraftReCaptureTip;
@property(retain, nonatomic) NSArray *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) AWEPublishVCManager *vcManager; // @synthesize vcManager=_vcManager;
@property(nonatomic) _Bool shouldEnablePrivacyCell; // @synthesize shouldEnablePrivacyCell=_shouldEnablePrivacyCell;
@property(copy, nonatomic) NSArray *regionList; // @synthesize regionList=_regionList;
@property(readonly, nonatomic) UIButton *buttonPublishSettings; // @synthesize buttonPublishSettings=_buttonPublishSettings;
@property(retain, nonatomic) AWEBubble *privateTipBubble; // @synthesize privateTipBubble=_privateTipBubble;
@property(retain, nonatomic) UIButton *buttonSyncToInstagramStory; // @synthesize buttonSyncToInstagramStory=_buttonSyncToInstagramStory;
@property(retain, nonatomic) UIButton *buttonSyncToInstagram; // @synthesize buttonSyncToInstagram=_buttonSyncToInstagram;
@property(nonatomic) _Bool suggestionSelected; // @synthesize suggestionSelected=_suggestionSelected;
@property(nonatomic) _Bool lockTextEditing; // @synthesize lockTextEditing=_lockTextEditing;
@property(retain, nonatomic) AWEUITextLoadingView *loadingView; // @synthesize loadingView=_loadingView;
@property(retain, nonatomic) AWEResourceUploadParametersResponseModel *uploadParamsCache; // @synthesize uploadParamsCache=_uploadParamsCache;
@property(retain, nonatomic) AWEStudioCaptionsManager *captionManager; // @synthesize captionManager=_captionManager;
@property(copy, nonatomic) NSArray *cellList; // @synthesize cellList=_cellList;
@property(retain, nonatomic) AWEPlayer *player; // @synthesize player=_player;
- (void)automaticallyMentionUsersIfNeeded;
- (id)lastSubString:(id)arg1;
- (id)awesst_enterFrom;
- (void)trackSyncWithEvent:(id)arg1 click:(_Bool)arg2;
- (void)trackPublishShareStatus:(_Bool)arg1 platform:(id)arg2;
- (void)configCoverImage:(id)arg1;
- (id)getIMSettingModel;
- (id)rootPresentingViewController;
- (void)cancelPreUploadingTask;
- (void)removePreUploadingTask;
@property(readonly, nonatomic) unsigned long long videoPublishStatus;
- (void)startTransitionAnimation;
- (void)enqueuePublishTask;
- (void)handlePublishModelIfNeeded;
- (void)saveHashTagToTitleExtraInfoWithPublishStatus:(_Bool)arg1;
- (void)p_publish;
- (void)p_prePublishCheck;
- (void)p_publishIfNeeded;
- (void)publishIfNeeded;
- (void)didFinishLogin;
- (void)didFinishBindPhone;
- (id)hdPublishBubbleBuilder;
- (id)sharePlatforms;
- (id)sharePlatformsTracker;
- (_Bool)saveToAlbumSwitcherState;
- (_Bool)enableHDPublish;
- (_Bool)canSaveToAlbum;
@property(nonatomic) long long selectedSharePlatform;
- (_Bool)shouldSyncToInstagramStory;
- (_Bool)shouldSyncToInstagram;
- (_Bool)needShowButtonSyncToInstagramStory;
- (_Bool)needShowButtonSyncToInstagram;
- (void)p_goToAdvanceSettings;
- (void)p_goToPrivacySettings;
- (void)p_showPhotoLibraryPermissionAlertWithCompletion:(CDUnknownBlockType)arg1;
- (void)p_showPhotoLibraryPermissionAlert;
- (_Bool)checkIfCanShareAndShowToastIfCannot;
- (_Bool)checkIfCanSaveAndShowToastIfCannot;
- (void)saveVideoToAlbumForModeo;
@property(nonatomic) _Bool saveToAlbumButtonSelected;
- (_Bool)needsSaveToAlbumWithPlatform:(long long)arg1;
- (void)syncToInstagramStory:(_Bool)arg1;
- (void)syncToInstagram:(_Bool)arg1;
- (void)shareButtonTapped:(id)arg1;
- (void)handleHDPublishSwitchValueChange:(_Bool)arg1;
- (void)listenPublishSettingsChange:(id)arg1;
- (void)p_saveAlbumButtonClicked;
- (void)p_buttonSyncToInstagramStoryClicked;
- (void)p_buttonSyncToInstagramClicked;
- (_Bool)userWouldLikeToShareToInstagramStory;
- (_Bool)userWouldLikeToShareToInstagram;
- (void)showMusicAlertWithTitle:(id)arg1 des:(id)arg2 left:(id)arg3 right:(id)arg4 leftHandler:(CDUnknownBlockType)arg5 rightHandler:(CDUnknownBlockType)arg6;
- (void)cleanTCMContent;
- (id)zoomTransitionStartViewForOffset:(long long)arg1;
- (_Bool)isMultiAnchorEnabled;
- (void)p_logUnloginHashtagsIfNeeded;
- (void)showDisablePrivateToast;
- (_Bool)shouldDisablePrivateSettings;
- (id)generateShortcutWithRegionList:(id)arg1;
- (void)dismissPrivateCellTips;
- (void)showPostFriendsPermissionPromptsWithCompletion:(CDUnknownBlockType)arg1;
- (void)p_saveEffectPhoto;
- (_Bool)p_isHorizontalVideo;
- (id)p_savePhotoTrackParams;
- (void)p_dismissHDPublishBubble;
- (void)p_checkHDVideoWithBlock:(CDUnknownBlockType)arg1;
- (void)p_showHDPublishBubbleIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)isLongVideo;
- (id)userRelatedKeyWithKey:(id)arg1;
- (_Bool)loadUserRelatedBoolForKey:(id)arg1;
- (void)saveUserRelatedBool:(_Bool)arg1 forKey:(id)arg2;
- (void)p_removeObservers;
- (void)refreshWithChallengeModel:(id)arg1;
- (void)p_onChallengeInfoDidChangeNotification:(id)arg1;
- (void)p_addObservers;
- (struct CGSize)p_preferredImageSize;
- (void)configCoverAndFirstFrame;
- (void)configCoverAndFirstFrameInEngine;
- (_Bool)enableFilterIndensity;
- (id)currentFilterHelper;
- (void)createPlayer;
- (void)resetPlayerWithCallback:(CDUnknownBlockType)arg1;
- (void)sendMessageForContinuePlayIfNeeded;
- (void)backButtonClicked:(id)arg1;
- (_Bool)enableOldChallenge;
- (_Bool)enableNewMentionDetection;
- (_Bool)enableHashtag;
- (_Bool)p_needShowStitchItem;
- (_Bool)p_needShowDuetReactItem;
- (void)p_fetchOriginItemDuetReact;
- (_Bool)enableGeofencingAbility;
- (void)savePrivacyType:(unsigned long long)arg1;
- (unsigned long long)getSavedPrivacyType;
- (void)savePhotoToAlbumWithWaterMark:(id)arg1;
- (_Bool)shouldShowMusicConfirmation;
- (id)childModelTableFooterView;
- (id)p_shareButtonsForTiktok;
- (id)defaultFooterView;
- (id)tableFooterView;
- (_Bool)showsNewShareButtons;
- (_Bool)isNewPublishShareEnabled;
- (void)textInputDidDeleteCommentChain:(id)arg1;
- (void)textInputDidDeleteDuetChain:(id)arg1;
- (void)textInput:(id)arg1 didReplaceTextInRange:(struct _NSRange)arg2 withText:(id)arg3;
- (void)textInput:(id)arg1 didRequestSuggestion:(id)arg2 hitBlackList:(_Bool)arg3;
- (void)textInputDidNeedClosingSuggestion:(id)arg1;
- (void)textInputDidStartLoadingSuggestions:(id)arg1;
- (void)textInputValueChanged:(id)arg1;
- (void)textInputDidExceedMaxUserCount:(id)arg1;
- (void)hashTagLengthDidExceedMaxLength:(id)arg1;
- (void)textInputDidExceedMaxLength:(id)arg1;
- (void)textViewDidChangeSelection:(id)arg1;
- (_Bool)textView:(id)arg1 shouldChangeTextInRange:(struct _NSRange)arg2 replacementText:(id)arg3;
- (void)textViewDidBeginEditing:(id)arg1;
- (_Bool)textViewShouldBeginEditing:(id)arg1;
- (void)updateAdHashTagState;
- (_Bool)isInAdHashTagWithRange:(struct _NSRange)arg1 replaceText:(id)arg2;
- (void)addAdHashTagForTextView;
- (_Bool)isExitAdHashTag;
- (void)setTitlePlaceHolder:(id)arg1;
- (void)appDidBecomeActiveNotification;
- (void)appWillResignActiveNotification;
- (void)closeWithAnimated:(_Bool)arg1;
- (void)p_onKeyboardWillHideNotification:(id)arg1;
- (void)p_onKeyboardWillShowNotification:(id)arg1;
- (id)p_videoRecordButtonTypeMap;
- (_Bool)shouldNotChangeChainText;
- (void)p_recoverPlayerSizeIfNecessary;
- (void)p_dismissKeyboard:(id)arg1;
- (void)p_ensured_login_savedraftV2:(long long)arg1;
- (void)exit_publish_vc;
- (void)p_publishAndSaveDraft;
- (void)p_draftClicked;
- (void)p_publishCheckPrivatePolicyStatus;
- (void)p_publishButtonClicked:(id)arg1;
- (void)changePrivacyCellStatusEnable:(_Bool)arg1;
- (void)p_privateCellClicked;
- (void)p_updatePrivateCellDetail;
- (void)didSelectPrivacy:(unsigned long long)arg1 isExclusionSelected:(_Bool)arg2 exclusionSecUidList:(id)arg3 exclusionUserList:(id)arg4 isHideSearch:(_Bool)arg5;
- (void)didSelectPrivacy:(unsigned long long)arg1;
- (void)p_challengeCellClicked;
- (void)p_chooseCoverButtonClicked;
- (void)p_coverImageViewClicked;
- (void)updateHashTagRecommendParam;
- (void)p_hashtagButtonClicked;
- (void)p_atButtonClicked;
- (void)p_cancelButtonClicked:(id)arg1;
- (void)p_dismissPrivateCellTips;
- (void)p_targetedLocationsClick;
- (void)handleTargetedLocationClickIfNeeded:(unsigned long long)arg1;
- (id)advanceSettingsTableCellBuilder;
- (void)updateCommentsSwitch:(_Bool)arg1;
- (id)blankTableViewCell;
- (void)multiAnchorCellDidClickAddButton:(id)arg1;
- (void)multiAnchorCellDidUpdate:(id)arg1;
- (double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2;
- (long long)numberOfSectionsInTableView:(id)arg1;
- (id)configCellList;
- (void)setupUIWithPrivacy;
- (id)automaticallyLoadedAssetKeysAtIndex:(unsigned long long)arg1;
- (void)setupUIForAlbum;
- (_Bool)prefersStatusBarHidden;
- (void)setupNavigationBar;
- (void)setupUIForSaveAlbumControl;
- (void)setupUIForTargetedLocation;
- (void)setupUI;
- (void)p_saveDraftWithCompletion:(CDUnknownBlockType)arg1;
- (void)saveDraftIfNeed;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (_Bool)closePreMerge;
@property(readonly, nonatomic) _Bool needOpenPreUpload;
- (void)startPreMergeOrUploadIfNeeded;
- (void)viewDidLoad;
- (id)initWithModel:(id)arg1 player:(id)arg2;
- (void)dealloc;
@property(readonly, nonatomic) AWENewPublishAnchorTableViewCell *anchorTableViewCell;
- (id)publishAnchorArray;
- (id)generalI18NAnchors;
@property(readonly, nonatomic) _Bool hasNewsEntrance;
@property(readonly, nonatomic) _Bool hasMovieEntrance;
- (_Bool)hasGeneralI18NAnchorEntranceWithType:(long long)arg1;
- (_Bool)hasGeneralI18NAnchorEntrance;
- (_Bool)hasCommonAnchorEntranceWithType:(long long)arg1;
@property(readonly, nonatomic) _Bool hasWikipediaEntrance;
@property(readonly, nonatomic) _Bool hasGoodsLinkEntrance;
@property(readonly, nonatomic) _Bool shouldShowMultiAnchor;
@property(readonly, nonatomic) _Bool shouldShowAnchor;
@property(readonly, nonatomic) long long type;
@property(readonly, copy, nonatomic) NSString *anchorHashTag;
- (void)showAnchorContentPageWithController:(id)arg1;
- (id)placeholderNameWithAnchorType:(long long)arg1;
- (void)updateAnchorWithType:(long long)arg1 title:(id)arg2 anchorID:(id)arg3 tagTitle:(id)arg4 anchorContent:(id)arg5 isAIAnchor:(_Bool)arg6;
- (void)updateAnchorWithType:(long long)arg1 title:(id)arg2 anchorID:(id)arg3 tagTitle:(id)arg4 anchorContent:(id)arg5;
- (void)updateAnchorWithType:(long long)arg1 title:(id)arg2 anchorID:(id)arg3 anchorContent:(id)arg4;
- (void)updateAnchorWithType:(long long)arg1 title:(id)arg2 anchorContent:(id)arg3;
- (void)showAnchorPanel;
- (void)didClickAnchorCell;
- (void)cancleSelectedAnchor:(id)arg1;
- (void)revertAnchorInformation;
- (void)revertAnchorInformationAndUI;
- (void)revertAnchorCell;
- (id)textOfAnchorAccessLabel;
- (void)didSelectGeneralI18NAnchorCellWithType:(long long)arg1 schema:(id)arg2 anchorDismissBlock:(CDUnknownBlockType)arg3;
- (void)didSelectAnchorWithType:(long long)arg1 anchorDismissBlock:(CDUnknownBlockType)arg2 enterFromType:(long long)arg3;
- (void)didSelectAnchorWithType:(long long)arg1 anchorDismissBlock:(CDUnknownBlockType)arg2;
@property(readonly, nonatomic) _Bool isNotCommercialMusic;
@property(nonatomic) long long currentFullType;
@property(readonly, copy, nonatomic) NSString *adHashTag;
- (void)setupUIForAnchors;
- (void)addAnchorObservers;
- (void)unobserveMessageProtocol;
- (void)observeMessageProtocol;
- (id)titleWithType:(long long)arg1;
@property(retain, nonatomic) NSSet *supportedCommonAnchors; // @dynamic supportedCommonAnchors;
- (void)cancelSelected:(id)arg1;
@property(retain, nonatomic) NSMutableDictionary *cellDictionary; // @dynamic cellDictionary;
- (id)commonAnchorTableViewCellWithType:(long long)arg1;
- (void)didClickCommonAnchorCellWithType:(long long)arg1;
- (void)setupCommonAnchorUIWithType:(long long)arg1;
- (_Bool)shouldShowCommonAnchorWithType:(long long)arg1;
- (_Bool)checkType:(long long)arg1;
- (void)updateCommonAnchorWith:(id)arg1 andType:(long long)arg2;
@property(retain, nonatomic) AWENewPublishGeneralI18NAnchorCell *currentGeneralI18NAnchorCell;
- (id)generalI18NAnchorTableViewCellWithType:(long long)arg1;
- (void)cancelSelected:(id)arg1;
- (void)didClickGeneralI18NAnchorCellWithSchema:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)setupGeneralI18NAnchorUI;
- (_Bool)shouldShowGeneralI18NAnchorWithTypeByAlone:(long long)arg1;
- (_Bool)shouldShowGeneralI18NAnchorByAlone;
- (id)getLogExtraDictFromAnchorType:(long long)arg1;
- (void)addGeneralI18NAnchorNotification:(id)arg1;
- (void)addGeneralI18NAnchorObserver;
- (void)updateGeneralI18NAnchorWithTitle:(id)arg1 content:(id)arg2 type:(long long)arg3;
@property(readonly, nonatomic) AWENewPublishTableCell *goodsLinkTableViewCell;
@property(readonly, nonatomic) _Bool shouldShowGoodsLink;
- (_Bool)goodsLinkShouldBeDiableAndGrey;
- (void)cancleSelectedGoodsLink:(id)arg1;
- (void)goodsLinkJSBResultNotification:(id)arg1;
- (void)didClickGoodsLinkWithCompletion:(CDUnknownBlockType)arg1;
- (void)addGoodsLinkObserver;
- (void)setupUIForGoodsLink;
- (void)setupGoodsLinkDisableAndGrey;
- (void)updateGoodsLinkWith:(id)arg1;
- (void)recoverAudioFragmentIfNeeded;
@property(readonly, nonatomic) AWENewPublishTableCell *missionCell;
@property(readonly, nonatomic) AWENewPublishTableCell *movieTableViewCell;
- (void)cancleSelectedMovie:(id)arg1;
@property(readonly, nonatomic) _Bool shouldShowMovieByAlone;
- (void)didClickMovieWithCompletion:(CDUnknownBlockType)arg1;
- (void)setupUIForMovie;
- (void)addMovieAnchorNotification:(id)arg1;
- (void)addAnchorMovieObserver;
- (void)updateMovieWithTitle:(id)arg1 content:(id)arg2;
@property(readonly, nonatomic) AWENewPublishTableCell *newsTableViewCell;
- (void)p_cancelNewsAnchorSelection;
- (id)p_cancelSelectionTapGestureRecognizer;
- (void)p_updateCellWithTitle:(id)arg1 hasNewsURL:(_Bool)arg2;
- (void)p_didAddAnchor:(id)arg1;
- (void)setupUIForNews;
- (void)didClickNewsAnchor;
- (void)addNewsAnchorObserver;
@property(readonly, nonatomic) _Bool shouldShowNewsByAlone;
- (void)trackOfDraftClickEndAndDisplay;
- (void)trackDraftSavePerformance;
@property(nonatomic) double clickSaveDraftTime;
@property(retain, nonatomic) AWESensitiveWordsCheckResponseModel *sensitiveWordsCheckResponseModel;
@property(retain, nonatomic) AWEPrePostCheckResponseModel *checkResponseModel;
- (void)showPromptAlertWithConfirmVBlock:(CDUnknownBlockType)arg1 cancelBlock:(CDUnknownBlockType)arg2;
- (void)showCheckResultAlertWithCancelBlock:(CDUnknownBlockType)arg1;
- (void)sensitiveWordsCheckWithContent:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)prePostCheckWithCompletion:(CDUnknownBlockType)arg1;
@property(copy, nonatomic) NSString *TCMHashTag;
@property(copy, nonatomic) NSString *TCMTip;
@property(nonatomic) _Bool isTCMCache;
@property(nonatomic) long long TCMType;
@property(readonly, nonatomic) AWENewPublishTableCell *TCMTableViewCell;
- (void)handleRNData:(id)arg1;
- (void)p_TCMCellClicked;
- (void)checkTCMOrderIfNeeded;
- (void)addTCMRNObservers;
- (void)removeUnnecessaryView;
- (void)updateTCMWithJsonDict:(id)arg1 isLoaded:(_Bool)arg2;
- (void)p_recoverVoiceEffect:(id)arg1 recoverCompletion:(CDUnknownBlockType)arg2;
- (void)resetToOriginalVoiceIfNecessaryWithCallback:(CDUnknownBlockType)arg1;
- (void)recoverVoiceEffectFromDraftIfNecessaryWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchVoiceEffectIfNecessaryWithCallback:(CDUnknownBlockType)arg1;
- (_Bool)voiceEffectHadRecovered;
- (void)setVoiceEffectHadRecovered:(_Bool)arg1;
@property(readonly, nonatomic) AWENewPublishTableCell *wikipediaTableViewCell;
@property(readonly, nonatomic) _Bool shouldShowWikipedia;
- (void)cancelSelectedWikipedia:(id)arg1;
- (void)didClickWikipedia;
- (void)setupUIForWikipedia;
- (void)updateWikipediaWith:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

