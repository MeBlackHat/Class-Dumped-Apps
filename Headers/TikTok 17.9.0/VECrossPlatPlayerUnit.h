//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VEUnitObject.h"

#import "HTSMediaMixPlayerDelegate-Protocol.h"
#import "HTSMoviePlayerDelegate-Protocol.h"
#import "IVEAudioClockProtocol-Protocol.h"
#import "IVEPlayerUnitProtocol-Protocol.h"
#import "IVEUpdateVideoPipelineProtocol-Protocol.h"
#import "VEAppStatusProtocol-Protocol.h"

@class HTSAudioExport, HTSMediaMixPlayer, IESMMAudioFilter, NSMutableArray, NSMutableDictionary, NSString, VEAudioReaderUnit, VECrossPlatEditorSession, VECrossPlatMoviePlayer, VEPlayerUnitConfig;
@protocol IESMMAudioProcessorExProtocol;

@interface VECrossPlatPlayerUnit : VEUnitObject <HTSMediaMixPlayerDelegate, HTSMoviePlayerDelegate, VEAppStatusProtocol, IVEUpdateVideoPipelineProtocol, IVEAudioClockProtocol, IVEPlayerUnitProtocol>
{
    struct TESmartPtr<VEEditorAdapter> editorAdapter_;
    _Bool _pauseAndStillRender;
    _Bool _needCurrentFrame;
    _Bool _needFrameRenderNotify;
    _Bool _textStickerNeedPreivew;
    _Bool _autoPlayWhenAppBecomeActive;
    _Bool _autoRepeatPlay;
    _Bool _isRetainOriginalSound;
    _Bool _playerPlayed;
    _Bool _noAvplayer;
    _Bool _onlyPlayAudioTrack;
    _Bool _isPlayerVideoEnd;
    NSString *_route;
    CDUnknownBlockType _statusBlk;
    CDUnknownBlockType _frameTimeBlk;
    CDUnknownBlockType _canvasFramUpdateCallback;
    long long _status;
    CDUnknownBlockType _mixPlayerCompleteBlock;
    CDUnknownBlockType _failedToPlayBlk;
    VECrossPlatEditorSession *_editorSession;
    HTSMediaMixPlayer *_mixPlayer;
    NSMutableArray *_observerArray;
    double _startTime;
    CDUnknownBlockType _completeBlock;
    CDUnknownBlockType _updateVideoDataCompleteBlock;
    IESMMAudioFilter *_audioFilter;
    id <IESMMAudioProcessorExProtocol> _audioProcess;
    HTSAudioExport *_audioExportor;
    VEPlayerUnitConfig *_config;
    double _lastAudioTime;
    VEAudioReaderUnit *_soundsPlayUnitOC;
    VEAudioReaderUnit *_audioReaderUnit;
    long long _processCount;
    long long _processFrames;
    double _playStartTS;
    double _lastPlayFrameRate;
    NSMutableDictionary *_timeMachineConvertAssetsDict;
    double _lastPlayPts;
    VECrossPlatMoviePlayer *_crossPlatMoviePlayer;
    struct CGSize _videoSize;
    CDStruct_1b6d18a9 _playerCMTime;
    CDStruct_1b6d18a9 _lastRenderTime;
    CDStruct_1b6d18a9 _currentPlayerTime;
    CDStruct_1b6d18a9 _lastClicPlayCMTime;
}

+ (void)setCustomPlayerAudioCategory:(id)arg1;
@property(nonatomic) _Bool isPlayerVideoEnd; // @synthesize isPlayerVideoEnd=_isPlayerVideoEnd;
@property(nonatomic) _Bool onlyPlayAudioTrack; // @synthesize onlyPlayAudioTrack=_onlyPlayAudioTrack;
@property(retain, nonatomic) VECrossPlatMoviePlayer *crossPlatMoviePlayer; // @synthesize crossPlatMoviePlayer=_crossPlatMoviePlayer;
@property(nonatomic) CDStruct_1b6d18a9 lastClicPlayCMTime; // @synthesize lastClicPlayCMTime=_lastClicPlayCMTime;
@property(nonatomic) double lastPlayPts; // @synthesize lastPlayPts=_lastPlayPts;
@property(nonatomic) CDStruct_1b6d18a9 currentPlayerTime; // @synthesize currentPlayerTime=_currentPlayerTime;
@property(retain, nonatomic) NSMutableDictionary *timeMachineConvertAssetsDict; // @synthesize timeMachineConvertAssetsDict=_timeMachineConvertAssetsDict;
@property(nonatomic) double lastPlayFrameRate; // @synthesize lastPlayFrameRate=_lastPlayFrameRate;
@property(nonatomic) double playStartTS; // @synthesize playStartTS=_playStartTS;
@property(nonatomic) long long processFrames; // @synthesize processFrames=_processFrames;
@property(nonatomic) CDStruct_1b6d18a9 lastRenderTime; // @synthesize lastRenderTime=_lastRenderTime;
@property(nonatomic) _Bool noAvplayer; // @synthesize noAvplayer=_noAvplayer;
@property(nonatomic) long long processCount; // @synthesize processCount=_processCount;
@property(nonatomic) CDStruct_1b6d18a9 playerCMTime; // @synthesize playerCMTime=_playerCMTime;
@property(retain, nonatomic) VEAudioReaderUnit *audioReaderUnit; // @synthesize audioReaderUnit=_audioReaderUnit;
@property(retain, nonatomic) VEAudioReaderUnit *soundsPlayUnitOC; // @synthesize soundsPlayUnitOC=_soundsPlayUnitOC;
@property(nonatomic) double lastAudioTime; // @synthesize lastAudioTime=_lastAudioTime;
@property(nonatomic) _Bool playerPlayed; // @synthesize playerPlayed=_playerPlayed;
@property(nonatomic) _Bool isRetainOriginalSound; // @synthesize isRetainOriginalSound=_isRetainOriginalSound;
@property(retain, nonatomic) VEPlayerUnitConfig *config; // @synthesize config=_config;
@property(retain, nonatomic) HTSAudioExport *audioExportor; // @synthesize audioExportor=_audioExportor;
@property(retain, nonatomic) id <IESMMAudioProcessorExProtocol> audioProcess; // @synthesize audioProcess=_audioProcess;
@property(retain, nonatomic) IESMMAudioFilter *audioFilter; // @synthesize audioFilter=_audioFilter;
@property(copy, nonatomic) CDUnknownBlockType updateVideoDataCompleteBlock; // @synthesize updateVideoDataCompleteBlock=_updateVideoDataCompleteBlock;
@property(copy, nonatomic) CDUnknownBlockType completeBlock; // @synthesize completeBlock=_completeBlock;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(retain, nonatomic) NSMutableArray *observerArray; // @synthesize observerArray=_observerArray;
@property(retain, nonatomic) HTSMediaMixPlayer *mixPlayer; // @synthesize mixPlayer=_mixPlayer;
@property(retain, nonatomic) VECrossPlatEditorSession *editorSession; // @synthesize editorSession=_editorSession;
@property(copy, nonatomic) CDUnknownBlockType failedToPlayBlk; // @synthesize failedToPlayBlk=_failedToPlayBlk;
@property(copy, nonatomic) CDUnknownBlockType mixPlayerCompleteBlock; // @synthesize mixPlayerCompleteBlock=_mixPlayerCompleteBlock;
@property(readonly, nonatomic) long long status; // @synthesize status=_status;
@property(nonatomic) _Bool autoRepeatPlay; // @synthesize autoRepeatPlay=_autoRepeatPlay;
@property(nonatomic) _Bool autoPlayWhenAppBecomeActive; // @synthesize autoPlayWhenAppBecomeActive=_autoPlayWhenAppBecomeActive;
@property(nonatomic) _Bool textStickerNeedPreivew; // @synthesize textStickerNeedPreivew=_textStickerNeedPreivew;
@property(nonatomic) _Bool needFrameRenderNotify; // @synthesize needFrameRenderNotify=_needFrameRenderNotify;
@property(copy, nonatomic) CDUnknownBlockType canvasFramUpdateCallback; // @synthesize canvasFramUpdateCallback=_canvasFramUpdateCallback;
@property(nonatomic) _Bool needCurrentFrame; // @synthesize needCurrentFrame=_needCurrentFrame;
@property(copy, nonatomic) CDUnknownBlockType frameTimeBlk; // @synthesize frameTimeBlk=_frameTimeBlk;
@property(nonatomic) _Bool pauseAndStillRender; // @synthesize pauseAndStillRender=_pauseAndStillRender;
@property(copy, nonatomic) CDUnknownBlockType statusBlk; // @synthesize statusBlk=_statusBlk;
@property(retain, nonatomic) NSString *route; // @synthesize route=_route;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)processSampleBuffer:(struct opaqueCMSampleBuffer *)arg1;
- (void)updateVideoEOS:(_Bool)arg1;
- (_Bool)updateVideoPipeline:(struct TEVideoPipeline *)arg1 multiTrack:(_Bool)arg2;
- (long long)getAudioDuration;
- (void)setVideoStreamTime:(long long)arg1;
- (long long)getAudioClock;
- (void)updateEditorAdapter;
- (void)setRetainOriginalSound:(_Bool)arg1;
- (void)changeAudioEffect:(id)arg1 inVideoData:(id)arg2 inChunkParam:(id)arg3 completeBlock:(CDUnknownBlockType)arg4;
- (_Bool)preProcessAudio:(id)arg1 inChunkParam:(id)arg2 withInfo:(id)arg3;
- (void)p_checkAudioSessionAsync:(_Bool)arg1;
- (double)removeEffectWithRangeID:(id)arg1;
- (double)removeLastOperation;
- (void)stopEffectwithTime:(double)arg1;
- (void)startEffectWithTime:(double)arg1;
- (void)exitProcessEffect;
- (void)readytoProcessEffect:(CDStruct_1b6d18a9)arg1;
- (void)resignActive;
- (void)memoryWarning;
- (void)enterForeground;
- (void)enterBackground;
- (void)becomeActive;
- (void)moviePlayerNeedReset;
- (void)addDownStream:(id)arg1;
- (void)mediaMixPlayer:(id)arg1 didResetItem:(id)arg2;
- (void)mediaMixPlayer:(id)arg1 willResetItem:(id)arg2;
- (void)resetRefer;
- (void)setStatus:(long long)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)enableHighFrameRateRender:(_Bool)arg1;
- (void)enableStillRender:(_Bool)arg1;
- (double)getDuration;
- (id)getVideoReader;
- (void)updateVideoData:(id)arg1 completeBlock:(CDUnknownBlockType)arg2;
- (void)setPlayerVolume:(float)arg1;
- (void)hotReloadClipRangeForAssets:(id)arg1 usingClipRangeMap:(id)arg2;
- (void)hotReloadFilterForAssets:(id)arg1 usingFilterMap:(id)arg2;
- (void)hotRemoveAudioAssets:(id)arg1;
- (void)hotAppendAudioAsset:(id)arg1 withRange:(id)arg2;
- (void)updateAudioData:(id)arg1;
- (void)p_updateAudioReaderUnit:(id)arg1;
- (CDStruct_1b6d18a9)getLastPixelbufferTime;
- (void)processLastPixelBuffer;
- (struct CGSize)getVideoSize;
- (void)startMoviePlayer;
- (void)stopMoviePlayer;
- (void)stop;
- (void)pause:(_Bool)arg1;
- (void)pause;
- (double)getLastPlayFramRate;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)p_seekToTimeAndRender2:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)play;
- (void)pauseMixPlayer;
- (void)playMixPlayer;
- (void)playFromTime:(CDStruct_1b6d18a9)arg1;
- (void)p_playFromTime2:(CDStruct_1b6d18a9)arg1;
- (void)p_play;
- (void)notifyFrameRender;
- (_Bool)canStopStillRender;
- (void)multiProcessSampleData:(id)arg1;
- (void)p_multiProcessSampleData:(id)arg1;
- (void)pinProcessSampleData:(id)arg1;
- (void)p_countingFrames;
- (CDStruct_1b6d18a9)p_transToFps:(CDStruct_1b6d18a9)arg1;
- (void)processReadSampleData:(id)arg1 nextVSync:(double)arg2;
- (void)seekAudioReaderUnit:(CDStruct_1b6d18a9)arg1;
- (void)processAudioPlayer:(CDStruct_1b6d18a9)arg1;
- (void)dealloc;
- (void)resetPlayerCompleteBlock;
- (void)p_seekAudioProcessorIfNeeded:(double)arg1;
- (void)p_playerComplete;
- (void)resetMixPlayerWithVideo:(_Bool)arg1;
- (void)p_resetPlayerWithError:(id)arg1;
- (void)p_initMoviePlayer;
- (void)p_initMixPlayerWithConfig:(id)arg1;
- (void)p_initMixPlayer;
- (void)p_addPlayerStatusObserver;
- (void)p_addAllObserver;
- (void)caculateVideoSizeWithfinishBlock:(CDUnknownBlockType)arg1;
- (id)initWithConfig:(id)arg1 finishBlock:(CDUnknownBlockType)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

