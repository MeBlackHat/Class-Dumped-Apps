//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSString;
@protocol IESGurdDownloaderDelegate, IESGurdNetworkDelegate;

@interface IESGurdKit : NSObject
{
    NSString *_appId;
    NSString *_appVersion;
    NSString *_deviceID;
    CDUnknownBlockType _getDeviceID;
    NSString *_domain;
    id <IESGurdNetworkDelegate> _networkDelegate;
    id <IESGurdDownloaderDelegate> _downloaderDelegate;
}

+ (void)addChannelsWhitelist:(id)arg1 forAccessKey:(id)arg2;
+ (void)setCacheConfiguration:(id)arg1 forAccessKey:(id)arg2;
+ (void)clearTempFiles;
+ (void)clearCacheForAccessKey:(id)arg1 channel:(id)arg2;
+ (void)clearCache;
+ (long long)cacheStatusForAccessKey:(id)arg1 channel:(id)arg2;
+ (id)rootDirForAccessKey:(id)arg1 channel:(id)arg2;
+ (id)rootDirForAccessKey:(id)arg1;
+ (unsigned long long)packageVersionForAccessKey:(id)arg1 channel:(id)arg2;
+ (long long)fileTypeForAccessKey:(id)arg1 channel:(id)arg2;
+ (void)asyncGetDataForPath:(id)arg1 accessKey:(id)arg2 channel:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (id)dataForPath:(id)arg1 accessKey:(id)arg2 channel:(id)arg3 options:(unsigned long long)arg4;
+ (id)dataForPath:(id)arg1 accessKey:(id)arg2 channel:(id)arg3;
+ (_Bool)hasCacheForPath:(id)arg1 accessKey:(id)arg2 channel:(id)arg3;
+ (void)loadResourceWithParamsBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)loadResourceForAccessKey:(id)arg1 channel:(id)arg2 path:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)syncResourcesWithParamsBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)syncResourcesWithAccessKey:(id)arg1 channels:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)downloadResourcesWithParamsBlock:(CDUnknownBlockType)arg1 completion:(CDUnknownBlockType)arg2;
+ (void)downloadResourcesWithAccessKey:(id)arg1 channels:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)applyInactivePackageForAccessKey:(id)arg1 channel:(id)arg2 completion:(CDUnknownBlockType)arg3;
+ (void)applyInactivePackages:(CDUnknownBlockType)arg1;
+ (void)enableReportStatus;
+ (void)registerAccessKey:(id)arg1;
+ (void)unregiserEventDelegate:(id)arg1;
+ (void)registerEventDelegate:(id)arg1;
+ (id)cacheRootDir;
+ (void)setupWithAppId:(id)arg1 appVersion:(id)arg2 cacheRootDirectory:(id)arg3;
+ (_Bool)didSetup;
+ (id)appLogDelegate;
+ (void)setAppLogDelegate:(id)arg1;
+ (id)downloaderDelegate;
+ (void)setDownloaderDelegate:(id)arg1;
+ (id)networkDelegate;
+ (void)setNetworkDelegate:(id)arg1;
+ (void)setLogEnable:(_Bool)arg1;
+ (_Bool)isLogEnabled;
+ (id)platformDomain;
+ (void)setPlatformDomain:(id)arg1;
+ (void)setGetDeviceID:(CDUnknownBlockType)arg1;
+ (CDUnknownBlockType)getDeviceID;
+ (id)deviceID;
+ (void)setDeviceID:(id)arg1;
+ (void)setEnable:(_Bool)arg1;
+ (_Bool)enable;
+ (id)sharedInstance;
+ (id)syncResourcesParamsWithAccessKey:(id)arg1;
+ (void)setRetryEnabled:(_Bool)arg1;
+ (_Bool)isRetryEnabled;
+ (void)setThrottleEnabled:(_Bool)arg1;
+ (_Bool)isThrottleEnabled;
+ (void)syncResourcesWithAccessKey:(id)arg1 channels:(id)arg2 resourceVersion:(id)arg3 forceSync:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
+ (void)syncResourcesWithAccessKey:(id)arg1 channels:(id)arg2 resourceVersion:(id)arg3 completion:(CDUnknownBlockType)arg4;
+ (void)registerAccessKey:(id)arg1 channels:(id)arg2;
+ (void)setAppId:(id)arg1;
- (void).cxx_destruct;
@property(retain, nonatomic) id <IESGurdDownloaderDelegate> downloaderDelegate; // @synthesize downloaderDelegate=_downloaderDelegate;
@property(retain, nonatomic) id <IESGurdNetworkDelegate> networkDelegate; // @synthesize networkDelegate=_networkDelegate;
@property(copy, nonatomic) NSString *domain; // @synthesize domain=_domain;
@property(copy, nonatomic) CDUnknownBlockType getDeviceID; // @synthesize getDeviceID=_getDeviceID;
@property(copy, nonatomic) NSString *deviceID; // @synthesize deviceID=_deviceID;
@property(copy, nonatomic) NSString *appVersion; // @synthesize appVersion=_appVersion;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;

@end

