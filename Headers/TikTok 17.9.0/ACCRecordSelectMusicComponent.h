//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ACCFeatureComponent.h"

#import "ACCCameraLifeCircleEvent-Protocol.h"

@class ACCRecordAddFeedMusicView, ACCRecordSelectMusicViewModel, ACCSelectMusicButtonContainerView, IESEffectModel, NSString, UIView, UIViewController;
@protocol ACCCameraService, ACCRecorderViewContainer, ACCScrollStringButtonProtocol, IESServiceProvider, UIViewControllerTransitioningDelegate><ACCInteractiveTransitionProtocol;

@interface ACCRecordSelectMusicComponent : ACCFeatureComponent <ACCCameraLifeCircleEvent>
{
    _Bool _isFirstAppear;
    _Bool _hasUsedFeedMusic;
    _Bool _hasCancelUsedFeedMusic;
    UIView<ACCScrollStringButtonProtocol> *_selectMusicButton;
    id <IESServiceProvider> _serviceProvider;
    id <ACCRecorderViewContainer> _viewContainer;
    ACCRecordSelectMusicViewModel *_viewModel;
    UIViewController *_selectMusicVC;
    id <UIViewControllerTransitioningDelegate><ACCInteractiveTransitionProtocol> _transitionDelegate;
    id <ACCCameraService> _cameraService;
    ACCRecordAddFeedMusicView *_addFeedMusicView;
    ACCSelectMusicButtonContainerView *_musicButtonContainerView;
    IESEffectModel *_reusedFeedProp;
}

- (void).cxx_destruct;
@property(retain, nonatomic) IESEffectModel *reusedFeedProp; // @synthesize reusedFeedProp=_reusedFeedProp;
@property(retain, nonatomic) ACCSelectMusicButtonContainerView *musicButtonContainerView; // @synthesize musicButtonContainerView=_musicButtonContainerView;
@property(retain, nonatomic) ACCRecordAddFeedMusicView *addFeedMusicView; // @synthesize addFeedMusicView=_addFeedMusicView;
@property(retain, nonatomic) id <ACCCameraService> cameraService; // @synthesize cameraService=_cameraService;
@property(nonatomic) _Bool hasCancelUsedFeedMusic; // @synthesize hasCancelUsedFeedMusic=_hasCancelUsedFeedMusic;
@property(nonatomic) _Bool hasUsedFeedMusic; // @synthesize hasUsedFeedMusic=_hasUsedFeedMusic;
@property(nonatomic) _Bool isFirstAppear; // @synthesize isFirstAppear=_isFirstAppear;
@property(retain, nonatomic) id <UIViewControllerTransitioningDelegate><ACCInteractiveTransitionProtocol> transitionDelegate; // @synthesize transitionDelegate=_transitionDelegate;
@property(nonatomic) __weak UIViewController *selectMusicVC; // @synthesize selectMusicVC=_selectMusicVC;
@property(retain, nonatomic) ACCRecordSelectMusicViewModel *viewModel; // @synthesize viewModel=_viewModel;
@property(retain, nonatomic) id <ACCRecorderViewContainer> viewContainer; // @synthesize viewContainer=_viewContainer;
- (id)serviceProvider;
@property(retain, nonatomic) UIView<ACCScrollStringButtonProtocol> *selectMusicButton; // @synthesize selectMusicButton=_selectMusicButton;
- (void)cameraService:(id)arg1 stopVideoCaptureWithError:(id)arg2;
- (void)cameraService:(id)arg1 pauseRecordWithError:(id)arg2;
- (void)cameraService:(id)arg1 startRecordWithError:(id)arg2;
- (void)setServiceProvider:(id)arg1;
- (id)viewController;
- (id)switchModeViewModel;
- (id)flowViewModel;
- (id)propViewModel;
- (id)effectGameViewModel;
- (id)gameViewModel;
- (void)updateSelectMusicEnable;
- (void)configSelectMusicButtonEnable;
- (void)ACC_updateLayout;
- (void)addSelectMusicButtonIfNeeded;
- (void)p_pickForceBindMusicPack:(id)arg1;
- (void)p_currentSelectEffectPack:(id)arg1;
- (void)p_readExistData;
- (void)bindViewModel;
- (void)updateSelectButtonHidden:(_Bool)arg1 duration:(double)arg2;
- (id)selectButtonOrContainerView;
- (void)updateMusicSelectButtonWithShowCloseButton:(_Bool)arg1;
- (void)didTapOnCancelFeedMusicButton;
- (void)showSelectMusicViewController;
- (void)addMusicButtonContainerView;
- (void)hideAddFeedMusicViewIfNecessary:(_Bool)arg1;
- (void)reuseFeedMusicWithEffect:(id)arg1;
- (unsigned long long)preferredLoadPhase;
- (void)componentDidAppear;
- (void)componentDidMount;
- (id)init;
- (id)initWithComponentController:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

