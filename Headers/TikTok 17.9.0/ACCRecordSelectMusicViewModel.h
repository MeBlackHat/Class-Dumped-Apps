//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "ACCRecorderViewModel.h"

#import "ACCRecordConfigAudioHandler-Protocol.h"
#import "ACCRecordConfigDurationHandler-Protocol.h"

@class IESEffectModel, NSString, RACSignal, RACSubject;
@protocol ACCCameraService, ACCVideoConfigProtocol;

@interface ACCRecordSelectMusicViewModel : ACCRecorderViewModel <ACCRecordConfigDurationHandler, ACCRecordConfigAudioHandler>
{
    _Bool _isPropSupportReuseFeedMusic;
    _Bool _hasSelectedMusic;
    RACSubject *_musicCoverSubject;
    RACSubject *_selectMusicAnimationSubject;
    RACSubject *_selectMusicShowSubject;
    RACSubject *_bindMusicErrorSubject;
    RACSubject *_cancelMusicSubject;
    RACSubject *_pickMusicSubject;
    RACSubject *_musicTipSubject;
    RACSubject *_muteTipSubject;
    RACSubject *_reuseFeedMusicAndPropSubject;
    IESEffectModel *_currentSticker;
    IESEffectModel *_reuseFeedEffect;
    NSString *_feedMusicFailedReason;
    NSString *_feedPropFailedReason;
    id <ACCVideoConfigProtocol> _config;
    id <ACCCameraService> _cameraService;
}

- (void).cxx_destruct;
@property(retain, nonatomic) id <ACCCameraService> cameraService; // @synthesize cameraService=_cameraService;
@property(retain, nonatomic) id <ACCVideoConfigProtocol> config; // @synthesize config=_config;
@property(nonatomic) _Bool hasSelectedMusic; // @synthesize hasSelectedMusic=_hasSelectedMusic;
@property(nonatomic) _Bool isPropSupportReuseFeedMusic; // @synthesize isPropSupportReuseFeedMusic=_isPropSupportReuseFeedMusic;
@property(copy, nonatomic) NSString *feedPropFailedReason; // @synthesize feedPropFailedReason=_feedPropFailedReason;
@property(copy, nonatomic) NSString *feedMusicFailedReason; // @synthesize feedMusicFailedReason=_feedMusicFailedReason;
@property(retain, nonatomic) IESEffectModel *reuseFeedEffect; // @synthesize reuseFeedEffect=_reuseFeedEffect;
@property(retain, nonatomic) IESEffectModel *currentSticker; // @synthesize currentSticker=_currentSticker;
@property(retain, nonatomic) RACSubject *reuseFeedMusicAndPropSubject; // @synthesize reuseFeedMusicAndPropSubject=_reuseFeedMusicAndPropSubject;
@property(retain, nonatomic) RACSubject *muteTipSubject; // @synthesize muteTipSubject=_muteTipSubject;
@property(retain, nonatomic) RACSubject *musicTipSubject; // @synthesize musicTipSubject=_musicTipSubject;
@property(retain, nonatomic) RACSubject *pickMusicSubject; // @synthesize pickMusicSubject=_pickMusicSubject;
@property(retain, nonatomic) RACSubject *cancelMusicSubject; // @synthesize cancelMusicSubject=_cancelMusicSubject;
@property(retain, nonatomic) RACSubject *bindMusicErrorSubject; // @synthesize bindMusicErrorSubject=_bindMusicErrorSubject;
@property(retain, nonatomic) RACSubject *selectMusicShowSubject; // @synthesize selectMusicShowSubject=_selectMusicShowSubject;
@property(retain, nonatomic) RACSubject *selectMusicAnimationSubject; // @synthesize selectMusicAnimationSubject=_selectMusicAnimationSubject;
@property(retain, nonatomic) RACSubject *musicCoverSubject; // @synthesize musicCoverSubject=_musicCoverSubject;
@property(readonly, nonatomic) RACSignal *reuseFeedMusicAndPropSignal;
@property(readonly, nonatomic) RACSignal *muteTipSignal;
@property(readonly, nonatomic) RACSignal *musicTipSignal;
@property(readonly, nonatomic) RACSignal *pickMusicSignal;
@property(readonly, nonatomic) RACSignal *cancelMusicSignal;
@property(readonly, nonatomic) RACSignal *selectMusicShowSignal;
@property(readonly, nonatomic) RACSignal *bindMusicErrorSignal;
@property(readonly, nonatomic) RACSignal *selectMusicAnimationSignal;
@property(readonly, nonatomic) RACSignal *musicCoverSignal;
- (void)handleMusicTipWithDuration:(double)arg1 isFirstEmbed:(_Bool)arg2;
- (id)musicDurationWithAsset:(id)arg1;
- (void)willSetMaxDuration:(inout double *)arg1 asset:(id)arg2 showTip:(_Bool)arg3 isFirstEmbed:(_Bool)arg4;
- (double)getComponentDuration:(id)arg1;
- (void)videoMutedTip:(id)arg1;
- (_Bool)needReuseMusic:(id)arg1;
- (void)p_handleMusicAndPropDownload:(id)arg1;
- (_Bool)canUseFeedProp:(id)arg1;
- (void)preFetchFeedPropWithCompletion:(CDUnknownBlockType)arg1;
- (void)preFetchFeedMusicWithCompletion:(CDUnknownBlockType)arg1;
- (void)showFeedMusicViewIfNeeded;
- (void)startReuseFeedMusicFlowIfNeed;
- (_Bool)shouldUseCurrentFeedMusic;
- (id)configService;
- (void)completeSubjects;
- (_Bool)hasCameraAndMicroPhoneAuth;
- (id)musicAsset;
- (void)updateAudioRangeWithStartLocation:(double)arg1;
- (void)unselectMusic:(id)arg1 enableBGM:(_Bool)arg2;
- (void)selectForceBindMusic:(id)arg1 error:(id)arg2;
- (void)refreshMusicCoverWithMusic:(id)arg1;
- (void)pickMusic:(id)arg1 complete:(CDUnknownBlockType)arg2;
- (id)publishModel;
- (id)sameStickerMusic;
- (void)showTip:(id)arg1 isFirstEmbed:(_Bool)arg2;
- (void)trackChangeMusic:(_Bool)arg1;
- (void)removeFrames:(_Bool)arg1;
- (void)updateCurrentSticker:(id)arg1;
- (void)switchAIRecordFrameTypeIfNeeded;
- (void)changeToMode:(long long)arg1 fromMode:(long long)arg2;
- (void)cancelForceBindMusic:(id)arg1;
- (void)pickForceBindMusic:(id)arg1 isForceBind:(_Bool)arg2 error:(id)arg3;
- (void)applyForceBindMusic:(id)arg1;
- (void)handleCancelMusic:(id)arg1;
- (void)handlePickMusic:(id)arg1 error:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)supportSelectMusic;
- (void)startBGMIfNeeded;
- (void)refreshMusicCover;
- (void)onCleared;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

