//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSDictionary, NSMutableArray, NSString;
@protocol EPGProviderDelegate;

@interface EPGProvider : NSObject
{
    NSMutableArray *_channels;
    NSArray *_favoriteChannels;
    NSArray *_hdChannels;
    NSArray *_hdAndUnmatchedSdChannels;
    NSMutableArray *_appChannelList;
    struct shared_ptr<EPGDataManager::EPGDataFetcher> _fetcher;
    struct shared_ptr<EPGDataManager::EPGListServiceFetcher> _listServiceFetcher;
    struct shared_ptr<EPGDataManager::EPGDataSender> _sender;
    struct EPGStorage m_storageHandle;
    _Bool _preferredOlc;
    int filterType;
    NSString *headendId;
    NSString *_providerName;
    NSString *_headendLocale;
    NSString *_headendSource;
    NSString *_titleId;
    NSString *_providerLogo;
    NSDictionary *_textColorsByPurpose;
    NSDictionary *_brandingColorsByPurpose;
    id <EPGProviderDelegate> _providerDelegate;
}

@property id <EPGProviderDelegate> providerDelegate; // @synthesize providerDelegate=_providerDelegate;
@property(retain, nonatomic) NSDictionary *brandingColorsByPurpose; // @synthesize brandingColorsByPurpose=_brandingColorsByPurpose;
@property(retain, nonatomic) NSDictionary *textColorsByPurpose; // @synthesize textColorsByPurpose=_textColorsByPurpose;
@property(retain, nonatomic) NSString *providerLogo; // @synthesize providerLogo=_providerLogo;
@property(retain, nonatomic) NSString *titleId; // @synthesize titleId=_titleId;
@property(nonatomic) _Bool preferredOlc; // @synthesize preferredOlc=_preferredOlc;
@property(retain, nonatomic) NSString *headendSource; // @synthesize headendSource=_headendSource;
@property(retain, nonatomic) NSString *headendLocale; // @synthesize headendLocale=_headendLocale;
@property(retain, nonatomic) NSString *providerName; // @synthesize providerName=_providerName;
@property(nonatomic) int filterType; // @synthesize filterType;
@property(retain, nonatomic) NSString *headendId; // @synthesize headendId;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)loadBrandingInformationFromDatabase;
- (void)clearProviderInformation;
- (void)setEPGProviderDelegate:(id)arg1;
- (void)abort;
- (void)storeFoundChannels:(id)arg1 forHeadendId:(id)arg2;
- (void)storeCqsChannels:(id)arg1 forHeadendId:(id)arg2;
- (id)getAppChannelFavorites;
- (id)getHdAndUnmatchedSdChannels;
- (id)getHdOnlyChannels;
- (id)getFavoriteChannels;
- (id)getChannels;
- (unsigned int)getChannelCount;
- (void)onSendFavoriteError:(int)arg1 forChannel:(id)arg2 wasAdding:(_Bool)arg3;
- (void)onSendFavoriteComplete;
- (void)onFetchListServiceError:(int)arg1;
- (void)onFetchListServiceComplete;
- (void)onFetchError:(int)arg1;
- (void)onFetchProgress:(unsigned int)arg1;
- (void)onFetchComplete;
- (void)onBrandingFetchError:(int)arg1;
- (void)onBrandingFetchComplete;
- (void)onChannelFetchError:(int)arg1;
- (void)onChannelFetchComplete;
- (void)createListServiceFetcher;
- (void)createEPGDataSender;
- (void)createEPGFetcher;
- (void)updateChannelListWithFavorites;
- (void)populateChannelList;
- (void)clearEpgModelData;
- (void)purgeSchedulesIfNeeded;
- (id)getProgramDataForShowGuid:(id)arg1;
- (_Bool)setFavoriteForChannel:(id)arg1 inHeadend:(id)arg2 newFavoriteSetting:(_Bool)arg3 xuid:(unsigned long long)arg4 authToken:(id)arg5;
- (void)retrieveBrandingInformation:(unsigned long long)arg1 authToken:(id)arg2;
- (void)ensureChannelListLoadedAsync:(unsigned long long)arg1 authToken:(id)arg2 forceRefresh:(_Bool)arg3;
- (void)fetchFromListServiceIfNeededAsync:(unsigned long long)arg1 authToken:(id)arg2;
- (void)fetchEntireLineupAsync:(unsigned long long)arg1 authToken:(id)arg2 time:(unsigned int)arg3 duration:(unsigned int)arg4;
- (void)fetchIfNeededAsync:(unsigned long long)arg1 authToken:(id)arg2 time:(unsigned int)arg3 timeFetchDirection:(int)arg4 channel:(unsigned int)arg5 channelFetchDirection:(int)arg6 scheduleType:(int)arg7 forceRefresh:(_Bool)arg8;
- (void)dealloc;

@end

