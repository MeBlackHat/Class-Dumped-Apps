//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XBXObjectWithRequestQueue.h"

#import "SGIUserPrivacySettingsDataModel-Protocol.h"
#import "XBXSLSMultiplayerSummaryRequestCallback-Protocol.h"
#import "XBXSLSNeverListAddRequestCallback-Protocol.h"
#import "XBXSLSNeverListDeleteRequestCallback-Protocol.h"
#import "XBXSLSNeverListGetRequestCallback-Protocol.h"
#import "XBXSLSPrivacySettingsRequestCallback-Protocol.h"
#import "XBXSLSShareIdentityListAddRequestCallback-Protocol.h"
#import "XBXSLSShareIdentityListDeleteRequestCallback-Protocol.h"

@class NSMutableSet, NSSet, NSString;
@protocol XBXISLSServiceManager, _TtP9XboxParty27XboxPartyServiceManagerType_;

@interface SGUserPrivacySettingsDataModel : XBXObjectWithRequestQueue <XBXSLSNeverListGetRequestCallback, XBXSLSNeverListAddRequestCallback, XBXSLSNeverListDeleteRequestCallback, XBXSLSMultiplayerSummaryRequestCallback, XBXSLSShareIdentityListAddRequestCallback, XBXSLSShareIdentityListDeleteRequestCallback, XBXSLSPrivacySettingsRequestCallback, SGIUserPrivacySettingsDataModel>
{
    NSMutableSet *_neverList;
    NSMutableSet *_shareIdentityList;
}

@property(retain, nonatomic) NSMutableSet *shareIdentityList; // @synthesize shareIdentityList=_shareIdentityList;
@property(retain, nonatomic) NSMutableSet *neverList; // @synthesize neverList=_neverList;
- (void).cxx_destruct;
- (_Bool)isSharingIdentityWithUser:(id)arg1;
- (_Bool)isBlockedUser:(id)arg1;
- (long long)getShareIdentityStatusInternal:(id)arg1;
- (long long)getBlockStatusInternal:(id)arg1;
- (void)refreshShareIdentityList;
- (void)refreshNeverList;
@property(readonly, nonatomic) __weak NSString *currentUserXuid;
@property(readonly, nonatomic) __weak id <_TtP9XboxParty27XboxPartyServiceManagerType_> xboxPartyServiceManager;
- (id)userDataModel;
@property(readonly, nonatomic) __weak id <XBXISLSServiceManager> slsServiceManager;
- (void)onPrivacySettingsRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onPrivacySettingsRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)onShareIdentityListDeleteRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onShareIdentityListDeleteRequestSucceeded:(id)arg1;
- (void)onShareIdentityListAddRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onShareIdentityListAddRequestSucceeded:(id)arg1;
- (void)onMultiplayerSummaryRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onMultiplayerSummaryRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)onNeverListDeleteRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onNeverListDeleteRequestSucceeded:(id)arg1;
- (void)onNeverListAddRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onNeverListAddRequestSucceeded:(id)arg1;
- (void)onNeverListGetRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onNeverListGetRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)dealloc;
- (id)getUserShareIdentityListIgnoreCache:(_Bool)arg1;
- (long long)getShareIdentityStatus:(id)arg1 ignoreCache:(_Bool)arg2;
- (long long)shareIdentityUserStatusFromPrivacy:(int)arg1;
- (long long)getUserShareRecordedGameSessionsStatus;
- (long long)getUserShareIdentityPrivacyStatus;
- (long long)getBlockStatus:(id)arg1 ignoreCache:(_Bool)arg2;
- (void)getPrivacySettingsForUserXuid:(id)arg1 callbackDelegate:(id)arg2 withRequestContext:(id)arg3;
- (void)setUserPrivacyValue:(int)arg1 forSettingType:(int)arg2 callbackDelegate:(id)arg3 withRequestContext:(id)arg4;
- (void)setUsersToShareIdentityList:(id)arg1 callbackDelegate:(id)arg2 requestContext:(id)arg3;
- (void)deleteUsersToShareIdentitytList:(id)arg1 callbackDelegate:(id)arg2 requestContext:(id)arg3;
- (void)addUsersToShareIdentitytList:(id)arg1 callbackDelegate:(id)arg2 requestContext:(id)arg3;
- (void)getMultiplayerSummaryCallbackDelegate:(id)arg1 requestContext:(id)arg2;
- (void)unblockUser:(id)arg1 callbackDelegate:(id)arg2 requestContext:(id)arg3;
- (void)blockUser:(id)arg1 callbackDelegate:(id)arg2 requestContext:(id)arg3;
@property(readonly, nonatomic) NSSet *blockedList;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

