//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DirectoryWatcher, NSString;
@protocol OS_dispatch_queue, XBXFolderManagerDelegate;

@interface XBXFolderManager : NSObject
{
    _Bool _isPurging;
    int purgeThresholdSize;
    unsigned long long folderSize;
    unsigned long long folderCapacity;
    id <XBXFolderManagerDelegate> xbxFolderManagerDelegate;
    NSString *folder;
    DirectoryWatcher *folderWatcher;
    DirectoryWatcher *_directoryWatcher;
    NSObject<OS_dispatch_queue> *_purgeQueue;
}

+ (id)getOfflineCacheFolder;
+ (id)getLogFolder;
+ (id)getCacheFolder;
+ (id)getLibraryFolder;
+ (id)getDocumentFolder;
+ (unsigned long long)getFileSize:(id)arg1 fileName:(id)arg2;
+ (_Bool)removeFile:(id)arg1 fromFolder:(id)arg2;
+ (_Bool)emptyFolder:(id)arg1;
+ (id)getUrlMD5Hash:(id)arg1;
+ (id)getFileSafeName:(id)arg1;
+ (_Bool)createFolder:(id)arg1;
+ (_Bool)folderExists:(id)arg1;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *purgeQueue; // @synthesize purgeQueue=_purgeQueue;
@property(nonatomic) _Bool isPurging; // @synthesize isPurging=_isPurging;
@property(retain, nonatomic) DirectoryWatcher *directoryWatcher; // @synthesize directoryWatcher=_directoryWatcher;
@property(retain, nonatomic) DirectoryWatcher *folderWatcher; // @synthesize folderWatcher;
@property(retain, nonatomic) NSString *folder; // @synthesize folder;
@property(nonatomic) __weak id <XBXFolderManagerDelegate> xbxFolderManagerDelegate; // @synthesize xbxFolderManagerDelegate;
@property(nonatomic) unsigned long long folderCapacity; // @synthesize folderCapacity;
@property(nonatomic) int purgeThresholdSize; // @synthesize purgeThresholdSize;
@property(nonatomic) unsigned long long folderSize; // @synthesize folderSize;
- (void).cxx_destruct;
- (void)dealloc;
- (id)getFilesPropertiesBasedOnLatestModificationDate;
- (unsigned long long)getFolderSize;
- (void)doPurge:(id)arg1;
- (void)purgeFolder:(unsigned long long)arg1;
- (unsigned long long)getFileSize:(id)arg1;
- (_Bool)isFileExist:(id)arg1;
- (id)contentFromFile:(id)arg1;
- (_Bool)renameFile:(id)arg1 toFileName:(id)arg2;
- (_Bool)moveFile:(id)arg1 toFolder:(id)arg2;
- (_Bool)copyFile:(id)arg1 toFolder:(id)arg2;
- (void)stopMonitor;
- (void)startMonitor:(id)arg1;
- (id)init:(id)arg1 maxFolderSize:(unsigned long long)arg2 purgeThresholdPercentage:(int)arg3;

@end

