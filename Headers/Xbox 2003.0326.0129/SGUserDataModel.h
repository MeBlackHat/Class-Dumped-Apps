//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "SGIUserDataModel-Protocol.h"
#import "XBXIAppObject-Protocol.h"
#import "XBXSLSFamilySettingsRequestCallback-Protocol.h"
#import "XBXSLSGamerProfileRequestCallback-Protocol.h"
#import "XBXSLSPreferredColorsRequestCallback-Protocol.h"
#import "XBXSLSPrivacySettingsRequestCallback-Protocol.h"
#import "_TtP10SmartGlass26SGProductOwnershipDelegate_-Protocol.h"

@class NSString, XBXUser;
@protocol SGIUserDataModelDelegate, XBXITokenProvider;

@interface SGUserDataModel : NSObject <XBXSLSGamerProfileRequestCallback, XBXSLSPreferredColorsRequestCallback, XBXSLSFamilySettingsRequestCallback, XBXSLSPrivacySettingsRequestCallback, _TtP10SmartGlass26SGProductOwnershipDelegate_, SGIUserDataModel, XBXIAppObject>
{
    _Bool gamepassSubscriptionIsActive;
    _Bool subscriptionIsExpiringSoon;
    _Bool _gamepassSubscriptionIsExpiringSoon;
    _Bool _goldSubscriptionIsExpiringSoon;
    _Bool _gamepassSubscriptionIsActiveInternal;
    _Bool _goldSubscriptionIsActiveInternal;
    _Bool _subscriptionFetchFailedInternal;
    NSString *gamepassSubscriptionStatus;
    NSString *goldSubscriptionStatus;
    XBXUser *_currentUserInternal;
    long long _stateInternal;
    id <SGIUserDataModelDelegate> _delegateInternal;
    id <XBXITokenProvider> _tokenProviderInternal;
    NSString *_gamepassSubscriptionStatusText;
    NSString *_goldSubscriptionStatusText;
}

@property(nonatomic) _Bool subscriptionFetchFailedInternal; // @synthesize subscriptionFetchFailedInternal=_subscriptionFetchFailedInternal;
@property(nonatomic) _Bool goldSubscriptionIsActiveInternal; // @synthesize goldSubscriptionIsActiveInternal=_goldSubscriptionIsActiveInternal;
@property(nonatomic) _Bool gamepassSubscriptionIsActiveInternal; // @synthesize gamepassSubscriptionIsActiveInternal=_gamepassSubscriptionIsActiveInternal;
@property(nonatomic) _Bool goldSubscriptionIsExpiringSoon; // @synthesize goldSubscriptionIsExpiringSoon=_goldSubscriptionIsExpiringSoon;
@property(nonatomic) _Bool gamepassSubscriptionIsExpiringSoon; // @synthesize gamepassSubscriptionIsExpiringSoon=_gamepassSubscriptionIsExpiringSoon;
@property(copy, nonatomic) NSString *goldSubscriptionStatusText; // @synthesize goldSubscriptionStatusText=_goldSubscriptionStatusText;
@property(copy, nonatomic) NSString *gamepassSubscriptionStatusText; // @synthesize gamepassSubscriptionStatusText=_gamepassSubscriptionStatusText;
@property(retain, nonatomic) id <XBXITokenProvider> tokenProviderInternal; // @synthesize tokenProviderInternal=_tokenProviderInternal;
@property(nonatomic) __weak id <SGIUserDataModelDelegate> delegateInternal; // @synthesize delegateInternal=_delegateInternal;
@property(nonatomic) long long stateInternal; // @synthesize stateInternal=_stateInternal;
@property(retain, nonatomic) XBXUser *currentUserInternal; // @synthesize currentUserInternal=_currentUserInternal;
@property(nonatomic) _Bool subscriptionIsExpiringSoon; // @synthesize subscriptionIsExpiringSoon;
@property(copy, nonatomic) NSString *goldSubscriptionStatus; // @synthesize goldSubscriptionStatus;
@property(copy, nonatomic) NSString *gamepassSubscriptionStatus; // @synthesize gamepassSubscriptionStatus;
@property(nonatomic) _Bool gamepassSubscriptionIsActive; // @synthesize gamepassSubscriptionIsActive;
- (void).cxx_destruct;
- (id)getSLSSerivceManager;
- (void)updateXuid;
- (void)updateIsNewAccount;
- (void)updateCurrentUserAgeGroup;
- (void)marshalUserDataFromXSAPI;
- (void)clearRealNameIfNeeded;
- (long long)sharingPrivacyFromPrivacySettionOption:(int)arg1;
- (void)saveCurrentUserToDisk;
- (void)callDelegateForFailure:(id)arg1;
- (void)callDelegateForErrorIfInitializaing:(id)arg1;
- (void)callDelegateForSuccess;
- (void)callDelegateForSuccessIfInitializing;
- (void)onPrivacySettingsRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onPrivacySettingsRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)getUserPrivacySettings;
- (void)onFamilySettingsRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onFamilySettingsRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)getCurrentUserFamilySettings;
- (void)onProductOwnershipRequestSucceededWith:(id)arg1;
- (void)onProductOwnershipRequestFailedWith:(id)arg1;
- (void)updateSubscriptionStatus:(id)arg1;
- (void)fetchSubscriptionStatus;
- (_Bool)isSubscriptionExpiringSoon:(id)arg1;
- (void)onPreferredColorsRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onPreferredColorsRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)getUserPreferredColors;
- (void)updateUserPreferredColors:(id)arg1;
- (void)updateUserPreferredColorsURL:(id)arg1;
- (void)onGamerProfileRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onGamerProfileRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)getGamerProfileForDesiredSettings:(unsigned long long)arg1;
- (void)onAppEnteredForeground;
- (void)onAppEnteredBackground;
- (void)onUserLogout;
- (void)setTokenProvider:(id)arg1;
- (void)setUser:(id)arg1;
- (void)setEnvironment:(int)arg1;
- (long long)state;
- (_Bool)isCurrentUserXuid:(id)arg1;
- (_Bool)isCurrentUser:(id)arg1;
- (void)updateAccountProfile:(id)arg1;
- (void)updateSocialManagerData:(id)arg1;
- (void)updateGamertag:(id)arg1;
- (void)updateUserRealName:(id)arg1;
- (void)updateUserPrivacySettings:(id)arg1;
- (void)updateUserProfile:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)refresh;
- (void)initialize;
@property(readonly, nonatomic) _Bool subscriptionFetchFailed;
@property(readonly, nonatomic) XBXUser *currentUser;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

