//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "XBXViewModel.h"

#import "SGStatsDelegate-Protocol.h"
#import "SGTitleAchievementsDelegate-Protocol.h"
#import "XBXSLSLeaderboardRequestCallback-Protocol.h"
#import "XBXSLSTitleInfoRequestCallback-Protocol.h"

@class NSArray, NSMutableArray, NSString, SGGameHubLaunchContext, SGTitleAchievementsDataModel, XBXFilterOption, XBXSLSTitleInfoRequest;
@protocol SGIStatsDataModel, SGIUserDataModel, XBXISLSServiceManager;

@interface SGGameHubAchievementsViewModel : XBXViewModel <XBXSLSTitleInfoRequestCallback, SGTitleAchievementsDelegate, SGStatsDelegate, XBXSLSLeaderboardRequestCallback>
{
    int _infoState;
    int _achievementsState;
    int _leaderboardsState;
    XBXFilterOption *_selectedAchievementsFilterOption;
    NSMutableArray *_achievementsFilterOptions;
    SGTitleAchievementsDataModel *_achievementsDataModel;
    NSArray *_lockedAchievements;
    NSArray *_earnedAchievements;
    NSArray *_heroStats;
    XBXSLSTitleInfoRequest *_titleInfoRequest;
    NSArray *_infoStats;
}

@property(retain, nonatomic) NSArray *infoStats; // @synthesize infoStats=_infoStats;
@property(nonatomic) __weak XBXSLSTitleInfoRequest *titleInfoRequest; // @synthesize titleInfoRequest=_titleInfoRequest;
@property(retain, nonatomic) NSArray *heroStats; // @synthesize heroStats=_heroStats;
@property(retain, nonatomic) NSArray *earnedAchievements; // @synthesize earnedAchievements=_earnedAchievements;
@property(retain, nonatomic) NSArray *lockedAchievements; // @synthesize lockedAchievements=_lockedAchievements;
@property(retain, nonatomic) SGTitleAchievementsDataModel *achievementsDataModel; // @synthesize achievementsDataModel=_achievementsDataModel;
@property(retain, nonatomic) NSMutableArray *achievementsFilterOptions; // @synthesize achievementsFilterOptions=_achievementsFilterOptions;
@property(retain, nonatomic) XBXFilterOption *selectedAchievementsFilterOption; // @synthesize selectedAchievementsFilterOption=_selectedAchievementsFilterOption;
@property(nonatomic) int leaderboardsState; // @synthesize leaderboardsState=_leaderboardsState;
@property(nonatomic) int achievementsState; // @synthesize achievementsState=_achievementsState;
@property(nonatomic) int infoState; // @synthesize infoState=_infoState;
- (void).cxx_destruct;
- (id)xbxTitle;
@property(readonly, nonatomic) id <XBXISLSServiceManager> serviceManager;
@property(readonly, nonatomic) id <SGIStatsDataModel> statsDataModel;
@property(readonly, nonatomic) id <SGIUserDataModel> userDataModel;
@property(readonly, nonatomic) SGGameHubLaunchContext *myLaunchContext;
- (void)didTapCompareBtn:(id)arg1;
- (void)didSelectLeaderboardItem:(long long)arg1;
- (void)didSelectAchievementItem:(long long)arg1;
- (id)heroStatCellDataContextForItem:(long long)arg1;
- (id)achievementItemDataContextForItem:(long long)arg1;
- (long long)numberOfItemsInLeaderboards;
- (void)onTitleInfoRequestFailed:(id)arg1 forRequest:(id)arg2 withRequestContext:(id)arg3;
- (void)onTitleInfoRequestSucceeded:(id)arg1 forRequest:(id)arg2 withRequestContext:(id)arg3;
- (long long)numberOfItemsInAchievements;
- (void)onSocialLeaderboardRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onSocialLeaderboardRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)onBatchStatsRequestFailed:(id)arg1 withRequestContext:(id)arg2;
- (void)onBatchStatsRequestSucceeded:(id)arg1 withRequestContext:(id)arg2;
- (void)dataModel:(id)arg1 onAchievementsListUpdateFailed:(id)arg2 withContext:(id)arg3;
- (void)dataModel:(id)arg1 onAchievementsListUpdated:(id)arg2 withContext:(id)arg3;
- (void)refreshLeaderboards;
- (void)refreshAchievements;
- (void)refreshInfo;
- (void)refresh;
- (void)onDestroy;
- (void)onDeactivate;
- (void)onActivate;
- (void)onInitialize;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

