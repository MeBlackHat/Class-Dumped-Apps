//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <FBSharedFramework/IGFeedMediaView.h>

#import <FBSharedFramework/IGFeedItemOverlappingButtonTypeAnimationStateDelegate-Protocol.h>
#import <FBSharedFramework/IGFeedVideoOverlayAdapterDelegate-Protocol.h>
#import <FBSharedFramework/IGImageProgressViewDelegate-Protocol.h>
#import <FBSharedFramework/IGOverlayedIGFeedMediaView-Protocol.h>
#import <FBSharedFramework/IGVideoClassicOverlayViewDelegate-Protocol.h>
#import <FBSharedFramework/IGVideoPlaybackListener-Protocol.h>
#import <FBSharedFramework/IGVideoPlayerOverlayControllerDelegate-Protocol.h>

@class IGFeedVideoOverlayAdapter, IGImageProgressView, IGMediaCroppingInfo, IGMediaIndicator, IGMediaIndicatorConfiguration, IGPhoto, IGUserSession, IGVideo, IGVideoClassicOverlayView, IGVideoPlaybackController, IGVideoPlaybackLoggingConfig, IGVideoPlayerOverlayController, IGVideoViewabilityDebugOverlay, NSArray, NSString, UIControl, UIView;
@protocol IGAlertHUDHandling, IGFeedItemVideoCaptionDelegate, IGFeedItemVideoClipsDelegate, IGFeedItemVideoIGTVDelegate, IGFeedItemVideoTagDelegate, IGFeedItemVideoViewAudioDelegate, IGFeedItemVideoViewDelegate, IGFeedItemVideoViewDoubleTapDelegate, IGFeedItemVideoViewSingleTapDelegate, IGVideoCaptionViewType, IGVideoPlaybackLogging;

@interface IGFeedItemVideoView : IGFeedMediaView <IGFeedItemOverlappingButtonTypeAnimationStateDelegate, IGFeedVideoOverlayAdapterDelegate, IGImageProgressViewDelegate, IGVideoClassicOverlayViewDelegate, IGVideoPlaybackListener, IGVideoPlayerOverlayControllerDelegate, IGOverlayedIGFeedMediaView>
{
    IGUserSession *_userSession;
    IGVideoClassicOverlayView *_defaultOverlayView;
    IGVideoPlayerOverlayController *_overlayController;
    IGFeedVideoOverlayAdapter *_overlayAdapter;
    UIView *_videoView;
    IGVideoPlaybackController *_playbackController;
    UIView *_currentVideoPlayerView;
    _Bool _isEnabled;
    IGMediaCroppingInfo *_croppingInfo;
    id <IGAlertHUDHandling> _alertHandler;
    IGPhoto *_igtvPhoto;
    _Bool _overlaySystemEnabled;
    NSString *_disabledAudioReason;
    _Bool _doubleTapGestureEnabled;
    _Bool _allowAnimatedStateChanges;
    _Bool _enableViewabilityDebugOverlay;
    IGImageProgressView *_photoImageView;
    id <IGFeedItemVideoViewDelegate> _delegate;
    id <IGFeedItemVideoViewAudioDelegate> _audioDelegate;
    id <IGFeedItemVideoViewSingleTapDelegate> _singleTapDelegate;
    id <IGFeedItemVideoViewDoubleTapDelegate> _doubleTapDelegate;
    id <IGFeedItemVideoTagDelegate> _tagDelegate;
    id <IGFeedItemVideoIGTVDelegate> _igtvDelegate;
    id <IGFeedItemVideoClipsDelegate> _clipsDelegate;
    id <IGFeedItemVideoCaptionDelegate> _captionDelegate;
    id <IGVideoPlaybackLogging> _logger;
    IGVideoPlaybackLoggingConfig *_loggingConfig;
    IGVideo *_video;
    UIView *_mediaView;
    IGPhoto *_photo;
    IGMediaIndicatorConfiguration *_indicatorConfiguration;
    IGVideoViewabilityDebugOverlay *_videoViewabilityDebugOverlay;
    CDStruct_3e79a85c _options;
}

- (void).cxx_destruct;
@property(readonly, nonatomic) IGVideoViewabilityDebugOverlay *videoViewabilityDebugOverlay; // @synthesize videoViewabilityDebugOverlay=_videoViewabilityDebugOverlay;
@property(nonatomic) _Bool enableViewabilityDebugOverlay; // @synthesize enableViewabilityDebugOverlay=_enableViewabilityDebugOverlay;
@property(readonly, nonatomic) IGMediaIndicatorConfiguration *indicatorConfiguration; // @synthesize indicatorConfiguration=_indicatorConfiguration;
@property(nonatomic) _Bool allowAnimatedStateChanges; // @synthesize allowAnimatedStateChanges=_allowAnimatedStateChanges;
@property(retain, nonatomic) NSString *disabledAudioReason; // @synthesize disabledAudioReason=_disabledAudioReason;
@property(nonatomic) _Bool doubleTapGestureEnabled; // @synthesize doubleTapGestureEnabled=_doubleTapGestureEnabled;
@property(readonly, nonatomic) IGPhoto *photo; // @synthesize photo=_photo;
@property(readonly, nonatomic) UIView *mediaView; // @synthesize mediaView=_mediaView;
@property(readonly, nonatomic) IGVideo *video; // @synthesize video=_video;
@property(readonly, nonatomic) IGVideoPlaybackLoggingConfig *loggingConfig; // @synthesize loggingConfig=_loggingConfig;
@property(readonly, nonatomic) id <IGVideoPlaybackLogging> logger; // @synthesize logger=_logger;
@property(readonly, nonatomic) CDStruct_3e79a85c options; // @synthesize options=_options;
@property(nonatomic) __weak id <IGFeedItemVideoCaptionDelegate> captionDelegate; // @synthesize captionDelegate=_captionDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoClipsDelegate> clipsDelegate; // @synthesize clipsDelegate=_clipsDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoIGTVDelegate> igtvDelegate; // @synthesize igtvDelegate=_igtvDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoTagDelegate> tagDelegate; // @synthesize tagDelegate=_tagDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoViewDoubleTapDelegate> doubleTapDelegate; // @synthesize doubleTapDelegate=_doubleTapDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoViewSingleTapDelegate> singleTapDelegate; // @synthesize singleTapDelegate=_singleTapDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoViewAudioDelegate> audioDelegate; // @synthesize audioDelegate=_audioDelegate;
@property(nonatomic) __weak id <IGFeedItemVideoViewDelegate> delegate; // @synthesize delegate=_delegate;
- (id)photoImageView;
- (void)peekAudioIndicator;
- (void)peekInitialIndicatorsWithExpandedLeftIndicator:(_Bool)arg1 withCollapseDelay:(double)arg2 hasPeekedBefore:(_Bool)arg3;
- (_Bool)shouldPeekExpandedIndicator;
- (_Bool)willShowIndicator;
- (_Bool)photoViewHasFinishedLoading;
- (_Bool)hasUserTags;
- (_Bool)hasProductTags;
@property(readonly, nonatomic) NSArray *supplementaryViews;
- (_Bool)needsExternalCaptionControlling;
@property(readonly, nonatomic) UIControl<IGVideoCaptionViewType> *captionView;
@property(nonatomic) _Bool showCaption;
- (void)feedItemOverlappingButtonDidFinishAnimatingDown:(id)arg1;
- (void)feedItemOverlappingButtonWillAnimateUp:(id)arg1;
- (id)overlayViewTitleIdentifierForIGTVKeepWatchingButton;
- (void)feedVideoOverlayAdapterDidTapSundialIndicator:(id)arg1;
- (void)feedVideoOverlayAdapterDidTapKeepWatchingButton:(id)arg1;
- (void)feedVideoOverlayAdapterDidTapIGTVIndicator:(id)arg1;
- (void)feedVideoOverlayAdapterDidTapTagsIndicator:(id)arg1 indicator:(id)arg2;
- (void)videoPlayerOverlayControllerDidDoubleTap:(id)arg1;
- (void)videoPlayerOverlayControllerDidSingleTap:(id)arg1;
- (void)overlayViewDidTapCaptionView:(id)arg1;
- (void)overlayViewIGTVOverlayDisplayed:(id)arg1;
- (void)overlayViewDidTapKeepWatchingButton:(id)arg1;
- (id)overlayViewTitleIdentifierForIGTVKeepWatchingButton:(id)arg1;
- (void)overlayViewDidTapProductTypeIndicator:(id)arg1;
- (void)overlayViewDidTapTagIndicator:(id)arg1;
- (void)overlayViewDidTapAudioIndicator:(id)arg1;
- (void)overlayViewDidDoubleTap:(id)arg1;
- (void)overlayViewDidSingleTap:(id)arg1;
- (void)progressImageView:(id)arg1 didUpdateLoadingState:(id)arg2;
- (void)progressImageView:(id)arg1 didFailLoadWithError:(id)arg2 networkRequestSummary:(id)arg3;
- (void)progressImageView:(id)arg1 didLoadImage:(id)arg2 loadSource:(id)arg3 networkRequestSummary:(id)arg4;
- (void)videoPlaybackController:(id)arg1 didLoopItem:(id)arg2;
- (void)videoPlaybackControllerDidFinishSeeking:(id)arg1;
- (void)videoPlaybackControllerDidEmptyPlaybackBuffer:(id)arg1;
- (void)videoPlaybackControllerDidStopPlayback:(id)arg1;
- (void)videoPlaybackController:(id)arg1 didFailPlayingItem:(id)arg2 error:(id)arg3;
- (void)videoPlaybackController:(id)arg1 didEndPlayingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didPauseItem:(id)arg2 reason:(long long)arg3;
- (void)videoPlaybackController:(id)arg1 didStartLoadingItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didLoadVideoForItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didRequestItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didApplySettingsForItem:(id)arg2;
- (void)videoPlaybackController:(id)arg1 didUpdateLoadingProgressForItem:(id)arg2 progress:(double)arg3;
- (void)videoPlaybackController:(id)arg1 didUpdatePlaybackProgressForItem:(id)arg2 progress:(double)arg3;
- (void)videoPlaybackController:(id)arg1 didToggleAudioWithReason:(long long)arg2;
- (void)videoPlaybackController:(id)arg1 didBeginPlayingItem:(id)arg2;
- (void)_handleOverlayDoubleTap;
- (void)_handleOverlaySingleTap;
- (void)_hideAllIndicators;
- (void)_setupOverlayViewsIfNeeded;
- (void)_finalizeProgressImageViewState;
- (void)_setOverlayContainersHidden:(_Bool)arg1;
- (void)_showVideo:(_Bool)arg1 animated:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)showSaveToCollectionUpsell:(_Bool)arg1 animated:(_Bool)arg2;
- (void)showPreviewOverlayIfNeeded;
- (void)showProductTypeIndicatorIfNeededAnimated:(_Bool)arg1;
- (void)setIsEnabled:(_Bool)arg1 withVideoPlaybackController:(id)arg2;
- (void)cleanUpVideoView:(CDUnknownBlockType)arg1;
- (void)updateOverlaysWithIndicatorConfiguration:(id)arg1 options:(CDStruct_3e79a85c)arg2;
- (void)updateVideoViewToPlayingStateAnimated:(_Bool)arg1;
- (void)updateVideoViewToLoadingStateWithDurationLeft:(double)arg1;
- (void)updateVideoViewToView:(id)arg1;
- (void)setVideo:(id)arg1 coverPhoto:(id)arg2 layoutWidth:(double)arg3 croppingInfo:(id)arg4 logger:(id)arg5 loggingConfig:(id)arg6 indicatorConfiguration:(id)arg7 userSession:(id)arg8 feedTheme:(id)arg9 options:(CDStruct_3e79a85c)arg10 module:(id)arg11 igtvPhoto:(id)arg12;
@property(readonly, nonatomic) _Bool isShowingPreviewOverlay;
@property(readonly, nonatomic) _Bool allowResumptionOfPlayback;
@property(readonly, nonatomic) IGMediaIndicator *audioIndicator;
@property(nonatomic) long long videoIndicatorStyle;
@property(nonatomic) _Bool videoIndicatorEnabled;
@property(readonly, nonatomic) _Bool posterFrameLoaded;
- (void)setAccessibilityTraits:(unsigned long long)arg1;
- (void)setAccessibilityLabel:(id)arg1;
- (void)setViewabilityDebugView:(id)arg1;
- (void)layoutSubviews;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

