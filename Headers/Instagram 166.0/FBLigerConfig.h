//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSString;
@protocol FBLigerProvidesAnalyticsLogger, FBLigerProvidesNetworkStatusMonitor;

@interface FBLigerConfig : NSObject
{
    _Bool _persistentSSLCacheEnabled;
    _Bool _crossDomainSSLCacheEnabled;
    _Bool _httpSessionManagerOriginLimitEnabled;
    _Bool _needsSandboxCertificates;
    _Bool _radioMonitorEnabled;
    _Bool _flowControlEnabled;
    _Bool _enableHandlerAbortTxnOnBadStatus;
    _Bool _useHTTP2ForStatic;
    _Bool _codecHeadroomOptimization;
    _Bool _enablePACFile;
    _Bool _fizzEnabled;
    _Bool _fizzPersistentCacheEnabled;
    _Bool _fizzEarlyDataEnabled;
    _Bool _useNSURLSessionForNonFizzHosts;
    _Bool _enableFizzCertCompression;
    _Bool _dnsCacheEnabled;
    _Bool _useDNSExecutorForHTTPClient;
    _Bool _dnsQueueWaitOnExit;
    _Bool _enableDoH;
    _Bool _quicFizzEarlyDataEnabled;
    _Bool _quicConnectUDP;
    _Bool _quicEnableSocketErrMsgCallback;
    _Bool _quicPacingEnabled;
    _Bool _enableQuicForFbcdnVideoRequest;
    _Bool _enableQuicForFbcdnNoVideo;
    _Bool _enableQuicForFnaFbcdnNoVideo;
    _Bool _enableQuicForIgcdnRequest;
    _Bool _enableQuicForFnaIgcdnRequest;
    _Bool _attemptEarlyDataInQuicPreconnect;
    _Bool _quicContinueOnNetworkUnreachable;
    _Bool _quicShouldReceiveBatch;
    _Bool _quicEndRaceWithFirstPeerPacket;
    _Bool _d6dEnabled;
    _Bool _enableNetworkInsightsObserver;
    _Bool _enableWifiInfo;
    _Bool _inlinePersistenceLoading;
    _Bool _enableZstd;
    _Bool _enableDz;
    _Bool _fizzEnableDelegatedCreds;
    _Bool _enableMigration;
    _Bool _deadConnTimeoutDryRun;
    _Bool _bidirectionalStreamingEnabled;
    _Bool _enableH2PubSub;
    int _persistentSSLCacheCapacity;
    int _persistentSSLCacheSyncInterval;
    int _happyEyeballsConnectionDelayMs;
    int _fizzClientTestEnum;
    int _dnsRequestsOutstanding;
    int _quicMaxRecvPacketSize;
    int _quicMaxRTOs;
    unsigned int _quicConnFlowControlWindow;
    unsigned int _quicStreamFlowControlWindowForDynamic;
    unsigned int _quicStreamFlowControlWindowForVideo;
    unsigned int _quicStreamFlowControlWindowForImage;
    unsigned int _quicTcpRaceDelayMilliseconds;
    unsigned int _quicMaxCwndInMss;
    unsigned int _quicWriteConnDataPacketsLimit;
    unsigned int _quicIdleTimeoutSecs;
    unsigned int _quicReceiveBatchSize;
    unsigned int _quicInitAckThresh;
    unsigned int _quicAckIntervalBeforeThresh;
    unsigned int _quicAckIntervalAfterThresh;
    unsigned int _quicReadLoopDetectionLimit;
    unsigned int _quicVersion;
    unsigned int _d6dBasePMTU;
    unsigned int _d6dRaiseTimeoutSecs;
    unsigned int _d6dProbeTimeoutSecs;
    int _pingTimeoutMinMs;
    int _pingTimeoutMaxMs;
    int _pingTimeoutRtoMultiple;
    int _requestCircularLogSinkSize;
    NSString *_persistentSSLCacheFilename;
    long long _httpSessionManagerMaxIdleSPDYSessions;
    id <FBLigerProvidesNetworkStatusMonitor> _ligerNetworkStatusMonitor;
    NSArray *_requestObservers;
    CDUnknownBlockType _proxyUserAgentFormattingBlock;
    long long _sessionFlowControlWindowSize;
    long long _streamFlowControlWindowSize;
    NSArray *_preConnectList;
    id <FBLigerProvidesAnalyticsLogger> _analyticsLogger;
    NSString *_pacFileCheckURL;
    NSString *_hostsWithQuicEnabled;
    NSString *_pingTimeoutAllowlistDomainSuffixes;
    NSString *_h2PubSubHostnames;
    NSString *_quicKnobs;
}

- (void).cxx_destruct;
@property(copy, nonatomic) NSString *quicKnobs; // @synthesize quicKnobs=_quicKnobs;
@property(copy, nonatomic) NSString *h2PubSubHostnames; // @synthesize h2PubSubHostnames=_h2PubSubHostnames;
@property(nonatomic) _Bool enableH2PubSub; // @synthesize enableH2PubSub=_enableH2PubSub;
@property(nonatomic) _Bool bidirectionalStreamingEnabled; // @synthesize bidirectionalStreamingEnabled=_bidirectionalStreamingEnabled;
@property(nonatomic) int requestCircularLogSinkSize; // @synthesize requestCircularLogSinkSize=_requestCircularLogSinkSize;
@property(nonatomic) _Bool deadConnTimeoutDryRun; // @synthesize deadConnTimeoutDryRun=_deadConnTimeoutDryRun;
@property(copy, nonatomic) NSString *pingTimeoutAllowlistDomainSuffixes; // @synthesize pingTimeoutAllowlistDomainSuffixes=_pingTimeoutAllowlistDomainSuffixes;
@property(nonatomic) int pingTimeoutRtoMultiple; // @synthesize pingTimeoutRtoMultiple=_pingTimeoutRtoMultiple;
@property(nonatomic) int pingTimeoutMaxMs; // @synthesize pingTimeoutMaxMs=_pingTimeoutMaxMs;
@property(nonatomic) int pingTimeoutMinMs; // @synthesize pingTimeoutMinMs=_pingTimeoutMinMs;
@property(nonatomic) _Bool enableMigration; // @synthesize enableMigration=_enableMigration;
@property(nonatomic) _Bool fizzEnableDelegatedCreds; // @synthesize fizzEnableDelegatedCreds=_fizzEnableDelegatedCreds;
@property(nonatomic) _Bool enableDz; // @synthesize enableDz=_enableDz;
@property(nonatomic) _Bool enableZstd; // @synthesize enableZstd=_enableZstd;
@property(nonatomic) _Bool inlinePersistenceLoading; // @synthesize inlinePersistenceLoading=_inlinePersistenceLoading;
@property(nonatomic) _Bool enableWifiInfo; // @synthesize enableWifiInfo=_enableWifiInfo;
@property(nonatomic) _Bool enableNetworkInsightsObserver; // @synthesize enableNetworkInsightsObserver=_enableNetworkInsightsObserver;
@property(nonatomic) unsigned int d6dProbeTimeoutSecs; // @synthesize d6dProbeTimeoutSecs=_d6dProbeTimeoutSecs;
@property(nonatomic) unsigned int d6dRaiseTimeoutSecs; // @synthesize d6dRaiseTimeoutSecs=_d6dRaiseTimeoutSecs;
@property(nonatomic) unsigned int d6dBasePMTU; // @synthesize d6dBasePMTU=_d6dBasePMTU;
@property(nonatomic) _Bool d6dEnabled; // @synthesize d6dEnabled=_d6dEnabled;
@property(nonatomic) unsigned int quicVersion; // @synthesize quicVersion=_quicVersion;
@property(nonatomic) unsigned int quicReadLoopDetectionLimit; // @synthesize quicReadLoopDetectionLimit=_quicReadLoopDetectionLimit;
@property(nonatomic) unsigned int quicAckIntervalAfterThresh; // @synthesize quicAckIntervalAfterThresh=_quicAckIntervalAfterThresh;
@property(nonatomic) unsigned int quicAckIntervalBeforeThresh; // @synthesize quicAckIntervalBeforeThresh=_quicAckIntervalBeforeThresh;
@property(nonatomic) unsigned int quicInitAckThresh; // @synthesize quicInitAckThresh=_quicInitAckThresh;
@property(nonatomic) _Bool quicEndRaceWithFirstPeerPacket; // @synthesize quicEndRaceWithFirstPeerPacket=_quicEndRaceWithFirstPeerPacket;
@property(nonatomic) unsigned int quicReceiveBatchSize; // @synthesize quicReceiveBatchSize=_quicReceiveBatchSize;
@property(nonatomic) _Bool quicShouldReceiveBatch; // @synthesize quicShouldReceiveBatch=_quicShouldReceiveBatch;
@property(nonatomic) unsigned int quicIdleTimeoutSecs; // @synthesize quicIdleTimeoutSecs=_quicIdleTimeoutSecs;
@property(nonatomic) _Bool quicContinueOnNetworkUnreachable; // @synthesize quicContinueOnNetworkUnreachable=_quicContinueOnNetworkUnreachable;
@property(nonatomic) unsigned int quicWriteConnDataPacketsLimit; // @synthesize quicWriteConnDataPacketsLimit=_quicWriteConnDataPacketsLimit;
@property(nonatomic) _Bool attemptEarlyDataInQuicPreconnect; // @synthesize attemptEarlyDataInQuicPreconnect=_attemptEarlyDataInQuicPreconnect;
@property(nonatomic) _Bool enableQuicForFnaIgcdnRequest; // @synthesize enableQuicForFnaIgcdnRequest=_enableQuicForFnaIgcdnRequest;
@property(nonatomic) _Bool enableQuicForIgcdnRequest; // @synthesize enableQuicForIgcdnRequest=_enableQuicForIgcdnRequest;
@property(nonatomic) _Bool enableQuicForFnaFbcdnNoVideo; // @synthesize enableQuicForFnaFbcdnNoVideo=_enableQuicForFnaFbcdnNoVideo;
@property(nonatomic) _Bool enableQuicForFbcdnNoVideo; // @synthesize enableQuicForFbcdnNoVideo=_enableQuicForFbcdnNoVideo;
@property(nonatomic) _Bool enableQuicForFbcdnVideoRequest; // @synthesize enableQuicForFbcdnVideoRequest=_enableQuicForFbcdnVideoRequest;
@property(copy, nonatomic) NSString *hostsWithQuicEnabled; // @synthesize hostsWithQuicEnabled=_hostsWithQuicEnabled;
@property(nonatomic) _Bool quicPacingEnabled; // @synthesize quicPacingEnabled=_quicPacingEnabled;
@property(nonatomic) unsigned int quicMaxCwndInMss; // @synthesize quicMaxCwndInMss=_quicMaxCwndInMss;
@property(nonatomic) unsigned int quicTcpRaceDelayMilliseconds; // @synthesize quicTcpRaceDelayMilliseconds=_quicTcpRaceDelayMilliseconds;
@property(nonatomic) unsigned int quicStreamFlowControlWindowForImage; // @synthesize quicStreamFlowControlWindowForImage=_quicStreamFlowControlWindowForImage;
@property(nonatomic) unsigned int quicStreamFlowControlWindowForVideo; // @synthesize quicStreamFlowControlWindowForVideo=_quicStreamFlowControlWindowForVideo;
@property(nonatomic) unsigned int quicStreamFlowControlWindowForDynamic; // @synthesize quicStreamFlowControlWindowForDynamic=_quicStreamFlowControlWindowForDynamic;
@property(nonatomic) unsigned int quicConnFlowControlWindow; // @synthesize quicConnFlowControlWindow=_quicConnFlowControlWindow;
@property(nonatomic) _Bool quicEnableSocketErrMsgCallback; // @synthesize quicEnableSocketErrMsgCallback=_quicEnableSocketErrMsgCallback;
@property(nonatomic) int quicMaxRTOs; // @synthesize quicMaxRTOs=_quicMaxRTOs;
@property(nonatomic) _Bool quicConnectUDP; // @synthesize quicConnectUDP=_quicConnectUDP;
@property(nonatomic) int quicMaxRecvPacketSize; // @synthesize quicMaxRecvPacketSize=_quicMaxRecvPacketSize;
@property(nonatomic) _Bool quicFizzEarlyDataEnabled; // @synthesize quicFizzEarlyDataEnabled=_quicFizzEarlyDataEnabled;
@property(nonatomic) _Bool enableDoH; // @synthesize enableDoH=_enableDoH;
@property(nonatomic) _Bool dnsQueueWaitOnExit; // @synthesize dnsQueueWaitOnExit=_dnsQueueWaitOnExit;
@property(nonatomic) _Bool useDNSExecutorForHTTPClient; // @synthesize useDNSExecutorForHTTPClient=_useDNSExecutorForHTTPClient;
@property(nonatomic) int dnsRequestsOutstanding; // @synthesize dnsRequestsOutstanding=_dnsRequestsOutstanding;
@property(nonatomic) _Bool dnsCacheEnabled; // @synthesize dnsCacheEnabled=_dnsCacheEnabled;
@property(nonatomic) int fizzClientTestEnum; // @synthesize fizzClientTestEnum=_fizzClientTestEnum;
@property(nonatomic) _Bool enableFizzCertCompression; // @synthesize enableFizzCertCompression=_enableFizzCertCompression;
@property(nonatomic) _Bool useNSURLSessionForNonFizzHosts; // @synthesize useNSURLSessionForNonFizzHosts=_useNSURLSessionForNonFizzHosts;
@property(nonatomic) _Bool fizzEarlyDataEnabled; // @synthesize fizzEarlyDataEnabled=_fizzEarlyDataEnabled;
@property(nonatomic) _Bool fizzPersistentCacheEnabled; // @synthesize fizzPersistentCacheEnabled=_fizzPersistentCacheEnabled;
@property(nonatomic) _Bool fizzEnabled; // @synthesize fizzEnabled=_fizzEnabled;
@property(copy, nonatomic) NSString *pacFileCheckURL; // @synthesize pacFileCheckURL=_pacFileCheckURL;
@property(nonatomic) _Bool enablePACFile; // @synthesize enablePACFile=_enablePACFile;
@property(nonatomic) _Bool codecHeadroomOptimization; // @synthesize codecHeadroomOptimization=_codecHeadroomOptimization;
@property(retain, nonatomic) id <FBLigerProvidesAnalyticsLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(nonatomic) _Bool useHTTP2ForStatic; // @synthesize useHTTP2ForStatic=_useHTTP2ForStatic;
@property(nonatomic) _Bool enableHandlerAbortTxnOnBadStatus; // @synthesize enableHandlerAbortTxnOnBadStatus=_enableHandlerAbortTxnOnBadStatus;
@property(copy, nonatomic) NSArray *preConnectList; // @synthesize preConnectList=_preConnectList;
@property(nonatomic) long long streamFlowControlWindowSize; // @synthesize streamFlowControlWindowSize=_streamFlowControlWindowSize;
@property(nonatomic) long long sessionFlowControlWindowSize; // @synthesize sessionFlowControlWindowSize=_sessionFlowControlWindowSize;
@property(nonatomic) _Bool flowControlEnabled; // @synthesize flowControlEnabled=_flowControlEnabled;
@property(nonatomic) _Bool radioMonitorEnabled; // @synthesize radioMonitorEnabled=_radioMonitorEnabled;
@property(nonatomic) _Bool needsSandboxCertificates; // @synthesize needsSandboxCertificates=_needsSandboxCertificates;
@property(readonly, copy, nonatomic) CDUnknownBlockType proxyUserAgentFormattingBlock; // @synthesize proxyUserAgentFormattingBlock=_proxyUserAgentFormattingBlock;
@property(copy, nonatomic) NSArray *requestObservers; // @synthesize requestObservers=_requestObservers;
@property(nonatomic) id <FBLigerProvidesNetworkStatusMonitor> ligerNetworkStatusMonitor; // @synthesize ligerNetworkStatusMonitor=_ligerNetworkStatusMonitor;
@property(nonatomic) int happyEyeballsConnectionDelayMs; // @synthesize happyEyeballsConnectionDelayMs=_happyEyeballsConnectionDelayMs;
@property(nonatomic) _Bool httpSessionManagerOriginLimitEnabled; // @synthesize httpSessionManagerOriginLimitEnabled=_httpSessionManagerOriginLimitEnabled;
@property(nonatomic) long long httpSessionManagerMaxIdleSPDYSessions; // @synthesize httpSessionManagerMaxIdleSPDYSessions=_httpSessionManagerMaxIdleSPDYSessions;
@property(nonatomic) _Bool crossDomainSSLCacheEnabled; // @synthesize crossDomainSSLCacheEnabled=_crossDomainSSLCacheEnabled;
@property(nonatomic) int persistentSSLCacheSyncInterval; // @synthesize persistentSSLCacheSyncInterval=_persistentSSLCacheSyncInterval;
@property(nonatomic) int persistentSSLCacheCapacity; // @synthesize persistentSSLCacheCapacity=_persistentSSLCacheCapacity;
@property(copy, nonatomic) NSString *persistentSSLCacheFilename; // @synthesize persistentSSLCacheFilename=_persistentSSLCacheFilename;
@property(nonatomic) _Bool persistentSSLCacheEnabled; // @synthesize persistentSSLCacheEnabled=_persistentSSLCacheEnabled;
- (void)setFlowControlWindowSize:(long long)arg1;
- (id)initDefaultConfigWithProxyUserAgentFormattingBlock:(CDUnknownBlockType)arg1 sandboxProvider:(CDUnknownBlockType)arg2;

@end

