//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "RCTEventEmitter.h"

#import "RCTBridgeModule-Protocol.h"

@class NSObject, NSString, RCTBridge;
@protocol OS_dispatch_queue;

@interface UserModule : RCTEventEmitter <RCTBridgeModule>
{
    struct map<unsigned int, Microsoft::GameStreaming::EventRegistration, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, Microsoft::GameStreaming::EventRegistration>>> m_subscriptions;
    struct shared_ptr<Microsoft::GameStreaming::StreamClientHolder> m_streamClientHolder;
}

+ (const struct RCTMethodInfo *)__rct_export__1646;
+ (const struct RCTMethodInfo *)__rct_export__1475;
+ (const struct RCTMethodInfo *)__rct_export__1194;
+ (const struct RCTMethodInfo *)__rct_export__1023;
+ (const struct RCTMethodInfo *)__rct_export__892;
+ (const struct RCTMethodInfo *)__rct_export__741;
+ (const struct RCTMethodInfo *)__rct_export__400;
+ (_Bool)requiresMainQueueSetup;
+ (void)load;
+ (id)moduleName;
- (id).cxx_construct;
- (void).cxx_destruct;
- (void)getMarket:(id)arg1 withResolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)getSettings:(id)arg1 withResolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)setRegion:(id)arg1 token:(id)arg2 withResolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)getRegions:(id)arg1 withResolver:(CDUnknownBlockType)arg2 rejecter:(CDUnknownBlockType)arg3;
- (void)updateToken:(id)arg1 token:(id)arg2 withResolver:(CDUnknownBlockType)arg3 rejecter:(CDUnknownBlockType)arg4;
- (void)logout:(id)arg1;
- (void)emitEvents:(id)arg1;
- (id)supportedEvents;
- (id)init;

// Remaining properties
@property(readonly, nonatomic) __weak RCTBridge *bridge;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *methodQueue;
@property(readonly) Class superclass;

@end

