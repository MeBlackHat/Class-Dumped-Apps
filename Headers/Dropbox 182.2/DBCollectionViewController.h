//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "DBActivityContainerChildViewController-Protocol.h"
#import "DBCollectionModelObserving-Protocol.h"
#import "DBCollectionModelUpdateDelegate-Protocol.h"
#import "DBCollectionViewGlobalSupplementaryViewProvider-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "_TtP40dbx_core_uicollectionview_provider_swift22CollectionViewProvider_-Protocol.h"

@class DBCollectionViewModelDataSource, DBMessageStatusView, DBObserverHandle, DBPassthroughView, DBWeakObserverMap, NSArray, NSIndexPath, NSLayoutConstraint, NSString, UIBarButtonItem, UICollectionView, UICollectionViewLayout, UIScrollView, UIView;
@protocol DBCancellableToken, DBCollectionModel, DBCollectionViewControllerSideAccessory, DBCollectionViewSideAccessoryManager, DBContentView, DBContentViewObjectModelBinding;

@interface DBCollectionViewController : UIViewController <DBActivityContainerChildViewController, DBCollectionViewGlobalSupplementaryViewProvider, DBCollectionModelObserving, UICollectionViewDelegate, DBCollectionModelUpdateDelegate, _TtP40dbx_core_uicollectionview_provider_swift22CollectionViewProvider_>
{
    UICollectionViewLayout *_collectionViewLayout;
    UIView *_statusView;
    DBMessageStatusView *_statusMessageView;
    DBPassthroughView *_containerForStatusViews;
    NSLayoutConstraint *_statusViewContainerTopConstraint;
    NSLayoutConstraint *_indexViewConstraint;
    DBWeakObserverMap *_supplementaryViewChangeObservers;
    DBObserverHandle *_modelObserverHandle;
    id <DBCancellableToken> _invalidateLayoutToken;
    _Bool _inBackground;
    _Bool _performingBatchUpdate;
    NSArray *_notificationTokens;
    _Bool _isVisible;
    NSLayoutConstraint *_sideAccessoryTopConstraint;
    UIView<DBContentView> *_headerView;
    UIView<DBContentView> *_footerView;
    UICollectionView *_collectionView;
    DBCollectionViewModelDataSource *_dataSource;
    id <DBCollectionModel> _model;
    id <DBCollectionViewSideAccessoryManager> _sideAccessoryManager;
    UIView<DBCollectionViewControllerSideAccessory> *_sideAccessory;
    id <DBContentViewObjectModelBinding> _bindingController;
}

+ (_Bool)db_shouldFallbackOnFullReloadWithChanges:(id)arg1;
@property(readonly, nonatomic) id <DBContentViewObjectModelBinding> bindingController; // @synthesize bindingController=_bindingController;
@property(readonly, nonatomic) UIView<DBCollectionViewControllerSideAccessory> *sideAccessory; // @synthesize sideAccessory=_sideAccessory;
@property(retain, nonatomic) id <DBCollectionViewSideAccessoryManager> sideAccessoryManager; // @synthesize sideAccessoryManager=_sideAccessoryManager;
@property(retain, nonatomic) id <DBCollectionModel> model; // @synthesize model=_model;
@property(readonly, nonatomic) DBCollectionViewModelDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(readonly, nonatomic) UICollectionView *collectionView; // @synthesize collectionView=_collectionView;
@property(retain, nonatomic) UIView<DBContentView> *footerView; // @synthesize footerView=_footerView;
@property(retain, nonatomic) UIView<DBContentView> *headerView; // @synthesize headerView=_headerView;
- (void).cxx_destruct;
- (void)viewSafeAreaInsetsDidChange;
- (void)db_setupSideAccessoryView;
- (void)db_addConstraintsForSideAccessoryCollectionView;
- (void)db_addConstraintsForSideAccessory;
- (void)db_addNewSideAccessory:(id)arg1;
- (void)db_cleanUpCurrentSideAccessory;
- (void)db_setSideAccessory:(id)arg1;
- (void)db_notifyObserversOfSupplementaryViewChangeAtIndexPath:(id)arg1;
- (id)addSupplementaryViewChangeObserver:(id)arg1;
- (void)db_configureDataSourceForSupplementaryViews;
- (id)db_invalidationContextForGlobalSupplementaryViewAtIndexPath:(id)arg1;
@property(readonly, nonatomic) NSIndexPath *footerViewIndexPath;
@property(readonly, nonatomic) NSIndexPath *headerViewIndexPath;
- (void)layoutHeaderView;
@property(readonly, nonatomic) Class globalSupplementaryViewClass;
@property(readonly, copy, nonatomic) NSString *globalSupplementaryViewReuseIdentifier;
- (_Bool)db_shouldSkipBatchUpdatesForChangesOfCollectionModel:(id)arg1;
- (void)db_collectionViewFullReloadWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)db_loadCollectionView;
- (void)db_updateStatusMessageForState:(long long)arg1;
- (void)db_configureWithStatusView:(id)arg1;
- (void)db_updateStatusForState:(long long)arg1;
- (void)collectionModel:(id)arg1 didLeaveState:(long long)arg2;
- (void)collectionModel:(id)arg1 willEnterState:(long long)arg2;
- (void)collectionModel:(id)arg1 didUpdateWithChanges:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)collectionModelDidRefresh:(id)arg1;
- (void)collectionModel:(id)arg1 canUpdateWithBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (_Bool)isVisible;
- (void)setStatusMessagesHidden:(_Bool)arg1;
- (_Bool)shouldDisplayStatusMessagesAfterInitialLoad;
- (_Bool)shouldIgnoreEmptyUpdates;
- (_Bool)shouldUsePerformBatchUpdatesForFullReload;
- (id)statusMessageForState:(long long)arg1;
- (id)statusViewForState:(long long)arg1;
- (id)sideAccessoryTopConstraint;
- (id)contentTopLayoutAnchor;
- (void)db_reloadModelIfWithoutData;
- (void)db_preemptivelyHideAndReloadCollectionView;
@property(readonly, nonatomic) struct CGSize contentSize;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)db_unregisterFromApplicationActivityNotifications;
- (void)db_markAsInBackground:(_Bool)arg1;
- (void)db_registerForApplicationActivityNotifications;
- (void)dealloc;
- (id)initWithModel:(id)arg1 layout:(id)arg2 bindingController:(id)arg3;
- (id)initWithModel:(id)arg1 layout:(id)arg2;
@property(nonatomic, readonly) UIBarButtonItem *rightBarButtonItem;
@property(nonatomic, readonly) UIScrollView *scrollView;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

