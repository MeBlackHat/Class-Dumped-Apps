//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PSPDFKit/PSPDFCacheDocumentHashManagerDelegate-Protocol.h>
#import <PSPDFKit/PSPDFCacheStore-Protocol.h>

@class NSString, PSPDFCacheDocumentHashManager, PSPDFCacheMetadata, PSPDFDiskCacheDatabase;
@protocol PSPDFFileManager;

@interface PSPDFDiskCache : NSObject <PSPDFCacheDocumentHashManagerDelegate, PSPDFCacheStore>
{
    struct {
        unsigned int needsSave:1;
        unsigned int needsClearing:1;
    } _flags;
    // Error parsing type: Ai, name: _stats_cacheHits
    // Error parsing type: Ai, name: _stats_cacheMisses
    long long _allowedDiskSpace;
    long long _currentAllowedDiskSpace;
    NSString *_cacheDirectory;
    long long _fileFormat;
    double _compression;
    CDUnknownBlockType _encryptionHelper;
    CDUnknownBlockType _decryptionHelper;
    PSPDFCacheMetadata *_metadata;
    PSPDFCacheDocumentHashManager *_hashManager;
    NSString *_fullCacheDirectory;
    PSPDFDiskCacheDatabase *_database;
    id <PSPDFFileManager> _fileManager;
}

@property(readonly, nonatomic) id <PSPDFFileManager> fileManager; // @synthesize fileManager=_fileManager;
@property(retain, nonatomic) PSPDFDiskCacheDatabase *database; // @synthesize database=_database;
@property(readonly, nonatomic) NSString *fullCacheDirectory; // @synthesize fullCacheDirectory=_fullCacheDirectory;
@property(readonly, nonatomic) PSPDFCacheDocumentHashManager *hashManager; // @synthesize hashManager=_hashManager;
@property(readonly, nonatomic) PSPDFCacheMetadata *metadata; // @synthesize metadata=_metadata;
@property(copy, nonatomic) CDUnknownBlockType decryptionHelper; // @synthesize decryptionHelper=_decryptionHelper;
@property(copy, nonatomic) CDUnknownBlockType encryptionHelper; // @synthesize encryptionHelper=_encryptionHelper;
@property(readonly, nonatomic, getter=queue_currentAllowedDiskSpace) long long currentAllowedDiskSpace; // @synthesize currentAllowedDiskSpace=_currentAllowedDiskSpace;
- (void).cxx_destruct;
- (void)cacheDocumentHashManagerDidUpdateCacheInfo:(id)arg1;
- (void)barrier_save;
- (void)barrier_saveIfNeeded;
- (void)queue_setNeedsSaving;
- (void)barrier_loadDiskCache;
- (void)loadDiskCache;
- (void)barrier_clear;
- (void)barrier_clearIfNeeded;
- (void)queue_setNeedsClearing;
- (void)willTerminate;
- (void)didEnterBackground;
- (void)willEnterForeground;
- (id)lastUsedDateForFile:(id)arg1;
- (void)bumpLastUsedDateForFile:(id)arg1;
- (id)queue_pathForCacheInfo:(id)arg1;
- (void)barrier_clearCacheData;
- (void)barrier_clearCacheFolder;
- (void)barrier_removeCacheInfo:(id)arg1;
- (void)barrier_addCacheInfo:(id)arg1;
- (void)barrier_invalidateMatching:(id)arg1;
- (void)barrier_saveImage:(id)arg1 forRequest:(id)arg2;
- (id)queue_imageForRequest:(id)arg1 imageSizeMatching:(unsigned long long)arg2;
- (void)invalidateMatching:(id)arg1;
- (void)invalidateAll;
- (void)saveImage:(id)arg1 forRequest:(id)arg2;
- (id)imageForRequest:(id)arg1 imageSizeMatching:(unsigned long long)arg2;
- (void)barrier_calculateCurrentAllowedDiskSpace;
@property(nonatomic) double compression; // @synthesize compression=_compression;
@property(nonatomic) long long fileFormat; // @synthesize fileFormat=_fileFormat;
@property(copy, nonatomic) NSString *cacheDirectory; // @synthesize cacheDirectory=_cacheDirectory;
@property(readonly, nonatomic) long long usedDiskSpace;
- (void)barrier_setAllowedDiskSpace:(long long)arg1;
@property(nonatomic) long long allowedDiskSpace; // @synthesize allowedDiskSpace=_allowedDiskSpace;
- (void)__printStats;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (id)initWithCacheDirectory:(id)arg1 fileFormat:(long long)arg2 settings:(id)arg3;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

