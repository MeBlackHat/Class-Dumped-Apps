//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <PSPDFKitUI/PSPDFMultiDocumentViewController.h>

#import <PSPDFKitUI/PSPDFFlexibleToolbarContainerDelegate-Protocol.h>
#import <PSPDFKitUI/PSPDFTabbedBarControllerDataSource-Protocol.h>
#import <PSPDFKitUI/PSPDFTabbedBarControllerDelegate-Protocol.h>
#import <PSPDFKitUI/UIPopoverPresentationControllerDelegate-Protocol.h>

@class NSString, PSPDFDocumentPickerController, PSPDFTabbedBar, PSPDFTabbedBarController, PSPDFTabbedViewControllerDelegatePartner, UINavigationController;
@protocol PSPDFTabbedViewControllerDelegate, PSPDFTabbedViewControllerDelegate><PSPDFDelegateProxying;

@interface PSPDFTabbedViewController : PSPDFMultiDocumentViewController <PSPDFTabbedBarControllerDelegate, PSPDFTabbedBarControllerDataSource, UIPopoverPresentationControllerDelegate, PSPDFFlexibleToolbarContainerDelegate>
{
    struct {
        unsigned int isBarHidingModeSet:1;
        unsigned int needsBarControllerReloadWhenAppearing:1;
    } _flags;
    _Bool _openDocumentActionInNewTab;
    _Bool _allowDraggingTabsToExternalTabbedBar;
    _Bool _allowDroppingTabsFromExternalTabbedBar;
    _Bool _allowReorderingDocuments;
    _Bool _hasPerformedInitialLayout;
    long long _barHidingMode;
    long long _closeMode;
    id <PSPDFTabbedViewControllerDelegate><PSPDFDelegateProxying> _delegateProxyStorage;
    PSPDFTabbedBarController *_barController;
    PSPDFTabbedViewControllerDelegatePartner *_delegatePartner;
    UINavigationController *_documentPickerNavigationController;
}

@property(nonatomic) _Bool hasPerformedInitialLayout; // @synthesize hasPerformedInitialLayout=_hasPerformedInitialLayout;
@property(retain, nonatomic) UINavigationController *documentPickerNavigationController; // @synthesize documentPickerNavigationController=_documentPickerNavigationController;
@property(readonly, nonatomic) PSPDFTabbedViewControllerDelegatePartner *delegatePartner; // @synthesize delegatePartner=_delegatePartner;
@property(retain, nonatomic) PSPDFTabbedBarController *barController; // @synthesize barController=_barController;
@property(retain) id <PSPDFTabbedViewControllerDelegate><PSPDFDelegateProxying> delegateProxyStorage; // @synthesize delegateProxyStorage=_delegateProxyStorage;
@property(nonatomic) _Bool allowReorderingDocuments; // @synthesize allowReorderingDocuments=_allowReorderingDocuments;
@property(nonatomic) _Bool allowDroppingTabsFromExternalTabbedBar; // @synthesize allowDroppingTabsFromExternalTabbedBar=_allowDroppingTabsFromExternalTabbedBar;
@property(nonatomic) _Bool allowDraggingTabsToExternalTabbedBar; // @synthesize allowDraggingTabsToExternalTabbedBar=_allowDraggingTabsToExternalTabbedBar;
@property(nonatomic) _Bool openDocumentActionInNewTab; // @synthesize openDocumentActionInNewTab=_openDocumentActionInNewTab;
@property(nonatomic) long long closeMode; // @synthesize closeMode=_closeMode;
- (void).cxx_destruct;
- (void)showPreviousTab:(id)arg1;
- (void)showNextTab:(id)arg1;
- (void)switchToTabFromCommand:(id)arg1;
- (void)commandShiftWPressed:(id)arg1;
- (void)commandAltWPressed:(id)arg1;
- (void)commandWPressed:(id)arg1;
- (id)keyCommands;
- (struct CGRect)flexibleToolbarContainerContentRect:(id)arg1 forToolbarPosition:(unsigned long long)arg2;
- (id)tabbedBarController:(id)arg1 documentForItemAtIndex:(unsigned long long)arg2;
- (void)tabbedBarController:(id)arg1 moveTabAtIndex:(unsigned long long)arg2 toIndex:(unsigned long long)arg3;
- (_Bool)tabbedBarController:(id)arg1 isCloseButtonShownForTabAtIndex:(unsigned long long)arg2;
- (_Bool)tabbedBarController:(id)arg1 isTabSelectedAtIndex:(unsigned long long)arg2;
- (id)tabbedBarController:(id)arg1 titleForTabAtIndex:(unsigned long long)arg2;
- (long long)numberOfTabsInTabbedBarController:(id)arg1;
- (void)tabbedBarController:(id)arg1 receivedExternalDropWithDocument:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)tabbedBarControllerDidChangeLayout:(id)arg1;
- (void)tabbedBarController:(id)arg1 didSelectCloseAllOtherTabsAtIndex:(unsigned long long)arg2;
- (void)tabbedBarController:(id)arg1 didSelectCloseAllTabsAtIndex:(unsigned long long)arg2;
- (void)tabbedBarController:(id)arg1 tabMovedToExternalControllerFromIndex:(unsigned long long)arg2;
- (void)tabbedBarController:(id)arg1 didSelectCloseButtonOfTabAtIndex:(unsigned long long)arg2;
- (void)tabbedBarController:(id)arg1 didSelectTabAtIndex:(unsigned long long)arg2;
- (_Bool)isValidDocumentIndex:(unsigned long long)arg1;
- (long long)adaptivePresentationStyleForPresentationController:(id)arg1 traitCollection:(id)arg2;
- (void)didCloseDocument:(id)arg1;
- (void)didChangeVisibleDocumentFromOldVisibleDocument:(id)arg1;
- (_Bool)shouldChangeVisibleDocument:(id)arg1;
- (void)askForDocumentEditorSaveWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)shouldAskForDocumentEditorSave;
- (_Bool)isDocumentEditorWithinDragAndDropSession;
- (_Bool)askForDocumentEditorSaveIfNeededWithCompletion:(CDUnknownBlockType)arg1;
- (_Bool)askForDocumentEditorSaveIfNeeded;
- (void)presentOverview:(id)arg1;
- (void)dismissDocumentPicker:(id)arg1;
- (void)presentDocumentPicker:(id)arg1;
- (_Bool)shouldCloseDocument:(id)arg1;
- (_Bool)userRequestedClosingAllOtherDocuments:(unsigned long long)arg1;
- (_Bool)userRequestedClosingAllDocuments;
- (_Bool)userRequestedClosingDocumentAtIndex:(unsigned long long)arg1;
- (_Bool)userRequestedClosingVisibleDocument;
- (void)userRequestedChangingToVisibleDocumentAtIndex:(unsigned long long)arg1 scrollToVisible:(_Bool)arg2;
@property(nonatomic) long long barHidingMode; // @synthesize barHidingMode=_barHidingMode;
@property(retain, nonatomic) PSPDFDocumentPickerController *documentPickerController;
@property(readonly, nonatomic) PSPDFTabbedBar *tabbedBar;
@property(readonly, nonatomic) unsigned long long currentIndex;
- (_Bool)resolutionManager:(id)arg1 requestingFileConflictResolutionForDocument:(id)arg2 dataProvider:(id)arg3 withResolution:(unsigned long long)arg4 error:(id *)arg5;
- (void)titleDidChangeForDocumentAtIndex:(unsigned long long)arg1;
- (void)setVisibleDocument:(id)arg1 scrollToPosition:(_Bool)arg2 animated:(_Bool)arg3 save:(_Bool)arg4 notifyDelegate:(_Bool)arg5;
- (void)setVisibleDocument:(id)arg1 scrollToPosition:(_Bool)arg2 animated:(_Bool)arg3 save:(_Bool)arg4;
- (void)setVisibleDocument:(id)arg1 scrollToPosition:(_Bool)arg2 animated:(_Bool)arg3;
- (void)setVisibleDocument:(id)arg1;
- (void)setDocumentsWithoutReloadingInternal:(id)arg1;
- (void)setDocumentsWithoutReloading:(id)arg1;
- (void)setDocuments:(id)arg1;
- (void)scrollToActiveDocumentInTabbedBarAnimated:(_Bool)arg1;
- (_Bool)removeDocument:(id)arg1 animated:(_Bool)arg2;
- (void)removeDocumentAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2 save:(_Bool)arg3 notifyDelegate:(_Bool)arg4;
- (void)removeDocumentAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2 save:(_Bool)arg3;
- (void)removeDocumentAtIndex:(unsigned long long)arg1 animated:(_Bool)arg2;
- (void)insertDocument:(id)arg1 atIndex:(unsigned long long)arg2 makeVisible:(_Bool)arg3 animated:(_Bool)arg4;
- (void)insertDocumentAfterVisibleDocument:(id)arg1 makeVisible:(_Bool)arg2 animated:(_Bool)arg3;
- (void)addDocument:(id)arg1 makeVisible:(_Bool)arg2 animated:(_Bool)arg3;
- (void)saveDocument:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
@property(readonly, nonatomic, getter=isTabbedBarHidden) _Bool tabbedBarHidden;
- (void)updateSafeAreaInsetsForUserInterfaceVisibility:(_Bool)arg1;
- (void)updateTabbedBarFrame;
- (void)updateTabbedBarFrameAnimated:(_Bool)arg1;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (void)commonInitWithPDFController:(id)arg1;
@property(retain, nonatomic) id <PSPDFTabbedViewControllerDelegate><PSPDFDelegateProxying> delegateProxy;
@property(nonatomic) __weak id <PSPDFTabbedViewControllerDelegate> delegate;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(copy, nonatomic) NSString *statePersistenceKey; // @dynamic statePersistenceKey;
@property(readonly) Class superclass;

@end

