//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PSPDFKit/PSPDFOverridable-Protocol.h>

@class NSArray, NSCache, NSData, NSDictionary, NSString, NSURL, PDFCDocumentProvider, PSPDFAnnotationManager, PSPDFChangeTrackingDocumentUpdater, PSPDFCoreFormProvider, PSPDFDispatchQueue, PSPDFDocument, PSPDFFormParser, PSPDFJSPlatformDelegateAdapter, PSPDFLabelParser, PSPDFOutlineParser, PSPDFUndoController;
@protocol PSPDFCustomConcurrentQueue, PSPDFDataProviding, PSPDFDocumentProviderDelegate, PSPDFFileManager;

@interface PSPDFDocumentProvider : NSObject <PSPDFOverridable>
{
    struct {
        unsigned int canEmbedAnnotations:1;
    } _flags;
    struct UnfairLock _outlineParserLock;
    struct UnfairLock _formParserLock;
    struct UnfairLock _labelParserLock;
    struct UnfairLock _annotationManagerLock;
    struct UnfairLock _pageInfoLock;
    struct mutex _textParsersLock;
    struct vector<PSPDFPageInfo *, std::__1::allocator<PSPDFPageInfo *>> _pageInfoCache;
    NSCache *_textParsers;
    PSPDFFormParser *_formParser;
    _Bool _wasRotationOffsetSet;
    _Bool _isLocked;
    _Bool _allowAnnotationChanges;
    _Bool _documentCreationFailed;
    _Bool _checkIfFileExists;
    int _documentRefRetainCount;
    NSString *_title;
    unsigned long long _pageCount;
    PSPDFOutlineParser *_outlineParser;
    PSPDFAnnotationManager *_annotationManager;
    PSPDFLabelParser *_labelParser;
    PSPDFCoreFormProvider *_coreFormProvider;
    id <PSPDFDataProviding> _dataProvider;
    PSPDFDocument *_document;
    id <PSPDFDocumentProviderDelegate> _delegate;
    NSData *_contentSignature;
    NSDictionary *_metadata;
    PDFCDocumentProvider *_coreDocumentProvider;
    NSArray *_documentLevelJavaScriptsStorage;
    PSPDFJSPlatformDelegateAdapter *_jsPlatformDelegateAdapter;
    PSPDFChangeTrackingDocumentUpdater *_changeTrackingDocumentUpdater;
    unsigned long long _index;
    id <PSPDFFileManager> _fileManager;
    PSPDFDispatchQueue<PSPDFCustomConcurrentQueue> *_annotationPropertyAccessQueue;
    shared_ptr_b8c8aff8 _strongCoreDocumentProvider;
}

+ (void)initialize;
+ (id)convertedMetadata:(id)arg1;
@property(readonly, nonatomic) PSPDFDispatchQueue<PSPDFCustomConcurrentQueue> *annotationPropertyAccessQueue; // @synthesize annotationPropertyAccessQueue=_annotationPropertyAccessQueue;
@property(nonatomic) _Bool checkIfFileExists; // @synthesize checkIfFileExists=_checkIfFileExists;
@property(readonly, nonatomic) id <PSPDFFileManager> fileManager; // @synthesize fileManager=_fileManager;
@property(readonly, nonatomic) unsigned long long index; // @synthesize index=_index;
@property(retain, nonatomic) PSPDFChangeTrackingDocumentUpdater *changeTrackingDocumentUpdater; // @synthesize changeTrackingDocumentUpdater=_changeTrackingDocumentUpdater;
@property(retain, nonatomic) PSPDFJSPlatformDelegateAdapter *jsPlatformDelegateAdapter; // @synthesize jsPlatformDelegateAdapter=_jsPlatformDelegateAdapter;
@property(copy) NSArray *documentLevelJavaScriptsStorage; // @synthesize documentLevelJavaScriptsStorage=_documentLevelJavaScriptsStorage;
@property(nonatomic) int documentRefRetainCount; // @synthesize documentRefRetainCount=_documentRefRetainCount;
@property _Bool documentCreationFailed; // @synthesize documentCreationFailed=_documentCreationFailed;
@property shared_ptr_b8c8aff8 strongCoreDocumentProvider; // @synthesize strongCoreDocumentProvider=_strongCoreDocumentProvider;
@property(retain) PDFCDocumentProvider *coreDocumentProvider; // @synthesize coreDocumentProvider=_coreDocumentProvider;
@property(copy, nonatomic) NSDictionary *metadata; // @synthesize metadata=_metadata;
@property(readonly, nonatomic) _Bool allowAnnotationChanges; // @synthesize allowAnnotationChanges=_allowAnnotationChanges;
@property(readonly, copy, nonatomic) NSData *contentSignature; // @synthesize contentSignature=_contentSignature;
@property __weak id <PSPDFDocumentProviderDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak PSPDFDocument *document; // @synthesize document=_document;
@property(readonly, nonatomic) id <PSPDFDataProviding> dataProvider; // @synthesize dataProvider=_dataProvider;
@property(retain, nonatomic) PSPDFCoreFormProvider *coreFormProvider; // @synthesize coreFormProvider=_coreFormProvider;
@property(retain, nonatomic) PSPDFAnnotationManager *annotationManager; // @synthesize annotationManager=_annotationManager;
@property(readonly, nonatomic) _Bool isLocked; // @synthesize isLocked=_isLocked;
@property(readonly, nonatomic) unsigned long long pageCount; // @synthesize pageCount=_pageCount;
- (id).cxx_construct;
- (void).cxx_destruct;
- (id)hashDocumentProviderRange:(id)arg1 hashAlgorithm:(unsigned long long)arg2 error:(id *)arg3;
- (id)userPassword:(id)arg1;
- (_Bool)checkPassword:(id)arg1 passwordType:(long long)arg2;
@property(readonly, nonatomic) PSPDFUndoController *undoController;
- (void)invalidateWithUndoController:(id)arg1;
- (void)didReceiveMemoryWarning;
@property(nonatomic) unsigned long long maximumNumberOfAlternateDocuments;
- (_Bool)shouldDealWithRotationOffsetCombinedWithNonCoreAnnotationSerialization;
@property(readonly, nonatomic) _Bool shouldSaveAnnotations;
- (void)setJavaScriptDelegate:(id)arg1;
- (id)documentLevelJavaScripts;
- (_Bool)loadDocumentLevelJavaScriptActions:(id *)arg1;
- (id)URLForTokenizedPath:(id)arg1;
- (id)resolveTokenizedPath:(id)arg1 alwaysLocal:(_Bool)arg2;
- (unsigned long long)resolveNamedDestination:(id)arg1;
- (_Bool)writeToFile:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) NSString *XMPMetadata;
- (shared_ptr_829ff61e)sharedCoreDocumentProviderImpl;
// Error parsing type for property coreDocumentProviderImpl:
// Property attributes: T^{DocumentProviderImpl=^^?{weak_ptr<PDFC::DocumentProviderImpl>=^{DocumentProviderImpl}^{__shared_weak_count}}B{lru_cache<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> >, std::__1::function<void (pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > &)> >={list<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, std::__1::allocator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > > > >={__list_node_base<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *>=^{__list_node_base<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *>}^{__list_node_base<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *>}}{__compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> > >=Q}}{unordered_map<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> > > >={__hash_table<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, std::__1::hash<long long>, true>, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, std::__1::equal_to<long long>, true>, std::__1::allocator<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, std::__1::hash<long long>, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<long long, std::__1::__hash_value_type<long long, std::__1::__list_iterator<std::__1::pair<long long, pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > >, void *> >, std::__1::equal_to<long long>, true> >=f}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{function<void (pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > &)>={__value_func<void (pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > &)>={type=[24C]}^{__base<void (pspdf::oxygen::nn<std::__1::shared_ptr<PDFC::PageImpl> > &)>}}}Q{mutex={_opaque_pthread_mutex_t=q[56c]}}}I{optional<std::__1::basic_string<char> >=(?=c{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}})B}{optional<std::__1::vector<unsigned char, std::__1::allocator<unsigned char> > >=(?=c{vector<unsigned char, std::__1::allocator<unsigned char> >=**{__compressed_pair<unsigned char *, std::__1::allocator<unsigned char> >=*}})B}{unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >={unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >={__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> **, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> > >=^^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}{__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >={__compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *> *> >=Q}}}}{__compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>=^{__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> *>}}}{__compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::hash<std::__1::basic_string<char> >, true> >=Q}{__compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::equal_to<std::__1::basic_string<char> >, true> >=f}}}B{mutex={_opaque_pthread_mutex_t=q[56c]}}{shared_ptr<PDFC::XMPMetadata>=^{XMPMetadata}^{__shared_weak_count}}i{vector<PDFC::PageInfo, std::__1::allocator<PDFC::PageInfo> >=^{PageInfo}^{PageInfo}{__compressed_pair<PDFC::PageInfo *, std::__1::allocator<PDFC::PageInfo> >=^{PageInfo}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{shared_ptr<PDFC::Annotations::Provider>=^{Provider}^{__shared_weak_count}}{shared_ptr<PDFC::Annotations::Provider>=^{Provider}^{__shared_weak_count}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{vector<std::__1::shared_ptr<PDFC::Annotations::Provider>, std::__1::allocator<std::__1::shared_ptr<PDFC::Annotations::Provider> > >=^{shared_ptr<PDFC::Annotations::Provider>}^{shared_ptr<PDFC::Annotations::Provider>}{__compressed_pair<std::__1::shared_ptr<PDFC::Annotations::Provider> *, std::__1::allocator<std::__1::shared_ptr<PDFC::Annotations::Provider> > >=^{shared_ptr<PDFC::Annotations::Provider>}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{shared_ptr<PDFC::Forms::FormProvider>=^{FormProvider}^{__shared_weak_count}}{once_flag=Q}{shared_ptr<PDFC::OutlineParser>=^{OutlineParser}^{__shared_weak_count}}{once_flag=Q}{shared_ptr<PDFC::LabelParser>=^{LabelParser}^{__shared_weak_count}}{once_flag=Q}{nn<std::__1::shared_ptr<std::__1::recursive_mutex> >={shared_ptr<std::__1::recursive_mutex>=^{recursive_mutex}^{__shared_weak_count}}}{atomic<bool>=AB}{shared_ptr<PDFC::NotificationObserver>=^{NotificationObserver}^{__shared_weak_count}}{shared_ptr<PDFC::APStreamDocumentGenerator>=^{APStreamDocumentGenerator}^{__shared_weak_count}}{nn<std::__1::shared_ptr<PDFC::DocumentStorage> >={shared_ptr<PDFC::DocumentStorage>=^{DocumentStorage}^{__shared_weak_count}}}{shared_ptr<PDFC::FontProvider>=^{FontProvider}^{__shared_weak_count}}{shared_ptr<PDFC::UnloadObserver>=^{UnloadObserver}^{__shared_weak_count}}{once_flag=Q}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{weak_ptr<PDFC::DocumentImpl>=^{DocumentImpl}^{__shared_weak_count}}i{optional<bool>=(?=cB)B}{mutex={_opaque_pthread_mutex_t=q[56c]}}{shared_ptr<PDFC::NotificationCenter>=^{NotificationCenter}^{__shared_weak_count}}B{shared_ptr<PDFC::JSDocumentScriptExecutor>=^{JSDocumentScriptExecutor}^{__shared_weak_count}}{shared_ptr<PDFC::Forms::FormElementResolver>=^{FormElementResolver}^{__shared_weak_count}}{once_flag=Q}{unique_ptr<PDFC::AlternateDocumentManager, std::__1::default_delete<PDFC::AlternateDocumentManager> >={__compressed_pair<PDFC::AlternateDocumentManager *, std::__1::default_delete<PDFC::AlternateDocumentManager> >=^{AlternateDocumentManager}}}{mutex={_opaque_pthread_mutex_t=q[56c]}}{nn<std::__1::unique_ptr<PDFC::TaskManager, std::__1::default_delete<PDFC::TaskManager> > >={unique_ptr<PDFC::TaskManager, std::__1::default_delete<PDFC::TaskManager> >={__compressed_pair<PDFC::TaskManager *, std::__1::default_delete<PDFC::TaskManager> >=^{TaskManager}}}}},R,N

- (_Bool)saveAnnotationsWithOptions:(id)arg1 error:(id *)arg2;
@property(readonly, nonatomic) _Bool canWriteToDataProvider;
@property(readonly, nonatomic) _Bool canEmbedAnnotations;
@property(readonly, nonatomic) PSPDFLabelParser *labelParser; // @synthesize labelParser=_labelParser;
@property(readonly, nonatomic) PSPDFFormParser *formParser;
- (_Bool)formsEnabled;
@property(readonly, nonatomic) unsigned long long permissionsLevel;
@property(readonly, nonatomic) _Bool isUnlockedWithUserPassword;
@property(readonly, nonatomic) _Bool isEncryptedWithUserPassword;
@property(readonly, copy, nonatomic) NSString *password;
@property(readonly, nonatomic) PSPDFOutlineParser *outlineParser; // @synthesize outlineParser=_outlineParser;
- (void)clearAllTextParsers;
- (id)textParserForPageAtIndex:(unsigned long long)arg1;
- (_Bool)hasLoadedTextParserForPageAtIndex:(unsigned long long)arg1;
@property(readonly, nonatomic) unsigned long long pageOffsetForDocument;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(readonly, nonatomic) unsigned long long fileSize;
- (id)dataRepresentationWithError:(id *)arg1;
- (void)acquireWriteLocksInAnnotationProviders:(id)arg1 andPerformBlock:(CDUnknownBlockType)arg2;
- (void)setRotationOffset:(unsigned long long)arg1 forPageAtIndex:(unsigned long long)arg2;
- (_Bool)isValidRotation:(unsigned long long)arg1;
- (id)pageInfoForPageIndexNoFetching:(unsigned long long)arg1;
- (void)setPageInfo:(id)arg1 forPageAtIndex:(unsigned long long)arg2;
- (id)pageInfoForPageAtIndex:(unsigned long long)arg1;
- (void)fillPageInfoCache;
- (id)pageForPageAtIndex:(unsigned long long)arg1 error:(id *)arg2;
- (_Bool)sourceIsAFileURLAndFileExists;
- (_Bool)localFileIsMissing;
- (_Bool)fileIsPDF;
@property(readonly, nonatomic) NSURL *fileURL;
@property(readonly, copy) NSString *description;
- (void)dealloc;
- (_Bool)isEqual:(id)arg1;
@property(readonly) unsigned long long hash;
- (void)awakeAfterEstablishingConnectionToDocument:(id)arg1;
@property(readonly, copy, nonatomic) NSData *fileId;
@property(readonly, nonatomic) unsigned long long permissions;
@property(readonly, nonatomic) _Bool isUnlockedWithFullAccess;
@property(readonly, nonatomic) _Bool isEncrypted;
- (id)initWithDataProvider:(id)arg1 index:(unsigned long long)arg2 document:(id)arg3 coreDocumentProvider:(id)arg4 contentSignature:(id)arg5 isLocked:(_Bool)arg6;
- (Class)classForClass:(Class)arg1;
- (_Bool)updateCalculatedFieldsDependingOnForm:(id)arg1 error:(id *)arg2;
- (_Bool)updateCalculatedFieldsDependingOnForm:(id)arg1 documentScriptExecutor:(id)arg2 error:(id *)arg3;
- (void)configureJavaScriptPlatformDelegate:(id)arg1;
- (void)configureDocumentScriptExecutor:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

