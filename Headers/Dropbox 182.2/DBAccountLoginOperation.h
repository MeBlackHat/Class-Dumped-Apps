//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "DBAccountLoginBaseOperation.h"

@class DBXRecaptchaV2, NSString;

@interface DBAccountLoginOperation : DBAccountLoginBaseOperation
{
    NSString *_authCode;
    NSString *_email;
    NSString *_password;
    NSString *_googleLoginCheckpointToken;
    NSString *_appleLoginCheckpointToken;
    NSString *_integrityToken;
    DBXRecaptchaV2 *_captcha;
    long long _ssoState;
    _Bool _isLoginWithEmail;
}

+ (long long)db_twoFactorDeliveryModeFromApiV2DeliveryMode:(id)arg1;
- (void).cxx_destruct;
- (void)db_handleUnknownLoginError:(id)arg1 withDefaultErrorMessage:(id)arg2;
- (void)db_handleUnknownGoogleLoginError:(id)arg1;
- (void)db_handleGoogleLoginRouteError:(id)arg1 requestError:(id)arg2;
- (void)db_handleGoogleLoginResult:(id)arg1;
- (void)db_handleGoogleLoginResult:(id)arg1 routeError:(id)arg2 requestError:(id)arg3;
- (void)db_loginWithGoogleAuthCode:(id)arg1;
- (void)db_loadRequestTokenFailedWithError:(id)arg1;
- (void)restClient:(id)arg1 loadRequestTokenFailedWithError:(id)arg2;
- (void)db_didLoadRequestToken:(id)arg1 forAccount:(id)arg2;
- (void)restClient:(id)arg1 didLoadRequestToken:(id)arg2 forAccount:(id)arg3;
- (void)db_didReceiveRequiresSignupWithEncryptedGoogleLoginData:(id)arg1;
- (void)restClientDidReceiveRequiresSignup:(id)arg1 withEncryptedGoogleLoginData:(id)arg2;
- (void)db_captchaRequiredWithSiteKey:(id)arg1;
- (void)restClientCaptchaRequired:(id)arg1 siteKey:(id)arg2;
- (void)db_didReceivePasswordAuthChallengeWithCheckpointToken:(id)arg1;
- (void)restClientDidReceivePasswordAuthChallenge:(id)arg1 withCheckpointToken:(id)arg2;
- (void)db_didReceiveTwoFactorAuthChallengeWithCheckpointToken:(id)arg1 userFacingMessage:(id)arg2 deliveryMode:(long long)arg3;
- (void)restClientDidReceiveTwoFactorAuthChallenge:(id)arg1 withCheckpointToken:(id)arg2 userFacingMessage:(id)arg3 deliveryMode:(long long)arg4;
- (void)db_loginFailedWithError:(id)arg1;
- (void)restClient:(id)arg1 loginFailedWithError:(id)arg2;
- (void)db_didLoginWithUserId:(id)arg1;
- (void)restClientDidLogin:(id)arg1;
- (void)db_fetchSsoStateFailedWithError:(id)arg1;
- (void)restClient:(id)arg1 fetchSsoStateFailedWithError:(id)arg2;
- (void)db_didFetchSsoState:(long long)arg1 thirdPartyState:(long long)arg2 forAccount:(id)arg3;
- (void)restClient:(id)arg1 didFetchSsoState:(long long)arg2 thirdPartyState:(long long)arg3 forAccount:(id)arg4;
- (_Bool)db_handleCheckPasswordlessStateError:(id)arg1;
- (void)db_checkPasswordlessStateV2WithEmail:(id)arg1 emmToken:(id)arg2;
- (void)startLoginOperation;
- (id)initWithAuthCode:(id)arg1 email:(id)arg2 accountManager:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (id)initWithEmail:(id)arg1 password:(id)arg2 captcha:(id)arg3 integrityToken:(id)arg4 googleLoginCheckpointToken:(id)arg5 appleLoginCheckpointToken:(id)arg6 accountManager:(id)arg7 completionHandler:(CDUnknownBlockType)arg8;

@end

