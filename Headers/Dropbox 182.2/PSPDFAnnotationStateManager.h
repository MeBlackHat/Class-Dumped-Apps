//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PSPDFKitUI/PSPDFAnnotationStyleViewControllerDelegate-Protocol.h>
#import <PSPDFKitUI/PSPDFHighlightSelectionViewDelegate-Protocol.h>
#import <PSPDFKitUI/PSPDFOverridable-Protocol.h>
#import <PSPDFKitUI/UIPencilInteractionDelegate-Protocol.h>

@class NSArray, NSDictionary, NSMapTable, NSSet, NSString, PSPDFAnnotationCreator, PSPDFAnnotationStateManagerVendorStylusSupport, PSPDFDrawViewManager, PSPDFMutableMulticastDelegate, PSPDFRenderOptions, PSPDFViewController, UIColor, UIPencilInteraction;
@protocol PSPDFAnnotationStateManagerDelegate, PSPDFAnnotationStyleManager;

@interface PSPDFAnnotationStateManager : NSObject <PSPDFHighlightSelectionViewDelegate, PSPDFAnnotationStyleViewControllerDelegate, PSPDFOverridable, UIPencilInteractionDelegate>
{
    struct {
        unsigned int isDoingUndoRedo:1;
    } _flags;
    _Bool _repeatOverlayText;
    _Bool _shouldDrawSignatureArea;
    int _blendMode;
    PSPDFViewController *_pdfController;
    NSString *_state;
    NSString *_variant;
    unsigned long long _stylusMode;
    UIColor *_drawColor;
    UIColor *_fillColor;
    double _lineWidth;
    long long _lineEnd1;
    long long _lineEnd2;
    NSArray *_dashArray;
    long long _borderEffect;
    double _borderEffectIntensity;
    NSString *_fontName;
    double _fontSize;
    long long _textAlignment;
    UIColor *_outlineColor;
    NSString *_overlayText;
    UIPencilInteraction *_pencilInteraction;
    NSMapTable *_selectionViews;
    unsigned long long _annotationType;
    id <PSPDFAnnotationStyleManager> _styleManager;
    PSPDFMutableMulticastDelegate<PSPDFAnnotationStateManagerDelegate> *_delegates;
    PSPDFAnnotationStateManagerVendorStylusSupport *_vendorStylusSupport;
    PSPDFAnnotationCreator *_annotationCreator;
    PSPDFDrawViewManager *_drawViewManager;
    NSString *_previousState;
    NSString *_previousVariant;
    NSSet *_markupAnnotationStates;
    long long _drawingInputMode;
}

+ (void)initialize;
+ (unsigned long long)annotationTypesForMultiSelect;
+ (_Bool)automaticallyNotifiesObserversOfDrawingInputMode;
@property(nonatomic) long long drawingInputMode; // @synthesize drawingInputMode=_drawingInputMode;
@property(nonatomic) _Bool shouldDrawSignatureArea; // @synthesize shouldDrawSignatureArea=_shouldDrawSignatureArea;
@property(readonly, nonatomic) NSSet *markupAnnotationStates; // @synthesize markupAnnotationStates=_markupAnnotationStates;
@property(copy, nonatomic) NSString *previousVariant; // @synthesize previousVariant=_previousVariant;
@property(copy, nonatomic) NSString *previousState; // @synthesize previousState=_previousState;
@property(readonly, nonatomic) PSPDFDrawViewManager *drawViewManager; // @synthesize drawViewManager=_drawViewManager;
@property(retain, nonatomic) PSPDFAnnotationCreator *annotationCreator; // @synthesize annotationCreator=_annotationCreator;
@property(retain, nonatomic) PSPDFAnnotationStateManagerVendorStylusSupport *vendorStylusSupport; // @synthesize vendorStylusSupport=_vendorStylusSupport;
@property(readonly, nonatomic) PSPDFMutableMulticastDelegate<PSPDFAnnotationStateManagerDelegate> *delegates; // @synthesize delegates=_delegates;
@property(readonly, nonatomic) id <PSPDFAnnotationStyleManager> styleManager; // @synthesize styleManager=_styleManager;
@property(nonatomic) unsigned long long annotationType; // @synthesize annotationType=_annotationType;
@property(retain, nonatomic) NSMapTable *selectionViews; // @synthesize selectionViews=_selectionViews;
@property(readonly, nonatomic) UIPencilInteraction *pencilInteraction; // @synthesize pencilInteraction=_pencilInteraction;
@property(nonatomic) _Bool repeatOverlayText; // @synthesize repeatOverlayText=_repeatOverlayText;
@property(copy, nonatomic) NSString *overlayText; // @synthesize overlayText=_overlayText;
@property(retain, nonatomic) UIColor *outlineColor; // @synthesize outlineColor=_outlineColor;
@property(nonatomic) long long textAlignment; // @synthesize textAlignment=_textAlignment;
@property(nonatomic) double fontSize; // @synthesize fontSize=_fontSize;
@property(copy, nonatomic) NSString *fontName; // @synthesize fontName=_fontName;
@property(nonatomic) int blendMode; // @synthesize blendMode=_blendMode;
@property(nonatomic) double borderEffectIntensity; // @synthesize borderEffectIntensity=_borderEffectIntensity;
@property(nonatomic) long long borderEffect; // @synthesize borderEffect=_borderEffect;
@property(copy, nonatomic) NSArray *dashArray; // @synthesize dashArray=_dashArray;
@property(nonatomic) long long lineEnd2; // @synthesize lineEnd2=_lineEnd2;
@property(nonatomic) long long lineEnd1; // @synthesize lineEnd1=_lineEnd1;
@property(nonatomic) double lineWidth; // @synthesize lineWidth=_lineWidth;
@property(retain, nonatomic) UIColor *fillColor; // @synthesize fillColor=_fillColor;
@property(retain, nonatomic) UIColor *drawColor; // @synthesize drawColor=_drawColor;
@property(nonatomic) unsigned long long stylusMode; // @synthesize stylusMode=_stylusMode;
@property(copy, nonatomic) NSString *variant; // @synthesize variant=_variant;
@property(copy, nonatomic) NSString *state; // @synthesize state=_state;
@property(readonly, nonatomic) __weak PSPDFViewController *pdfController; // @synthesize pdfController=_pdfController;
- (void).cxx_destruct;
- (void)forEachPageView:(CDUnknownBlockType)arg1;
- (void)stylusConnectionStatusChanged:(id)arg1;
- (void)callDidChangeUndoStateDelegate;
- (void)undoManagerDidUndoOrRedo:(id)arg1;
- (void)undoControllerAddedOrRemovedAction:(id)arg1;
- (void)willBeginDisplayingSpreadViewNotification:(id)arg1;
- (void)selectionView:(id)arg1 singleTappedWithGestureRecognizer:(id)arg2;
- (void)selectionView:(id)arg1 cancelledWithSelectedRect:(struct CGRect)arg2;
- (void)selectionView:(id)arg1 finishedWithSelectedText:(id)arg2 glyphs:(id)arg3 inRects:(id)arg4;
- (void)selectionView:(id)arg1 finishedWithSelectedRect:(struct CGRect)arg2;
- (void)selectionView:(id)arg1 updateSelectedRect:(struct CGRect)arg2;
- (_Bool)selectionView:(id)arg1 shouldStartSelectionAtPoint:(struct CGPoint)arg2;
- (void)annotationStyleController:(id)arg1 didEndChangingProperty:(id)arg2;
- (void)annotationStyleController:(id)arg1 willStartChangingProperty:(id)arg2;
- (void)annotationStyleController:(id)arg1 didChangeProperties:(id)arg2;
- (id)undoController;
- (_Bool)dismissStylePickerAnimated:(_Bool)arg1;
- (id)toggleStylePicker:(id)arg1 presentationOptions:(id)arg2;
- (struct CGRect)pdfRectForControllerViewRect:(struct CGRect)arg1 pageView:(id)arg2;
- (id)pageViewForSender:(id)arg1;
- (void)configureAnnotationCreator:(id)arg1 presentationOptions:(id)arg2;
- (void)setState:(id)arg1 andObserveCreator:(id)arg2;
- (void)observeCreator:(id)arg1 andClearStateWhenFinished:(id)arg2;
- (id)toggleImagePickerController:(id)arg1 presentationOptions:(id)arg2 annotationCreator:(id)arg3;
- (id)toggleImagePickerController:(id)arg1 presentationOptions:(id)arg2;
- (id)toggleSavedAnnotations:(id)arg1 presentationOptions:(id)arg2;
- (id)toggleStampController:(id)arg1 presentationOptions:(id)arg2;
- (id)toggleSignatureController:(id)arg1 presentationOptions:(id)arg2;
- (void)configurePopoversForStateChangeFrom:(id)arg1 to:(id)arg2;
- (_Bool)selectAnnotationOnPage:(id)arg1 inRects:(id)arg2;
- (_Bool)checkForExistingAnnotationOrAddNewAnnotationOfType:(id)arg1 onPage:(id)arg2 inSelectedRects:(id)arg3;
- (void)addNewFreeTextAnnotationAtPoint:(struct CGPoint)arg1 pageView:(id)arg2 animated:(_Bool)arg3;
- (void)addNewNoteAnnotationAtPoint:(struct CGPoint)arg1 pageView:(id)arg2 animated:(_Bool)arg3;
- (void)addNewSoundAnnotationAtPoint:(struct CGPoint)arg1 pageView:(id)arg2 animated:(_Bool)arg3;
- (void)clearTextSelectionView:(id)arg1;
- (id)annotationsInPageView:(id)arg1 forMultiSelectInRect:(struct CGRect)arg2;
- (id)pageViewForSelectionView:(id)arg1;
- (void)performSelectionOnPageView:(id)arg1 atPoint:(struct CGPoint)arg2;
- (void)discardSelectionOnPageViewsAnimated:(_Bool)arg1;
- (void)removeSelectionAnnotationViewAnimated:(_Bool)arg1;
- (void)updateSelectionViewsAnimated:(_Bool)arg1;
- (void)updateSelectionViewForPageView:(id)arg1 animated:(_Bool)arg2;
- (void)configureSelectionForStateChange:(id)arg1 to:(id)arg2;
@property(readonly, nonatomic) PSPDFRenderOptions *renderOptions;
- (void)configureStylesChangeFromState:(id)arg1 variant:(id)arg2 toState:(id)arg3 variant:(id)arg4;
- (void)persistCurrentStylesForState:(id)arg1 variant:(id)arg2;
- (_Bool)lastUsedRepeatOverlayTextForAnnotationString:(id)arg1;
- (void)setLastUsedRepeatOverlayText:(_Bool)arg1 annotationString:(id)arg2;
- (id)lastUsedOverlayTextForAnnotationString:(id)arg1;
- (void)setLastUsedOverlayText:(id)arg1 annotationString:(id)arg2;
- (id)lastUsedOutlineColorForAnnotationString:(id)arg1;
- (void)setLastUsedOutlineColor:(id)arg1 annotationString:(id)arg2;
- (int)lastUsedBlendModeForAnnotationString:(id)arg1;
- (void)setLastUsedBlendMode:(int)arg1 annotationString:(id)arg2;
- (long long)lastUsedTextAlignmentForAnnotationString:(id)arg1;
- (void)setLastUsedTextAlignment:(long long)arg1 annotationString:(id)arg2;
- (double)lastUsedFontSizeForAnnotationString:(id)arg1;
- (void)setLastUsedFontSize:(double)arg1 annotationString:(id)arg2;
- (id)lastUsedFontNameForAnnotationString:(id)arg1;
- (void)setLastUsedFontName:(id)arg1 annotationString:(id)arg2;
- (double)lastUsedBorderEffectIntensityForAnnotationString:(id)arg1;
- (void)setLastUsedBorderEffectIntensity:(double)arg1 annotationString:(id)arg2;
- (long long)lastUsedBorderEffectForAnnotationString:(id)arg1;
- (void)setLastUsedBorderEffect:(long long)arg1 annotationString:(id)arg2;
- (id)lastUsedDashArrayForAnnotationString:(id)arg1;
- (void)setLastUsedDashArray:(id)arg1 annotationString:(id)arg2;
- (long long)lastUsedLineEnd2ForAnnotationString:(id)arg1;
- (void)setLastUsedLineEnd2:(long long)arg1 annotationString:(id)arg2;
- (long long)lastUsedLineEnd1ForAnnotationString:(id)arg1;
- (void)setLastUsedLineEnd1:(long long)arg1 annotationString:(id)arg2;
- (double)lastUsedLineWidthForAnnotationString:(id)arg1;
- (void)setLastUsedLineWidth:(double)arg1 annotationString:(id)arg2;
- (id)lastUsedFillColorForAnnotationString:(id)arg1;
- (void)setLastUsedFillColor:(id)arg1 annotationString:(id)arg2;
- (_Bool)removeDelegate:(id)arg1;
- (void)addDelegate:(id)arg1;
- (void)switchToPreviousStateAndVariant;
- (void)pencilInteractionDidTap:(id)arg1;
- (id)allowedTouchTypesForDrawAndSelectionViewsForState:(id)arg1;
- (void)updateScrollTouchMode;
- (id)twoFingerPanAndZoomStates;
- (unsigned long long)scrollTouchMode;
- (void)updateInternalTapGesturesAllowedTouchTypes;
- (id)internalTapGesturesAllowedTouchTypes;
- (id)stylusCompatibleStates;
- (_Bool)isStylusEnabled;
- (_Bool)shouldUseStylusForState:(id)arg1;
- (_Bool)isUsingStylus;
- (void)updateTouchTypes;
- (_Bool)stateShowsStylePicker:(id)arg1;
- (id)popoverStates;
- (_Bool)stateShowsPopover:(id)arg1;
- (id)textOrNoteStates;
- (_Bool)stateIsTextOrNote:(id)arg1;
- (_Bool)isInTextOrNoteState;
- (id)selectionViewStates;
- (_Bool)stateRequiresSelectionView:(id)arg1;
- (_Bool)isInStateThatRequiresSelectionView;
- (id)drawingStates;
- (_Bool)isDrawingState:(id)arg1;
@property(readonly, nonatomic, getter=isInDrawingState) _Bool inDrawingState;
- (_Bool)isMarkupAnnotationState:(id)arg1;
@property(readonly, nonatomic) _Bool isInMarkupAnnotationState;
- (id)lineOrPolylineStates;
- (_Bool)isLineOrPolylineState:(id)arg1;
- (_Bool)isInLineOrPolylineState;
- (void)updateDrawOrSelectionViews;
- (unsigned long long)annotationTypeFromString:(id)arg1;
@property(readonly, copy, nonatomic) NSString *stateVariantID;
- (void)toggleState:(id)arg1;
- (void)toggleState:(id)arg1 variant:(id)arg2;
- (void)setState:(id)arg1 variant:(id)arg2;
- (void)dealloc;
- (id)initWithPDFController:(id)arg1;
- (Class)classForClass:(Class)arg1;
@property(readonly, nonatomic) NSDictionary *drawViews;
- (id)lastUsedColorForAnnotationString:(id)arg1;
- (void)setLastUsedColor:(id)arg1 annotationString:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

