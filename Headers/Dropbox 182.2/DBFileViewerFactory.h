//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DBFileCache, DBFileViewerControllerOpenWithHandler, DBLoadProgressBlockWrapper, DBPrefetcher, NSDictionary;
@protocol DBFileEntry, DBFileListDataProviderProtocol, DBFileViewerDelegate, DBFileViewerErrorEventsDelegate, DBFileViewerEventsDelegate, DBLinkableStateObserverManager, DBModalManaging;

@interface DBFileViewerFactory : NSObject
{
    id <DBFileListDataProviderProtocol> _dataProvider;
    id <DBLinkableStateObserverManager> _linkableState;
    id <DBFileEntry> _fileEntry;
    double _lightboxMaximumOriginalDimension;
    struct CGSize _lightboxLocalAssetSize;
    unsigned long long _nextCreationLevel;
    _Bool _didUseLoader;
    DBLoadProgressBlockWrapper *_refreshProgressWrapper;
    _Bool _userDismissedFileTooBigError;
    id <DBModalManaging> _modalManager;
    NSDictionary *_analyticsParams;
    DBPrefetcher *_prefetcher;
    DBFileCache *_fileCache;
    id <DBFileViewerDelegate> _viewerDelegate;
    id <DBFileViewerErrorEventsDelegate> _errorEventsDelegate;
    id <DBFileViewerEventsDelegate> _eventsDelegate;
    DBFileViewerControllerOpenWithHandler *_openWithHandler;
}

+ (void)db_logFallbackFileViewerWithFileEntry:(id)arg1 viewerType:(unsigned long long)arg2;
+ (id)db_textFileContentsForFileEntry:(id)arg1;
+ (_Bool)db_isCachedFileUpToDateForFileEntry:(id)arg1 repr:(long long)arg2;
+ (long long)db_bestSupportedPreviewTypeThatCanUseLoaderForFileEntry:(id)arg1;
+ (_Bool)db_canUseLoaderAndIsHTMLPreviewable:(id)arg1;
+ (_Bool)db_canUseLoaderAndIsPDFPreviewable:(id)arg1;
+ (_Bool)db_canUseLoaderForFileEntry:(id)arg1;
+ (_Bool)db_canUseChangesTrackerForFileEntry:(id)arg1;
+ (struct CGSize)db_lightboxLocalAssetSizeForDeviceWithViewSize:(struct CGSize)arg1;
+ (double)db_lightboxMaximumOriginalDimensionForDeviceWithViewSize:(struct CGSize)arg1;
@property(nonatomic) __weak DBFileViewerControllerOpenWithHandler *openWithHandler; // @synthesize openWithHandler=_openWithHandler;
@property(nonatomic) __weak id <DBFileViewerEventsDelegate> eventsDelegate; // @synthesize eventsDelegate=_eventsDelegate;
@property(nonatomic) __weak id <DBFileViewerErrorEventsDelegate> errorEventsDelegate; // @synthesize errorEventsDelegate=_errorEventsDelegate;
@property(nonatomic) __weak id <DBFileViewerDelegate> viewerDelegate; // @synthesize viewerDelegate=_viewerDelegate;
@property(readonly, nonatomic) DBFileCache *fileCache; // @synthesize fileCache=_fileCache;
@property(readonly, nonatomic) DBPrefetcher *prefetcher; // @synthesize prefetcher=_prefetcher;
- (void).cxx_destruct;
- (_Bool)refreshInProgress;
- (void)resetToLoadingState;
- (void)performRefreshWithFileEntry:(id)arg1 progressBlock:(CDUnknownBlockType)arg2 errorBlock:(CDUnknownBlockType)arg3 readyBlock:(CDUnknownBlockType)arg4;
- (id)db_defaultFileViewerForFileEntry:(id)arg1 wasJustLoaded:(_Bool)arg2;
- (id)nextFileViewer;
- (_Bool)db_shouldDisplayPDFTooBigError;
- (id)fileEntry;
- (void)updateFileEntry:(id)arg1;
- (id)createFileActionsController;
- (void)setDefaultViewModeViewSize:(struct CGSize)arg1;
- (id)linkableState;
- (id)initWithFileEntry:(id)arg1 dataProvider:(id)arg2 linkableState:(id)arg3 prefetcher:(id)arg4 fileCache:(id)arg5 modalManager:(id)arg6 analyticsParams:(id)arg7;
- (void)handleUserDismissedFileTooBigError;
- (void)setNextCreationLevelToOriginal;

@end

