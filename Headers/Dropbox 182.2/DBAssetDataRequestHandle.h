//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <DropboxExtensions/DBDbxGetPhotoDataRequestHandle-Protocol.h>
#import <DropboxExtensions/DBStartableDataRequest-Protocol.h>

@class DBImageManager, NSString, PHAsset;
@protocol DBAnalyticsLogger, OS_dispatch_queue;

@interface DBAssetDataRequestHandle : NSObject <DBDbxGetPhotoDataRequestHandle, DBStartableDataRequest>
{
    NSObject<OS_dispatch_queue> *_serialQueue;
    NSString *_queueName;
    _Bool _didUseNetwork;
    CDUnknownBlockType _completionBlock;
    id <DBAnalyticsLogger> _analyticsLogger;
    _Bool _canUseNetwork;
    int _imageManagerRequestID;
    PHAsset *_asset;
    DBImageManager *_imageManager;
    unsigned long long _requestSource;
    unsigned long long _contentEditingRequestID;
}

@property(nonatomic) unsigned long long contentEditingRequestID; // @synthesize contentEditingRequestID=_contentEditingRequestID;
@property(nonatomic) int imageManagerRequestID; // @synthesize imageManagerRequestID=_imageManagerRequestID;
@property(nonatomic) _Bool canUseNetwork; // @synthesize canUseNetwork=_canUseNetwork;
@property(nonatomic) unsigned long long requestSource; // @synthesize requestSource=_requestSource;
@property(retain, nonatomic) DBImageManager *imageManager; // @synthesize imageManager=_imageManager;
@property(retain, nonatomic) PHAsset *asset; // @synthesize asset=_asset;
- (void).cxx_destruct;
- (CDUnknownBlockType)db_getAndClearCompletionBlock;
- (unsigned long long)getADLAssetDataFetchSourceType:(unsigned long long)arg1;
- (void)sendInCloudResponse;
- (void)sendCanceledResponse;
- (void)cancelCurrentRequest;
- (_Bool)didSendResponse;
- (void)cancel;
- (void)cancelIfCanUseNetwork;
- (void)clearContentEditingRequestID;
- (void)clearImageRequestID;
- (void)sendResponse:(id)arg1 error:(id)arg2;
- (id)translateAppleNSErrorToDropboxNSErrorIfNecessary:(id)arg1;
- (void)setAnalyticsLogger:(id)arg1;
- (id)analyticsLogger;
- (void)assertRunningOnHandlerQueue;
- (void)dispatchToQueue:(CDUnknownBlockType)arg1;
- (void)setUsedNetworkForRequest;
- (_Bool)sendErrorIfImageManagerResponseIsInvalid:(id)arg1 imageData:(id)arg2 dataUTI:(id)arg3;
- (id)generateQueueName;
- (void)startDataRequest;
- (id)initWithAsset:(id)arg1 requestSource:(unsigned long long)arg2 canUseNetwork:(_Bool)arg3 completionCallback:(CDUnknownBlockType)arg4 logger:(id)arg5 imageManager:(id)arg6;

@end

