//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <PSPDFKit/PDFCDocumentLibraryIndexingObserver-Protocol.h>

@class NSArray, NSOrderedSet, NSString, NSTimer, PDFCDocumentLibrary, PDFCEncryptionKeyProviderAdapter, PSPDFDelegateProxy, PSPDFDispatchQueue, PSPDFLibrarySpotlightIndexer;
@protocol PDFCDocumentLibraryIndexingObserver, PSPDFLibraryDataSource;

@interface PSPDFLibrary : NSObject <PDFCDocumentLibraryIndexingObserver>
{
    struct UnfairLock _backgroundTaskIdentifierLock;
    _Bool _shouldIndexAnnotations;
    _Bool _automaticallyPauseLongRunningTasks;
    unsigned int _qosClass;
    NSString *_path;
    long long _spotlightIndexingType;
    NSString *_tokenizer;
    double _maximumContiguousIndexingTime;
    double _automaticPauseDuration;
    id <PSPDFLibraryDataSource> _dataSource;
    PDFCEncryptionKeyProviderAdapter *_encryptionKeyProviderAdapter;
    PSPDFDispatchQueue *_workQueue;
    NSArray *_completionBlocks;
    NSTimer *_coolDownTimer;
    PSPDFLibrarySpotlightIndexer *_spotlightIndexer;
    unsigned long long _currentBackgroundTaskIdentifier;
    PDFCDocumentLibrary *_documentLibrary;
    PSPDFDelegateProxy<PDFCDocumentLibraryIndexingObserver> *_documentLibraryObserver;
}

+ (id)encryptedLibraryWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 indexingPriority:(unsigned long long)arg3 ftsVersion:(unsigned long long)arg4 tokenizer:(id)arg5 error:(id *)arg6;
+ (id)encryptedLibraryWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 ftsVersion:(unsigned long long)arg3 tokenizer:(id)arg4 error:(id *)arg5;
+ (id)encryptedLibraryWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 tokenizer:(id)arg3 error:(id *)arg4;
+ (id)encryptedLibraryWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 error:(id *)arg3;
+ (id)queryWithSearchString:(id)arg1 generateTextPreviews:(_Bool)arg2 options:(id)arg3;
+ (id)defaultLibraryPath;
+ (id)newLibraryWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 indexingPriority:(unsigned long long)arg3 ftsVersion:(unsigned long long)arg4 tokenizer:(id)arg5 error:(id *)arg6;
+ (id)libraryWithPath:(id)arg1 indexingPriority:(unsigned long long)arg2 ftsVersion:(unsigned long long)arg3 tokenizer:(id)arg4 error:(id *)arg5;
+ (id)libraryWithPath:(id)arg1 ftsVersion:(unsigned long long)arg2 tokenizer:(id)arg3 error:(id *)arg4;
+ (id)libraryWithPath:(id)arg1 tokenizer:(id)arg2 error:(id *)arg3;
+ (id)libraryWithPath:(id)arg1 error:(id *)arg2;
@property(retain, nonatomic) PSPDFDelegateProxy<PDFCDocumentLibraryIndexingObserver> *documentLibraryObserver; // @synthesize documentLibraryObserver=_documentLibraryObserver;
@property(readonly, nonatomic) PDFCDocumentLibrary *documentLibrary; // @synthesize documentLibrary=_documentLibrary;
@property(nonatomic) unsigned long long currentBackgroundTaskIdentifier; // @synthesize currentBackgroundTaskIdentifier=_currentBackgroundTaskIdentifier;
@property(readonly, nonatomic) PSPDFLibrarySpotlightIndexer *spotlightIndexer; // @synthesize spotlightIndexer=_spotlightIndexer;
@property(retain) NSTimer *coolDownTimer; // @synthesize coolDownTimer=_coolDownTimer;
@property(copy, nonatomic) NSArray *completionBlocks; // @synthesize completionBlocks=_completionBlocks;
@property(readonly, nonatomic) PSPDFDispatchQueue *workQueue; // @synthesize workQueue=_workQueue;
@property(readonly, nonatomic) unsigned int qosClass; // @synthesize qosClass=_qosClass;
@property(readonly, nonatomic) PDFCEncryptionKeyProviderAdapter *encryptionKeyProviderAdapter; // @synthesize encryptionKeyProviderAdapter=_encryptionKeyProviderAdapter;
@property(retain) id <PSPDFLibraryDataSource> dataSource; // @synthesize dataSource=_dataSource;
@property double automaticPauseDuration; // @synthesize automaticPauseDuration=_automaticPauseDuration;
@property double maximumContiguousIndexingTime; // @synthesize maximumContiguousIndexingTime=_maximumContiguousIndexingTime;
@property(nonatomic) _Bool automaticallyPauseLongRunningTasks; // @synthesize automaticallyPauseLongRunningTasks=_automaticallyPauseLongRunningTasks;
@property(readonly, copy, nonatomic) NSString *tokenizer; // @synthesize tokenizer=_tokenizer;
@property _Bool shouldIndexAnnotations; // @synthesize shouldIndexAnnotations=_shouldIndexAnnotations;
@property long long spotlightIndexingType; // @synthesize spotlightIndexingType=_spotlightIndexingType;
@property(readonly, copy, nonatomic) NSString *path; // @synthesize path=_path;
- (id).cxx_construct;
- (void).cxx_destruct;
- (_Bool)isEncrypted;
- (void)queue_invalidateCoolDownTimer;
- (void)coolDownTimerFired:(id)arg1;
- (void)queue_setupCoolDownTimer;
- (void)fetchSpotlightIndexedDocumentForUserActivity:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)cancelAllPreviewTextOperations;
- (void)clearAllIndexes;
- (void)queue_removeIndexForUIDs:(id)arg1;
- (void)removeIndexForUID:(id)arg1;
- (void)queue_callCompletionBlocks;
- (unsigned long long)getSubscribedEvents;
- (void)didIndexPage:(id)arg1 uid:(id)arg2 pageIndex:(int)arg3 text:(id)arg4;
- (void)didFinishIndexingDocument:(id)arg1 uid:(id)arg2 success:(_Bool)arg3;
- (void)willStartIndexingDocument:(id)arg1 uid:(id)arg2;
- (void)applicationWillTerminate:(id)arg1;
- (void)endBackgroundTask;
- (void)beginBackgroundTask;
- (void)enqueueDocuments:(id)arg1 options:(unsigned long long)arg2;
- (void)updateIndexWithCompletionHandler:(CDUnknownBlockType)arg1 enqueueHandler:(CDUnknownBlockType)arg2;
- (void)updateIndexWithCompletionHandler:(CDUnknownBlockType)arg1;
- (id)indexedDocumentWithUID:(id)arg1;
- (void)documentUIDsMatchingString:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3 previewTextHandler:(CDUnknownBlockType)arg4;
- (void)documentUIDsMatchingString:(id)arg1 options:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (unsigned long long)indexStatusForUID:(id)arg1 withProgress:(double *)arg2;
@property(readonly, nonatomic) long long indexedUIDCount;
@property(readonly, nonatomic) NSOrderedSet *indexedUIDs;
@property(readonly, nonatomic) NSOrderedSet *queuedUIDs;
@property(readonly, nonatomic, getter=isIndexing) _Bool indexing;
@property _Bool saveReversedPageText;
@property(nonatomic) _Bool suspended;
@property(nonatomic) unsigned long long maxConcurrentOperations;
- (id)description;
- (id)initWithPath:(id)arg1 lowMemoryMode:(_Bool)arg2 encryptionKeyProvider:(CDUnknownBlockType)arg3 databaseEncryptionProvider:(id)arg4 indexingPriority:(unsigned long long)arg5 ftsVersion:(unsigned long long)arg6 tokenizer:(id)arg7 error:(id *)arg8;
- (id)initWithPath:(id)arg1 encryptionKeyProvider:(CDUnknownBlockType)arg2 indexingPriority:(unsigned long long)arg3 ftsVersion:(unsigned long long)arg4 tokenizer:(id)arg5 error:(id *)arg6;
- (id)init;

@end

