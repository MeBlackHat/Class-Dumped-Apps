//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DBBackgroundURLSessionDispatcher, NSString;
@protocol DBBackgroundTaskFactoryProtocol, DBQueuedUploadManagerConfigProviding;

@interface DBQueuedUploadManagerConfig : NSObject
{
    id <DBQueuedUploadManagerConfigProviding> _impl;
    _Bool _shouldResumeExistingUploads;
    _Bool _shouldBailForAnyDatabaseErrors;
    unsigned long long _configType;
    id <DBBackgroundTaskFactoryProtocol> _backgroundTaskFactory;
    DBBackgroundURLSessionDispatcher *_backgroundSessionDispatcher;
    NSString *_uploadContainerPath;
    NSString *_uploadDatabaseFilePath;
    NSString *_defaultBackgroundSessionIdentifier;
    NSString *_sharedContainerIdentifier;
    CDUnknownBlockType _willShowRetryButtonForOverquotaUploads;
}

+ (id)db_extensionDefaultBackgroundSessionIdentifierWithUserID:(id)arg1;
+ (id)db_mainAppDefaultBackgroundSessionIdentifierWithUserID:(id)arg1;
+ (id)db_implForType:(unsigned long long)arg1 userID:(id)arg2 backgroundSessionDispatcher:(id)arg3 supportsCrossProcessUploads:(_Bool)arg4;
+ (id)configForAppExtensionWithType:(unsigned long long)arg1 userID:(id)arg2 sharedContainerIdentifier:(id)arg3 directoryMap:(id)arg4 backgroundSessionDispatcher:(id)arg5 backgroundTaskFactory:(id)arg6;
+ (id)configForMainAppWithStormcrow:(id)arg1 userID:(id)arg2 sharedContainerIdentifier:(id)arg3 supportsCrossProcessUploads:(_Bool)arg4 sessionConfigType:(unsigned long long)arg5 willShowRetryButtonForOverquotaUploads:(CDUnknownBlockType)arg6 backgroundSessionDispatcher:(id)arg7 backgroundTaskFactory:(id)arg8;
@property(readonly, copy, nonatomic) CDUnknownBlockType willShowRetryButtonForOverquotaUploads; // @synthesize willShowRetryButtonForOverquotaUploads=_willShowRetryButtonForOverquotaUploads;
@property(readonly, nonatomic) _Bool shouldBailForAnyDatabaseErrors; // @synthesize shouldBailForAnyDatabaseErrors=_shouldBailForAnyDatabaseErrors;
@property(readonly, nonatomic) _Bool shouldResumeExistingUploads; // @synthesize shouldResumeExistingUploads=_shouldResumeExistingUploads;
@property(readonly, nonatomic) NSString *sharedContainerIdentifier; // @synthesize sharedContainerIdentifier=_sharedContainerIdentifier;
@property(readonly, nonatomic) NSString *defaultBackgroundSessionIdentifier; // @synthesize defaultBackgroundSessionIdentifier=_defaultBackgroundSessionIdentifier;
@property(readonly, nonatomic) NSString *uploadDatabaseFilePath; // @synthesize uploadDatabaseFilePath=_uploadDatabaseFilePath;
@property(readonly, nonatomic) NSString *uploadContainerPath; // @synthesize uploadContainerPath=_uploadContainerPath;
@property(readonly, nonatomic) DBBackgroundURLSessionDispatcher *backgroundSessionDispatcher; // @synthesize backgroundSessionDispatcher=_backgroundSessionDispatcher;
@property(readonly, nonatomic) id <DBBackgroundTaskFactoryProtocol> backgroundTaskFactory; // @synthesize backgroundTaskFactory=_backgroundTaskFactory;
@property(readonly, nonatomic) unsigned long long configType; // @synthesize configType=_configType;
- (void).cxx_destruct;
@property(readonly, nonatomic) unsigned long long maxConcurrentBackgroundUploads;
@property(readonly, nonatomic) _Bool supportsCrossProcessUploads;
@property(readonly, nonatomic) _Bool supportsConcurrentBackgroundUploads;
@property(readonly, nonatomic) _Bool shouldCheckConnectivity;
@property(readonly, nonatomic) unsigned long long preferredRequestTaskType;
- (void)setupUploadsFromDatabaseInfos:(id)arg1 uploadCreator:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithConfigImpl:(id)arg1 configType:(unsigned long long)arg2 uploadContainerPath:(id)arg3 uploadDatabaseFilePath:(id)arg4 defaultBackgroundSessionIdentifier:(id)arg5 sharedContainerIdentifier:(id)arg6 shouldResumeExistingUploads:(_Bool)arg7 backgroundSessionDispatcher:(id)arg8 backgroundTaskFactory:(id)arg9 shouldBailForAnyDatabaseErrors:(_Bool)arg10 willShowRetryButtonForOverquotaUploads:(CDUnknownBlockType)arg11;

@end

