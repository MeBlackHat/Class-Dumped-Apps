//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "TTVideoEngineDNSProtocol-Protocol.h"
#import "TTVideoEngineEventLoggerDelegate-Protocol.h"
#import "TTVideoPlayerStateProtocol-Protocol.h"

@class AVPlayerItem, NSDictionary, NSMutableDictionary, NSString, NSTimer, TTVideoEngineAVPlayerItemAccessLog, TTVideoEngineDNSParser, TTVideoEngineLogView, TTVideoEnginePlayer, UIView;
@protocol TTVideoEngineDataSource, TTVideoEngineDelegate, TTVideoEngineEventLoggerProtocol, TTVideoEngineInternalDelegate, TTVideoEngineNetClient, TTVideoEnginePlaySource, TTVideoEngineResolutionDelegate;

@interface TTVideoEngine : NSObject <TTVideoEngineDNSProtocol, TTVideoPlayerStateProtocol, TTVideoEngineEventLoggerDelegate>
{
    _Bool _muted;
    _Bool _looping;
    _Bool _cacheEnable;
    _Bool _isOwnPlayer;
    _Bool _autoModeEnabled;
    _Bool _isFirstURL;
    _Bool _isSwitchingDefinition;
    _Bool _isSuggestingReduceResolution;
    _Bool _isRetrying;
    _Bool _hasShownFirstFrame;
    _Bool _isSeeking;
    _Bool _isUserStopped;
    _Bool _playerIsPreparing;
    _Bool _didCallPrepareToPlay;
    _Bool _boeEnable;
    _Bool _dnsCacheEnable;
    _Bool _bashEnable;
    _Bool _drmRetry;
    _Bool _supportExpiredModel;
    _Bool _httpsEnabled;
    _Bool _enableHttps;
    _Bool _retryEnableHttps;
    _Bool _performanceLogEnable;
    _Bool _checkHijack;
    _Bool _hijackRetry;
    _Bool _seekEndEnabled;
    _Bool _reportRequestHeaders;
    _Bool _reportResponseHeaders;
    _Bool _enableTimerBarPercentage;
    _Bool _enableDashAbr;
    _Bool _enableIndexCache;
    _Bool _enableFragRange;
    _Bool _skipFindStreamInfo;
    _Bool _enableTTHlsDrm;
    _Bool _enableEnterBufferingDirectly;
    _Bool _audioEffectEnabled;
    _Bool _optimizeMemoryUsage;
    _Bool _audioUnitPoolEnabled;
    _Bool _avSyncStartEnable;
    _Bool _proxyServerEnable;
    _Bool _h265Enabled;
    _Bool _smoothlySwitching;
    _Bool _asyncInit;
    _Bool _isUsingAVResolver;
    _Bool _resolutionServerControlEnabled;
    _Bool _cacheVideoInfoEnable;
    _Bool _useExternDirEnable;
    _Bool _reuseSocket;
    _Bool _dashEnabled;
    _Bool _disableAccurateStart;
    id <TTVideoEngineDataSource> _dataSource;
    id <TTVideoEngineDelegate> _delegate;
    id <TTVideoEngineResolutionDelegate> _resolutionDelegate;
    double _playbackSpeed;
    id <TTVideoEngineNetClient> _netClient;
    UIView *_playerView;
    unsigned long long _state;
    long long _playbackState;
    unsigned long long _loadState;
    unsigned long long _stallReason;
    unsigned long long _currentResolution;
    NSDictionary *_resolutionMap;
    id <TTVideoEngineEventLoggerProtocol> _eventLogger;
    NSString *_currentHostnameURL;
    NSString *_currentIPURL;
    NSMutableDictionary *_urlIPDict;
    unsigned long long _lastResolution;
    TTVideoEngineDNSParser *_dnsParser;
    id <TTVideoEnginePlaySource> _playSource;
    NSMutableDictionary *_header;
    AVPlayerItem *_osplayerItem;
    NSString *_logInfoTag;
    CDUnknownBlockType _configResolutionComplete;
    unsigned long long _audioDeviceType;
    double _duration;
    double _playableDuration;
    NSTimer *_timer;
    NSTimer *_speedTimer;
    unsigned long long _errorCount;
    unsigned long long _accumulatedErrorCount;
    long long _playerUrlDNSRetryCount;
    unsigned long long _bufferCount;
    double _lastPlaybackTime;
    long long _lastUserAction;
    unsigned long long _apiVersion;
    NSString *_auth;
    NSString *_cacheFilePathWhenUsingDirectURL;
    double _beforeSeekTimeInterval;
    CDUnknownBlockType _temSeekFinishBlock;
    TTVideoEngineLogView *_debugView;
    TTVideoEnginePlayer *_player;
    long long _cacheMaxSeconds;
    long long _rotateType;
    long long _bufferingTimeOut;
    long long _maxBufferEndTime;
    NSString *_localServerTaskKey;
    long long _loopWay;
    long long _dnsExpiredTime;
    unsigned long long _currentNetworkStatus;
    unsigned long long _settingMask;
    CDUnknownFunctionPointerType _drmCreater;
    unsigned long long _drmType;
    long long _drmDowngrade;
    NSString *_tokenUrlTemplate;
    NSString *_playUrl;
    long long _limitMediaCacheSize;
    NSDictionary *_currentParams;
    unsigned long long _hijackRetryMainDnsType;
    unsigned long long _hijackRetryBackupDnsType;
    NSString *_subtag;
    NSString *_customStr;
    long long _videoRangeSize;
    long long _audioRangeSize;
    NSString *_ttHlsDrmToken;
    NSDictionary *_firstFrameMetrics;
    NSString *_playerLog;
    long long _idleTimerAutoMode;
    long long _mirrorType;
    long long _outputFramesWaitNum;
    long long _startPlayAudioBufferThreshold;
    double _audioEffectPregain;
    double _audioEffectThreshold;
    double _audioEffectRatio;
    double _audioEffectPredelay;
    double _audioEffectPostgain;
    long long _threadWaitTimeMS;
    id <TTVideoEngineInternalDelegate> _internalDelegate;
    long long _embellishVolumeMilliseconds;
    double _startTime;
    double _loopStartTime;
    double _loopEndTime;
    long long _smoothDelayedSeconds;
    NSString *_decryptionKey;
    NSString *_encryptedDecryptionKey;
    unsigned long long _testSpeedMode;
    unsigned long long _imageScaleType;
    unsigned long long _enhancementType;
    unsigned long long _imageLayoutType;
    long long _scaleMode;
    unsigned long long _renderType;
    unsigned long long _renderEngine;
    NSString *_externCacheDir;
    long long _openTimeOut;
}

+ (id)_engineVersionString;
+ (void)configureAppInfo:(id)arg1;
+ (void)configExtraInfoProtocol:(id)arg1;
+ (void)configThreadWaitMilliSeconds:(int)arg1;
+ (void)setStackSizeOptimized:(_Bool)arg1;
+ (void)sendCustomMessage:(id)arg1;
+ (_Bool)isSupportMetal;
+ (void)setHTTPDNSServerIP:(id)arg1;
+ (void)setHTTPDNSFirst:(_Bool)arg1;
+ (id)getDNSType;
+ (void)setDNSType:(unsigned long long)arg1 backupDns:(unsigned long long)arg2;
+ (void)setIgnoreAudioInterruption:(_Bool)arg1;
+ (void)setLogDelegate:(id)arg1;
+ (void)setLogFlag:(long long)arg1;
+ (void)setLogEnabled:(_Bool)arg1;
+ (void)stopOpenGLESActivity;
+ (void)startOpenGLESActivity;
+ (void)_printAllMethod;
+ (void)_putWithKey:(id)arg1 method:(id)arg2;
+ (void)_ls_forceRemoveFileCacheByKey:(id)arg1;
+ (id)_ls_keyFromFilePath:(id)arg1;
+ (void)_ls_removeObserver:(id)arg1 forKey:(id)arg2;
+ (void)_ls_addObserver:(id)arg1 forKey:(id)arg2;
+ (id)_processFileInfo:(id)arg1;
+ (void)ls_getCacheSizeByFilePath:(id)arg1 result:(CDUnknownBlockType)arg2;
+ (void)ls_getCacheSizeByKey:(id)arg1 result:(CDUnknownBlockType)arg2;
+ (id)ls_getCacheFileInfoByFilePath:(id)arg1;
+ (id)ls_getCacheFileInfoByKey:(id)arg1;
+ (long long)ls_getCacheSizeByFilePath:(id)arg1;
+ (void)ls_enableAutoTrimForKey:(id)arg1;
+ (void)ls_clearAllDNSCache;
+ (void)ls_backupDNSParserWaitTime:(double)arg1;
+ (void)ls_mainDNSParseType:(unsigned long long)arg1 backup:(unsigned long long)arg2;
+ (void)ls_DNSTTL:(long long)arg1;
+ (void)ls_disableAutoTrimForKey:(id)arg1;
+ (long long)ls_getCacheSizeByKey:(id)arg1;
+ (void)ls_getAllCacheSizeWithCompletion:(CDUnknownBlockType)arg1;
+ (long long)ls_getAllCacheSize;
+ (void)ls_removeFileCacheByKey:(id)arg1;
+ (void)ls_clearAllCaches;
+ (void)ls_cancelAllTasks;
+ (void)ls_cancelTaskByFilePath:(id)arg1;
+ (void)ls_cancelTaskByKey:(id)arg1;
+ (void)ls_addTaskForUrls:(id)arg1 vid:(id)arg2 preSize:(long long)arg3 filePath:(id)arg4;
+ (void)ls_addTask:(id)arg1 vid:(id)arg2 preSize:(long long)arg3 urls:(id)arg4;
+ (void)ls_addTaskForUrl:(id)arg1 vid:(id)arg2 preSize:(long long)arg3 filePath:(id)arg4;
+ (void)ls_addTask:(id)arg1 vid:(id)arg2 preSize:(long long)arg3 url:(id)arg4;
+ (void)ls_addTaskWithVideoModelItem:(id)arg1;
+ (void)ls_addTaskWithURLItem:(id)arg1;
+ (void)ls_addTask:(id)arg1 resolution:(unsigned long long)arg2 params:(id)arg3 preloadSize:(long long)arg4;
+ (void)ls_addTask:(id)arg1 resolution:(unsigned long long)arg2 preloadSize:(long long)arg3 filePath:(CDUnknownBlockType)arg4;
+ (void)ls_addTask:(id)arg1 resolution:(unsigned long long)arg2 preloadSize:(long long)arg3;
+ (void)ls_addTaskWithVidItem:(id)arg1;
+ (void)ls_addTask:(id)arg1 vidItem:(id)arg2;
+ (void)ls_close;
+ (_Bool)ls_isStarted;
+ (void)ls_start;
+ (void)ls_setMaxConcurrentNumber:(long long)arg1;
+ (id)ls_localServerConfigure;
+ (id)preloadDelegate;
+ (void)ls_setPreloadDelegate:(id)arg1;
@property(nonatomic) long long openTimeOut; // @synthesize openTimeOut=_openTimeOut;
@property(nonatomic) _Bool disableAccurateStart; // @synthesize disableAccurateStart=_disableAccurateStart;
@property(nonatomic) _Bool dashEnabled; // @synthesize dashEnabled=_dashEnabled;
@property(nonatomic) _Bool reuseSocket; // @synthesize reuseSocket=_reuseSocket;
@property(copy, nonatomic) NSString *externCacheDir; // @synthesize externCacheDir=_externCacheDir;
@property(nonatomic) _Bool useExternDirEnable; // @synthesize useExternDirEnable=_useExternDirEnable;
@property(nonatomic) _Bool cacheVideoInfoEnable; // @synthesize cacheVideoInfoEnable=_cacheVideoInfoEnable;
@property(nonatomic) unsigned long long renderEngine; // @synthesize renderEngine=_renderEngine;
@property(nonatomic) unsigned long long renderType; // @synthesize renderType=_renderType;
@property(nonatomic) long long scaleMode; // @synthesize scaleMode=_scaleMode;
@property(nonatomic) unsigned long long imageLayoutType; // @synthesize imageLayoutType=_imageLayoutType;
@property(nonatomic) unsigned long long enhancementType; // @synthesize enhancementType=_enhancementType;
@property(nonatomic) unsigned long long imageScaleType; // @synthesize imageScaleType=_imageScaleType;
@property(nonatomic) unsigned long long testSpeedMode; // @synthesize testSpeedMode=_testSpeedMode;
@property(nonatomic) _Bool resolutionServerControlEnabled; // @synthesize resolutionServerControlEnabled=_resolutionServerControlEnabled;
@property(copy, nonatomic) NSString *encryptedDecryptionKey; // @synthesize encryptedDecryptionKey=_encryptedDecryptionKey;
@property(copy, nonatomic) NSString *decryptionKey; // @synthesize decryptionKey=_decryptionKey;
@property(nonatomic) _Bool isUsingAVResolver; // @synthesize isUsingAVResolver=_isUsingAVResolver;
@property(nonatomic) long long smoothDelayedSeconds; // @synthesize smoothDelayedSeconds=_smoothDelayedSeconds;
@property(nonatomic) double loopEndTime; // @synthesize loopEndTime=_loopEndTime;
@property(nonatomic) double loopStartTime; // @synthesize loopStartTime=_loopStartTime;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool asyncInit; // @synthesize asyncInit=_asyncInit;
@property(nonatomic) _Bool smoothlySwitching; // @synthesize smoothlySwitching=_smoothlySwitching;
@property(nonatomic) _Bool h265Enabled; // @synthesize h265Enabled=_h265Enabled;
@property(nonatomic) long long embellishVolumeMilliseconds; // @synthesize embellishVolumeMilliseconds=_embellishVolumeMilliseconds;
@property(nonatomic) __weak id <TTVideoEngineInternalDelegate> internalDelegate; // @synthesize internalDelegate=_internalDelegate;
@property(nonatomic) _Bool proxyServerEnable; // @synthesize proxyServerEnable=_proxyServerEnable;
@property(nonatomic) long long threadWaitTimeMS; // @synthesize threadWaitTimeMS=_threadWaitTimeMS;
@property(nonatomic) _Bool avSyncStartEnable; // @synthesize avSyncStartEnable=_avSyncStartEnable;
@property(nonatomic) _Bool audioUnitPoolEnabled; // @synthesize audioUnitPoolEnabled=_audioUnitPoolEnabled;
@property(nonatomic) _Bool optimizeMemoryUsage; // @synthesize optimizeMemoryUsage=_optimizeMemoryUsage;
@property(nonatomic) double audioEffectPostgain; // @synthesize audioEffectPostgain=_audioEffectPostgain;
@property(nonatomic) double audioEffectPredelay; // @synthesize audioEffectPredelay=_audioEffectPredelay;
@property(nonatomic) double audioEffectRatio; // @synthesize audioEffectRatio=_audioEffectRatio;
@property(nonatomic) double audioEffectThreshold; // @synthesize audioEffectThreshold=_audioEffectThreshold;
@property(nonatomic) double audioEffectPregain; // @synthesize audioEffectPregain=_audioEffectPregain;
@property(nonatomic) _Bool audioEffectEnabled; // @synthesize audioEffectEnabled=_audioEffectEnabled;
@property(nonatomic) long long startPlayAudioBufferThreshold; // @synthesize startPlayAudioBufferThreshold=_startPlayAudioBufferThreshold;
@property(nonatomic) long long outputFramesWaitNum; // @synthesize outputFramesWaitNum=_outputFramesWaitNum;
@property(nonatomic) long long mirrorType; // @synthesize mirrorType=_mirrorType;
@property(nonatomic) _Bool enableEnterBufferingDirectly; // @synthesize enableEnterBufferingDirectly=_enableEnterBufferingDirectly;
@property(nonatomic) long long idleTimerAutoMode; // @synthesize idleTimerAutoMode=_idleTimerAutoMode;
@property(copy, nonatomic) NSString *playerLog; // @synthesize playerLog=_playerLog;
@property(copy, nonatomic) NSDictionary *firstFrameMetrics; // @synthesize firstFrameMetrics=_firstFrameMetrics;
@property(copy, nonatomic) NSString *ttHlsDrmToken; // @synthesize ttHlsDrmToken=_ttHlsDrmToken;
@property(nonatomic) _Bool enableTTHlsDrm; // @synthesize enableTTHlsDrm=_enableTTHlsDrm;
@property(nonatomic) _Bool skipFindStreamInfo; // @synthesize skipFindStreamInfo=_skipFindStreamInfo;
@property(nonatomic) long long audioRangeSize; // @synthesize audioRangeSize=_audioRangeSize;
@property(nonatomic) long long videoRangeSize; // @synthesize videoRangeSize=_videoRangeSize;
@property(nonatomic) _Bool enableFragRange; // @synthesize enableFragRange=_enableFragRange;
@property(nonatomic) _Bool enableIndexCache; // @synthesize enableIndexCache=_enableIndexCache;
@property(nonatomic) _Bool enableDashAbr; // @synthesize enableDashAbr=_enableDashAbr;
@property(nonatomic) _Bool enableTimerBarPercentage; // @synthesize enableTimerBarPercentage=_enableTimerBarPercentage;
@property(nonatomic) _Bool reportResponseHeaders; // @synthesize reportResponseHeaders=_reportResponseHeaders;
@property(nonatomic) _Bool reportRequestHeaders; // @synthesize reportRequestHeaders=_reportRequestHeaders;
@property(copy, nonatomic) NSString *customStr; // @synthesize customStr=_customStr;
@property(copy, nonatomic) NSString *subtag; // @synthesize subtag=_subtag;
@property(nonatomic) _Bool seekEndEnabled; // @synthesize seekEndEnabled=_seekEndEnabled;
@property(nonatomic) unsigned long long hijackRetryBackupDnsType; // @synthesize hijackRetryBackupDnsType=_hijackRetryBackupDnsType;
@property(nonatomic) unsigned long long hijackRetryMainDnsType; // @synthesize hijackRetryMainDnsType=_hijackRetryMainDnsType;
@property(nonatomic) _Bool hijackRetry; // @synthesize hijackRetry=_hijackRetry;
@property(nonatomic) _Bool checkHijack; // @synthesize checkHijack=_checkHijack;
@property(nonatomic) _Bool performanceLogEnable; // @synthesize performanceLogEnable=_performanceLogEnable;
@property(nonatomic) _Bool retryEnableHttps; // @synthesize retryEnableHttps=_retryEnableHttps;
@property(nonatomic) _Bool enableHttps; // @synthesize enableHttps=_enableHttps;
@property(nonatomic) _Bool httpsEnabled; // @synthesize httpsEnabled=_httpsEnabled;
@property(retain, nonatomic) NSDictionary *currentParams; // @synthesize currentParams=_currentParams;
@property(nonatomic) _Bool supportExpiredModel; // @synthesize supportExpiredModel=_supportExpiredModel;
@property(nonatomic) long long limitMediaCacheSize; // @synthesize limitMediaCacheSize=_limitMediaCacheSize;
@property(copy, nonatomic) NSString *playUrl; // @synthesize playUrl=_playUrl;
@property(copy, nonatomic) NSString *tokenUrlTemplate; // @synthesize tokenUrlTemplate=_tokenUrlTemplate;
@property(nonatomic) _Bool drmRetry; // @synthesize drmRetry=_drmRetry;
@property(nonatomic) long long drmDowngrade; // @synthesize drmDowngrade=_drmDowngrade;
@property(nonatomic) unsigned long long drmType; // @synthesize drmType=_drmType;
@property(nonatomic) CDUnknownFunctionPointerType drmCreater; // @synthesize drmCreater=_drmCreater;
@property(nonatomic) _Bool bashEnable; // @synthesize bashEnable=_bashEnable;
@property(nonatomic) unsigned long long settingMask; // @synthesize settingMask=_settingMask;
@property(nonatomic) unsigned long long currentNetworkStatus; // @synthesize currentNetworkStatus=_currentNetworkStatus;
@property(nonatomic) long long dnsExpiredTime; // @synthesize dnsExpiredTime=_dnsExpiredTime;
@property(nonatomic) _Bool dnsCacheEnable; // @synthesize dnsCacheEnable=_dnsCacheEnable;
@property(nonatomic) _Bool boeEnable; // @synthesize boeEnable=_boeEnable;
@property(nonatomic) long long loopWay; // @synthesize loopWay=_loopWay;
@property(copy, nonatomic) NSString *localServerTaskKey; // @synthesize localServerTaskKey=_localServerTaskKey;
@property(nonatomic) long long maxBufferEndTime; // @synthesize maxBufferEndTime=_maxBufferEndTime;
@property(nonatomic) long long bufferingTimeOut; // @synthesize bufferingTimeOut=_bufferingTimeOut;
@property(nonatomic) long long rotateType; // @synthesize rotateType=_rotateType;
@property(nonatomic) long long cacheMaxSeconds; // @synthesize cacheMaxSeconds=_cacheMaxSeconds;
@property(retain, nonatomic) TTVideoEnginePlayer *player; // @synthesize player=_player;
@property(nonatomic) _Bool didCallPrepareToPlay; // @synthesize didCallPrepareToPlay=_didCallPrepareToPlay;
@property(nonatomic) _Bool playerIsPreparing; // @synthesize playerIsPreparing=_playerIsPreparing;
@property(retain, nonatomic) TTVideoEngineLogView *debugView; // @synthesize debugView=_debugView;
@property(copy, nonatomic) CDUnknownBlockType temSeekFinishBlock; // @synthesize temSeekFinishBlock=_temSeekFinishBlock;
@property(nonatomic) double beforeSeekTimeInterval; // @synthesize beforeSeekTimeInterval=_beforeSeekTimeInterval;
@property(copy, nonatomic) NSString *cacheFilePathWhenUsingDirectURL; // @synthesize cacheFilePathWhenUsingDirectURL=_cacheFilePathWhenUsingDirectURL;
@property(copy, nonatomic) NSString *auth; // @synthesize auth=_auth;
@property(nonatomic) unsigned long long apiVersion; // @synthesize apiVersion=_apiVersion;
@property(nonatomic) long long lastUserAction; // @synthesize lastUserAction=_lastUserAction;
@property(nonatomic) _Bool isUserStopped; // @synthesize isUserStopped=_isUserStopped;
@property(nonatomic) _Bool isSeeking; // @synthesize isSeeking=_isSeeking;
@property(nonatomic) _Bool hasShownFirstFrame; // @synthesize hasShownFirstFrame=_hasShownFirstFrame;
@property(nonatomic) _Bool isRetrying; // @synthesize isRetrying=_isRetrying;
@property(nonatomic) _Bool isSuggestingReduceResolution; // @synthesize isSuggestingReduceResolution=_isSuggestingReduceResolution;
@property(nonatomic) _Bool isSwitchingDefinition; // @synthesize isSwitchingDefinition=_isSwitchingDefinition;
@property(nonatomic) double lastPlaybackTime; // @synthesize lastPlaybackTime=_lastPlaybackTime;
@property(nonatomic) unsigned long long bufferCount; // @synthesize bufferCount=_bufferCount;
@property(nonatomic) long long playerUrlDNSRetryCount; // @synthesize playerUrlDNSRetryCount=_playerUrlDNSRetryCount;
@property(nonatomic) unsigned long long accumulatedErrorCount; // @synthesize accumulatedErrorCount=_accumulatedErrorCount;
@property(nonatomic) unsigned long long errorCount; // @synthesize errorCount=_errorCount;
@property(retain, nonatomic) NSTimer *speedTimer; // @synthesize speedTimer=_speedTimer;
@property(retain, nonatomic) NSTimer *timer; // @synthesize timer=_timer;
@property(nonatomic) double playableDuration; // @synthesize playableDuration=_playableDuration;
@property(nonatomic) double duration; // @synthesize duration=_duration;
@property(nonatomic) unsigned long long audioDeviceType; // @synthesize audioDeviceType=_audioDeviceType;
@property(copy, nonatomic) CDUnknownBlockType configResolutionComplete; // @synthesize configResolutionComplete=_configResolutionComplete;
@property(copy, nonatomic) NSString *logInfoTag; // @synthesize logInfoTag=_logInfoTag;
@property(retain, nonatomic) AVPlayerItem *osplayerItem; // @synthesize osplayerItem=_osplayerItem;
@property(retain, nonatomic) NSMutableDictionary *header; // @synthesize header=_header;
@property(retain, nonatomic) id <TTVideoEnginePlaySource> playSource; // @synthesize playSource=_playSource;
@property(nonatomic) _Bool isFirstURL; // @synthesize isFirstURL=_isFirstURL;
@property(retain, nonatomic) TTVideoEngineDNSParser *dnsParser; // @synthesize dnsParser=_dnsParser;
@property(nonatomic) unsigned long long lastResolution; // @synthesize lastResolution=_lastResolution;
@property(retain, nonatomic) NSMutableDictionary *urlIPDict; // @synthesize urlIPDict=_urlIPDict;
@property(copy, nonatomic) NSString *currentIPURL; // @synthesize currentIPURL=_currentIPURL;
@property(copy, nonatomic) NSString *currentHostnameURL; // @synthesize currentHostnameURL=_currentHostnameURL;
@property(retain, nonatomic) id <TTVideoEngineEventLoggerProtocol> eventLogger; // @synthesize eventLogger=_eventLogger;
@property(retain, nonatomic) NSDictionary *resolutionMap; // @synthesize resolutionMap=_resolutionMap;
@property(nonatomic) unsigned long long currentResolution; // @synthesize currentResolution=_currentResolution;
@property(nonatomic) _Bool autoModeEnabled; // @synthesize autoModeEnabled=_autoModeEnabled;
@property(nonatomic) unsigned long long stallReason; // @synthesize stallReason=_stallReason;
@property(nonatomic) unsigned long long loadState; // @synthesize loadState=_loadState;
@property(nonatomic) long long playbackState; // @synthesize playbackState=_playbackState;
@property(nonatomic) unsigned long long state; // @synthesize state=_state;
@property(retain, nonatomic) UIView *playerView; // @synthesize playerView=_playerView;
@property(nonatomic) _Bool isOwnPlayer; // @synthesize isOwnPlayer=_isOwnPlayer;
@property(retain, nonatomic) id <TTVideoEngineNetClient> netClient; // @synthesize netClient=_netClient;
@property(nonatomic) _Bool cacheEnable; // @synthesize cacheEnable=_cacheEnable;
@property(nonatomic) _Bool looping; // @synthesize looping=_looping;
@property(nonatomic) _Bool muted; // @synthesize muted=_muted;
@property(nonatomic) double playbackSpeed; // @synthesize playbackSpeed=_playbackSpeed;
@property(nonatomic) __weak id <TTVideoEngineResolutionDelegate> resolutionDelegate; // @synthesize resolutionDelegate=_resolutionDelegate;
@property(nonatomic) __weak id <TTVideoEngineDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <TTVideoEngineDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (id)_engineDebugInfo;
- (void)_printEngineCallTrace;
- (id)_traceIdBaseTime:(double)arg1;
- (void)_userWillLeave;
- (id)_resolutionStringForType:(unsigned long long)arg1;
- (void)_ls_logProxyUrl:(id)arg1;
- (id)_defaultCacheFileDataDirectory;
- (void)_createCacheFileDirAndDeleteInvalidDataIfNeed;
- (_Bool)isDashSource;
- (_Bool)_isMainUrl;
@property(readonly, copy) NSString *description;
- (long long)getLogValueInt:(long long)arg1;
- (id)getLogValueStr:(long long)arg1;
- (id)bytesInfoForEventLogger:(id)arg1;
- (id)versionInfoForEventLogger:(id)arg1;
- (void)playbackDidFinish:(id)arg1;
- (void)playerIsReadyToPlay;
- (void)playerIsPrepared;
- (void)playerReadyToDisplay;
- (void)playableDurationUpdate:(double)arg1;
- (void)playerVideoBitrateChanged:(long long)arg1;
- (void)playerVideoSizeChange;
- (void)loadStateDidChange:(unsigned long long)arg1 stallReason:(unsigned long long)arg2;
- (void)playbackStateDidChange:(long long)arg1;
- (void)parserDidCancelled;
- (void)parser:(id)arg1 didFailedWithError:(id)arg2;
- (void)parser:(id)arg1 didFinishWithAddress:(id)arg2 error:(id)arg3;
- (void)_buryDataWhenUserWillLeave;
- (void)_buryDataWhenPlayerPrepared;
- (void)_buryDataWhenPrepareToDisplay;
- (void)logUrlConnectToFirstFrameTime;
- (void)logUserCancelled;
- (void)logFetchedVideoInfo:(id)arg1;
- (void)logFetchInfoError:(id)arg1;
- (void)movieStalled;
- (void)seekToLastPlaytimeAfterSwitchResolution;
- (void)switchDefinitionCompleted:(_Bool)arg1;
- (void)notifyDelegateSwitchComplete:(_Bool)arg1;
- (void)updateURLArray;
- (void)didReceiveError:(id)arg1;
- (void)_removeCacheFile;
- (void)switchBitrate:(long long)arg1 type:(long long)arg2;
- (void)switchToDefinition:(unsigned long long)arg1 params:(id)arg2;
- (_Bool)isNSDictionary:(id)arg1 EqualToNSDictionary:(id)arg2;
- (void)seekToTime:(double)arg1 switchingResolution:(_Bool)arg2 complete:(CDUnknownBlockType)arg3;
- (void)stopVideo;
- (void)pauseVideo:(_Bool)arg1;
- (unsigned long long)_getAutoResolution;
- (long long)videoSizeForType:(unsigned long long)arg1;
- (id)getCurPreloaderItem;
- (void)_startToPlay;
- (id)getMemUrl;
- (void)playVideo;
- (void)_playVideo;
- (void)_play;
- (id)setting_valueForKey:(id)arg1 defaultValue:(id)arg2;
- (void)_settingCongureWithPlayer:(id)arg1;
- (void)_setUpPlayer;
- (void)updateURLWithIP:(id)arg1;
- (void)retryUsingCacheIP;
- (void)cacheIPAfterSuccessfulPlay;
- (void)parseDNS:(id)arg1;
- (void)_logDNSMode:(long long)arg1;
- (void)tryNextURL;
- (void)fetchVideoInfo;
- (void)_fetchVideoInfo;
- (void)prepareToPlay;
- (void)_prepareToPlay:(_Bool)arg1;
- (void)resetOnRefreshSource;
- (void)setIdleTimerDisabledOnMainQueue:(_Bool)arg1;
@property(readonly, nonatomic) TTVideoEngineAVPlayerItemAccessLog *accessLog;
@property(readonly, nonatomic) double abrAveragePlaySpeed;
@property(readonly, nonatomic) long long abrAverageBitrate;
@property(readonly, nonatomic) long long abrSwitchCount;
@property(readonly, nonatomic) long long abrProbeCount;
@property(readonly, nonatomic) long long hijackCode;
@property(readonly, nonatomic) long long mediaSize;
@property(readonly, nonatomic) long long videoSize;
@property(readonly, nonatomic) double durationWatched;
@property(readonly, nonatomic) long long playBytes;
@property(readonly, nonatomic) double containerFPS;
@property(readonly, nonatomic) double videoOutputFPS;
@property(readonly, nonatomic) long long bitrate;
@property(readonly, nonatomic) double currentPlaybackTime;
- (void)removeSpeedTimeObserver;
- (void)addSpeedTimeObserverForInterval:(double)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)removeTimeObserver;
- (void)addPeriodicTimeObserverForInterval:(double)arg1 queue:(id)arg2 usingBlock:(CDUnknownBlockType)arg3;
- (void)setCurrentPlaybackTime:(double)arg1 complete:(CDUnknownBlockType)arg2;
- (void)pauseAsync;
- (void)pause;
- (void)pause:(_Bool)arg1;
- (void)_close:(_Bool)arg1;
- (void)close;
- (void)closeAysnc;
- (void)stop;
- (void)play;
@property(readonly, nonatomic) _Bool shouldPlay;
@property(readonly, nonatomic) UIView *debugInfoView;
- (void)setAutoModeEnbled:(_Bool)arg1;
@property(nonatomic) _Bool ksyHevcDecode;
@property(nonatomic) _Bool hardwareDecode;
@property(nonatomic) double volume;
- (void)configResolution:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)configResolution:(unsigned long long)arg1;
- (_Bool)configResolution:(unsigned long long)arg1 params:(id)arg2;
- (id)supportedResolutionTypes;
- (void)setDirectPlayURLs:(id)arg1;
- (void)setAVPlayerItem:(id)arg1;
- (void)setDirectPlayURL:(id)arg1 cacheFile:(id)arg2;
- (void)setDirectPlayURL:(id)arg1;
- (void)setLocalURL:(id)arg1;
- (void)setPreloaderItem:(id)arg1;
- (void)setVideoModel:(id)arg1;
- (void)setVideoInfo:(id)arg1;
- (void)setPlayItem:(id)arg1;
- (void)setLiveID:(id)arg1;
- (void)setVideoID:(id)arg1;
- (void)_needStopBeforePlayerWithPlaySource:(id)arg1;
- (void)setTag:(id)arg1;
- (struct __CVBuffer *)copyPixelBuffer;
- (void)clearScreen;
- (id)getMetaData;
- (long long)getVideoHeight;
- (long long)getVideoWidth;
- (void)setCustomHeaderValue:(id)arg1 forKey:(id)arg2;
- (void)setPlayAPIVersion:(unsigned long long)arg1 auth:(id)arg2;
- (void)reachabilityChanged:(id)arg1;
- (void)dealloc;
- (id)initWithOwnPlayer:(_Bool)arg1;
- (id)init;
- (void)updateCacheProgress:(id)arg1 flag:(long long)arg2 observer:(id)arg3 progress:(double)arg4;
- (void)_ls_removePlayTaskByKeys:(id)arg1;
- (void)_ls_addTask:(id)arg1 key:(id)arg2 resolution:(unsigned long long)arg3 proxyUrl:(id)arg4 decryptionKey:(id)arg5 info:(id)arg6;
- (id)_ls_proxyUrl:(id)arg1 rawKey:(id)arg2 urls:(id)arg3 extraInfo:(id)arg4 filePath:(id)arg5;
- (void)ls_setDirectURLs:(id)arg1 filePath:(id)arg2;
- (void)ls_setDirectURLs:(id)arg1 key:(id)arg2;
- (void)ls_setDirectURL:(id)arg1 filePath:(id)arg2;
- (void)ls_setDirectURL:(id)arg1 key:(id)arg2;
- (void)setAudioProcessor:(struct EngineAudioWrapper *)arg1;
- (id)getCoverImage;
- (id)getOptionBykey:(id)arg1;
- (void)_setOption:(id)arg1 value:(id)arg2;
- (void)setOptionForKey:(long long)arg1 value:(id)arg2;
- (void)setOptions:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

