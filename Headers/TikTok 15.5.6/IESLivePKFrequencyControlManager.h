//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSDictionary;
@protocol HTSKVStore, IESLivePKProvider, IESLiveSettings;

@interface IESLivePKFrequencyControlManager : NSObject
{
    _Bool _disableFrequencyControl;
    double _startPKControlIntervalForStartTooMuch;
    long long _initiativeEndPKTimesLimit;
    double _startPKControlIntervalForEndTooMuch;
    long long _refusedPKTimesLimit;
    double _startPKControlIntervalForRefusedTooMuch;
    id <IESLiveSettings> _settings;
    id <IESLivePKProvider> _pkProvider;
    id <HTSKVStore> _kvStore;
}

+ (id)sharedManager;
@property(retain, nonatomic) id <HTSKVStore> kvStore; // @synthesize kvStore=_kvStore;
@property(retain, nonatomic) id <IESLivePKProvider> pkProvider; // @synthesize pkProvider=_pkProvider;
@property(retain, nonatomic) id <IESLiveSettings> settings; // @synthesize settings=_settings;
@property(nonatomic) double startPKControlIntervalForRefusedTooMuch; // @synthesize startPKControlIntervalForRefusedTooMuch=_startPKControlIntervalForRefusedTooMuch;
@property(nonatomic) long long refusedPKTimesLimit; // @synthesize refusedPKTimesLimit=_refusedPKTimesLimit;
@property(nonatomic) double startPKControlIntervalForEndTooMuch; // @synthesize startPKControlIntervalForEndTooMuch=_startPKControlIntervalForEndTooMuch;
@property(nonatomic) long long initiativeEndPKTimesLimit; // @synthesize initiativeEndPKTimesLimit=_initiativeEndPKTimesLimit;
@property(nonatomic) double startPKControlIntervalForStartTooMuch; // @synthesize startPKControlIntervalForStartTooMuch=_startPKControlIntervalForStartTooMuch;
@property(nonatomic) _Bool disableFrequencyControl; // @synthesize disableFrequencyControl=_disableFrequencyControl;
- (void).cxx_destruct;
@property(copy, nonatomic) NSDictionary *refusedDic;
@property(nonatomic) double lastStartPKTime;
@property(nonatomic) long long initiativeEndPKTimes;
- (_Bool)controlShowTipForStatus:(unsigned long long)arg1;
- (_Bool)controlStartPKWithInvitedUID:(id)arg1 successHanlder:(CDUnknownBlockType)arg2;
- (void)countBehaviorForBad:(unsigned long long)arg1;
- (void)countBehaviorForGood:(unsigned long long)arg1;
- (id)init;

@end

