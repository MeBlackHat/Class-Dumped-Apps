//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IESMMObject.h"

@class IESMMAudioFade, IESMMAudioLimiter, IESMMAudioPitch, IESMMAudioPitchSpeed, IESMMAudioPitchV2, IESMMAudioScratching, VEAudioConfig;

@interface VEAudioEffectUnit : IESMMObject
{
    VEAudioConfig *_audioConfig;
    IESMMAudioLimiter *_limiterFilter;
    IESMMAudioPitch *_pitchFilter;
    IESMMAudioPitchV2 *_pitchFilterV2;
    IESMMAudioFade *_fadeFilter;
    IESMMAudioPitchSpeed *_speedFilter;
    IESMMAudioScratching *_audioScratchFilter;
    long long _channels;
    double _sampleRate;
}

@property(nonatomic) double sampleRate; // @synthesize sampleRate=_sampleRate;
@property(nonatomic) long long channels; // @synthesize channels=_channels;
@property(retain, nonatomic) IESMMAudioScratching *audioScratchFilter; // @synthesize audioScratchFilter=_audioScratchFilter;
@property(retain, nonatomic) IESMMAudioPitchSpeed *speedFilter; // @synthesize speedFilter=_speedFilter;
@property(retain, nonatomic) IESMMAudioFade *fadeFilter; // @synthesize fadeFilter=_fadeFilter;
@property(retain, nonatomic) IESMMAudioPitchV2 *pitchFilterV2; // @synthesize pitchFilterV2=_pitchFilterV2;
@property(retain, nonatomic) IESMMAudioPitch *pitchFilter; // @synthesize pitchFilter=_pitchFilter;
@property(retain, nonatomic) IESMMAudioLimiter *limiterFilter; // @synthesize limiterFilter=_limiterFilter;
@property(retain, nonatomic) VEAudioConfig *audioConfig; // @synthesize audioConfig=_audioConfig;
- (void).cxx_destruct;
- (void)processVolume:(float **)arg1 samples:(int)arg2 filter:(id)arg3;
- (void)processFade:(float **)arg1 samples:(int)arg2 filter:(id)arg3 frameTime:(double)arg4;
- (int)processPitchV2:(float **)arg1 samples:(int)arg2 filter:(id)arg3;
- (int)processPitch:(float **)arg1 samples:(int)arg2 filter:(id)arg3;
- (int)processSpeed:(float **)arg1 samples:(unsigned long long)arg2 maxSamples:(unsigned long long)arg3 filter:(id)arg4;
- (int)processCurveSpeed:(float **)arg1 samples:(unsigned long long)arg2 maxSamples:(unsigned long long)arg3 filter:(id)arg4 curveRatio:(double)arg5;
- (unsigned int)processIntervalInput:(float **)arg1 inputSamples:(unsigned int)arg2 bufferMaxSamples:(unsigned int)arg3 frameTime:(double)arg4 curveRatio:(double)arg5;
- (void)reset;
- (id)initWithConfig:(id)arg1;

@end

