//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "UIScrollViewDelegate-Protocol.h"

@class NSArray, NSString, UIScrollView;
@protocol AWEInfinateSlidingViewControllerDataSource, AWEInfinateSlidingViewControllerDelegate;

@interface AWEInfinateSlidingViewController : UIViewController <UIScrollViewDelegate>
{
    _Bool _isScrolling;
    _Bool _isSettingContenOffset;
    _Bool _needLoadViewControllerAfterScroll;
    _Bool _needLoadAroundVC;
    id <AWEInfinateSlidingViewControllerDataSource> _dataSource;
    id <AWEInfinateSlidingViewControllerDelegate> _delegate;
    long long _selectedIndex;
    UIViewController *_selectViewController;
    unsigned long long _naviDirect;
    Class _contentVCClass;
    UIScrollView *_scrollView;
    UIViewController *_beforeViewController;
    UIViewController *_afterViewController;
    NSArray *_viewControllers;
}

@property(nonatomic) _Bool needLoadAroundVC; // @synthesize needLoadAroundVC=_needLoadAroundVC;
@property(retain, nonatomic) NSArray *viewControllers; // @synthesize viewControllers=_viewControllers;
@property(nonatomic) _Bool needLoadViewControllerAfterScroll; // @synthesize needLoadViewControllerAfterScroll=_needLoadViewControllerAfterScroll;
@property(nonatomic) _Bool isSettingContenOffset; // @synthesize isSettingContenOffset=_isSettingContenOffset;
@property(nonatomic) _Bool isScrolling; // @synthesize isScrolling=_isScrolling;
@property(retain, nonatomic) UIViewController *afterViewController; // @synthesize afterViewController=_afterViewController;
@property(retain, nonatomic) UIViewController *beforeViewController; // @synthesize beforeViewController=_beforeViewController;
@property(retain, nonatomic) UIScrollView *scrollView; // @synthesize scrollView=_scrollView;
@property(nonatomic) Class contentVCClass; // @synthesize contentVCClass=_contentVCClass;
@property(nonatomic) unsigned long long naviDirect; // @synthesize naviDirect=_naviDirect;
@property(retain, nonatomic) UIViewController *selectViewController; // @synthesize selectViewController=_selectViewController;
@property(nonatomic) long long selectedIndex; // @synthesize selectedIndex=_selectedIndex;
@property(nonatomic) __weak id <AWEInfinateSlidingViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <AWEInfinateSlidingViewControllerDataSource> dataSource; // @synthesize dataSource=_dataSource;
- (void).cxx_destruct;
- (_Bool)shouldAutomaticallyForwardAppearanceMethods;
- (void)scrollViewDidScroll:(id)arg1;
- (void)triggerFinishScrollingFromIndex:(long long)arg1 toIndex:(long long)arg2 fromVC:(id)arg3 toVC:(id)arg4 progress:(double)arg5 transitionSuccessful:(_Bool)arg6;
- (void)triggerIsScrollingFromIndex:(long long)arg1 toIndex:(long long)arg2 fromVC:(id)arg3 toVC:(id)arg4 progress:(double)arg5;
@property(readonly, nonatomic) long long maxCount;
- (long long)vcIndexFromDataSourceIndex:(long long)arg1;
- (void)p_resetSelctedIndex:(long long)arg1;
- (void)resetSelctedIndex:(long long)arg1;
- (void)loadViewControllerBeforeIndex:(long long)arg1;
- (void)loadViewControllerAfterIndex:(long long)arg1;
- (void)configViewControllersWithSelectedIndex:(long long)arg1 progress:(double)arg2;
- (void)willScrollFrom:(long long)arg1 fromVC:(id)arg2 toIndex:(long long)arg3 toVC:(id)arg4;
- (void)didFinishScrollToIndex:(long long)arg1 progress:(double)arg2;
- (void)selectViewControllerAtIndex:(long long)arg1 animate:(_Bool)arg2;
- (void)layoutViews;
- (void)firstConfigSelectedVC;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)commonInit;
- (id)init;
- (id)initWithSelectedIndex:(long long)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

