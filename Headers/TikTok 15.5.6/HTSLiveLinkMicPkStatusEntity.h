//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HTSLivePKApi, HTSLivePKPlayModeRaidData, HTSLiveRoomLinkMicModel, IESLiveCountTimer, LiveRoomModel, NSDictionary, NSNumber;
@protocol HTSLiveMessageDispatchProvider, HTSLivePKPlaygroundActions, IESLiveDebugService, IESLiveSettings;

@interface HTSLiveLinkMicPkStatusEntity : NSObject
{
    _Bool _isPKGoing;
    _Bool _punishing;
    _Bool _showResult;
    _Bool _raiding;
    _Bool _isSelfAttack;
    _Bool _raidSuccess;
    _Bool _isAnchor;
    _Bool _enableCheckRaidStart;
    LiveRoomModel *_roomModel;
    HTSLiveRoomLinkMicModel *_linkMicModel;
    unsigned long long _pkRemainTime;
    NSNumber *_leftScore;
    NSNumber *_rightScore;
    NSNumber *_punishInterval;
    double _punishStartTime;
    unsigned long long _raidRemainTime;
    NSNumber *_raidTotalScore;
    NSNumber *_raidScore;
    NSNumber *_leftCountDown;
    long long _raidTimes;
    HTSLivePKPlayModeRaidData *_startRaidData;
    HTSLivePKApi *_pkApi;
    NSDictionary *_raidDelayTimeDict;
    IESLiveCountTimer *_raidTimer;
    IESLiveCountTimer *_pkTimer;
    unsigned long long _PKPunishTime;
    id <HTSLiveMessageDispatchProvider> _messageDispatcher;
    id <IESLiveSettings> _settings;
    id <IESLiveDebugService> _debugService;
    id <HTSLivePKPlaygroundActions> _pkPlaygroundActionCreator;
}

@property(retain, nonatomic) id <HTSLivePKPlaygroundActions> pkPlaygroundActionCreator; // @synthesize pkPlaygroundActionCreator=_pkPlaygroundActionCreator;
@property(retain, nonatomic) id <IESLiveDebugService> debugService; // @synthesize debugService=_debugService;
@property(retain, nonatomic) id <IESLiveSettings> settings; // @synthesize settings=_settings;
@property(retain, nonatomic) id <HTSLiveMessageDispatchProvider> messageDispatcher; // @synthesize messageDispatcher=_messageDispatcher;
@property(nonatomic) unsigned long long PKPunishTime; // @synthesize PKPunishTime=_PKPunishTime;
@property(nonatomic) _Bool enableCheckRaidStart; // @synthesize enableCheckRaidStart=_enableCheckRaidStart;
@property(retain, nonatomic) IESLiveCountTimer *pkTimer; // @synthesize pkTimer=_pkTimer;
@property(retain, nonatomic) IESLiveCountTimer *raidTimer; // @synthesize raidTimer=_raidTimer;
@property(retain, nonatomic) NSDictionary *raidDelayTimeDict; // @synthesize raidDelayTimeDict=_raidDelayTimeDict;
@property(retain, nonatomic) HTSLivePKApi *pkApi; // @synthesize pkApi=_pkApi;
@property(retain, nonatomic) HTSLivePKPlayModeRaidData *startRaidData; // @synthesize startRaidData=_startRaidData;
@property(nonatomic) _Bool isAnchor; // @synthesize isAnchor=_isAnchor;
@property(nonatomic) _Bool raidSuccess; // @synthesize raidSuccess=_raidSuccess;
@property(nonatomic) long long raidTimes; // @synthesize raidTimes=_raidTimes;
@property(retain, nonatomic) NSNumber *leftCountDown; // @synthesize leftCountDown=_leftCountDown;
@property(nonatomic) _Bool isSelfAttack; // @synthesize isSelfAttack=_isSelfAttack;
@property(nonatomic) _Bool raiding; // @synthesize raiding=_raiding;
@property(retain, nonatomic) NSNumber *raidScore; // @synthesize raidScore=_raidScore;
@property(retain, nonatomic) NSNumber *raidTotalScore; // @synthesize raidTotalScore=_raidTotalScore;
@property(nonatomic) unsigned long long raidRemainTime; // @synthesize raidRemainTime=_raidRemainTime;
@property(nonatomic) double punishStartTime; // @synthesize punishStartTime=_punishStartTime;
@property(retain, nonatomic) NSNumber *punishInterval; // @synthesize punishInterval=_punishInterval;
@property(nonatomic) _Bool showResult; // @synthesize showResult=_showResult;
@property(nonatomic) _Bool punishing; // @synthesize punishing=_punishing;
@property(nonatomic) _Bool isPKGoing; // @synthesize isPKGoing=_isPKGoing;
@property(retain, nonatomic) NSNumber *rightScore; // @synthesize rightScore=_rightScore;
@property(retain, nonatomic) NSNumber *leftScore; // @synthesize leftScore=_leftScore;
@property(nonatomic) unsigned long long pkRemainTime; // @synthesize pkRemainTime=_pkRemainTime;
@property(retain, nonatomic) HTSLiveRoomLinkMicModel *linkMicModel; // @synthesize linkMicModel=_linkMicModel;
@property(readonly, nonatomic) LiveRoomModel *roomModel; // @synthesize roomModel=_roomModel;
- (void).cxx_destruct;
- (void)startNextRaidIfNeeded;
- (void)checkRaidModeState:(CDUnknownBlockType)arg1;
- (void)checkStartRaidIfNeeded;
- (void)finishRaidMode;
- (void)startRaidCountDown:(long long)arg1;
- (_Bool)isRaidSuccess;
- (long long)leftCountDownWithTimeStamp:(id)arg1;
- (void)startPunishWithInterval:(id)arg1;
- (void)enableCheckRaidWithDelay:(long long)arg1;
- (void)startRaidWithData:(id)arg1 timeStamp:(id)arg2;
- (void)startPKCountDown:(long long)arg1;
- (void)startPKWithDuration:(long long)arg1;
- (void)cancelPK;
- (_Bool)pkRunning;
- (void)endWithLinkMicModel:(id)arg1;
- (void)updateWithUserScores:(id)arg1;
- (void)updateWithLinkMicModel:(id)arg1 timeStamp:(id)arg2;
- (id)initWithRoom:(id)arg1;
- (void)dealloc;

@end

