//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "IESMMObject.h"

#import "HTSMediaExportable-Protocol.h"
#import "HTSMediaMixPlayerDelegate-Protocol.h"
#import "HTSMoviePlayerDelegate-Protocol.h"
#import "IESAssetReverseProtocol-Protocol.h"

@class AVAsset, AVPlayerItem, HTSAudioExport, HTSGLPicture, HTSMediaExporter, HTSMediaMixPlayer, HTSMixPlayerConfig, HTSMoviePlayer, HTSVideoData, IESEffectSDKParser, IESMMAudioFilter, IESMMEffectStickerInfo, IESMMMVModel, IESMMVideoProcess, IESVideoAddEdgeData, IESVideoCropData, NSMutableArray, NSObject, NSString;
@protocol HTSPlayerDelegate, IESMMAudioProcessorExProtocol, IESMMTranscoderProtocol, OS_dispatch_semaphore;

@interface HTSPlayer : IESMMObject <HTSMediaMixPlayerDelegate, HTSMoviePlayerDelegate, IESAssetReverseProtocol, HTSMediaExportable>
{
    _Bool _timeMachineReady;
    _Bool _isUsingSphere;
    _Bool _isUsingLittlePlanet;
    _Bool _autoPlayWhenAppBecomeActive;
    _Bool _shouldAlwaysRender;
    _Bool _converMode;
    _Bool _isRetainOriginalSound;
    _Bool _reverseVideoStatus;
    _Bool _shouldCancelReverse;
    _Bool _buseSenseTime;
    _Bool _effectProcessStatus;
    _Bool _effectReadyStatus;
    _Bool _pauseAndStillRender;
    _Bool _openBuildChain;
    _Bool _useNewMudule;
    _Bool _playerPlayed;
    _Bool _isFrameFixedSticker;
    int _mergeProgress;
    int _getImageNums;
    HTSMediaExporter *mediaExporter;
    id <HTSPlayerDelegate> _delegate;
    IESMMVideoProcess *_videoProcess;
    HTSMediaMixPlayer *_mixPlayer;
    HTSMoviePlayer *_videoProcessPlayer;
    long long _status;
    IESMMEffectStickerInfo *_curFilterPath;
    CDUnknownBlockType _mergeProgressBlock;
    double _videoProcessCost;
    double _currentPlayerTime;
    CDUnknownBlockType _mixPlayerCompleteBlock;
    CDUnknownBlockType _updateVideoDataCompleteBlock;
    CDUnknownBlockType _effectFilterPathBlock;
    CDUnknownBlockType _firstRenderCallback;
    IESVideoCropData *_previewCrop;
    IESVideoAddEdgeData *_previewEdge;
    CDUnknownBlockType _IESMMPlayerActionBlock;
    CDUnknownBlockType _imageBlock;
    HTSVideoData *_videoData;
    long long _encodeStatus;
    NSMutableArray *_observerArray;
    HTSGLPicture *_waterMarkImage;
    NSMutableArray *_movieWriterFilters;
    double _overTimeStart;
    double _lastMergeProgress;
    double _overTime;
    double _startTime;
    id _playerObserve;
    CDUnknownBlockType _completeBlock;
    id <IESMMTranscoderProtocol> _mediaTranscoder;
    IESEffectSDKParser *_effectSDKParser;
    AVAsset *_reverseAsset;
    AVAsset *_reverseSrcAsset;
    NSString *_leftFilter;
    NSString *_rightFilter;
    IESMMEffectStickerInfo *_currentPerformEffectPath;
    NSMutableArray *_infostickerDics;
    unsigned long long _reverseProcessStatus;
    double _effectStopTime;
    IESMMMVModel *_mvmodel;
    AVPlayerItem *_generaterItem;
    unsigned long long _editMode;
    IESMMAudioFilter *_audioFilter;
    id <IESMMAudioProcessorExProtocol> _audioProcess;
    CDUnknownBlockType _reverseCompleteBlock;
    NSObject<OS_dispatch_semaphore> *_reverseCompleteSemaphore;
    HTSAudioExport *_audioExportor;
    HTSMixPlayerConfig *_playerConfig;
    struct CGSize _outputVideoSize;
    struct CGSize _videoSize;
    struct CGSize _previewSize;
    struct CGSize _storyFrameSize;
    struct CGSize _glViewScaleSize;
}

+ (void)getImageWithAsset:(id)arg1 videoComposition:(id)arg2 atTime:(double)arg3 preferredSize:(struct CGSize)arg4 filterEffectPath:(id)arg5 filterImagePath:(id)arg6 videoProcess:(id)arg7 compeletion:(CDUnknownBlockType)arg8 openBuildChain:(_Bool)arg9;
+ (void)getImageWithAsset:(id)arg1 videoComposition:(id)arg2 atTime:(double)arg3 preferredSize:(struct CGSize)arg4 filterEffectPath:(id)arg5 filterImagePath:(id)arg6 compeletion:(CDUnknownBlockType)arg7 openBuildChain:(_Bool)arg8;
+ (void)getVideoDuration:(id)arg1 andCompleteHandler:(CDUnknownBlockType)arg2;
+ (struct CGImage *)copyImageFromAVAssetImageGenerator:(id)arg1 atTime:(CDStruct_1b6d18a9)arg2 actualTime:(CDStruct_1b6d18a9 *)arg3 error:(id *)arg4;
+ (void)getImageWithAsset:(id)arg1 videoComposition:(id)arg2 atTime:(double)arg3 preferredSize:(struct CGSize)arg4 compeletion:(CDUnknownBlockType)arg5;
+ (void)setCustomPlayerAudioCategory:(id)arg1;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5 openBuildChain:(_Bool)arg6 useNewModule:(_Bool)arg7 actionBlock:(CDUnknownBlockType)arg8;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5 openBuildChain:(_Bool)arg6 useNewModule:(_Bool)arg7;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5 openBuildChain:(_Bool)arg6;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 openBuildChain:(_Bool)arg5;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 openBuildChain:(_Bool)arg4;
+ (id)playerWithView:(id)arg1 videoData:(id)arg2 openBuildChain:(_Bool)arg3;
@property(nonatomic) _Bool isFrameFixedSticker; // @synthesize isFrameFixedSticker=_isFrameFixedSticker;
@property(retain, nonatomic) HTSMixPlayerConfig *playerConfig; // @synthesize playerConfig=_playerConfig;
@property(retain, nonatomic) HTSAudioExport *audioExportor; // @synthesize audioExportor=_audioExportor;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *reverseCompleteSemaphore; // @synthesize reverseCompleteSemaphore=_reverseCompleteSemaphore;
@property(copy, nonatomic) CDUnknownBlockType reverseCompleteBlock; // @synthesize reverseCompleteBlock=_reverseCompleteBlock;
@property(retain, nonatomic) id <IESMMAudioProcessorExProtocol> audioProcess; // @synthesize audioProcess=_audioProcess;
@property(retain, nonatomic) IESMMAudioFilter *audioFilter; // @synthesize audioFilter=_audioFilter;
@property(nonatomic) unsigned long long editMode; // @synthesize editMode=_editMode;
@property(nonatomic) _Bool playerPlayed; // @synthesize playerPlayed=_playerPlayed;
@property(retain, nonatomic) AVPlayerItem *generaterItem; // @synthesize generaterItem=_generaterItem;
@property(retain, nonatomic) IESMMMVModel *mvmodel; // @synthesize mvmodel=_mvmodel;
@property(nonatomic) double effectStopTime; // @synthesize effectStopTime=_effectStopTime;
@property(nonatomic) unsigned long long reverseProcessStatus; // @synthesize reverseProcessStatus=_reverseProcessStatus;
@property(nonatomic) struct CGSize glViewScaleSize; // @synthesize glViewScaleSize=_glViewScaleSize;
@property(retain, nonatomic) NSMutableArray *infostickerDics; // @synthesize infostickerDics=_infostickerDics;
@property(nonatomic) int getImageNums; // @synthesize getImageNums=_getImageNums;
@property(nonatomic) struct CGSize storyFrameSize; // @synthesize storyFrameSize=_storyFrameSize;
@property(retain, nonatomic) IESMMEffectStickerInfo *currentPerformEffectPath; // @synthesize currentPerformEffectPath=_currentPerformEffectPath;
@property(retain, nonatomic) NSString *rightFilter; // @synthesize rightFilter=_rightFilter;
@property(retain, nonatomic) NSString *leftFilter; // @synthesize leftFilter=_leftFilter;
@property(nonatomic) _Bool useNewMudule; // @synthesize useNewMudule=_useNewMudule;
@property(nonatomic) _Bool openBuildChain; // @synthesize openBuildChain=_openBuildChain;
@property(retain, nonatomic) AVAsset *reverseSrcAsset; // @synthesize reverseSrcAsset=_reverseSrcAsset;
@property(retain, nonatomic) AVAsset *reverseAsset; // @synthesize reverseAsset=_reverseAsset;
@property(retain, nonatomic) IESEffectSDKParser *effectSDKParser; // @synthesize effectSDKParser=_effectSDKParser;
@property(nonatomic) _Bool pauseAndStillRender; // @synthesize pauseAndStillRender=_pauseAndStillRender;
@property(retain, nonatomic) id <IESMMTranscoderProtocol> mediaTranscoder; // @synthesize mediaTranscoder=_mediaTranscoder;
@property(copy, nonatomic) CDUnknownBlockType completeBlock; // @synthesize completeBlock=_completeBlock;
@property(nonatomic) _Bool effectReadyStatus; // @synthesize effectReadyStatus=_effectReadyStatus;
@property(nonatomic) _Bool effectProcessStatus; // @synthesize effectProcessStatus=_effectProcessStatus;
@property(nonatomic) id playerObserve; // @synthesize playerObserve=_playerObserve;
@property(nonatomic) struct CGSize previewSize; // @synthesize previewSize=_previewSize;
@property(nonatomic) struct CGSize videoSize; // @synthesize videoSize=_videoSize;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(nonatomic) _Bool buseSenseTime; // @synthesize buseSenseTime=_buseSenseTime;
@property(nonatomic) _Bool shouldCancelReverse; // @synthesize shouldCancelReverse=_shouldCancelReverse;
@property(nonatomic) _Bool reverseVideoStatus; // @synthesize reverseVideoStatus=_reverseVideoStatus;
@property(nonatomic) double overTime; // @synthesize overTime=_overTime;
@property(nonatomic) double lastMergeProgress; // @synthesize lastMergeProgress=_lastMergeProgress;
@property(nonatomic) double overTimeStart; // @synthesize overTimeStart=_overTimeStart;
@property(retain, nonatomic) NSMutableArray *movieWriterFilters; // @synthesize movieWriterFilters=_movieWriterFilters;
@property(retain, nonatomic) HTSGLPicture *waterMarkImage; // @synthesize waterMarkImage=_waterMarkImage;
@property(retain, nonatomic) NSMutableArray *observerArray; // @synthesize observerArray=_observerArray;
@property(nonatomic) long long encodeStatus; // @synthesize encodeStatus=_encodeStatus;
@property(retain, nonatomic) HTSVideoData *videoData; // @synthesize videoData=_videoData;
@property(nonatomic) _Bool isRetainOriginalSound; // @synthesize isRetainOriginalSound=_isRetainOriginalSound;
@property(copy, nonatomic) CDUnknownBlockType imageBlock; // @synthesize imageBlock=_imageBlock;
@property(nonatomic) _Bool converMode; // @synthesize converMode=_converMode;
@property(copy, nonatomic) CDUnknownBlockType IESMMPlayerActionBlock; // @synthesize IESMMPlayerActionBlock=_IESMMPlayerActionBlock;
@property(retain, nonatomic) IESVideoAddEdgeData *previewEdge; // @synthesize previewEdge=_previewEdge;
@property(retain, nonatomic) IESVideoCropData *previewCrop; // @synthesize previewCrop=_previewCrop;
@property(nonatomic) _Bool shouldAlwaysRender; // @synthesize shouldAlwaysRender=_shouldAlwaysRender;
@property(nonatomic) _Bool autoPlayWhenAppBecomeActive; // @synthesize autoPlayWhenAppBecomeActive=_autoPlayWhenAppBecomeActive;
@property(copy, nonatomic) CDUnknownBlockType firstRenderCallback; // @synthesize firstRenderCallback=_firstRenderCallback;
@property(copy, nonatomic) CDUnknownBlockType effectFilterPathBlock; // @synthesize effectFilterPathBlock=_effectFilterPathBlock;
@property(copy, nonatomic) CDUnknownBlockType updateVideoDataCompleteBlock; // @synthesize updateVideoDataCompleteBlock=_updateVideoDataCompleteBlock;
@property(copy, nonatomic) CDUnknownBlockType mixPlayerCompleteBlock; // @synthesize mixPlayerCompleteBlock=_mixPlayerCompleteBlock;
@property(nonatomic) double currentPlayerTime; // @synthesize currentPlayerTime=_currentPlayerTime;
@property(nonatomic) _Bool isUsingLittlePlanet; // @synthesize isUsingLittlePlanet=_isUsingLittlePlanet;
@property(nonatomic) _Bool isUsingSphere; // @synthesize isUsingSphere=_isUsingSphere;
@property(nonatomic) double videoProcessCost; // @synthesize videoProcessCost=_videoProcessCost;
@property(copy, nonatomic) CDUnknownBlockType mergeProgressBlock; // @synthesize mergeProgressBlock=_mergeProgressBlock;
@property(nonatomic) int mergeProgress; // @synthesize mergeProgress=_mergeProgress;
@property(nonatomic) struct CGSize outputVideoSize; // @synthesize outputVideoSize=_outputVideoSize;
@property(nonatomic) _Bool timeMachineReady; // @synthesize timeMachineReady=_timeMachineReady;
@property(retain, nonatomic) IESMMEffectStickerInfo *curFilterPath; // @synthesize curFilterPath=_curFilterPath;
@property(nonatomic) long long status; // @synthesize status=_status;
@property(retain, nonatomic) HTSMoviePlayer *videoProcessPlayer; // @synthesize videoProcessPlayer=_videoProcessPlayer;
@property(retain, nonatomic) HTSMediaMixPlayer *mixPlayer; // @synthesize mixPlayer=_mixPlayer;
@property(retain, nonatomic) IESMMVideoProcess *videoProcess; // @synthesize videoProcess=_videoProcess;
@property(nonatomic) __weak id <HTSPlayerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) HTSMediaExporter *mediaExporter; // @synthesize mediaExporter;
- (void).cxx_destruct;
- (void)processImageWithCompleteBlock:(CDUnknownBlockType)arg1;
- (long long)currentBrushNumber;
- (void)setBrushCanvasAlpha:(double)arg1;
- (void)removeLastBrush;
- (void)setBrushColorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpah:(double)arg4;
- (void)setBrushSize:(double)arg1;
- (_Bool)brushEnd;
- (_Bool)brushStart;
- (_Bool)isAnimationSticker:(long long)arg1;
- (long long)addStickerbyUIImage:(id)arg1 letterInfo:(id)arg2;
- (_Bool)handleRotationEvent:(double)arg1;
- (_Bool)handleScaleEvent:(double)arg1;
- (_Bool)handleLongPressEventWithLocation:(struct CGPoint)arg1;
- (_Bool)handlePanEventWithTranslation:(struct CGPoint)arg1 location:(struct CGPoint)arg2;
- (_Bool)handleTouchEvent:(struct CGPoint)arg1;
- (_Bool)handleTouchUp:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (_Bool)handleTouchDown:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (id)getVideoProcess;
- (struct CGImage *)capturePreviewImage;
- (_Bool)isViewInvalid:(id)arg1;
- (void)moviePlayerNeedReset;
- (void)switchPhotoMovieTransType:(long long)arg1;
- (void)removeAll2DSticker;
- (_Bool)isStickerOutOfBounds;
- (void)removeStickerWithKey:(id)arg1;
- (void)addSticker:(id)arg1;
- (double)getTimeMachineBegineTime:(long long)arg1;
- (void)applyTimeMachine:(long long)arg1 beginTime:(double)arg2 startTime:(double)arg3;
- (void)applyTimeMachine:(long long)arg1 beginTime:(double)arg2;
- (unsigned long long)gpuImageRotationForAssetTrack:(id)arg1;
- (void)mediaMixPlayer:(id)arg1 didResetItem:(id)arg2;
- (void)mediaMixPlayer:(id)arg1 willResetItem:(id)arg2;
- (void)resetRefer;
- (_Bool)isOnWindow;
- (void)handleAppDidBecomeActive:(id)arg1;
- (void)handleAppWillResignActive:(id)arg1;
- (void)stopAndCancle;
- (void)getEngineProcessedPreviewImageAtTime:(double)arg1 preferredSize:(struct CGSize)arg2 compeletion:(CDUnknownBlockType)arg3;
- (void)getProcessedPreviewImageAtTime:(double)arg1 preferredSize:(struct CGSize)arg2 compeletion:(CDUnknownBlockType)arg3;
- (id)scoreWithImages:(id)arg1;
- (void)getSourcePreviewImageAtTime:(double)arg1 preferredSize:(struct CGSize)arg2 compeletion:(CDUnknownBlockType)arg3;
- (void)getSuggestPreviewImageWithCompletion:(CDUnknownBlockType)arg1;
- (long long)getPreviewModeType:(id)arg1;
- (void)setPreviewModeType:(long long)arg1;
- (long long)getPreviewModeTypeWithView:(id)arg1;
- (void)setPreviewModeType:(long long)arg1 toView:(id)arg2;
- (void)getPreviewImageWithFilterPath:(id)arg1 compeletion:(CDUnknownBlockType)arg2;
- (void)cancelVideoEditing:(CDUnknownBlockType)arg1;
- (double)getProgress;
- (id)getMetadataItem;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1 enforceReenmux:(_Bool)arg2 enforceReencode:(_Bool)arg3 useVideoDataOutputSize:(_Bool)arg4;
- (void)prepareTrans;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1 WaterMarkConfig:(id)arg2;
- (_Bool)applyVideoEditingWithCompleteBlock:(CDUnknownBlockType)arg1 waterMarkArray:(id)arg2 cropInfo:(id)arg3;
- (void)mergeCompleteWithRes:(id)arg1 progress:(int)arg2;
- (void)stopCoverMode;
- (void)startCoverMode:(CDStruct_1b6d18a9)arg1;
- (void)setEffectText:(id)arg1 arg1:(int)arg2 arg2:(int)arg3 arg3:(id)arg4;
- (void)setEffectSrtData:(const struct IESSrtDdata *)arg1;
- (void)setEffectFontPath:(id)arg1 faceIndex:(long long)arg2;
- (void)updateVideoData:(id)arg1 reloadComplete:(CDUnknownBlockType)arg2;
- (void)updateVideoData:(id)arg1;
- (void)removeAllEffect;
- (double)removeEffectWithRangeID:(id)arg1;
- (double)removeLastOperation;
- (void)cancelApplayEffectWithresultBlock:(CDUnknownBlockType)arg1;
- (void)cancelApplayEffect;
- (void)setEffectLoadStatusBlock:(CDUnknownBlockType)arg1;
- (void)setEffectWithPathId:(id)arg1 withStartTime:(double)arg2 andStopTime:(double)arg3;
- (void)stopEffectwithTime:(double)arg1;
- (void)applyEffectWithPathId:(id)arg1 withTime:(double)arg2 endTime:(double)arg3 resultBlock:(CDUnknownBlockType)arg4;
- (void)startEffectWithPathId:(id)arg1 withTime:(double)arg2 duration:(double)arg3;
- (void)startEffectWithPathId:(id)arg1 withTime:(double)arg2;
- (void)exitProcessEffect;
- (void)readyToReplay;
- (void)readytoProcessEffect:(CDStruct_1b6d18a9)arg1;
- (void)checkAudioSessionAsync:(_Bool)arg1;
- (void)updateStatus:(long long)arg1;
- (struct CGSize)getVideoSize;
- (void)getStickerId:(long long)arg1 props:(id)arg2;
- (void)setHighFrameRateRender:(_Bool)arg1;
- (void)setPlayerEditMode:(unsigned long long)arg1;
- (void)removeAllInfoSticker;
- (void)setStickerEditMode:(_Bool)arg1;
- (void)stopChangeStickerDuration:(long long)arg1;
- (void)startChangeStickerDuration:(long long)arg1;
- (void)setStickerAbove:(long long)arg1;
- (void)setSticker:(long long)arg1 startTime:(double)arg2 duration:(double)arg3;
- (void)setSticker:(long long)arg1 alpha:(double)arg2;
- (struct CGSize)getNewStoryFrameSize;
- (_Bool)isInfoStickerOutOfBounds;
- (void)setSticker:(long long)arg1 pauseAnimation:(_Bool)arg2;
- (void)setStickerScale:(long long)arg1 scale:(double)arg2;
- (void)setSticker:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3 angle:(double)arg4 scale:(double)arg5;
- (void)removeInfoSticker:(long long)arg1;
- (struct CGSize)getInfoStickerSize:(long long)arg1;
- (struct CGSize)getstickerEditBoxSize:(long long)arg1;
- (void)updatePreviewSizeByVideoSize:(struct CGSize)arg1;
- (void)updateSticker:(long long)arg1;
- (long long)addSubtitleSticker;
- (long long)addInfoSticker:(id)arg1 withEffectInfo:(id)arg2 userInfo:(id)arg3;
- (void)switchFilterWithPathOne:(id)arg1 PathTwo:(id)arg2 direction:(long long)arg3 progress:(double)arg4;
- (void)applyEffectIntensity:(struct IESIndensityParam_t)arg1 type:(long long)arg2;
- (void)applyEffectWithInfo:(id)arg1 type:(long long)arg2;
- (void)applyFilterWithPath:(id)arg1;
- (void)setRetainOriginalSound:(_Bool)arg1;
- (void)applyAudioEffectWithInfo:(id)arg1 inIsSync:(_Bool)arg2 inPreProcessInfo:(id)arg3 completeBlock:(CDUnknownBlockType)arg4;
- (void)didExport;
- (void)willExport;
- (_Bool)preProcessAudio:(id)arg1 withInfo:(id)arg2;
- (void)startMoviePlayer;
- (void)stopMoviePlayer;
- (void)replay;
- (void)stop;
- (void)pause:(_Bool)arg1;
- (void)pause;
- (void)seekToTimeAndRender:(CDStruct_1b6d18a9)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)seekToTimeAndRender:(CDStruct_1b6d18a9)arg1;
- (void)seekToTime:(CDStruct_1b6d18a9)arg1;
- (void)play;
- (void)playFromTime:(CDStruct_1b6d18a9)arg1;
- (void)dealloc;
- (void)resetPlayerWithView:(id)arg1 andIndex:(int)arg2;
- (void)p_registerFirstFrameRenderNotification;
- (void)resetPlayerWithView:(id)arg1;
- (void)reverseAssetIfNeeded;
- (void)clearReverseAsset;
- (void)cancelReverseAsset;
- (void)restartReverseAsset;
- (id)p_getCompressionProps:(id)arg1;
- (void)resetPlayerWithError:(id)arg1;
- (void)addAllObserver;
- (void)resetPlayerCompleteBlock;
- (id)getExportVideodata:(id)arg1;
- (id)initWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5 openBuildChain:(_Bool)arg6 useNewModule:(_Bool)arg7 actionBlock:(CDUnknownBlockType)arg8 mvModel:(id)arg9;
- (id)initWithView:(id)arg1 videoData:(id)arg2 withBlock:(CDUnknownBlockType)arg3 needReverseVideo:(_Bool)arg4 isPanorama:(_Bool)arg5 openBuildChain:(_Bool)arg6 useNewModule:(_Bool)arg7 actionBlock:(CDUnknownBlockType)arg8;
- (id)initWithView:(id)arg1 videoData:(id)arg2 openBuildChain:(_Bool)arg3;
- (id)initWithView:(id)arg1 mvideoData:(id)arg2 mvModel:(id)arg3 openBuildChain:(_Bool)arg4;
- (id)init;
- (_Bool)exportVideo:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

