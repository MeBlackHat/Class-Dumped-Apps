//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class HMDConfigManager, HMDHeimdallrConfig, HMDInjectedInfo, HMDPerformanceReporter, HMDRecordStore, HMDSessionTracker, NSMutableArray, NSMutableDictionary, NSString;

@interface Heimdallr : NSObject
{
    struct _opaque_pthread_rwlock_t _remoteModuleLock;
    struct _opaque_pthread_rwlock_t _callbackLock;
    NSMutableDictionary *_callbackDictionary;
    _Bool _showDebugAlert;
    _Bool _enableWorking;
    HMDInjectedInfo *_userInfo;
    NSMutableDictionary *_remoteModules;
    NSMutableArray *_localModules;
    HMDHeimdallrConfig *_config;
    HMDConfigManager *_configManager;
    HMDPerformanceReporter *_reporter;
    HMDRecordStore *_store;
    HMDSessionTracker *_sessionTracker;
}

+ (id)heimdallrRootPath;
+ (id)allocWithZone:(struct _NSZone *)arg1;
+ (id)shared;
+ (void)receiveDevastedDataForTableName:(id)arg1 localID:(id)arg2;
+ (void)appReachStateChanged:(id)arg1;
+ (void)uploadLocalConfigDebugRealData;
+ (void)uploadDebugRealDataWithLocalConfig;
+ (void)uploadDebugRealDataWithStartTime:(double)arg1 endTime:(double)arg2 wifiOnly:(_Bool)arg3;
@property(retain, nonatomic) HMDSessionTracker *sessionTracker; // @synthesize sessionTracker=_sessionTracker;
@property(retain, nonatomic) HMDRecordStore *store; // @synthesize store=_store;
@property(retain, nonatomic) HMDPerformanceReporter *reporter; // @synthesize reporter=_reporter;
@property(retain, nonatomic) HMDConfigManager *configManager; // @synthesize configManager=_configManager;
@property(retain) HMDHeimdallrConfig *config; // @synthesize config=_config;
@property(retain, nonatomic) NSMutableArray *localModules; // @synthesize localModules=_localModules;
@property(retain, nonatomic) NSMutableDictionary *remoteModules; // @synthesize remoteModules=_remoteModules;
@property _Bool enableWorking; // @synthesize enableWorking=_enableWorking;
@property(nonatomic) _Bool showDebugAlert; // @synthesize showDebugAlert=_showDebugAlert;
@property(retain, nonatomic) HMDInjectedInfo *userInfo; // @synthesize userInfo=_userInfo;
- (void).cxx_destruct;
- (id)copyAllRemoteModules;
- (void)module:(id)arg1 name:(id)arg2 didChangeState:(_Bool)arg3;
- (void)removeObserver:(id)arg1;
- (id)addObserverForModule:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;
- (void)updateRecordCount:(long long)arg1;
- (void)handleBecomeActiveNotification:(id)arg1;
- (void)didEnterBackground:(id)arg1;
- (void)performanceReportSuccessed:(id)arg1;
- (void)configDidUpdate:(id)arg1;
- (void)recordDatabaseSizeAndDevastateIfNeeded;
- (void)cleanup;
@property(readonly, copy, nonatomic) NSString *sessionID;
- (_Bool)isModuleWorkingForName:(id)arg1;
- (void)updateTTMonitorHookSwitchIfNeeded;
- (void)unregisterSyncStartModule:(id)arg1;
- (void)registerSyncStartModule:(id)arg1;
- (void)reportCachedDataDelayAsync;
- (void)setupLocalModuesAsync;
- (void)setupModule:(id)arg1;
- (void)stopModule:(id)arg1;
- (void)updateConfig:(id)arg1;
- (id)moduleWithConfig:(id)arg1;
- (void)setupHMDModulesWithArray:(id)arg1 async:(_Bool)arg2;
- (void)setupUserDefaultModules;
- (void)setupSyncModules;
- (void)setupWithInjectedInfo:(id)arg1;
- (id)database;
- (void)dealloc;
- (id)init;
- (void)cleanupDatabase:(id)arg1 limitSize:(unsigned long long)arg2;
- (void)cleanupDatabaseWithConfig:(id)arg1 tableName:(id)arg2;
- (void)cleanupSessionFilesWithConfig:(id)arg1 path:(id)arg2;
- (void)setupStaticInfo;

@end

