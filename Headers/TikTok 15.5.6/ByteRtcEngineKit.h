//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <ByteRtcEngineKit/ByteAudioDeviceObserver-Protocol.h>
#import <ByteRtcEngineKit/ByteRtcEngineDelegate-Protocol.h>
#import <ByteRtcEngineKit/NetworkManagerDelegate-Protocol.h>

@class ByteRtcLiveTranscoding, ByteVideoCanvasManager, NSArray, NSString, NetworkManager;
@protocol ByteRtcEngineDelegate, ByteVideoSinkProtocol;

@interface ByteRtcEngineKit : NSObject <ByteAudioDeviceObserver, ByteRtcEngineDelegate, NetworkManagerDelegate>
{
    struct ByteRtcEngineEventHandler *_byteRtcEngineEventHandler;
    struct ByteiOSVideoFrameObserver *_byteiOSVideoFrameObserver;
    struct IRtcEngine *_rtcEngine;
    struct ByteRtcAudioDeviceObserverOCC *_byteRtcAudioDeviceObserverOCC;
    _Bool isAudioRoutSpeaker;
    _Bool _isMirrorLocalVideo;
    _Bool _isFirstConnect;
    _Bool _enableRtcVideo;
    _Bool _enableRtcAudio;
    id <ByteRtcEngineDelegate> _delegate;
    CDUnknownBlockType _leaveChannelBlock;
    CDUnknownBlockType _reportCallBack;
    NSString *_appid;
    ByteVideoCanvasManager *_canvasManger;
    NSString *_localUid;
    NSString *_channelName;
    id <ByteVideoSinkProtocol> _localVideoSink;
    long long _nowClientRole;
    ByteRtcLiveTranscoding *_transCoding;
    NetworkManager *_networkManager;
    NSString *_userAgentIP;
    NSString *_signalServerAddr;
    NSString *_mediaServerAddr;
    NSString *_trunkServerAddr;
    NSArray *_configHostsArray;
    NSString *_signalHost;
}

+ (id)createRenderView:(struct CGRect)arg1;
+ (void)sendFeedback:(id)arg1;
+ (void)setFeedbackHost:(id)arg1;
+ (id)getFeedbackContent;
+ (void)setByteLog:(_Bool)arg1 callBack:(CDUnknownBlockType)arg2;
+ (void)setTTMonitorCallBack:(CDUnknownBlockType)arg1;
+ (void)setDeviceId:(id)arg1;
+ (unsigned long long)getSdkVersionNum;
+ (id)getGitCommit;
+ (id)getSdkVersion;
+ (void)setDnsResults:(id)arg1;
+ (void)setEnableUseDefaultSignalingServer:(_Bool)arg1;
+ (void)setApiServerHostWithConfigArray:(id)arg1 signalHost:(id)arg2;
+ (void)destroy;
+ (id)sharedInstance;
+ (id)sharedEngineWithAppId:(id)arg1 delegate:(id)arg2;
@property(nonatomic) _Bool enableRtcAudio; // @synthesize enableRtcAudio=_enableRtcAudio;
@property(nonatomic) _Bool enableRtcVideo; // @synthesize enableRtcVideo=_enableRtcVideo;
@property(nonatomic) _Bool isFirstConnect; // @synthesize isFirstConnect=_isFirstConnect;
@property(retain, nonatomic) NSString *signalHost; // @synthesize signalHost=_signalHost;
@property(retain, nonatomic) NSArray *configHostsArray; // @synthesize configHostsArray=_configHostsArray;
@property(retain, nonatomic) NSString *trunkServerAddr; // @synthesize trunkServerAddr=_trunkServerAddr;
@property(retain, nonatomic) NSString *mediaServerAddr; // @synthesize mediaServerAddr=_mediaServerAddr;
@property(retain, nonatomic) NSString *signalServerAddr; // @synthesize signalServerAddr=_signalServerAddr;
@property(retain, nonatomic) NSString *userAgentIP; // @synthesize userAgentIP=_userAgentIP;
@property(retain, nonatomic) NetworkManager *networkManager; // @synthesize networkManager=_networkManager;
@property(nonatomic) _Bool isMirrorLocalVideo; // @synthesize isMirrorLocalVideo=_isMirrorLocalVideo;
@property(retain, nonatomic) ByteRtcLiveTranscoding *transCoding; // @synthesize transCoding=_transCoding;
@property(nonatomic) long long nowClientRole; // @synthesize nowClientRole=_nowClientRole;
@property(retain, nonatomic) id <ByteVideoSinkProtocol> localVideoSink; // @synthesize localVideoSink=_localVideoSink;
@property(retain, nonatomic) NSString *channelName; // @synthesize channelName=_channelName;
@property(retain, nonatomic) NSString *localUid; // @synthesize localUid=_localUid;
@property(retain, nonatomic) ByteVideoCanvasManager *canvasManger; // @synthesize canvasManger=_canvasManger;
@property(retain, nonatomic) NSString *appid; // @synthesize appid=_appid;
@property(copy, nonatomic) CDUnknownBlockType reportCallBack; // @synthesize reportCallBack=_reportCallBack;
@property(copy, nonatomic) CDUnknownBlockType leaveChannelBlock; // @synthesize leaveChannelBlock=_leaveChannelBlock;
@property(nonatomic) __weak id <ByteRtcEngineDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onNetworkChanged:(long long)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)removeBackgroundObserver;
- (void)initBackgroundObserver;
- (void)notifyErrorCode:(long long)arg1;
- (void)enableSubscribeSelf:(_Bool)arg1;
- (void)setDebugLogCallback:(CDUnknownBlockType)arg1 withFilter:(int)arg2;
- (void)sendCustomMessage:(id)arg1;
- (void)printLogToConsole:(_Bool)arg1;
- (void)channelInviteEndWithChannelName:(id)arg1 phoneNumber:(id)arg2;
- (void)channelInviteDTMFWithChannelName:(id)arg1 phoneNumber:(id)arg2;
- (int)setVideoProfile:(long long)arg1 swapWidthAndHeight:(_Bool)arg2;
- (int)stopAllEffects;
- (int)resumeAllEffects;
- (int)pauseAllEffects;
- (int)unloadAllEffects;
- (int)setEffectsVolume:(long long)arg1;
- (int)stopEffect:(long long)arg1;
- (int)resumeEffect:(long long)arg1;
- (int)pauseEffect:(long long)arg1;
- (int)unloadEffect:(long long)arg1;
- (int)preloadEffect:(long long)arg1 filePath:(id)arg2;
- (int)playEffect:(long long)arg1 filePath:(id)arg2 loopback:(_Bool)arg3 cycle:(long long)arg4 withVolume:(long long)arg5;
- (int)getEffectVolume:(long long)arg1;
- (int)setVolumeOfEffect:(long long)arg1 withVolume:(long long)arg2;
- (int)adjustAudioMixingPublishVolume:(long long)arg1;
- (int)adjustAudioMixingPlayoutVolume:(long long)arg1;
- (int)setAudioMixingPosition:(long long)arg1;
- (int)startAudioMixing:(id)arg1 loopback:(_Bool)arg2 replace:(_Bool)arg3 cycle:(long long)arg4;
- (int)adjustAudioMixingVolume:(long long)arg1;
- (int)resumeAudioMixing;
- (int)pauseAudioMixing;
- (int)stopAudioMixing;
- (int)getAudioMixingCurrentPosition;
- (int)getAudioMixingDuration;
- (void)oneClickForHelpWithMessage:(id)arg1;
- (long long)sendMessage:(id)arg1 message:(id)arg2;
- (_Bool)pullExternalAudioFrame:(void *)arg1 frameNum:(int)arg2;
- (_Bool)pushExternalAudioFrame:(void *)arg1 frameNum:(int)arg2;
- (_Bool)setAudioDeviceObserver:(id)arg1;
- (_Bool)pushAudioMixingStreamData:(void *)arg1 frameNum:(int)arg2;
- (int)getAudioMixingStreamCachedFrameNum;
- (_Bool)SetAudioPlayoutMixStream:(_Bool)arg1 sampleRate:(int)arg2 channelNum:(int)arg3;
- (_Bool)setExternalAudioDevice:(_Bool)arg1 sampleRate:(int)arg2 recordChannelNum:(int)arg3 playoutChannelNum:(int)arg4;
- (_Bool)pushExternalVideoFrame:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2 rotation:(long long)arg3 extendedData:(id)arg4 cropLeft:(int)arg5 cropTop:(int)arg6 cropRight:(int)arg7 cropBottom:(int)arg8;
- (_Bool)pushExternalByteVideoFrame:(id)arg1;
- (_Bool)pushExternalVideoFrame:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2 rotation:(long long)arg3 extendedData:(id)arg4;
- (_Bool)pushExternalVideoFrame:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2 rotation:(long long)arg3;
- (_Bool)pushExternalVideoFrame:(struct __CVBuffer *)arg1 time:(CDStruct_1b6d18a9)arg2;
- (void)setExternalVideoSource:(_Bool)arg1 useTexture:(_Bool)arg2 pushMode:(_Bool)arg3;
- (int)setVideoCompositingLayout:(id)arg1;
- (int)disableLiveTranscoding;
- (int)enableLiveTranscoding:(id)arg1;
- (id)TransCodeProfiletoJson:(id)arg1 Action:(id)arg2;
- (int)enableInEarMonitoring:(_Bool)arg1;
- (_Bool)isSpeakerphoneEnabled;
- (int)setEnableSpeakerphone:(_Bool)arg1;
- (int)setDefaultAudioRouteToSpeakerphone:(_Bool)arg1;
- (void)unSubscribeStream:(id)arg1;
- (void)subscribeStream:(id)arg1 subscribeConfig:(id)arg2;
- (_Bool)enableAutoSubscribe:(_Bool)arg1;
- (int)switchCamera;
- (int)setLocalVideoMirrorMode:(unsigned long long)arg1;
- (void)setDefaultMuteAllRemoteVideoStreams:(_Bool)arg1;
- (int)muteAllRemoteVideoStreams:(_Bool)arg1;
- (int)muteRemoteVideoStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalVideoStream:(_Bool)arg1;
- (int)enableLocalVideo:(_Bool)arg1;
- (int)stopPreview;
- (int)startPreview;
- (int)setupRemoteScreen:(id)arg1;
- (int)setupRemoteVideo:(id)arg1;
- (int)setupLocalVideo:(id)arg1;
- (long long)setVideoResolutions:(id)arg1 orientationMode:(long long)arg2;
- (long long)setVideoResolutions:(id)arg1;
- (int)setVideoResolution:(struct CGSize)arg1 andFrameRate:(long long)arg2 maxKbps:(long long)arg3 orientationMode:(long long)arg4;
- (int)setVideoResolution:(struct CGSize)arg1 andFrameRate:(long long)arg2 maxKbps:(long long)arg3;
- (int)setupRemoteScreenRenderer:(id)arg1 forUserId:(id)arg2;
- (int)setRemoteVideoRenderer:(id)arg1 forUserId:(id)arg2;
- (int)setLocalVideoRenderer:(id)arg1;
- (int)disableVideo;
- (int)enableVideo;
- (int)adjustPlaybackSignalVolume:(long long)arg1;
- (int)adjustRecordingSignalVolume:(long long)arg1;
- (int)enableAudioVolumeIndication:(long long)arg1 smooth:(long long)arg2;
- (void)setDefaultMuteAllRemoteAudioStreams:(_Bool)arg1;
- (int)muteAllRemoteAudioStreams:(_Bool)arg1;
- (int)muteRemoteAudioStream:(id)arg1 mute:(_Bool)arg2;
- (int)muteLocalAudioStream:(_Bool)arg1;
- (int)enableLocalAudio:(_Bool)arg1;
- (int)disableAudio;
- (int)enableAudio;
- (int)renewChannelKey:(id)arg1;
- (int)leaveChannel:(CDUnknownBlockType)arg1;
- (int)leaveChannelInternal;
- (void)resetValue;
- (int)joinChannelByKey:(id)arg1 channelName:(id)arg2 info:(id)arg3 uid:(id)arg4 traceid:(id)arg5;
- (int)joinChannelByKey:(id)arg1 channelName:(id)arg2 info:(id)arg3 uid:(id)arg4;
- (id)getDefaultTokenWithAppid:(id)arg1 ChannelName:(id)arg2 UserID:(id)arg3;
- (long long)clientRole;
- (_Bool)setClientRole:(long long)arg1;
- (int)setChannelProfile:(long long)arg1;
- (void)setClientProperty:(id)arg1;
- (void)destroyResource;
- (void)dealloc;
- (void)onAudioDevicePlayoutStop;
- (void)onAudioDevicePlayoutStart;
- (void)onAudioDeviceRecordStop;
- (void)onAudioDeviceRecordStart;
@property(retain, nonatomic) id audioDeviceObserverDelegate;
- (void)onleaveChannel:(id)arg1;
- (void)rtcEngine:(id)arg1 TransCodingWithUrl:(id)arg2 errorCode:(long long)arg3;
- (void)rtcEngineDidAudioEffectFinish:(id)arg1 soundId:(long long)arg2;
- (void)rtcEngineLocalAudioMixingDidFinish:(id)arg1;
- (void)rtcEngine:(id)arg1 audioQualityOfUid:(id)arg2 quality:(unsigned long long)arg3 delay:(unsigned long long)arg4 lost:(unsigned long long)arg5;
- (void)rtcEngine:(id)arg1 log:(id)arg2;
- (void)rtcEngine:(id)arg1 didMessageSendResult:(long long)arg2 error:(long long)arg3;
- (void)rtcEngine:(id)arg1 didMessageReceived:(id)arg2 message:(id)arg3;
- (void)rtcEngine:(id)arg1 remoteAudioStats:(id)arg2;
- (void)rtcEngine:(id)arg1 localAudioStats:(id)arg2;
- (void)rtcEngine:(id)arg1 remoteVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 localVideoStats:(id)arg2;
- (void)rtcEngine:(id)arg1 networkQuality:(id)arg2;
- (void)rtcEngine:(id)arg1 networkQuality:(id)arg2 txQuality:(unsigned long long)arg3 rxQuality:(unsigned long long)arg4;
- (void)rtcEngine:(id)arg1 reportRtcStats:(id)arg2;
- (void)rtcEngine:(id)arg1 didCustomMessage:(id)arg2;
- (void)rtcEngine:(id)arg1 didAudioRouteChanged:(long long)arg2;
- (void)rtcEngine:(id)arg1 didStreamRemoved:(id)arg2 stream:(id)arg3;
- (void)rtcEngine:(id)arg1 onStreamSubscribed:(long long)arg2 streamID:(id)arg3 subscribeConfig:(id)arg4;
- (void)rtcEngine:(id)arg1 onStreamAdd:(id)arg2;
- (void)rtcEngine:(id)arg1 firstLocalAudioFrame:(long long)arg2;
- (void)rtcEngine:(id)arg1 remoteVideoStateChangedOfUid:(id)arg2 state:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteScreenDecodedOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteScreenFrameOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstRemoteVideoDecodedOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 videoSizeChangedOfUid:(id)arg2 size:(struct CGSize)arg3 rotation:(long long)arg4;
- (void)rtcEngine:(id)arg1 videoSizeChangedOfUid:(id)arg2 size:(struct CGSize)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteVideoFrameOfUid:(id)arg2 size:(struct CGSize)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 firstLocalVideoFrameWithSize:(struct CGSize)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didLocalVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didVideoEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 reportAudioVolumeIndicationOfSpeakers:(id)arg2 totalVolume:(long long)arg3;
- (void)rtcEngine:(id)arg1 firstRemoteAudioFrameOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didLocalAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioMuted:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didAudioEnabled:(_Bool)arg2 byUid:(id)arg3;
- (void)rtcEngine:(id)arg1 didPublishSucceedOfStream:(id)arg2;
- (void)rtcEngine:(id)arg1 didOfflineOfUid:(id)arg2 reason:(unsigned long long)arg3;
- (void)rtcEngine:(id)arg1 didJoinedOfUid:(id)arg2 elapsed:(long long)arg3;
- (void)rtcEngine:(id)arg1 didRejoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngine:(id)arg1 didJoinChannel:(id)arg2 withUid:(id)arg3 elapsed:(long long)arg4;
- (void)rtcEngineConnectionDidLost:(id)arg1;
- (void)rtcEngineConnectionDidInterrupted:(id)arg1;
- (void)rtcEngine:(id)arg1 didOccurError:(long long)arg2;
- (void)rtcEngine:(id)arg1 didOccurWarning:(long long)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

