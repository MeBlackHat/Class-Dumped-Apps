//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "HMDLimitReportDataSizeToolDelegate-Protocol.h"

@class HMDReportLimitSizeTool, NSArray, NSMutableSet, NSString, NSTimer;
@protocol HMDNetworkProvider, OS_dispatch_queue;

@interface HMDPerformanceReporter : NSObject <HMDLimitReportDataSizeToolDelegate>
{
    // Error parsing type: AI, name: _pendingCount
    _Bool _needEncrypt;
    _Bool _isSDKReporter;
    _Bool _isUploading;
    long long _reportMaxLogCount;
    double _reportPollingInterval;
    NSString *_sdkAid;
    NSString *_appID;
    NSMutableSet *_performanceModules;
    NSObject<OS_dispatch_queue> *_reportorQueue;
    id <HMDNetworkProvider> _provider;
    NSTimer *_autoReportTimer;
    HMDReportLimitSizeTool *_reporSizeLimitTool;
    double _sizeLimitAvailableTime;
}

@property double sizeLimitAvailableTime; // @synthesize sizeLimitAvailableTime=_sizeLimitAvailableTime;
@property _Bool isUploading; // @synthesize isUploading=_isUploading;
@property(retain, nonatomic) HMDReportLimitSizeTool *reporSizeLimitTool; // @synthesize reporSizeLimitTool=_reporSizeLimitTool;
@property(retain, nonatomic) NSTimer *autoReportTimer; // @synthesize autoReportTimer=_autoReportTimer;
@property(retain, nonatomic) id <HMDNetworkProvider> provider; // @synthesize provider=_provider;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *reportorQueue; // @synthesize reportorQueue=_reportorQueue;
@property(retain, nonatomic) NSMutableSet *performanceModules; // @synthesize performanceModules=_performanceModules;
@property(copy, nonatomic) NSString *appID; // @synthesize appID=_appID;
@property(nonatomic) _Bool isSDKReporter; // @synthesize isSDKReporter=_isSDKReporter;
@property(copy, nonatomic) NSString *sdkAid; // @synthesize sdkAid=_sdkAid;
@property(nonatomic) double reportPollingInterval; // @synthesize reportPollingInterval=_reportPollingInterval;
@property(nonatomic) long long reportMaxLogCount; // @synthesize reportMaxLogCount=_reportMaxLogCount;
@property(nonatomic) _Bool needEncrypt; // @synthesize needEncrypt=_needEncrypt;
- (void).cxx_destruct;
- (void)performanceDataSizeOutOfThreshold;
- (void)handleBackgroundNotification:(id)arg1;
- (void)checkErrorCodeAndDebugRealWithResponse:(id)arg1 statusCode:(long long)arg2 block:(CDUnknownBlockType)arg3;
- (void)cleanupWithConfig:(id)arg1;
- (id)allDebugRealPeformanceDataWithConfig:(id)arg1;
- (void)excuteCloudCommandIfAvailable:(id)arg1;
- (void)_reportDebugRealPerformanceDataWithConfig:(id)arg1;
- (void)reportDebugRealPerformanceDataWithConfig:(id)arg1;
- (void)_recordPerfomanceReportMemoryAfterWithModules:(id)arg1;
- (void)_recordPerformanceReportMemoryBefore;
- (void)_sizeLimitedTimeAvaliableWithBody:(id)arg1;
- (id)_dataArrayForImmediatelyUploadeWithAddedMoudle:(id)arg1 modules:(id)arg2;
- (id)_dataArrayForSizeLimitedReportWithAddedMoudle:(id)arg1 modules:(id)arg2;
- (id)_metricTimerForNormalReportWithAddedMoudle:(id)arg1 modules:(id)arg2;
- (id)_metricCountForNormalReportWithAddedMoudle:(id)arg1 modules:(id)arg2;
- (id)_dataArrayForNormalReportWithAddedMoudle:(id)arg1 modules:(id)arg2;
- (void)_reportPerformanceDataWithBlock:(CDUnknownBlockType)arg1 reporterType:(unsigned long long)arg2;
- (void)reportImmediatelyPerformanceCacheDataWithBlock:(CDUnknownBlockType)arg1;
- (void)resetFlushTimer;
- (void)reportPerformanceDataAsyncWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)checkServerAvailable;
- (void)autoReportPerformanceData:(id)arg1;
- (void)stopCollectFlushTimer;
- (void)startCollectFlushTimer;
- (void)updateRecordCount:(long long)arg1;
- (void)updateConfig:(id)arg1;
@property(readonly, nonatomic) NSArray *allReportingModules;
- (void)removeReportModule:(id)arg1;
- (void)addReportModule:(id)arg1;
- (void)dealloc;
- (id)init;
- (id)initWithProvider:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

