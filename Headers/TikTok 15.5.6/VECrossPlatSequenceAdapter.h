//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "VEUnitObject.h"

#import "IVEInfoStickerPinProtocol-Protocol.h"
#import "IVESequenceBinProtocol-Protocol.h"
#import "IVEUnitObject-Protocol.h"
#import "VEProcessSampleDelegate-Protocol.h"

@class HTSGLContext, HTSVideoData, IESVideoAddEdgeData, NSMutableArray, NSMutableDictionary, NSObject, NSString, VEInfoStickerData;
@protocol OS_dispatch_semaphore;

@interface VECrossPlatSequenceAdapter : VEUnitObject <VEProcessSampleDelegate, IVEUnitObject, IVESequenceBinProtocol, IVEInfoStickerPinProtocol>
{
    struct IVESequenceBinAdaptor *sequenceBin_;
    // Error parsing type: ^{TTVideoEditor=^^?BBB^{TEStreamingTimeline}^{TESequence}^{TEStreamingEngine}^{TEStreamingEngine}{atomic_flag=AB}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}{map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char> > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char> >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}{basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >={__compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> >={__rep=(?={__long=*QQ}{__short=[23c]{?=C}}{__raw=[3Q]})}}}iii^qi^{TEBundle}ii^{ITECallbackClient}^{ITECallbackClient}^{ITECallbackClient}{TEFilterManager=I{map<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> >, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > > > >={__tree<std::__1::__value_type<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::less<unsigned int>, true> >=Q}}}{map<unsigned int, TEFilter *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, TEFilter *> > >={__tree<std::__1::__value_type<unsigned int, TEFilter *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TEFilter *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, TEFilter *> > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, TEFilter *>, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, TEFilter *>, std::__1::less<unsigned int>, true> >=Q}}}{map<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> >, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > > > >={__tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::less<std::__1::basic_string<char> >, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > > > >=^{__tree_end_node<std::__1::__tree_node_base<void *> *>}{__compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, void *> > >={__tree_end_node<std::__1::__tree_node_base<void *> *>=^{__tree_node_base<void *>}}}{__compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::vector<TEFilter *, std::__1::allocator<TEFilter *> > >, std::__1::less<std::__1::basic_string<char> >, true> >=Q}}}^{TESequence}}fBBBBBBB{deque<char *, std::__1::allocator<char *> >={__split_buffer<char **, std::__1::allocator<char **> >=^^*^^*^^*{__compressed_pair<char ***, std::__1::allocator<char **> >=^^*}}Q{__compressed_pair<unsigned long, std::__1::allocator<char *> >=Q}}{deque<double, std::__1::allocator<double> >={__split_buffer<double *, std::__1::allocator<double *> >=^^d^^d^^d{__compressed_pair<double **, std::__1::allocator<double *> >=^^d}}Q{__compressed_pair<unsigned long, std::__1::allocator<double> >=Q}}iBqqi^{VideoCompileEncodeSetting}^{VideoCompileEncodeSetting}B^{TEStickerEffect}B^{MV_INFO}^{MV_AUDIO_INFO}^viBB^{thread}B^{TEBingoEffect}}, name: videoEditor_
    NSObject<OS_dispatch_semaphore> *msgSemaphore_;
    _Bool bUseWaterMark_;
    _Bool bUseSticker_;
    struct CGSize viewContainerSize_;
    struct CGSize storyFrameSize_;
    unsigned long long fillMode_;
    _Bool _bUseFilter;
    IESVideoAddEdgeData *_edgeBeforeSticker;
    CDUnknownBlockType _imageBlock;
    NSString *_route;
    HTSGLContext *_context;
    HTSVideoData *_videoData;
    VEInfoStickerData *_infoStickerData;
    NSMutableDictionary *_filterIndexDic;
    CDUnknownBlockType _stickerAddBlock;
    NSString *_letterInfo;
    NSMutableArray *_brushIDArray;
    struct CGSize _outputVideoSize;
    struct CGSize _previewSize;
}

@property(retain, nonatomic) NSMutableArray *brushIDArray; // @synthesize brushIDArray=_brushIDArray;
@property(retain, nonatomic) NSString *letterInfo; // @synthesize letterInfo=_letterInfo;
@property(copy, nonatomic) CDUnknownBlockType stickerAddBlock; // @synthesize stickerAddBlock=_stickerAddBlock;
@property(nonatomic) struct CGSize previewSize; // @synthesize previewSize=_previewSize;
@property(retain, nonatomic) NSMutableDictionary *filterIndexDic; // @synthesize filterIndexDic=_filterIndexDic;
@property(nonatomic) struct CGSize outputVideoSize; // @synthesize outputVideoSize=_outputVideoSize;
@property(nonatomic) _Bool bUseFilter; // @synthesize bUseFilter=_bUseFilter;
@property(retain, nonatomic) VEInfoStickerData *infoStickerData; // @synthesize infoStickerData=_infoStickerData;
@property(retain, nonatomic) HTSVideoData *videoData; // @synthesize videoData=_videoData;
@property(retain, nonatomic) HTSGLContext *context; // @synthesize context=_context;
@property(retain, nonatomic) NSString *route; // @synthesize route=_route;
@property(copy, nonatomic) CDUnknownBlockType imageBlock; // @synthesize imageBlock=_imageBlock;
@property(retain, nonatomic) IESVideoAddEdgeData *edgeBeforeSticker; // @synthesize edgeBeforeSticker=_edgeBeforeSticker;
- (void).cxx_destruct;
- (id)getProcessInfo;
- (void)stopAllStickerAnimAbsoluteUpdate;
- (int)setStickerAnim:(long long)arg1 animType:(int)arg2 animPath:(id)arg3 duration:(double)arg4;
- (long long)addEmojiSticker:(id)arg1;
- (void)setStickerLayer:(long long)arg1 layer:(long long)arg2;
- (void)removeStickerWithKey:(id)arg1;
- (void)addSticker:(id)arg1;
- (long long)addStickerbyUIImage:(id)arg1 letterInfo:(id)arg2;
- (void)p_updateVideoSize;
- (void)setWaterMarkData:(id)arg1 background:(id)arg2;
- (void)setPreviewFillMode:(unsigned long long)arg1;
- (void)setCropInfo:(id)arg1;
- (void)p_setBeforeStickerAddEdgeInfo:(id)arg1;
- (void)setAddEdgeInfo:(id)arg1;
- (void)resetTargetVideoSize;
- (void)setTargetVideoSize:(struct CGSize)arg1;
- (struct CGSize)getNewFrameSize;
- (void)updateSticker:(long long)arg1;
- (long long)addSubtitleSticker;
- (int)setStickerPreviewMode:(long long)arg1 previewMode:(int)arg2;
- (int)setTextStickerAnim:(long long)arg1 animType:(int)arg2 animPath:(id)arg3 duration:(double)arg4;
- (int)setTextStickerTextParams:(long long)arg1 textParams:(id)arg2;
- (long long)addTextSticker;
- (void)getSrtOffset:(long long)arg1 offsetX:(float *)arg2 offsetY:(float *)arg3;
- (void)setSrtInitialPos:(long long)arg1 posX:(double)arg2 posY:(double)arg3;
- (void)setSrtAudioInfo:(long long)arg1 seqIn:(double)arg2 trimIn:(double)arg3 duration:(double)arg4 audioCycle:(_Bool)arg5;
- (void)setSrtManipulate:(long long)arg1 state:(_Bool)arg2;
- (void)setSrtFont:(long long)arg1 fontPath:(id)arg2;
- (void)setSrtInfo:(long long)arg1 srt:(id)arg2;
- (void)setSrtColor:(long long)arg1 red:(double)arg2 green:(double)arg3 blue:(double)arg4 alpha:(double)arg5;
- (long long)getStickerPinStatus:(long long)arg1;
- (void)recoveryPinResult:(long long)arg1;
- (void)savePinResult:(long long)arg1;
- (struct CGSize)p_getVideoRealSize;
- (void)cancelPin:(long long)arg1;
- (void)stopPin:(long long)arg1;
- (int)startPin:(long long)arg1 pinTime:(float)arg2 startTime:(float)arg3 duration:(float)arg4;
- (void)preparePin:(CDStruct_1b6d18a9)arg1;
- (void)setInfoStickerRestoreMode:(long long)arg1;
- (id)getStickerById:(long long)arg1;
- (float)getStickerAlpha:(long long)arg1;
- (_Bool)getStickerVisible:(long long)arg1;
- (struct CGPoint)getStickerPosition:(long long)arg1;
- (double)getStickerRotation:(long long)arg1;
- (id)getInfoStickers;
- (_Bool)isAnimationSticker:(long long)arg1;
- (void)stopChangeStickerDuration:(long long)arg1;
- (void)startChangeStickerDuration:(long long)arg1;
- (void)getSticker:(long long)arg1 props:(id)arg2;
- (void)p_updateStickerLayer:(long long)arg1 layer:(long long)arg2;
- (void)setStickerAbove:(long long)arg1;
- (void)setSticker:(long long)arg1 startTime:(double)arg2 duration:(double)arg3;
- (void)setSticker:(long long)arg1 alpha:(double)arg2;
- (void)setSticker:(long long)arg1 pauseAnimation:(_Bool)arg2;
- (void)setStickerScale:(long long)arg1 scale:(double)arg2;
- (void)setSticker:(long long)arg1 flipX:(_Bool)arg2 flipY:(_Bool)arg3;
- (void)setStickerNormaliz:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3 angle:(double)arg4 scale:(double)arg5;
- (void)setSticker:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3 angle:(double)arg4 scale:(double)arg5;
- (void)p_setStickerNormaliz:(long long)arg1 offsetX:(double)arg2 offsetY:(double)arg3;
- (void)removeInfoSticker:(long long)arg1;
- (struct tagSTERectF)p_getstickerEditBoundBoxWithScale:(long long)arg1;
- (struct CGRect)getstickerEditBoundBox:(long long)arg1;
- (struct CGSize)getInfoStickerSize:(long long)arg1;
- (struct CGSize)getstickerEditBoxSizeNormaliz:(long long)arg1;
- (struct CGSize)getstickerEditBoxSize:(long long)arg1;
- (long long)addInfoSticker:(id)arg1 withEffectInfo:(id)arg2 userInfo:(id)arg3;
- (long long)currentBrushNumber;
- (void)setBrushCanvasAlpha:(double)arg1;
- (void)setBrushSize:(double)arg1;
- (void)setBrushColorWithRed:(double)arg1 green:(double)arg2 blue:(double)arg3 alpah:(double)arg4;
- (void)removeLastBrush;
- (_Bool)brushStart;
- (_Bool)brushEnd;
- (_Bool)handleTouchUp:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (_Bool)handleTouchEvent:(struct CGPoint)arg1;
- (_Bool)handleTouchDown:(struct CGPoint)arg1 withType:(unsigned long long)arg2;
- (_Bool)handleScaleEvent:(double)arg1;
- (_Bool)handleRotationEvent:(double)arg1;
- (_Bool)handleLongPressEventWithLocation:(struct CGPoint)arg1;
- (_Bool)handlePanEventWithTranslation:(struct CGPoint)arg1 location:(struct CGPoint)arg2;
- (void)p_updatePreviewSizeByVideoSize:(struct CGSize)arg1;
- (void)p_postMessage:(struct TEMsg *)arg1;
- (void)p_syncMsgDone;
- (void)p_syncMsgWait;
- (void)p_setFrameSize:(struct CGSize)arg1;
- (void)p_restoreInfoSticker:(id)arg1;
- (void)setConfig:(id)arg1 updateVideoDataType:(long long)arg2;
- (void)setEditorAdapter:(struct VEEditorAdapter *)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

