//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLLocationManagerDelegate-Protocol.h"

@class CLLocationManager, NSMapTable, NSMutableArray, NSMutableSet, NSString;

@interface BDUGLocationManager : NSObject <CLLocationManagerDelegate>
{
    _Bool _isAuthorizationRequest;
    _Bool _geocoding;
    _Bool _debug;
    long long _headingOrientation;
    CLLocationManager *_discreteLocationManager;
    CLLocationManager *_continuesLocationManager;
    NSMapTable *_subscriptionMap;
    NSMapTable *_headingSubscriptionMap;
    NSMutableArray *_singleLocationRequests;
    CDUnknownBlockType _authorizationCompletion;
    NSMutableSet *_geocoders;
    NSMutableArray *_geocodeBlocks;
    struct CLLocationCoordinate2D _customCoordinate;
}

+ (_Bool)headingAvailable;
+ (_Bool)isAuthorizationStatusEnabled;
+ (long long)currentLocationAuthorizationStatus;
+ (id)sharedManager;
@property(nonatomic) struct CLLocationCoordinate2D customCoordinate; // @synthesize customCoordinate=_customCoordinate;
@property(nonatomic, getter=isDebug) _Bool debug; // @synthesize debug=_debug;
@property(nonatomic, getter=isGeocoding) _Bool geocoding; // @synthesize geocoding=_geocoding;
@property(retain, nonatomic) NSMutableArray *geocodeBlocks; // @synthesize geocodeBlocks=_geocodeBlocks;
@property(retain, nonatomic) NSMutableSet *geocoders; // @synthesize geocoders=_geocoders;
@property(copy, nonatomic) CDUnknownBlockType authorizationCompletion; // @synthesize authorizationCompletion=_authorizationCompletion;
@property(retain, nonatomic) NSMutableArray *singleLocationRequests; // @synthesize singleLocationRequests=_singleLocationRequests;
@property(retain, nonatomic) NSMapTable *headingSubscriptionMap; // @synthesize headingSubscriptionMap=_headingSubscriptionMap;
@property(retain, nonatomic) NSMapTable *subscriptionMap; // @synthesize subscriptionMap=_subscriptionMap;
@property(retain, nonatomic) CLLocationManager *continuesLocationManager; // @synthesize continuesLocationManager=_continuesLocationManager;
@property(retain, nonatomic) CLLocationManager *discreteLocationManager; // @synthesize discreteLocationManager=_discreteLocationManager;
@property(nonatomic) long long headingOrientation; // @synthesize headingOrientation=_headingOrientation;
- (void).cxx_destruct;
- (void)locationManager:(id)arg1 didUpdateHeading:(id)arg2;
- (void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2;
- (void)locationManager:(id)arg1 didFailWithError:(id)arg2;
- (void)locationManager:(id)arg1 didUpdateLocations:(id)arg2;
- (_Bool)_stopUpdatingContinuousLocationIfNeeded;
- (_Bool)_stopUpdatingHeadingIfNeeded;
- (_Bool)_locationIsValid:(id)arg1;
- (void)_reverseGeocodeLocation:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_processContinueLocationRequestsWithLocation:(id)arg1 withError:(id)arg2;
- (void)_processSingleLocationRequestsWithLocation:(id)arg1 withError:(id)arg2;
- (void)_makeLocationInfoToCallbackWithLocation:(id)arg1 request:(id)arg2 results:(id)arg3;
- (void)_updateMaxDesiredAccuracy:(long long)arg1;
- (id)_errorWithAuthorizationStatus:(long long)arg1;
- (void)_removeRequest:(id)arg1;
- (void)setCustomLatitude:(double)arg1 longitude:(double)arg2;
- (void)unsubscribeToHeadingUpdatesForTarget:(id)arg1;
- (void)subscribeToHeadingUpdatesForTarget:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)unsubscribeToLocationUpdatesForTarget:(id)arg1;
- (void)subscribeToLocationUpdatesForTarget:(id)arg1 geocoders:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)cancelLocationRequest:(long long)arg1;
- (long long)requestLocationWithDesiredAccuracy:(long long)arg1 geocoders:(id)arg2 timeout:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)requestWhenInUseAuthorizationWithCompletion:(CDUnknownBlockType)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

