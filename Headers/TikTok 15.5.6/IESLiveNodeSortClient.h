//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class IESLiveDNSResolver, IESLiveNodeSortSettingModel, IESLiveNodeSorter, NSMutableDictionary;
@protocol IESLiveNodeSortConfig;

@interface IESLiveNodeSortClient : NSObject
{
    _Bool _enbleBreakup;
    IESLiveDNSResolver *_dnsResolver;
    IESLiveNodeSorter *_nodeSorter;
    NSMutableDictionary *_hostToLocalBestIPList;
    NSMutableDictionary *_hostToCloudBestIPList;
    NSMutableDictionary *_hostToCompletionBlock;
    NSMutableDictionary *_hostToCurrentIPIndex;
    NSMutableDictionary *_hostToIsPinging;
    IESLiveNodeSortSettingModel *_settingModel;
    id <IESLiveNodeSortConfig> _config;
    long long _breakupTimeStamp;
}

@property(nonatomic) long long breakupTimeStamp; // @synthesize breakupTimeStamp=_breakupTimeStamp;
@property(nonatomic) _Bool enbleBreakup; // @synthesize enbleBreakup=_enbleBreakup;
@property(retain, nonatomic) id <IESLiveNodeSortConfig> config; // @synthesize config=_config;
@property(retain, nonatomic) IESLiveNodeSortSettingModel *settingModel; // @synthesize settingModel=_settingModel;
@property(retain, nonatomic) NSMutableDictionary *hostToIsPinging; // @synthesize hostToIsPinging=_hostToIsPinging;
@property(retain, nonatomic) NSMutableDictionary *hostToCurrentIPIndex; // @synthesize hostToCurrentIPIndex=_hostToCurrentIPIndex;
@property(retain, nonatomic) NSMutableDictionary *hostToCompletionBlock; // @synthesize hostToCompletionBlock=_hostToCompletionBlock;
@property(retain, nonatomic) NSMutableDictionary *hostToCloudBestIPList; // @synthesize hostToCloudBestIPList=_hostToCloudBestIPList;
@property(retain, nonatomic) NSMutableDictionary *hostToLocalBestIPList; // @synthesize hostToLocalBestIPList=_hostToLocalBestIPList;
@property(retain, nonatomic) IESLiveNodeSorter *nodeSorter; // @synthesize nodeSorter=_nodeSorter;
@property(retain, nonatomic) IESLiveDNSResolver *dnsResolver; // @synthesize dnsResolver=_dnsResolver;
- (void).cxx_destruct;
- (_Bool)isEmptyString:(id)arg1;
- (id)randomIPFromList:(id)arg1;
- (id)ipListForHost:(id)arg1;
- (void)pingIPList:(id)arg1 host:(id)arg2;
- (id)nextIPForHost:(id)arg1;
- (id)nextIPForURLString:(id)arg1;
- (id)bestIPForHost:(id)arg1;
- (id)bestIPForURLString:(id)arg1;
- (void)startMesureHost:(id)arg1;
- (void)startMeasureHost:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)startMesureHostList:(id)arg1;
- (id)initWithConfig:(id)arg1;

@end

