//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "AWEIMInteractNotificationManagerProtocol-Protocol.h"
#import "AWEIMUnreadCountChangeDelegate-Protocol.h"
#import "AWESettingsComboRequestProtocol-Protocol.h"
#import "AWEUserMessage-Protocol.h"

@class AWEIMUnreadCountChangeObject, NSArray, NSDictionary, NSNumber, NSString;

@interface AWEIMInteractNotificationManager : NSObject <AWESettingsComboRequestProtocol, AWEIMUnreadCountChangeDelegate, AWEUserMessage, AWEIMInteractNotificationManagerProtocol>
{
    _Bool hasNewInteractMessage;
    _Bool _isFetchFollowRequestOnAir;
    _Bool _isFetchStoryRequestOnAir;
    long long incomingFriendCount;
    long long followingFeedCount;
    long long commentMeCount;
    long long atMeCount;
    long long commentMeAtAndVoteCount;
    long long likeMeCount;
    long long newFansCount;
    long long strangerCount;
    long long assistantCount;
    long long imMessageCount;
    long long followingRecommendCount;
    long long createAwemeCount;
    long long duetCount;
    long long followRequestCount;
    long long approveFollowRequestCount;
    long long feedbackCount;
    long long systemCount;
    long long shoppingCount;
    long long walletAssistantCount;
    long long adCount;
    long long oneDayInteractCount;
    long long oneDayLatestCount;
    long long friendTabUnreadCount;
    long long followingTabUnreadCount;
    long long storyTabUnreadCount;
    long long lubanAdCount;
    long long imLiteMessageCount;
    long long starAtlasCount;
    long long linkCount;
    long long lifeServiceCount;
    long long storyTabColdStartCount;
    NSArray *followTabNotices;
    long long newFollowingTabUnreadCount;
    long long liveCount;
    long long voteCount;
    NSNumber *followLiveChannel;
    NSNumber *followVideoChannel;
    NSNumber *friendVideoChannel;
    NSString *noticeCountRequestID;
    long long noticeCountType;
    NSString *pushAwemeID;
    NSString *pushAuthorID;
    long long serverStrangerCount;
    long long fansPushCount;
    long long blockUrgeSetting;
    long long hasUrged;
    NSNumber *latestLiveTime;
    NSNumber *latestVideoTime;
    long long douplusCount;
    long long familiarCount;
    long long gamePushCount;
    long long accountMigrateCount;
    long long TCMCount;
    long long creatorMonetizationCount;
    long long commentAtLikeCount;
    long long XSAssistantCount;
    long long tutorialVideoCount;
    long long followingLiveCount;
    NSDictionary *_comboRequestResult;
    double _lastTimestamp;
    NSDictionary *_multiUserNoticeCountMap;
    NSString *_previousStoryID;
    AWEIMUnreadCountChangeObject *_strangerUnreadCountObj;
    unsigned long long _currentType;
    AWEIMUnreadCountChangeObject *_notiTabUnreadCountObj;
    long long _dotUnreadCount;
}

+ (id)keyPathsForValuesAffectingCommentAtLikeCount;
+ (id)keyPathsForValuesAffectingCommentMeAtAndVoteCount;
+ (id)keyPathsForValuesAffectingNoticeTabbarUnreadCount;
+ (id)sharedInstance;
@property(nonatomic) long long dotUnreadCount; // @synthesize dotUnreadCount=_dotUnreadCount;
@property(retain, nonatomic) AWEIMUnreadCountChangeObject *notiTabUnreadCountObj; // @synthesize notiTabUnreadCountObj=_notiTabUnreadCountObj;
@property(nonatomic) unsigned long long currentType; // @synthesize currentType=_currentType;
@property(retain, nonatomic) AWEIMUnreadCountChangeObject *strangerUnreadCountObj; // @synthesize strangerUnreadCountObj=_strangerUnreadCountObj;
@property(retain, nonatomic) NSString *previousStoryID; // @synthesize previousStoryID=_previousStoryID;
@property(nonatomic) _Bool isFetchStoryRequestOnAir; // @synthesize isFetchStoryRequestOnAir=_isFetchStoryRequestOnAir;
@property(nonatomic) _Bool isFetchFollowRequestOnAir; // @synthesize isFetchFollowRequestOnAir=_isFetchFollowRequestOnAir;
@property(copy, nonatomic) NSDictionary *multiUserNoticeCountMap; // @synthesize multiUserNoticeCountMap=_multiUserNoticeCountMap;
@property(nonatomic) double lastTimestamp; // @synthesize lastTimestamp=_lastTimestamp;
@property(copy, nonatomic) NSDictionary *comboRequestResult; // @synthesize comboRequestResult=_comboRequestResult;
@property(nonatomic) long long followingLiveCount; // @synthesize followingLiveCount;
@property(nonatomic) long long tutorialVideoCount; // @synthesize tutorialVideoCount;
@property(nonatomic) long long XSAssistantCount; // @synthesize XSAssistantCount;
@property(nonatomic) long long commentAtLikeCount; // @synthesize commentAtLikeCount;
@property(nonatomic) long long creatorMonetizationCount; // @synthesize creatorMonetizationCount;
@property(nonatomic) long long TCMCount; // @synthesize TCMCount;
@property(nonatomic) long long accountMigrateCount; // @synthesize accountMigrateCount;
@property(nonatomic) long long gamePushCount; // @synthesize gamePushCount;
@property(nonatomic) long long familiarCount; // @synthesize familiarCount;
@property(nonatomic) long long douplusCount; // @synthesize douplusCount;
@property(retain, nonatomic) NSNumber *latestVideoTime; // @synthesize latestVideoTime;
@property(retain, nonatomic) NSNumber *latestLiveTime; // @synthesize latestLiveTime;
@property(nonatomic) long long hasUrged; // @synthesize hasUrged;
@property(nonatomic) long long blockUrgeSetting; // @synthesize blockUrgeSetting;
@property(nonatomic) long long fansPushCount; // @synthesize fansPushCount;
@property(nonatomic) long long serverStrangerCount; // @synthesize serverStrangerCount;
@property(copy, nonatomic) NSString *pushAuthorID; // @synthesize pushAuthorID;
@property(copy, nonatomic) NSString *pushAwemeID; // @synthesize pushAwemeID;
@property(nonatomic) long long noticeCountType; // @synthesize noticeCountType;
@property(copy, nonatomic) NSString *noticeCountRequestID; // @synthesize noticeCountRequestID;
@property(retain, nonatomic) NSNumber *friendVideoChannel; // @synthesize friendVideoChannel;
@property(retain, nonatomic) NSNumber *followVideoChannel; // @synthesize followVideoChannel;
@property(retain, nonatomic) NSNumber *followLiveChannel; // @synthesize followLiveChannel;
@property(nonatomic) long long voteCount; // @synthesize voteCount;
@property(nonatomic) long long liveCount; // @synthesize liveCount;
@property(nonatomic) long long newFollowingTabUnreadCount; // @synthesize newFollowingTabUnreadCount;
@property(retain, nonatomic) NSArray *followTabNotices; // @synthesize followTabNotices;
@property(nonatomic) long long storyTabColdStartCount; // @synthesize storyTabColdStartCount;
@property(nonatomic) long long lifeServiceCount; // @synthesize lifeServiceCount;
@property(nonatomic) long long linkCount; // @synthesize linkCount;
@property(nonatomic) long long starAtlasCount; // @synthesize starAtlasCount;
@property(nonatomic) long long imLiteMessageCount; // @synthesize imLiteMessageCount;
@property(nonatomic) long long lubanAdCount; // @synthesize lubanAdCount;
@property(nonatomic) long long storyTabUnreadCount; // @synthesize storyTabUnreadCount;
@property(nonatomic) long long followingTabUnreadCount; // @synthesize followingTabUnreadCount;
@property(nonatomic) long long friendTabUnreadCount; // @synthesize friendTabUnreadCount;
@property(nonatomic) long long oneDayLatestCount; // @synthesize oneDayLatestCount;
@property(nonatomic) long long oneDayInteractCount; // @synthesize oneDayInteractCount;
@property(nonatomic) long long adCount; // @synthesize adCount;
@property(nonatomic) long long walletAssistantCount; // @synthesize walletAssistantCount;
@property(nonatomic) long long shoppingCount; // @synthesize shoppingCount;
@property(nonatomic) long long systemCount; // @synthesize systemCount;
@property(nonatomic) long long feedbackCount; // @synthesize feedbackCount;
@property(nonatomic) long long approveFollowRequestCount; // @synthesize approveFollowRequestCount;
@property(nonatomic) long long followRequestCount; // @synthesize followRequestCount;
@property(nonatomic) long long duetCount; // @synthesize duetCount;
@property(nonatomic) long long createAwemeCount; // @synthesize createAwemeCount;
@property(nonatomic) long long followingRecommendCount; // @synthesize followingRecommendCount;
@property(nonatomic) long long imMessageCount; // @synthesize imMessageCount;
@property(nonatomic) long long assistantCount; // @synthesize assistantCount;
@property(nonatomic) long long strangerCount; // @synthesize strangerCount;
@property(nonatomic) long long newFansCount; // @synthesize newFansCount;
@property(nonatomic) long long likeMeCount; // @synthesize likeMeCount;
@property(nonatomic) long long commentMeAtAndVoteCount; // @synthesize commentMeAtAndVoteCount;
@property(nonatomic) long long atMeCount; // @synthesize atMeCount;
@property(nonatomic) long long commentMeCount; // @synthesize commentMeCount;
@property(nonatomic) long long followingFeedCount; // @synthesize followingFeedCount;
@property(nonatomic) long long incomingFriendCount; // @synthesize incomingFriendCount;
@property(nonatomic) _Bool hasNewInteractMessage; // @synthesize hasNewInteractMessage;
- (void).cxx_destruct;
- (_Bool)i18nMessageBubbleABEnable;
- (void)didFinishUpdateAwemeUser;
- (void)handleMessageNoti:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)handleDidTabbarSelectedIndexChangeNty:(id)arg1;
- (void)handleMusicallyBaseViewControllerViewDidLoadNoti:(id)arg1;
- (void)i18nCheckHasNewInteractMessage;
- (void)_checkHasNewInteractMessage;
- (void)_configWithCountModel:(id)arg1;
- (void)_configFollowTabChannelWithDict:(id)arg1;
- (_Bool)unreadCountChangeObjectNeedMarkRead:(id)arg1;
- (void)unreadCountChangeObjectUnreadCountDidChange:(id)arg1;
- (void)fetchFollowAnchorPushNoticeByIM:(_Bool)arg1;
- (void)delayFetchFollowAnchorPushNoticeByIM:(_Bool)arg1;
- (void)fetchFollowAnchorPushNotice;
- (void)updateIMLiteMessageCount:(long long)arg1;
- (id)currentStoryID;
- (long long)getTutorialVideoCount;
- (void)updateTutorialVideoCount:(long long)arg1;
- (void)updateIMMessageCount:(long long)arg1;
- (void)p_updateCommentMeAtAndLike;
- (void)p_updateCommentMeAndAtMe;
- (void)p_updateStoryTabUnreadCount;
- (void)updatePreviousStoryID:(id)arg1;
- (void)readWithType:(long long)arg1;
- (void)readFamiliarCount;
- (void)readXSAssistant;
- (void)readFollowingTabUnreadCount;
- (void)readFriendTabUnreadCount;
- (void)readCreatorMonetizationCount;
- (void)readTCMCount;
- (void)readFansPushCount;
- (void)readOneDayLatest;
- (void)readOneDayInteract;
- (void)readFeedback;
- (void)readCreateAweme;
- (void)readDuet;
- (void)readApproveFollowRequest;
- (void)readFollowRequest;
- (void)readStranger;
- (void)readAccountMigratePush;
- (void)readGamePush;
- (void)readDouplus;
- (void)readWalletAssistant;
- (void)readLive;
- (void)readLink;
- (void)readStarAtlas;
- (void)readAd;
- (void)readLifeServiceAssistant;
- (void)readLubanAd;
- (void)readVote;
- (void)readShopping;
- (void)readSystem;
- (void)readAssistant;
- (void)readNewFans;
- (void)readLike;
- (void)readCommentAtAndVote;
- (void)readAtMe;
- (void)readCommentAtLike;
- (void)readCommentMe;
- (void)readFollowingFeed;
- (void)readFriendMessage;
- (void)clearAll;
- (long long)unreadCountOfUser:(id)arg1;
- (long long)i18nNoticeTabbarUnreadCount;
@property(readonly, nonatomic) long long noticeTabbarUnreadCount;
- (_Bool)canShowMessageBubble;
- (void)fetchFollowRequestCount:(CDUnknownBlockType)arg1;
- (void)fetchFollowingRecommendNum:(CDUnknownBlockType)arg1;
- (void)fetchMultiUserInteractNotification:(CDUnknownBlockType)arg1;
- (void)processJsonObj:(id)arg1 withError:(id)arg2 fromSource:(long long)arg3 andCompletion:(CDUnknownBlockType)arg4 isComboRequestResult:(_Bool)arg5;
- (void)fetchInteractNotification:(CDUnknownBlockType)arg1 isLongConnectionRequest:(_Bool)arg2;
- (void)fetchInteractNotification:(CDUnknownBlockType)arg1 withLongConnectionNotificationType:(long long)arg2;
- (long long)getUnreadCountWithGroup:(long long)arg1;
- (void)dealloc;
- (id)init;
- (void)doOriginalActions;
- (void)updateSettingsWithDictionary:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

