//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "YTAudioSessionVolumeChangeObserver-Protocol.h"
#import "YTReachabilityObserver-Protocol.h"
#import "YTSingleVideoAccumulatedMediaTimeObserver-Protocol.h"
#import "YTSingleVideoActiveCaptionTrackObserver-Protocol.h"
#import "YTSingleVideoAudioFormatSelectionObserver-Protocol.h"
#import "YTSingleVideoCurrentTimeObserver-Protocol.h"
#import "YTSingleVideoMediaStateObserver-Protocol.h"
#import "YTSingleVideoPlaybackRateObserver-Protocol.h"
#import "YTSingleVideoVideoFormatSelectionObserver-Protocol.h"
#import "YTSingleVideoVolumeObserver-Protocol.h"
#import "YTVSSController-Protocol.h"

@class GIMMe, NSMutableArray, NSString, YTBasePingController, YTDeviceClassificationURLDecorator, YTHotConfig, YTIPlaybackTracking, YTPlayerStatus, YTReachabilityController, YTTimedAction, YTVSSControllerState;
@protocol HAMClock, YTAudioSession, YTIdentityProvider, YTInnerTubeConfig, YTLastActionProvider, YTPingControllerConfig, YTSingleVideoObservable;

@interface YTVSS2Controller : NSObject <YTAudioSessionVolumeChangeObserver, YTReachabilityObserver, YTSingleVideoAccumulatedMediaTimeObserver, YTSingleVideoActiveCaptionTrackObserver, YTSingleVideoCurrentTimeObserver, YTSingleVideoVideoFormatSelectionObserver, YTSingleVideoAudioFormatSelectionObserver, YTSingleVideoMediaStateObserver, YTSingleVideoPlaybackRateObserver, YTSingleVideoVolumeObserver, YTVSSController>
{
    YTBasePingController *_pingController;
    YTIPlaybackTracking *_playbackTracking;
    YTReachabilityController *_reachabilityController;
    id <YTLastActionProvider> _lastActionProvider;
    NSMutableArray *_playbackRanges;
    id <YTIdentityProvider> _identityProvider;
    id <YTPingControllerConfig> _config;
    YTDeviceClassificationURLDecorator *_deviceClassificationURLDecorator;
    id <YTAudioSession> _audioSession;
    id <YTInnerTubeConfig> _innerTubeConfig;
    double _playbackDelay;
    YTVSSControllerState *_state;
    YTPlayerStatus *_playerStatus;
    int _connectionType;
    float _playbackRate;
    _Bool _muted;
    float _mediaPlayerVolume;
    YTTimedAction *_scheduledWatchtimeTimer;
    double _lastScheduledWatchtime;
    id <HAMClock> _clock;
    YTTimedAction *_delayedVolumeAndMutedUpdate;
    YTHotConfig *_hotConfig;
    id <YTSingleVideoObservable> _singleVideoObservable;
    long long _lifecycleState;
    GIMMe *_gimme;
}

@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(readonly, nonatomic) long long lifecycleState; // @synthesize lifecycleState=_lifecycleState;
- (void).cxx_destruct;
- (void)systemOutputVolumeDidChange:(float)arg1;
- (id)currentCaptionTrackVSSID;
- (id)currentAudioTrackID;
- (void)startObservingVideoObservable;
- (void)forceSendPingAndMaybeBreakCurrentRangeAtMediaTime:(id)arg1;
- (void)updateLiveIngestionOffsetUsingMediaTime:(id)arg1;
- (_Bool)watchTimeURLExceedsMaxLength;
- (void)setCommonVSSParametersToBuilder:(id)arg1;
- (double)nextWatchTimePingTimeForWalltime:(double)arg1;
- (void)scheduledWatchtimeTimerFire;
- (_Bool)hasRecentWatchtimeActivity:(_Bool)arg1;
- (void)setScheduledWatchtimeParametersToBuilder:(id)arg1 isFinal:(_Bool)arg2 isPlaybackPing:(_Bool)arg3 wallTime:(double)arg4 hasRanges:(_Bool)arg5;
- (void)setPlaybackParametersToBuilder:(id)arg1;
- (void)performSignedHTTPRequestWithBuilder:(id)arg1;
- (id)watchTimeURLBuilderWithRanges:(id)arg1 final:(_Bool)arg2;
- (id)createEmptyRange;
- (void)reportVSSScheduledWatchtime;
- (void)reportVSSWatchtimeWithFinal:(_Bool)arg1;
- (void)reportVSSDelayedPlayback;
- (void)reportVSSPlayback;
- (void)addRangeStartMediaTime:(id)arg1;
- (void)addRangeEndMediaTime:(id)arg1;
- (id)playbackRangesForReporting;
- (void)resetPlaybackRanges;
- (void)setRangeParametersToBuilder:(id)arg1 withRanges:(id)arg2;
- (int)currentRealOutputVolume;
- (double)wallTime;
- (_Bool)hasStartTime;
- (_Bool)useScheduledWatchtimePings;
- (void)cancelScheduledWatchtimeTimer;
- (void)maybeSliceWatchTimeSegment;
- (void)clearDelayedVolumeAndMutedUpdate;
- (void)scheduleDelayedVolumeAndMutedUpdate;
- (void)reachabilityDidChange;
- (void)playerStatusDidChange:(id)arg1;
- (void)videoDidProgressAtTime:(id)arg1;
- (void)videoDidFinishAtTime:(id)arg1;
- (void)videoDidBufferAtTime:(id)arg1;
- (void)videoDidPauseOrSeekAtTime:(id)arg1;
- (void)singleVideo:(id)arg1 accumulatedMediaTimeDidChange:(double)arg2;
- (void)videoDidPlayAtTime:(id)arg1;
- (void)singleVideo:(id)arg1 activeCaptionTrackDidChange:(id)arg2;
- (void)singleVideo:(id)arg1 volumeDidChange:(float)arg2;
- (void)singleVideo:(id)arg1 playbackRateDidChange:(float)arg2;
- (void)singleVideo:(id)arg1 didSelectAudioFormat:(id)arg2;
- (void)singleVideo:(id)arg1 didSelectVideoFormat:(id)arg2;
- (void)singleVideo:(id)arg1 currentVideoTimeDidChange:(id)arg2;
- (void)singleVideo:(id)arg1 mediaStateDidChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)flush;
- (void)shutDown;
- (void)suspend;
- (id)stateCopy;
- (void)activateWithPlaybackData:(id)arg1 singleVideoObservable:(id)arg2 playerStatus:(id)arg3 playlistID:(id)arg4 autoplay:(_Bool)arg5;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

