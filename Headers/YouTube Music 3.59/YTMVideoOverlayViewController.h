//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "MDXSessionManagerObserver-Protocol.h"
#import "MDXSessionObserver-Protocol.h"
#import "MLNerdStatsOverlayViewControllerDelegate-Protocol.h"
#import "YTAnnotationsViewControllerDelegate-Protocol.h"
#import "YTCaptionTrackSwitchDelegate-Protocol.h"
#import "YTDoubleTapToSeekControllerDelegate-Protocol.h"
#import "YTHintControllerObserver-Protocol.h"
#import "YTHotConfigObserver-Protocol.h"
#import "YTLikeServiceObserver-Protocol.h"
#import "YTMAVSwitchDelegate-Protocol.h"
#import "YTMNowPlayingViewControllerScrubberDelegate-Protocol.h"
#import "YTMThemeControllerObserver-Protocol.h"
#import "YTMVideoOverlayViewDelegate-Protocol.h"
#import "YTOfflineCoordinatorObserver-Protocol.h"
#import "YTOverflowMenuViewControllerDelegate-Protocol.h"
#import "YTPlaybackRouteButtonVisibilityObserver-Protocol.h"
#import "YTResponder-Protocol.h"
#import "YTSingleVideoActiveCaptionTrackObserver-Protocol.h"
#import "YTSingleVideoBufferedMediaTimeObserver-Protocol.h"
#import "YTSingleVideoCaptionErrorObserver-Protocol.h"
#import "YTSingleVideoCaptionViewControllerObserver-Protocol.h"
#import "YTSingleVideoCurrentTimeObserver-Protocol.h"
#import "YTSingleVideoMediaStateObserver-Protocol.h"
#import "YTSingleVideoNerdStatsPlaybackDataObserver-Protocol.h"
#import "YTSingleVideoPeggedToLiveObserver-Protocol.h"
#import "YTSingleVideoSeekableMediaTimeRangeObserver-Protocol.h"
#import "YTSingleVideoTotalMediaTimeObserver-Protocol.h"
#import "YTStoryboardControllerDelegate-Protocol.h"
#import "YTSystemNotificationsObserver-Protocol.h"
#import "YTVideoPlayerOverlayProtocol-Protocol.h"
#import "YTVideoPlayerOverlayStoryboardProtocol-Protocol.h"
#import "YTVideoQualitySwitchUIObserver-Protocol.h"
#import "YTVideoZoomOverlayControllerDelegate-Protocol.h"
#import "YTVolumeBarViewDelegate-Protocol.h"

@class GIMMe, MLNerdStatsOverlayViewController, MLNerdStatsPlaybackData, MPVolumeView, NSString, QTMButton, YTAnnotationsViewController, YTCaptionTrackSwitchController, YTCaptionViewController, YTDoubleTapToSeekController, YTHintController, YTIMenuRenderer, YTIPlayerOverlayRenderer, YTISkippableSegmentsConfig, YTLiveOfflineSlateViewController, YTMAutoOfflineController, YTMButtonVisibilityLogger, YTMColorSamplerController, YTMMusicAppMetadata, YTMNowPlayingViewController, YTMPlaybackPublishController, YTMSettings, YTMThemeController, YTMVideoOverlayView, YTOfflineCoordinator, YTPlayerResponse, YTThumbnailController, YTVideoZoomOverlayController, YTVolumeBarView;
@protocol MDXServices, YTMPlaylistControlsResponderProvider, YTMVideoOverlayViewControllerDelegate, YTOfflineModeProvider, YTResponder, YTSingleVideoObservable, YTVideoPlayerOverlayDelegate;

@interface YTMVideoOverlayViewController : UIViewController <MDXSessionManagerObserver, MLNerdStatsOverlayViewControllerDelegate, YTAnnotationsViewControllerDelegate, YTCaptionTrackSwitchDelegate, YTDoubleTapToSeekControllerDelegate, YTHintControllerObserver, YTHotConfigObserver, YTLikeServiceObserver, YTMAVSwitchDelegate, YTMVideoOverlayViewDelegate, YTMThemeControllerObserver, YTOfflineCoordinatorObserver, YTOverflowMenuViewControllerDelegate, YTPlaybackRouteButtonVisibilityObserver, YTStoryboardControllerDelegate, YTSystemNotificationsObserver, YTVideoQualitySwitchUIObserver, YTVideoZoomOverlayControllerDelegate, YTVolumeBarViewDelegate, MDXSessionObserver, YTVideoPlayerOverlayProtocol, YTResponder, YTMNowPlayingViewControllerScrubberDelegate, YTVideoPlayerOverlayStoryboardProtocol, YTSingleVideoCurrentTimeObserver, YTSingleVideoTotalMediaTimeObserver, YTSingleVideoBufferedMediaTimeObserver, YTSingleVideoSeekableMediaTimeRangeObserver, YTSingleVideoNerdStatsPlaybackDataObserver, YTSingleVideoMediaStateObserver, YTSingleVideoActiveCaptionTrackObserver, YTSingleVideoCaptionViewControllerObserver, YTSingleVideoCaptionErrorObserver, YTSingleVideoPeggedToLiveObserver>
{
    YTMVideoOverlayView *_overlayView;
    YTMColorSamplerController *_colorSamplerController;
    id <MDXServices> _MDXServices;
    id <YTMPlaylistControlsResponderProvider> _playlistControlsProvider;
    YTCaptionViewController *_captionOverlayViewController;
    MLNerdStatsOverlayViewController *_nerdStatsOverlayViewController;
    YTCaptionTrackSwitchController *_captionTrackController;
    YTThumbnailController *_thumbnailController;
    YTMAutoOfflineController *_autoOfflineController;
    YTOfflineCoordinator *_offlineCoordinator;
    id <YTOfflineModeProvider> _offlineModeProvider;
    id <YTSingleVideoObservable> _activeVideoObservable;
    YTMNowPlayingViewController *_nowPlayingViewController;
    YTVideoZoomOverlayController *_videoZoomOverlayController;
    YTMSettings *_settings;
    int _playerViewLayout;
    YTIMenuRenderer *_videoReportingMenuRenderer;
    YTIPlayerOverlayRenderer *_model;
    YTPlayerResponse *_playerResponse;
    QTMButton *_MDXButton;
    YTMMusicAppMetadata *_musicAppMetadata;
    YTDoubleTapToSeekController *_doubleTapToSeekController;
    YTMThemeController *_themeController;
    _Bool _hasButtonsLogged;
    YTMButtonVisibilityLogger *_shuffleButtonVisibilityLogger;
    YTMButtonVisibilityLogger *_loopButtonVisibilityLogger;
    YTMButtonVisibilityLogger *_audioVideoSwitchVisibilityLogger;
    YTHintController *_hintController;
    YTLiveOfflineSlateViewController *_liveOfflineSlateViewController;
    YTMPlaybackPublishController *_playbackPublishController;
    MPVolumeView *_hiddenVolumeView;
    _Bool _bookendsEnabled;
    _Bool _didSkipIntro;
    YTISkippableSegmentsConfig *_skippableSegmentsConfig;
    long long _playerState;
    MLNerdStatsPlaybackData *_nerdStatsPlaybackData;
    double _mediaTime;
    double _totalTime;
    double _bufferedTime;
    long long _roundedMaximumSeekableTime;
    long long _roundedMinimumSeekableTime;
    long long _roundedDurationLabelValue;
    double _previousMaximumSeekableTime;
    double _expansionCoefficient;
    _Bool _backgrounded;
    _Bool _bufferedTimeNeedsUpdate;
    _Bool _mediaTimeNeedsUpdate;
    _Bool _totalTimeNeedsUpdate;
    int _autoHideTaskID;
    _Bool _playerControlsVisible;
    _Bool _liveVideo;
    _Bool _DVREnabled;
    _Bool _showLiveVideoOfflineSlate;
    _Bool _peggedToPlayhead;
    _Bool _playlistControlsHidden;
    _Bool _hasPreviousVideo;
    _Bool _userScrubbing;
    _Bool _externalPlaybackActive;
    _Bool _currentVideoVertical;
    _Bool _storyboardEnabled;
    _Bool _AVSwitchAvailable;
    _Bool _searchButtonHidden;
    _Bool _showAVSwitchUserEducation;
    _Bool _hasCaptions;
    id <YTVideoPlayerOverlayDelegate> _delegate;
    id <YTResponder> _parentResponder;
    GIMMe *_gimme;
    YTAnnotationsViewController *_annotationsViewController;
    YTVolumeBarView *_volumeBarView;
    id <YTMVideoOverlayViewControllerDelegate> _overlayDelegate;
    unsigned long long _userContentMode;
}

@property(nonatomic) _Bool hasCaptions; // @synthesize hasCaptions=_hasCaptions;
@property(retain, nonatomic) MLNerdStatsOverlayViewController *nerdStatsOverlayViewController; // @synthesize nerdStatsOverlayViewController=_nerdStatsOverlayViewController;
@property(readonly, nonatomic) double bufferedTime; // @synthesize bufferedTime=_bufferedTime;
@property(readonly, nonatomic) double totalTime; // @synthesize totalTime=_totalTime;
@property(readonly, nonatomic) double mediaTime; // @synthesize mediaTime=_mediaTime;
@property(readonly, nonatomic) long long playerState; // @synthesize playerState=_playerState;
@property(nonatomic) unsigned long long userContentMode; // @synthesize userContentMode=_userContentMode;
@property(nonatomic) _Bool showAVSwitchUserEducation; // @synthesize showAVSwitchUserEducation=_showAVSwitchUserEducation;
@property(nonatomic) __weak id <YTMVideoOverlayViewControllerDelegate> overlayDelegate; // @synthesize overlayDelegate=_overlayDelegate;
@property(nonatomic, getter=isSearchButtonHidden) _Bool searchButtonHidden; // @synthesize searchButtonHidden=_searchButtonHidden;
@property(nonatomic, getter=isAVSwitchAvailable) _Bool AVSwitchAvailable; // @synthesize AVSwitchAvailable=_AVSwitchAvailable;
@property(readonly, nonatomic) YTVolumeBarView *volumeBarView; // @synthesize volumeBarView=_volumeBarView;
@property(retain, nonatomic) YTAnnotationsViewController *annotationsViewController; // @synthesize annotationsViewController=_annotationsViewController;
@property(nonatomic) __weak GIMMe *gimme; // @synthesize gimme=_gimme;
@property(nonatomic, getter=isCurrentVideoVertical) _Bool currentVideoVertical; // @synthesize currentVideoVertical=_currentVideoVertical;
@property(nonatomic) _Bool externalPlaybackActive; // @synthesize externalPlaybackActive=_externalPlaybackActive;
@property(readonly, nonatomic) __weak id <YTResponder> parentResponder; // @synthesize parentResponder=_parentResponder;
@property(nonatomic, getter=isUserScrubbing) _Bool userScrubbing; // @synthesize userScrubbing=_userScrubbing;
@property(nonatomic) _Bool hasPreviousVideo; // @synthesize hasPreviousVideo=_hasPreviousVideo;
@property(nonatomic, getter=arePlaylistControlsHidden) _Bool playlistControlsHidden; // @synthesize playlistControlsHidden=_playlistControlsHidden;
@property(nonatomic) __weak id <YTVideoPlayerOverlayDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)setNerdStatsOverlayVisible:(_Bool)arg1;
- (void)unloadNerdStatsOverlay;
- (void)loadNerdStatsOverlay;
- (_Bool)isBookendsEnabled;
- (void)setAnnotationsWithPlayerData:(id)arg1;
- (_Bool)arePlayerControlsLocked;
- (_Bool)isMDXActive;
- (_Bool)isAppInBackground;
- (void)maybeSkipOutro;
- (void)maybeSkipIntro;
- (_Bool)playerIsExpanded;
- (void)clearCaptions;
- (void)maybeAutoHideOverlay;
- (void)cancelOverlayAutoHide;
- (void)sendInteractionLoggingForButtons;
- (void)updateThumbnail;
- (_Bool)enlargeCaptionsInFullscreen;
- (void)maybeHideNativeVolumeDisplay;
- (void)setLikeStatus:(int)arg1;
- (void)updateLikeStatus;
- (void)setScrubberFrameForExpandAnimation:(id)arg1;
- (void)setScrubberFrameForCollapseAnimation:(id)arg1;
- (_Bool)canScrubForPlayerState:(long long)arg1;
- (void)scrubbingEnded;
- (void)scrubbingStarted;
- (void)dispatchServiceEndpointForLikeStatus:(int)arg1;
- (void)updateVideoReportingMenuRenderer;
- (void)maybeShowUserEducation;
- (void)updatePeggedToLive:(_Bool)arg1;
- (void)updateMinimumSeekableTime:(double)arg1 maximumSeekableTime:(double)arg2;
- (void)setTimeFromPlayhead:(double)arg1;
- (void)updateCurrentMediaTime:(double)arg1;
- (void)updateBufferedTime:(double)arg1;
- (void)updateTotalMediaTime:(double)arg1;
- (void)updateVideoZoomControllerEnabled;
- (void)themeController:(id)arg1 playerPagePaletteDidChange:(id)arg2;
- (_Bool)volumeBarViewIsConnectedToMDX:(id)arg1;
- (_Bool)volumeBarViewCanDisplayVolumeBar:(id)arg1;
- (void)didChangeVideoLikeStatus:(int)arg1 withID:(id)arg2;
- (void)nerdStatsOverlayViewControllerDidTapCopyDebugInfo:(id)arg1;
- (void)nerdStatsOverlayViewControllerDidTapClose:(id)arg1;
- (void)overflowMenuWillDismiss;
- (void)didPressNerdStats:(id)arg1;
- (void)didPressAudioTrackSwitch:(id)arg1;
- (void)didPressCloseOverflowMenu:(id)arg1;
- (void)didPressReportIssue:(id)arg1;
- (void)didPressVideoQuality:(id)arg1;
- (void)didPressClosedCaptions:(id)arg1;
- (void)nowPlayingViewController:(id)arg1 scrubberDidBeginExpanding:(id)arg2;
- (void)nowPlayingViewController:(id)arg1 scrubberDidBeginCollapsing:(id)arg2;
- (void)nowPlayingViewControllerDidEndScrubbing:(id)arg1;
- (void)nowPlayingViewControllerDidStartScrubbing:(id)arg1;
- (void)nowPlayingViewController:(id)arg1 didScrubToTime:(double)arg2;
- (void)captionTrackSwitchDidSelectCaptionTrack:(id)arg1;
- (void)updateBackgroundColor;
- (void)overlayViewDidBeginAnimatingControls:(id)arg1;
- (void)overlayViewDidLoadThumbnail:(id)arg1;
- (void)overlayViewDidTapDislikeButton:(id)arg1;
- (void)overlayViewDidTapLikeButton:(id)arg1;
- (void)overlayViewDidTapFullscreenButton:(id)arg1;
- (void)overlayView:(id)arg1 didScrubToTime:(double)arg2;
- (void)calculateTimeFromPlayhead;
- (void)overlayViewDidEndScrubbing:(id)arg1;
- (void)overlayViewDidStartScrubbing:(id)arg1;
- (void)overlayViewDidTapShuffleButton:(id)arg1;
- (void)overlayViewDidTapLoopButton:(id)arg1;
- (void)overlayViewDidTapShowOfflineButton:(id)arg1;
- (void)overlayViewDidTapPlayOfflineButton:(id)arg1;
- (void)overlayDidTapLiveBadge:(id)arg1;
- (void)overlayViewDidTapRetryButton:(id)arg1;
- (void)overlayViewDidTapReplayButton:(id)arg1;
- (void)overlayViewDidTapNextButton:(id)arg1;
- (void)overlayViewDidTapPrevButton:(id)arg1;
- (void)overlayViewDidTapOverflowButton:(id)arg1;
- (void)overlayViewDidTapPlaybackButton:(id)arg1;
- (void)overlayViewDidTapCollapseButton:(id)arg1;
- (void)overlayViewDidTapBackground:(id)arg1;
- (void)overlayViewDidTapAVSwitchButton:(id)arg1;
- (void)AVSwitchDidTap:(id)arg1;
- (void)setStoryboardFrame:(id)arg1;
- (id)storyboardControllerDelegate;
@property(nonatomic, getter=isStoryboardEnabled) _Bool storyboardEnabled; // @synthesize storyboardEnabled=_storyboardEnabled;
- (int)playerViewLayout;
- (void)setPlayerViewLayout:(int)arg1;
- (void)playbackRouteButtonVisibilityDidChange;
- (void)setExpansionCoefficient:(double)arg1;
- (void)mediaTimesDidChangeForMDXSession:(id)arg1;
- (void)MDXSession:(id)arg1 volumeLevelDidChange:(long long)arg2;
- (void)MDXSessionStatusDidBecomeActive:(_Bool)arg1;
- (void)MDXSessionManager:(id)arg1 didFailToStartSession:(id)arg2 withError:(id)arg3;
- (void)MDXSessionManager:(id)arg1 didEndSession:(id)arg2 withError:(id)arg3;
- (void)MDXSessionManager:(id)arg1 willStartSession:(id)arg2;
- (void)singleVideo:(id)arg1 peggedToLiveDidChange:(_Bool)arg2;
- (void)singleVideo:(id)arg1 captionsDidFailWithError:(id)arg2;
- (void)singleVideo:(id)arg1 captionViewControllerDidChange:(id)arg2;
- (void)singleVideo:(id)arg1 activeCaptionTrackDidChange:(id)arg2;
- (void)singleVideo:(id)arg1 mediaStateDidChangeFromState:(long long)arg2 toState:(long long)arg3;
- (void)singleVideo:(id)arg1 nerdStatsPlaybackDataDidChange:(id)arg2;
- (void)singleVideo:(id)arg1 seekableMediaTimeRangeDidChangeToMinimumTime:(double)arg2 maximumTime:(double)arg3;
- (void)singleVideo:(id)arg1 bufferedMediaTimeDidChange:(double)arg2;
- (void)singleVideo:(id)arg1 totalMediaTimeDidChange:(double)arg2;
- (void)singleVideo:(id)arg1 currentVideoTimeDidChange:(id)arg2;
- (void)didMoveToParentViewController:(id)arg1;
- (void)setWatchNextResponse:(id)arg1;
- (void)setPlayerResponse:(id)arg1 CPN:(id)arg2;
- (void)setMarkers:(id)arg1;
- (void)setRemoteScreenName:(id)arg1;
- (void)displayError:(id)arg1;
- (void)playerDidFailWithError:(id)arg1;
- (void)setActiveSingleVideo:(id)arg1;
- (void)updatePlayerMediaState:(long long)arg1;
- (void)resetAndShowLoading:(_Bool)arg1;
- (void)offlineModeDidChange;
- (void)appDidBecomeActive:(id)arg1;
- (void)appWillEnterForeground:(id)arg1;
- (void)appDidEnterBackground:(id)arg1;
- (void)videoQualitySwitchControllerStatusDidChange:(id)arg1;
- (void)didEndDoubleTapToSeek;
- (void)willStartDoubleTapToSeek;
- (void)didSeekToTime:(double)arg1 toleranceBefore:(double)arg2 toleranceAfter:(double)arg3;
- (_Bool)canDoubleTapForCurrentPlayerState;
- (void)hotConfigDidChange:(id)arg1;
- (void)callToActionAnnotationStateDidUpdate:(int)arg1;
- (void)setFeaturedChannelWatermarkImageView:(id)arg1;
- (void)didDismissHintWithID:(id)arg1;
- (void)videoZoomEnded;
- (void)videoZoomBegan;
- (void)setRenderingViewCustomFrame:(struct CGRect)arg1 animated:(_Bool)arg2 duration:(double)arg3;
@property(readonly, nonatomic) YTIMenuRenderer *menuRenderer;
- (void)setCaptionError:(id)arg1;
- (void)updateCaptionViewController:(id)arg1;
- (void)setAvailableCaptionTracks:(id)arg1;
- (void)updateActiveCaptionTrack:(id)arg1;
- (void)setControlsVisible:(_Bool)arg1 animated:(_Bool)arg2 autoHide:(_Bool)arg3;
- (void)updateQueueControls;
- (void)updateNerdStatsPlaybackData:(id)arg1;
@property(readonly, nonatomic) YTMVideoOverlayView *overlayView;
- (_Bool)isContentPanAllowed;
@property(nonatomic) _Bool hasNextVideo;
- (void)setVideoTitle:(id)arg1 videoArtist:(id)arg2 playerOverlayRenderer:(id)arg3;
- (_Bool)shouldPrevButtonReplayVideo;
- (void)attachAllButtons;
- (void)viewWillLayoutSubviews;
- (void)viewWillTransitionToSize:(struct CGSize)arg1 withTransitionCoordinator:(id)arg2;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)loadView;
- (void)dealloc;
- (id)initWithNowPlayingViewController:(id)arg1 parentResponder:(id)arg2;

// Remaining properties
@property(nonatomic) _Bool MDXPlaybackActive;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool foregroundAudioOnly;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) MLNerdStatsPlaybackData *nerdStatsPlaybackData;
@property(readonly) Class superclass;

@end

