//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SQViewController.h"

#import "_TtP4Cash24InfoDrawerViewController_-Protocol.h"

@class CCSession, Logger, NSArray, NSDate, NSString, SCCheckmarkView, SCCompactWrappingLabel;

@interface SCRewardsDrawerViewController : SQViewController <_TtP4Cash24InfoDrawerViewController_>
{
    _Bool _rewardsAreExpiring;
    _Bool _usesCompactLayout;
    _Bool _hasAnimatedPaidRewards;
    Logger *_logger;
    CCSession *_session;
    NSString *_headerText;
    NSString *_messageText;
    NSArray *_rewardAmounts;
    unsigned long long _alreadyPaidRewardCount;
    unsigned long long _justPaidRewardCount;
    SCCompactWrappingLabel *_headerLabel;
    SCCompactWrappingLabel *_messageLabel;
    NSArray *_rewardViews;
    SCCheckmarkView *_solitaryPaidOutRewardCheckmarkView;
    unsigned long long _logging_totalPossibleRewards;
    NSDate *_logging_dateScreenAppeared;
}

+ (id)rewardsWithAmount:(id)arg1 count:(unsigned long long)arg2;
@property(copy, nonatomic) NSDate *logging_dateScreenAppeared; // @synthesize logging_dateScreenAppeared=_logging_dateScreenAppeared;
@property(nonatomic) unsigned long long logging_totalPossibleRewards; // @synthesize logging_totalPossibleRewards=_logging_totalPossibleRewards;
@property(nonatomic) _Bool hasAnimatedPaidRewards; // @synthesize hasAnimatedPaidRewards=_hasAnimatedPaidRewards;
@property(retain, nonatomic) SCCheckmarkView *solitaryPaidOutRewardCheckmarkView; // @synthesize solitaryPaidOutRewardCheckmarkView=_solitaryPaidOutRewardCheckmarkView;
@property(copy, nonatomic) NSArray *rewardViews; // @synthesize rewardViews=_rewardViews;
@property(retain, nonatomic) SCCompactWrappingLabel *messageLabel; // @synthesize messageLabel=_messageLabel;
@property(retain, nonatomic) SCCompactWrappingLabel *headerLabel; // @synthesize headerLabel=_headerLabel;
@property(nonatomic) _Bool usesCompactLayout; // @synthesize usesCompactLayout=_usesCompactLayout;
@property(readonly, nonatomic) _Bool rewardsAreExpiring; // @synthesize rewardsAreExpiring=_rewardsAreExpiring;
@property(nonatomic) unsigned long long justPaidRewardCount; // @synthesize justPaidRewardCount=_justPaidRewardCount;
@property(nonatomic) unsigned long long alreadyPaidRewardCount; // @synthesize alreadyPaidRewardCount=_alreadyPaidRewardCount;
@property(readonly, nonatomic) NSArray *rewardAmounts; // @synthesize rewardAmounts=_rewardAmounts;
@property(readonly, nonatomic) NSString *messageText; // @synthesize messageText=_messageText;
@property(readonly, nonatomic) NSString *headerText; // @synthesize headerText=_headerText;
@property(retain, nonatomic) CCSession *session; // @synthesize session=_session;
@property(readonly, nonatomic) Logger *logger; // @synthesize logger=_logger;
- (void).cxx_destruct;
- (void)_updateSolitaryPaidOutRewardCheckmarkViewRadius;
- (void)_installCheckmarkViewWithFrame:(struct CGRect)arg1 hidden:(_Bool)arg2;
- (struct CGSize)_compactLayoutRewardViewsSizeForBounds:(struct CGRect)arg1 margin:(double)arg2;
- (double)_solitaryRewardViewHeight;
- (id)_solitaryRewardView;
- (void)_animateJustPaidRewards;
- (void)animateJustPaidRewards;
@property(readonly, nonatomic) unsigned long long rewardCount;
@property(readonly, nonatomic) _Bool isDismissible;
- (struct CGRect)drawerFrameForBounds:(struct CGRect)arg1;
- (void)viewDidAppearForFirstTime:(_Bool)arg1;
- (void)viewWillAppearForFirstTime:(_Bool)arg1;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (id)initWithSessionForPaymentFlow:(id)arg1 rewardStatus:(id)arg2 messageText:(id)arg3 logger:(id)arg4;
- (id)initWithSession:(id)arg1 rewardStatus:(id)arg2 logger:(id)arg3;
- (id)debug_initWithHeaderText:(id)arg1 messageText:(id)arg2 rewardAmounts:(id)arg3 alreadyPaidRewardCount:(unsigned long long)arg4 justPaidRewardCount:(unsigned long long)arg5 rewardsAreExpiring:(_Bool)arg6 usesCompactLayout:(_Bool)arg7 logger:(id)arg8;
- (id)_initWithSession:(id)arg1 rewardStatus:(id)arg2 paymentFlowMessageText:(id)arg3 logger:(id)arg4;
- (id)_initWithSession:(id)arg1 headerText:(id)arg2 messageText:(id)arg3 rewardAmounts:(id)arg4 alreadyPaidRewardCount:(unsigned long long)arg5 justPaidRewardCount:(unsigned long long)arg6 rewardsAreExpiring:(_Bool)arg7 usesCompactLayout:(_Bool)arg8 logger:(id)arg9;

@end

