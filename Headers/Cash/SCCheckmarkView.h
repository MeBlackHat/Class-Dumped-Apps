//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

@class CADisplayLink, CAShapeLayer, NSDate, SCAnimationFunction, UIColor;

@interface SCCheckmarkView : UIView
{
    _Bool _animating;
    UIColor *_strokeColor;
    double _checkmarkRadius;
    double _checkmarkStrokeWidth;
    double _clockRadius;
    double _clockStrokeWidth;
    double _clockHourHandLength;
    double _clockMinuteHandLength;
    double _checkmarkPushScale;
    double _checkmarkPushDuration;
    double _checkmarkPopDuration;
    double _checkmarkOvershootDuration;
    double _clockPushDuration;
    double _clockRecenteringAndSpinDelay;
    double _clockSpinDuration;
    double _clockHandRecenteringDuration;
    double _endingHourHandAngle;
    double _endingMinuteHandAngle;
    CAShapeLayer *_circleLayer;
    CAShapeLayer *_checkmarkLayer;
    double _transitionProgress;
    SCAnimationFunction *_clockPopFunction;
    SCAnimationFunction *_minuteHandStrokeFunction;
    SCAnimationFunction *_clockHandRotationFunction;
    NSDate *_animationStartTime;
    double _animationDuration;
    double _animationTransitionProgressStart;
    double _animationTransitionProgressEnd;
    CDUnknownBlockType _animationCompletionBlock;
    CADisplayLink *_animationDisplayLink;
    struct SCInertialBounceParameters _checkmarkOvershootParameters;
    struct SCInertialBounceParameters _clockOvershootParameters;
}

@property(retain, nonatomic) CADisplayLink *animationDisplayLink; // @synthesize animationDisplayLink=_animationDisplayLink;
@property(copy, nonatomic) CDUnknownBlockType animationCompletionBlock; // @synthesize animationCompletionBlock=_animationCompletionBlock;
@property(nonatomic) double animationTransitionProgressEnd; // @synthesize animationTransitionProgressEnd=_animationTransitionProgressEnd;
@property(nonatomic) double animationTransitionProgressStart; // @synthesize animationTransitionProgressStart=_animationTransitionProgressStart;
@property(nonatomic) double animationDuration; // @synthesize animationDuration=_animationDuration;
@property(retain, nonatomic) NSDate *animationStartTime; // @synthesize animationStartTime=_animationStartTime;
@property(retain, nonatomic) SCAnimationFunction *clockHandRotationFunction; // @synthesize clockHandRotationFunction=_clockHandRotationFunction;
@property(retain, nonatomic) SCAnimationFunction *minuteHandStrokeFunction; // @synthesize minuteHandStrokeFunction=_minuteHandStrokeFunction;
@property(retain, nonatomic) SCAnimationFunction *clockPopFunction; // @synthesize clockPopFunction=_clockPopFunction;
@property(nonatomic) struct SCInertialBounceParameters clockOvershootParameters; // @synthesize clockOvershootParameters=_clockOvershootParameters;
@property(nonatomic) struct SCInertialBounceParameters checkmarkOvershootParameters; // @synthesize checkmarkOvershootParameters=_checkmarkOvershootParameters;
@property(nonatomic) _Bool animating; // @synthesize animating=_animating;
@property(nonatomic) double transitionProgress; // @synthesize transitionProgress=_transitionProgress;
@property(retain, nonatomic) CAShapeLayer *checkmarkLayer; // @synthesize checkmarkLayer=_checkmarkLayer;
@property(retain, nonatomic) CAShapeLayer *circleLayer; // @synthesize circleLayer=_circleLayer;
@property(nonatomic) double endingMinuteHandAngle; // @synthesize endingMinuteHandAngle=_endingMinuteHandAngle;
@property(nonatomic) double endingHourHandAngle; // @synthesize endingHourHandAngle=_endingHourHandAngle;
@property(nonatomic) double clockHandRecenteringDuration; // @synthesize clockHandRecenteringDuration=_clockHandRecenteringDuration;
@property(nonatomic) double clockSpinDuration; // @synthesize clockSpinDuration=_clockSpinDuration;
@property(nonatomic) double clockRecenteringAndSpinDelay; // @synthesize clockRecenteringAndSpinDelay=_clockRecenteringAndSpinDelay;
@property(nonatomic) double clockPushDuration; // @synthesize clockPushDuration=_clockPushDuration;
@property(nonatomic) double checkmarkOvershootDuration; // @synthesize checkmarkOvershootDuration=_checkmarkOvershootDuration;
@property(nonatomic) double checkmarkPopDuration; // @synthesize checkmarkPopDuration=_checkmarkPopDuration;
@property(nonatomic) double checkmarkPushDuration; // @synthesize checkmarkPushDuration=_checkmarkPushDuration;
@property(nonatomic) double checkmarkPushScale; // @synthesize checkmarkPushScale=_checkmarkPushScale;
@property(nonatomic) double clockMinuteHandLength; // @synthesize clockMinuteHandLength=_clockMinuteHandLength;
@property(nonatomic) double clockHourHandLength; // @synthesize clockHourHandLength=_clockHourHandLength;
@property(nonatomic) double clockStrokeWidth; // @synthesize clockStrokeWidth=_clockStrokeWidth;
@property(nonatomic) double clockRadius; // @synthesize clockRadius=_clockRadius;
@property(nonatomic) double checkmarkStrokeWidth; // @synthesize checkmarkStrokeWidth=_checkmarkStrokeWidth;
@property(nonatomic) double checkmarkRadius; // @synthesize checkmarkRadius=_checkmarkRadius;
@property(copy, nonatomic) UIColor *strokeColor; // @synthesize strokeColor=_strokeColor;
- (void).cxx_destruct;
- (void)_updateShapes;
- (struct CGPoint)_interpolatedAxisPointWithCenterPoint:(struct CGPoint)arg1 radius:(double)arg2 progress:(double)arg3;
- (double)_interpolatedRadiusWithProgress:(double)arg1;
- (double)_interpolatedLineWidthWithProgress:(double)arg1;
- (void)_updateTransitionAnimation:(id)arg1;
- (double)_clockRecenteringEndTransitionProgress;
- (double)_clockRecenteringAndSpinStartTransitionProgress;
- (void)_animateTransitionProgressFrom:(double)arg1 to:(double)arg2 duration:(double)arg3 completion:(CDUnknownBlockType)arg4;
- (void)_stopAnimationWithTransitionProgress:(double)arg1 performCompletionBlock:(_Bool)arg2;
- (void)_updateOvershootParameters;
- (void)showClockAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)showSmallCheckmarkAnimated:(_Bool)arg1;
- (void)showLargeCheckmarkAnimatedWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)showLargeCheckmarkAnimated:(_Bool)arg1;
- (void)showEmptyCircle;
@property(readonly, nonatomic) double checkmarkAppearanceDuration;
@property(readonly, nonatomic) double clockOvershootDuration; // @dynamic clockOvershootDuration;
- (void)setFrame:(struct CGRect)arg1;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)_SCCheckmarkView_commonInit;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;
- (void)SCTheme_applyGreenAppearance;

@end

