//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Smooch/SKTRemoteOperationScheduler.h>

@class NSMutableArray, NSString, NSTimer, SKTConversation, SKTConversationMonitor, SKTConversationStorageManager, SKTRetryConfiguration, SKTSettings, SKTUser;

@interface SKTUserSynchronizer : SKTRemoteOperationScheduler
{
    int _retryCount;
    SKTConversationMonitor *_conversationMonitor;
    unsigned long long _lastLoginResult;
    SKTConversation *_conversation;
    NSString *_appId;
    SKTRetryConfiguration *_retryConfiguration;
    NSTimer *_retryRequestTimer;
    SKTSettings *_settings;
    CDUnknownBlockType _creationCompletedBlock;
    NSMutableArray *_userCreationCallbacks;
    SKTConversationStorageManager *_conversationStorageManager;
}

@property(retain) SKTConversationStorageManager *conversationStorageManager; // @synthesize conversationStorageManager=_conversationStorageManager;
@property(retain) NSMutableArray *userCreationCallbacks; // @synthesize userCreationCallbacks=_userCreationCallbacks;
@property(copy) CDUnknownBlockType creationCompletedBlock; // @synthesize creationCompletedBlock=_creationCompletedBlock;
@property(retain) SKTSettings *settings; // @synthesize settings=_settings;
@property(retain, nonatomic) NSTimer *retryRequestTimer; // @synthesize retryRequestTimer=_retryRequestTimer;
@property int retryCount; // @synthesize retryCount=_retryCount;
@property(retain, nonatomic) SKTRetryConfiguration *retryConfiguration; // @synthesize retryConfiguration=_retryConfiguration;
@property(copy, nonatomic) NSString *appId; // @synthesize appId=_appId;
@property(retain) SKTConversation *conversation; // @synthesize conversation=_conversation;
@property unsigned long long lastLoginResult; // @synthesize lastLoginResult=_lastLoginResult;
@property(retain) SKTConversationMonitor *conversationMonitor; // @synthesize conversationMonitor=_conversationMonitor;
- (void).cxx_destruct;
- (id)errorUserInfoForStatusCode:(long long)arg1 response:(id)arg2;
- (id)errorUserInfoForTask:(id)arg1 response:(id)arg2;
- (void)logIfInvalidAuthError:(id)arg1;
- (_Bool)shouldRetryError:(long long)arg1;
- (void)upgradeUserWithClientId:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleUpgradeUserTimer:(id)arg1;
- (void)consumeAuthCode:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)handleConsumeAuthCodeTimer:(id)arg1;
- (void)fetchUserWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleUserFetchTimer:(id)arg1;
- (void)retryWithSelector:(SEL)arg1 userInfo:(id)arg2;
- (void)handleNoUserIdInRequest:(CDUnknownBlockType)arg1;
- (void)loadConversation:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)loadConversations:(CDUnknownBlockType)arg1;
- (void)startConversationWithIntent:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)createUserWithIntent:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)startConversationOrCreateUserWithIntent:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;
- (void)logOutWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)handleLoginTimer:(id)arg1;
- (void)logInWithCompletionHandler:(CDUnknownBlockType)arg1;
- (void)updateAuthenticationWithSessionToken:(id)arg1;
- (_Bool)shouldClearUserProperties:(id)arg1;
- (_Bool)shouldIgnoreRequest;
- (void)setRealtimeClient;
- (void)connectConversationMonitor;
- (void)rescheduleIfNeeded;
- (void)handleConversationsResponse:(id)arg1;
- (void)operationDidSucceedWithResponse:(id)arg1;
- (void)operationCompleted:(id)arg1;
@property(readonly) SKTUser *user;
- (id)initWithUser:(id)arg1 synchronizer:(id)arg2 appId:(id)arg3 retryConfiguration:(id)arg4 settings:(id)arg5 conversation:(id)arg6 conversationStorageManager:(id)arg7;
- (void)dealloc;

@end

