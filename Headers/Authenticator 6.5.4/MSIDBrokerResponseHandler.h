//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class MSIDAccountMetadataCacheAccessor, MSIDBrokerCryptoProvider, MSIDOauth2Factory, MSIDTokenResponseValidator, NSString, NSURL;
@protocol MSIDCacheAccessor;

@interface MSIDBrokerResponseHandler : NSObject
{
    _Bool _sourceApplicationAvailable;
    _Bool _instanceAware;
    MSIDOauth2Factory *_oauthFactory;
    MSIDBrokerCryptoProvider *_brokerCryptoProvider;
    MSIDTokenResponseValidator *_tokenResponseValidator;
    id <MSIDCacheAccessor> _tokenCache;
    MSIDAccountMetadataCacheAccessor *_accountMetadataCacheAccessor;
    NSString *_brokerNonce;
    NSURL *_providedAuthority;
}

- (void).cxx_destruct;
@property(nonatomic) _Bool instanceAware; // @synthesize instanceAware=_instanceAware;
@property(retain, nonatomic) NSURL *providedAuthority; // @synthesize providedAuthority=_providedAuthority;
@property(retain, nonatomic) NSString *brokerNonce; // @synthesize brokerNonce=_brokerNonce;
@property(nonatomic) _Bool sourceApplicationAvailable; // @synthesize sourceApplicationAvailable=_sourceApplicationAvailable;
@property(retain, nonatomic) MSIDAccountMetadataCacheAccessor *accountMetadataCacheAccessor; // @synthesize accountMetadataCacheAccessor=_accountMetadataCacheAccessor;
@property(retain, nonatomic) id <MSIDCacheAccessor> tokenCache; // @synthesize tokenCache=_tokenCache;
@property(retain, nonatomic) MSIDTokenResponseValidator *tokenResponseValidator; // @synthesize tokenResponseValidator=_tokenResponseValidator;
@property(retain, nonatomic) MSIDBrokerCryptoProvider *brokerCryptoProvider; // @synthesize brokerCryptoProvider=_brokerCryptoProvider;
@property(retain, nonatomic) MSIDOauth2Factory *oauthFactory; // @synthesize oauthFactory=_oauthFactory;
- (_Bool)canHandleBrokerResponse:(id)arg1 hasCompletionBlock:(_Bool)arg2;
- (id)accountMetadataCacheWithKeychainGroup:(id)arg1 error:(id *)arg2;
- (id)cacheAccessorWithKeychainGroup:(id)arg1 error:(id *)arg2;
- (id)brokerResponseFromEncryptedQueryParams:(id)arg1 oidcScope:(id)arg2 correlationId:(id)arg3 authScheme:(id)arg4 error:(id *)arg5;
- (_Bool)checkBrokerNonce:(id)arg1;
- (id)verifyResumeStateDicrionary:(id)arg1 error:(id *)arg2;
- (_Bool)canHandleBrokerResponse:(id)arg1 hasCompletionBlock:(_Bool)arg2 protocolVersion:(id)arg3 sdkName:(id)arg4;
- (id)authSchemeFromResumeState:(id)arg1;
- (id)handleBrokerResponseWithURL:(id)arg1 sourceApplication:(id)arg2 error:(id *)arg3;
- (id)initWithOauthFactory:(id)arg1 tokenResponseValidator:(id)arg2;

@end

