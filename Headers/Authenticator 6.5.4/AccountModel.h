//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class NSManagedObjectContext, NSManagedObjectModel, NSPersistentStoreCoordinator;

@interface AccountModel : NSObject
{
    NSManagedObjectContext *_managedObjectContext;
    NSManagedObjectModel *_accountsManagedObjectModel;
    NSPersistentStoreCoordinator *_accountsPersistentStoreCoordinator;
}

+ (id)sharedInstance;
+ (id)generateCompoundGroupKeyOf:(id)arg1;
- (void).cxx_destruct;
- (id)applicationDocumentsDirectory;
- (id)entityDescription;
- (id)findManagedObjectsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2;
- (_Bool)saveToPersistentStore:(out id *)arg1;
- (id)getManagedObjectContext;
- (void)setManagedObjectContext:(id)arg1;
- (id)initInternal;
- (id)createFilter;
- (unsigned long long)numberOfAccountsMatchingPredicate:(id)arg1;
- (id)findAccountsMatchingPredicate:(id)arg1 sortDescriptors:(id)arg2;
- (id)findAccountsMatchingPredicate:(id)arg1;
- (_Bool)saveAccountsInternal:(id)arg1 error:(out id *)arg2;
- (_Bool)saveAccount:(id)arg1 error:(out id *)arg2;
- (_Bool)saveAccounts:(id)arg1 error:(out id *)arg2;
- (id)getManagedObjectForAccount:(id)arg1;
- (id)obtainExistingManagedObject:(id)arg1;
- (id)initializeManagedObjectIfNeeded:(id)arg1;
- (_Bool)deleteAccount:(id)arg1 error:(out id *)arg2;
- (void)logAccountCountToTelemetry;
- (id)init;
- (_Bool)mergeWithNewThirdPartyAccount:(id)arg1 ontoExistingAccount:(id)arg2 error:(id *)arg3;
- (_Bool)mergeWithNewMsaAccount:(id)arg1 ontoExistingAccount:(id)arg2 error:(id *)arg3;
- (_Bool)mergeWithNewMfaAccount:(id)arg1 ontoExistingAccount:(id)arg2 error:(id *)arg3;
- (void)mergeWithNewAadAccount:(id)arg1 ontoExistingAccount:(id)arg2;
- (void)mergeWithIncompleteMfaAccount:(id)arg1 ontoExistingAccount:(id)arg2;
- (void)overwriteUXValuesFrom:(id)arg1 ontoAccount:(id)arg2;
- (_Bool)mergeWithCompleteAccount:(id)arg1 ontoExistingAccount:(id)arg2 error:(id *)arg3;
- (_Bool)mergeWithIncompleteAccount:(id)arg1 ontoExistingAccount:(id)arg2 error:(id *)arg3;
- (id)mergeWithAccount:(id)arg1 error:(id *)arg2;
- (id)aadNgcAccountPredicate;
- (id)searchForOneAccountWithPredicate:(id)arg1;
- (id)searchForOneAccountByKey:(id)arg1 value:(id)arg2;
- (id)predicateForAccountType:(short)arg1;
- (id)predicateForAccountWithoutPartiallyRestoredBit:(short)arg1;
- (id)getPartiallyRestoredAccountsWithUsername:(id)arg1 accountType:(short)arg2 bit:(short)arg3;
- (unsigned long long)getPartiallyRestoredAccountCountWithBit:(short)arg1 forAccountType:(short)arg2;
- (id)getWatchSupportedAccounts;
- (unsigned long long)getAllAccountCount;
- (id)getAllAccounts;
- (unsigned long long)getUserAddedAccountCount;
- (id)getUpgradeableAadNgcAccounts;
- (unsigned long long)getNumberOfAccountsWithOathCodesEnabled;
- (unsigned long long)getThirdPartyAccountCount;
- (id)getThirdPartyAccounts;
- (unsigned long long)getAADNGCAccountCount;
- (id)getAADNGCAccounts;
- (unsigned long long)getAADTokenAccountCount;
- (unsigned long long)getBrokerAccountCount;
- (id)getBrokerAccounts;
- (unsigned long long)getSessionApprovalMFAAccountCount;
- (id)getSessionApprovalMFAAccounts;
- (unsigned long long)getMFAAccountCount;
- (id)getAllAadMfaAccounts;
- (unsigned long long)getSessionApprovalMSAAccountCount;
- (unsigned long long)getMSAAccountCount;
- (id)getSessionApprovalMSAAccounts;
- (id)findWPJAccount;
- (id)findAADNGCAccountWithUpn:(id)arg1;
- (id)findThirdPartyMsaWithUsername:(id)arg1;
- (id)findThirdPartyWithUsername:(id)arg1 accountName:(id)arg2;
- (id)findAADAccountWithTenantId:(id)arg1 username:(id)arg2;
- (id)findMFAAccountsWithTenantId:(id)arg1 username:(id)arg2;
- (id)findAccountWithPuid:(id)arg1;
- (id)findAccountWithCid:(id)arg1;
- (id)findAccountWithCompoundKey:(id)arg1;
- (id)findMfaAccountsWithoutGroupKey:(id)arg1 withUsername:(id)arg2 withTenantId:(id)arg3 withObjectId:(id)arg4;
- (id)findCloudMfaAccountsWithGroupKey:(id)arg1;
- (id)findCloudMfaAccountWithGroupKey:(id)arg1 objectId:(id)arg2;
- (id)findMfaAccountWithHashedObjectId:(id)arg1 groupKey:(id)arg2;
- (id)findMfaAccountWithUsername:(id)arg1 groupKey:(id)arg2;
- (id)findMatchingAccountFor:(id)arg1;
- (unsigned long long)removeMSAAccountIfNotINSDK:(id)arg1 error:(out id *)arg2;
- (void)refreshDATokenForMSAUserAccount:(id)arg1;
- (unsigned long long)syncMSAAccounts:(_Bool)arg1 error:(out id *)arg2 accountsNotInSDK:(out id *)arg3;
- (id)brokerTenantIdFromAccount:(id)arg1;
- (id)userAccountFromBrokerAccount:(id)arg1;
- (_Bool)isValidBrokerAccount:(id)arg1;
- (unsigned long long)syncWPJAccounts:(out id *)arg1;
- (unsigned long long)syncBrokerAccounts:(out id *)arg1;

@end

