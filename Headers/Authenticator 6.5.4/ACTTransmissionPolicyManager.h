//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <AriaObjC/ACTILifecycle-Protocol.h>
#import <AriaObjC/ACTITransmissionPolicyManager-Protocol.h>

@class ACTObjCTaskScheduler, NSString;
@protocol ACTIEventBaseDelegate, ACTIEventQueue, ACTIHttpDelegate, OS_dispatch_queue;

@interface ACTTransmissionPolicyManager : NSObject <ACTITransmissionPolicyManager, ACTILifecycle>
{
    NSObject<OS_dispatch_queue> *schedulerSerialQueue;
    ACTObjCTaskScheduler *scheduler;
    NSObject<OS_dispatch_queue> *wakeUpSerialQueue;
    unsigned int wakeUp;
    NSObject<OS_dispatch_queue> *intervalSerialQueue;
    _Bool _intervalIsTimerTriggered;
    _Bool _initialized;
    _Bool _registeredForNotifications;
    _Bool _userPauseTransmission;
    _Bool _paused;
    _Bool _starting;
    _Bool _background;
    int _maxConnection;
    unsigned int _intervalBaseHigh;
    unsigned int _intervalNormalMultiple;
    unsigned int _intervalLowMultiple;
    unsigned int _intervalBackOffFactor;
    int _intervalMaxBackoff;
    int _opInProgressSkipCount;
    id <ACTIEventBaseDelegate> _delegate;
    id <ACTIEventQueue> _dataSource;
    id <ACTIHttpDelegate> _http;
    double _intervalHighPriority;
    double _intervalBaseBackoff;
}

@property _Bool background; // @synthesize background=_background;
@property _Bool starting; // @synthesize starting=_starting;
@property _Bool paused; // @synthesize paused=_paused;
@property _Bool userPauseTransmission; // @synthesize userPauseTransmission=_userPauseTransmission;
@property int opInProgressSkipCount; // @synthesize opInProgressSkipCount=_opInProgressSkipCount;
@property _Bool registeredForNotifications; // @synthesize registeredForNotifications=_registeredForNotifications;
@property _Bool initialized; // @synthesize initialized=_initialized;
@property _Bool intervalIsTimerTriggered; // @synthesize intervalIsTimerTriggered=_intervalIsTimerTriggered;
@property int intervalMaxBackoff; // @synthesize intervalMaxBackoff=_intervalMaxBackoff;
@property double intervalBaseBackoff; // @synthesize intervalBaseBackoff=_intervalBaseBackoff;
@property unsigned int intervalBackOffFactor; // @synthesize intervalBackOffFactor=_intervalBackOffFactor;
@property unsigned int intervalLowMultiple; // @synthesize intervalLowMultiple=_intervalLowMultiple;
@property unsigned int intervalNormalMultiple; // @synthesize intervalNormalMultiple=_intervalNormalMultiple;
@property unsigned int intervalBaseHigh; // @synthesize intervalBaseHigh=_intervalBaseHigh;
@property double intervalHighPriority; // @synthesize intervalHighPriority=_intervalHighPriority;
@property int maxConnection; // @synthesize maxConnection=_maxConnection;
@property(retain) id <ACTIHttpDelegate> http; // @synthesize http=_http;
@property(retain) id <ACTIEventQueue> dataSource; // @synthesize dataSource=_dataSource;
@property(retain, nonatomic) id <ACTIEventBaseDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)onFlushAndTearDown:(id)arg1;
- (void)onRecordsReceived:(id)arg1;
- (void)stopOnEmpty;
- (void)stopNotEmptyWithReason:(id)arg1;
- (void)stopWithReason:(id)arg1;
- (void)startWithReason:(id)arg1;
- (id)initWithRetryDelayBase:(double)arg1 retryDelayMax:(double)arg2 maxConnection:(int)arg3;
- (void)dealloc;
- (void)sendAllEvents;
- (void)onTimerElapsed;
- (int)priorityToProcess;
- (void)onBackOff:(id)arg1;
- (void)increaseBackOff;
- (void)resetBackOff;
- (void)setHighPriorityInterval:(unsigned int)arg1 normalMultiple:(unsigned int)arg2 lowMultiple:(unsigned int)arg3;
- (void)restartTpmWithReason:(id)arg1;
- (_Bool)isPaused;
- (void)onBackground:(id)arg1;
- (void)onForeground:(id)arg1;
- (void)onSuspend:(id)arg1;
- (void)onResume:(id)arg1;
- (void)onExit:(id)arg1;
- (void)onLaunch:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

