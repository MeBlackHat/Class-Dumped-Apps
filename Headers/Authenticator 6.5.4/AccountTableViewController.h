//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AuthenticatorAuthSDK/ASDKAccountTableViewController.h>

#import "AccountTableViewCellDelegate-Protocol.h"
#import "AccountTableViewControllerProtocol-Protocol.h"
#import "AddAccountDelegate-Protocol.h"
#import "CheckForAuthHandlerDelegate-Protocol.h"
#import "UserInteractionRequiredActionUpdateDelegate-Protocol.h"
#import "_TtP23AuthenticatorFoundation29AuthenticatorMainTabNavigable_-Protocol.h"

@class ADBrokerURLSchemeRequest, AccountTableViewControllerDataProvider, BrokerViewController, CheckForAuthHandler, FirstRunView, NSString, NSTimer, NgcAccountUpgrader, RestoreForBrokerView, UIView, _TtC11PhoneFactor20SharedDeviceModeView;
@protocol TotpPopupDelegate;

@interface AccountTableViewController : ASDKAccountTableViewController <CheckForAuthHandlerDelegate, AddAccountDelegate, UserInteractionRequiredActionUpdateDelegate, AccountTableViewCellDelegate, AccountTableViewControllerProtocol, _TtP23AuthenticatorFoundation29AuthenticatorMainTabNavigable_>
{
    FirstRunView *firstRunView;
    _TtC11PhoneFactor20SharedDeviceModeView *sharedDeviceModeView;
    UIView *_anchoredContainer;
    NSTimer *_oathCodeTimer;
    unsigned long long _accountTableViewMode;
    BrokerViewController *_brokerViewController;
    ADBrokerURLSchemeRequest *_accountPickerBrokerRequest;
    NgcAccountUpgrader *_ngcAccountUpgrader;
    CheckForAuthHandler *_checkForAuthHandler;
    _Bool _currentlyCheckingForAuth;
    _Bool _currentlyChangingDeviceToken;
    _Bool _silentCheckForAuth;
    RestoreForBrokerView *_restoreForBrokerView;
    _Bool _hasPendingRequiredAction;
    _Bool _isNetworkReachable;
    AccountTableViewControllerDataProvider *_accountDataProvider;
    CDUnknownBlockType displayMenu;
    id <TotpPopupDelegate> _totpPopupDelegate;
}

- (void).cxx_destruct;
@property __weak id <TotpPopupDelegate> totpPopupDelegate; // @synthesize totpPopupDelegate=_totpPopupDelegate;
@property(copy, nonatomic) CDUnknownBlockType displayMenu; // @synthesize displayMenu;
- (void)accountPickerCanceled:(id)arg1;
- (void)oathCodePopupCanceled:(id)arg1;
@property unsigned long long accountTableViewMode;
- (void)updateCell:(id)arg1 account:(id)arg2;
- (unsigned long long)cellModeFromAccountTableViewMode:(unsigned long long)arg1;
- (void)accountsDidChange;
- (void)refetchResults;
- (void)checkForAuthCompleteWithError:(id)arg1 aadAuthFound:(_Bool)arg2 msaAuthFound:(_Bool)arg3 aadNgcAuthFound:(_Bool)arg4;
- (void)AADNGCAccountUserInputNeeded:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)AADNGCSessionFound:(id)arg1;
- (void)MSASessionFoundForAccount:(id)arg1 session:(id)arg2;
- (void)MFARequestFoundWithMFASession:(id)arg1 forAccount:(id)arg2;
- (void)checkForAuthentication:(_Bool)arg1;
- (void)resizeAnchoredContainers;
@property(readonly) UIView *anchoredContainer;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)copyOathCodeFromCell:(id)arg1;
- (void)navigateToAccountPage:(id)arg1;
- (void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 shouldIndentWhileEditingRowAtIndexPath:(id)arg2;
- (long long)tableView:(id)arg1 editingStyleForRowAtIndexPath:(id)arg2;
- (void)setEditing:(_Bool)arg1 animated:(_Bool)arg2;
- (void)tableView:(id)arg1 moveRowAtIndexPath:(id)arg2 toIndexPath:(id)arg3;
- (_Bool)tableView:(id)arg1 canMoveRowAtIndexPath:(id)arg2;
- (_Bool)tableView:(id)arg1 canEditRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 titleForDeleteConfirmationButtonForRowAtIndexPath:(id)arg2;
- (id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2;
- (double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2;
- (id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2;
- (void)brokerFailureHandler:(id)arg1;
- (void)dismissBrokerView;
- (void)invokeBrokerWithRequest:(id)arg1 account:(id)arg2 overrideForcePrompt:(_Bool)arg3;
- (void)processBrokerRequestWithUrl:(id)arg1 sourceApplication:(id)arg2;
- (void)checkForInitialWpjRequest;
- (_Bool)isInTheMiddleOfBrokerFlow;
- (void)addAccountFailedWithError:(id)arg1 accountType:(short)arg2;
- (void)onAccountAdded:(id)arg1;
- (_Bool)processAddMfaAccountRequest:(id)arg1;
- (void)restoreFromBackup;
- (void)restoreAction:(id)arg1;
- (void)pushFeedbackViewControllerAction:(id)arg1;
- (void)pushDisambiguationViewController;
- (void)enqueueRestoreAlertWithTitle:(id)arg1 message:(id)arg2 continueBlock:(CDUnknownBlockType)arg3;
- (void)showRestoreAlertWithContinueBlock:(CDUnknownBlockType)arg1;
- (void)addAccountAction:(id)arg1;
- (void)setShowHideCodes:(_Bool)arg1;
@property(readonly) _Bool shouldDisplayShowHideCodesInMenu;
- (_Bool)canCheckForNotifications;
@property(readonly) _Bool shouldDisplayCheckForAuthInMenu;
- (void)menuAction:(id)arg1;
- (void)refreshOathCodeForVisibleCells;
- (void)refreshOathCodeForVisibleCellsWithOathCodeTimer:(id)arg1;
- (void)invalidateOathCodeTimer;
- (void)startUpOathCodeTimer;
- (void)showNgcUpsellForAccount:(id)arg1;
- (void)migrateMFASecretKeysIfNeeded;
- (void)setNetworkActivityIndicatorState:(_Bool)arg1;
- (void)updateSecondaryViewsVisibility;
- (void)setupNavigationBarForSharedDeviceMode;
- (id)cancelButtonItemWithAction:(SEL)arg1;
- (id)addAccountBarButtonItem;
- (id)menuBarButtonItem;
- (id)getLeftNavigationBarButtons;
- (id)getRightNavigationBarButtonsForNormalMode;
- (void)setupNavigationBarForAccountPicker;
- (void)setupNavigationBarForBroker;
- (void)setupNavigationBarForTotpPopup;
- (void)setupNavigationBarForNormalAccountsView;
- (void)refreshNavigationBar;
- (void)applicationWillResignActive:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)setPullToRefreshCheckForNotificationGesture;
- (void)getUpdatedList:(id)arg1;
- (void)viewDidLoad;
- (id)navigationController;
- (id)navigationItem;
- (void)earlyInitialization;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

