//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Oct 25 2017 03:49:04).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@interface ACTStatsUtil : NSObject
{
}

+ (void)dropCorruptFilePriority:(int)arg1 Bytes:(long long)arg2;
+ (void)transitionFromStats:(id)arg1 toStats:(id)arg2 forEvent:(id)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)transitionFromStats:(id)arg1 toStats:(id)arg2 forEvents:(id)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)updateStats:(id)arg1 positive:(_Bool)arg2 withTenant:(id)arg3 priority:(int)arg4 logReason:(id)arg5 component:(id)arg6;
+ (void)updateAllTenantsForStat:(id)arg1 bySize:(long long)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)updateStats:(id)arg1 bySize:(long long)arg2 forEvent:(id)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)updateStats:(id)arg1 positive:(_Bool)arg2 forEvent:(id)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)updateStats:(id)arg1 positive:(_Bool)arg2 forEvents:(id)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)unleaseEvent:(id)arg1 component:(id)arg2 reason:(id)arg3;
+ (void)unleaseEvents:(id)arg1 component:(id)arg2 reason:(id)arg3;
+ (void)overflowEvent:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)overflowEvents:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)dropEventWithTenant:(id)arg1 priority:(int)arg2 reason:(int)arg3 logReason:(id)arg4 component:(id)arg5;
+ (void)dropEvent:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4 statusCode:(long long)arg5;
+ (void)dropEvents:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4 statusCode:(long long)arg5;
+ (void)rejectEvent:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)rejectEvents:(id)arg1 reason:(int)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)deleteEvent:(id)arg1 logReason:(id)arg2 component:(id)arg3;
+ (void)deleteEvents:(id)arg1 logReason:(id)arg2 component:(id)arg3;
+ (void)sentEvent:(id)arg1 component:(id)arg2 dataToSend:(id)arg3;
+ (void)sentEvents:(id)arg1 component:(id)arg2 dataToSend:(id)arg3;
+ (void)triedToSendEvent:(id)arg1 component:(id)arg2 dataToSend:(id)arg3;
+ (void)triedToSendEvents:(id)arg1 component:(id)arg2 dataToSend:(id)arg3;
+ (void)retryEvents:(id)arg1 retryReason:(id)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)requeueEvent:(id)arg1 requeueReason:(id)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)requeueEvents:(id)arg1 requeueReason:(id)arg2 logReason:(id)arg3 component:(id)arg4;
+ (void)loadEvent:(id)arg1 logReason:(id)arg2 component:(id)arg3;
+ (void)loadEvents:(id)arg1 logReason:(id)arg2 component:(id)arg3;
+ (void)saveEvent:(id)arg1 component:(id)arg2;
+ (void)saveEvents:(id)arg1 component:(id)arg2;
+ (void)receiveEvent:(id)arg1 component:(id)arg2;
+ (void)receiveEvents:(id)arg1 component:(id)arg2;
+ (void)oneDriveSendTraceToCollectorForEvents:(id)arg1 stage:(id)arg2 location:(id)arg3;
+ (void)oneDriveSendTraceToCollectorForEvent:(id)arg1 oneDriveActionEventName:(id)arg2 stage:(id)arg3 location:(id)arg4;
+ (id)getOneDriveActionEventName:(id)arg1;
+ (id)getOneDriveCorrelationId:(id)arg1;
+ (_Bool)isOneDriveActionTrace;
+ (long long)getUpdateCountFromSize:(long long)arg1 statName:(id)arg2 statInstance:(id)arg3 shouldExit:(_Bool *)arg4;
+ (id)nameForDropReason:(int)arg1 statusCode:(long long)arg2;
+ (id)nameForRejectReason:(int)arg1;
+ (void)setTpmStageChangeReason:(id)arg1 paused:(_Bool)arg2;

@end

