//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Core/GCDAsyncSocketDelegate-Protocol.h>

@class GCDAsyncSocket, NSArray, NSMutableArray, NSMutableData, NSNumber, NSString, WADNSMetrics, WADNSResolver, WAExecutionTimeProfiler, WAInetAddress, WAPrewarmedHostEntry, WATimer, XMPPEndpoint;
@protocol OS_dispatch_queue, XMPPSocketDelegate;

@interface XMPPSocket : NSObject <GCDAsyncSocketDelegate>
{
    GCDAsyncSocket *_socket;
    double _timeout;
    WATimer *_disconnectionTimer;
    NSArray *_waHosts;
    NSArray *_fbHosts;
    int _currentState;
    NSMutableArray *_endpoints;
    NSMutableArray *_nonOverrideFallbacks;
    XMPPEndpoint *_currentEndpoint;
    int _primaryPort;
    int _secondaryPort;
    NSString *_interface;
    _Bool _didConnectSuccessfully;
    int _httpChunkRemainingLength;
    NSMutableData *_httpRemainingChunk;
    WADNSResolver *_dnsResolver;
    WADNSMetrics *_currentDNSMetrics;
    int _attemptUsedToConnect;
    WAExecutionTimeProfiler *_socketProfiler;
    _Bool _socketEventSentWithCurrentStateMachine;
    NSNumber *_externalDisconnect;
    NSArray *_fallbackAddresses;
    _Bool _bindsToCellularNetwork;
    _Bool _useFBHosts;
    _Bool _isWamsysConnection;
    _Bool _useDefaultPortFirst;
    NSString *_hostnameOverride;
    NSNumber *_portOverride;
    WAInetAddress *_hintIP;
    WAPrewarmedHostEntry *_prewarmedHostEntry;
    NSNumber *_protoDNSResolutionMethod;
    id <XMPPSocketDelegate> _delegate;
}

@property(nonatomic) __weak id <XMPPSocketDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool useDefaultPortFirst; // @synthesize useDefaultPortFirst=_useDefaultPortFirst;
@property(readonly, nonatomic) NSNumber *protoDNSResolutionMethod; // @synthesize protoDNSResolutionMethod=_protoDNSResolutionMethod;
@property(retain, nonatomic) WAPrewarmedHostEntry *prewarmedHostEntry; // @synthesize prewarmedHostEntry=_prewarmedHostEntry;
@property(nonatomic) _Bool isWamsysConnection; // @synthesize isWamsysConnection=_isWamsysConnection;
@property _Bool useFBHosts; // @synthesize useFBHosts=_useFBHosts;
@property(retain) WAInetAddress *hintIP; // @synthesize hintIP=_hintIP;
@property(nonatomic) _Bool bindsToCellularNetwork; // @synthesize bindsToCellularNetwork=_bindsToCellularNetwork;
@property(copy) NSNumber *portOverride; // @synthesize portOverride=_portOverride;
@property(copy) NSString *hostnameOverride; // @synthesize hostnameOverride=_hostnameOverride;
- (void).cxx_destruct;
- (void)debug_setDNSResolutionMethod;
- (void)socketDidDisconnect:(id)arg1 withError:(id)arg2;
- (void)socket:(id)arg1 didWriteDataWithTag:(long long)arg2;
- (void)socket:(id)arg1 didReadData:(id)arg2 withTag:(long long)arg3;
- (void)socket:(id)arg1 didConnectToHost:(id)arg2 port:(unsigned short)arg3;
- (void)socket:(id)arg1 didReceiveTrust:(struct __SecTrust *)arg2 completionHandler:(CDUnknownBlockType)arg3;
@property(readonly, nonatomic) NSNumber *currentPort;
@property(readonly, nonatomic) WAInetAddress *currentAddress;
@property(readonly, copy, nonatomic) NSString *currentHost;
@property(readonly, nonatomic, getter=isAlive) _Bool alive;
- (void)writeData:(id)arg1 withTimeout:(double)arg2;
- (void)readDataWithTimeout:(double)arg1;
@property(readonly, nonatomic, getter=isConnected) _Bool connected;
- (void)disconnectAfterWriting;
- (void)disconnectImmediately;
- (void)shutDownSocket;
- (void)connect;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue;
@property(copy) NSArray *fallbackAddresses;
- (id)socket;
- (id)cellularInterface;
- (int)currentState;
- (_Bool)connectToEndpoint:(id)arg1 onInterface:(id)arg2 error:(id *)arg3;
- (void)processHttpChunkData:(id)arg1;
- (void)resetInternalState;
- (void)xmppSocketDidDisconnect;
- (void)updateAndPerformNextState;
- (void)connectToHost;
- (void)submitChatSocketDisconnectEvent;
- (id)portForCurrentState;
- (id)nonOverrideHostIsFB:(_Bool *)arg1;
- (id)initWithQueue:(id)arg1 timeout:(double)arg2 dnsResolver:(id)arg3 socket:(id)arg4 waHosts:(id)arg5 fbHosts:(id)arg6;
- (id)initWithQueue:(id)arg1 dnsResolver:(id)arg2 timeout:(double)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

