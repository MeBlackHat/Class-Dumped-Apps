//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Core/WAStreamingMediaLoaderTaskDelegate-Protocol.h>

@class NSArray, NSFileHandle, NSMutableArray, NSMutableIndexSet, NSString, NSURL, WAStreamingMediaLoaderDownloadMetrics, WAStreamingMediaLoaderInfo, WAStreamingMediaLoaderProgress;
@protocol OS_dispatch_queue, WAStreamingMediaLoaderTaskManagerDelegate;

@interface WAStreamingMediaLoaderTaskManager : NSObject <WAStreamingMediaLoaderTaskDelegate>
{
    NSString *_identifier;
    NSMutableArray *_tasks;
    // Error parsing type: AI, name: _modeFlags
    _Bool _downloadedEntireFile;
    _Bool _cancelled;
    NSFileHandle *_fileHandle;
    NSMutableIndexSet *_fileMap;
    unsigned long long _fileMapCounter;
    // Error parsing type: AB, name: _hasThumbnailOrPrefetchBytes
    // Error parsing type: AB, name: _hasAggressivePrefetchBytes
    WAStreamingMediaLoaderDownloadMetrics *_downloadMetrics;
    NSObject<OS_dispatch_queue> *_queue;
    id <WAStreamingMediaLoaderTaskManagerDelegate> _delegate;
    NSURL *_fileURL;
    double _estimatedBandwidth;
    WAStreamingMediaLoaderInfo *_info;
    NSString *_taskIdentifiers;
}

@property(copy) NSString *taskIdentifiers; // @synthesize taskIdentifiers=_taskIdentifiers;
@property(readonly, nonatomic) NSArray *tasks; // @synthesize tasks=_tasks;
@property(readonly, nonatomic) WAStreamingMediaLoaderInfo *info; // @synthesize info=_info;
@property(nonatomic) double estimatedBandwidth; // @synthesize estimatedBandwidth=_estimatedBandwidth;
@property(readonly, nonatomic) NSURL *fileURL; // @synthesize fileURL=_fileURL;
@property(readonly, nonatomic) __weak id <WAStreamingMediaLoaderTaskManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)trimTasksIfNeeded:(id)arg1;
- (_Bool)restartTask:(id)arg1 filterCellular:(_Bool)arg2;
- (void)createRequestsWithType:(unsigned long long)arg1 requestedRange:(struct _NSRange)arg2 resourceLoader:(id)arg3 loadingRequest:(id)arg4 queuedDate:(id)arg5;
- (void)loaderTask:(id)arg1 didCompleteWithError:(id)arg2 downloadEvents:(id)arg3;
- (void)loaderTask:(id)arg1 didReceiveData:(id)arg2 atOffset:(unsigned long long)arg3 isEOF:(_Bool)arg4;
- (_Bool)cellularAccessAllowedForRequestType:(unsigned long long)arg1 range:(struct _NSRange)arg2;
- (unsigned long long)upperLimitForThumbnailOrPrefetchMode;
- (unsigned long long)upperLimitForAggressivePrefetchMode;
- (unsigned long long)upperDownloadLimitForCurrentMode;
- (void)clearModeFlags:(unsigned long long)arg1;
- (void)setModeFlags:(unsigned long long)arg1;
- (_Bool)hasAnyModeFlags:(unsigned long long)arg1;
- (unsigned long long)allModeFlags;
- (void)handleFileHandleError;
- (unsigned long long)missingBytesFromOffset:(unsigned long long)arg1 toOffset:(unsigned long long)arg2;
- (struct _NSRange)firstMissingRangeInRange:(struct _NSRange)arg1;
- (unsigned long long)availableFromOffset:(unsigned long long)arg1 toOffset:(unsigned long long)arg2;
- (_Bool)fillNextGapForced:(_Bool)arg1 isThumbnail:(_Bool)arg2 queuedDate:(id)arg3;
- (_Bool)fillGapsWithModeFlags:(unsigned long long)arg1 queuedDate:(id)arg2;
- (void)didVerifyFileSize:(unsigned long long)arg1;
- (void)didDownloadEntireFile;
@property(readonly) _Bool hasAggressivePrefetchBytes;
@property(readonly) _Bool hasThumbnailChunks;
@property(readonly) _Bool hasEntireFile;
- (void)saveFileMap;
- (void)finishIfIdle;
- (void)finish;
- (void)close;
- (_Bool)open;
- (_Bool)isOpen;
- (_Bool)feedDataRequest:(id)arg1 isEOF:(_Bool)arg2;
- (void)cancelLoadingRequest:(id)arg1 from:(id)arg2;
- (void)handleRequest:(id)arg1 from:(id)arg2;
- (void)feedThumbnailRequest:(id)arg1;
@property(readonly) float loadedProgress;
@property(readonly) int bytesToGo;
@property(readonly) WAStreamingMediaLoaderProgress *progress;
@property(readonly, nonatomic) _Bool canPrefetch;
@property(readonly, nonatomic) unsigned long long activeRequestCount;
@property(readonly, nonatomic) _Bool isIdle;
- (void)cancelPlaybackRequestsToEndOfResourceForRequest:(id)arg1 resourceLoader:(id)arg2;
- (void)cancelTasksWithRequestTypes:(unsigned long long)arg1 loadingRequest:(id)arg2 resourceLoader:(id)arg3 alreadyFinished:(_Bool)arg4 userInitiated:(_Bool)arg5;
- (void)cancelDownloadOnlyTasks;
- (void)cancelAllTasksForSuspension:(_Bool)arg1 userInitiated:(_Bool)arg2;
- (void)updateIdentifiers;
- (void)removeTask:(id)arg1;
- (void)addTask:(id)arg1;
- (id)description;
- (void)dealloc;
- (id)initWithInfo:(id)arg1 fileURL:(id)arg2 fileMap:(id)arg3 delegate:(id)arg4 queue:(id)arg5;

@end

