//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Core/XMPPConnectionDelegate-Protocol.h>

@class NSMutableDictionary, NSString, WABackgroundConnectionAvailableNotifier;
@protocol WAExtensionSendingManagerDelegate;

@interface WAExtensionSendingManager : NSObject <XMPPConnectionDelegate>
{
    NSMutableDictionary *_pendingSendRequests;
    WABackgroundConnectionAvailableNotifier *_bgNotifier;
    id <WAExtensionSendingManagerDelegate> _delegate;
}

@property(nonatomic) __weak id <WAExtensionSendingManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)xmppConnection:(id)arg1 didRequestOutgoingMessageStatusChangeWithRequest:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)xmppConnection:(id)arg1 serverTimeChanged:(id)arg2 shift:(double)arg3;
- (void)xmppConnection:(id)arg1 didReceiveOfflineReceiptWithStanzas:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)xmppConnection:(id)arg1 didReceiveRetryReceiptForMessageID:(id)arg2 fromActorJIDWrapper:(id)arg3 edit:(long long)arg4 registrationId:(id)arg5 retryCount:(unsigned int)arg6;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorForOutgoingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 encryptedReceipt:(id)arg5;
- (void)xmppConnection:(id)arg1 didReceiveServerErrorAckForIncomingMessageWithStanzaID:(id)arg2 fromJID:(id)arg3 participantJID:(id)arg4 edit:(long long)arg5;
- (void)xmppConnection:(id)arg1 didReceiveCallRekeyReceipt:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallOfferReceipt:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveCallAck:(id)arg2;
- (void)xmppConnection:(id)arg1 didReceiveIncomingCallStanza:(id)arg2;
- (void)xmppConnectionDidReceiveOfflineMarker:(id)arg1;
- (void)xmppConnection:(id)arg1 callStanzaDidTimeOut:(id)arg2;
- (void)xmppConnectionStopLocationSharing:(id)arg1;
- (void)xmppConnection:(id)arg1 willHandleMessageStanza:(id)arg2;
- (void)xmppConnection:(id)arg1 didDiscardMessageStanza:(id)arg2;
- (_Bool)xmppConnection:(id)arg1 didReceiveMessages:(id)arg2 error:(out id *)arg3;
- (void)xmppConnection:(id)arg1 chatStateChanged:(unsigned long long)arg2 forJID:(id)arg3 participantJID:(id)arg4;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2 forJID:(id)arg3;
- (void)xmppConnection:(id)arg1 presenceChanged:(unsigned long long)arg2;
- (void)xmppConnection:(id)arg1 didRequestIncomingMessageStatusChanges:(id)arg2;
- (void)xmppConnectionDidFinishProcessingOfflineMessages:(id)arg1;
- (void)xmppConnectionDidDisconnect:(id)arg1;
- (void)xmppConnectionDidAuthenticate:(id)arg1 dataCenter:(id)arg2;
- (void)xmppConnectionDidConnect:(id)arg1;
- (void)xmppConnection:(id)arg1 stateChanged:(unsigned long long)arg2;
- (_Bool)xmppConnection:(id)arg1 startLocationSharingForJID:(id)arg2 duration:(int)arg3;
- (void)xmppConnectionDidNotAuthenticate:(id)arg1 dataCenter:(id)arg2 failureCode:(long long)arg3 lockDuration:(double)arg4 retryAfter:(double)arg5 tempBanReasonCode:(long long)arg6 tempBanURL:(id)arg7 tempBanMessage:(id)arg8;
- (unsigned long long)xmppConnection:(id)arg1 statusChanged:(int)arg2 forOutgoingMessagesWithStanzas:(id)arg3 chatJID:(id)arg4 actorJIDWrapper:(id)arg5 userData:(id)arg6;
- (void)sendItem:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancelSendItemsWithOutbox:(id)arg1;
- (void)sendUnsentOrFailedMessagesInOutbox:(id)arg1 pickerStatistics:(id)arg2;
- (void)sendItemsUpToAndIncluding:(id)arg1 inOutbox:(id)arg2 usingDispatchGroup:(id)arg3;
- (void)dealloc;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

