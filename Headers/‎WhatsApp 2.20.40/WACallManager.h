//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import "WACallVoipBridgeDelegate-Protocol.h"
#import "WAVideoCaptureViewDelegate-Protocol.h"

@class AVAudioPlayer, CMMotionManager, NSCache, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, WAAudioActivity, WACallInfo, WACallNotificationManager, WACallProviderDelegate, WAReferenceCountToken, WATimer, WAUserJID, WAVideoCaptureView, WamEventCall;
@protocol OS_dispatch_queue, WACallManagerDelegate;

@interface WACallManager : NSObject <WACallVoipBridgeDelegate, WAVideoCaptureViewDelegate>
{
    _Bool _callBlocked;
    WACallProviderDelegate *_callProviderDelegate;
    _Bool _needsUninitializeCall;
    _Bool _callBusy;
    WATimer *_uninitializeCallTimer;
    WATimer *_rejectTimer;
    double _outgoingCallStartTime;
    int _callEndReason;
    long long _currentOrientation;
    CMMotionManager *_motionManager;
    WACallInfo *_callInfo;
    _Bool _isMonitoringOrientation;
    NSMutableDictionary *_participantVideoViews;
    NSObject<OS_dispatch_queue> *_voip_web_request_queue;
    _Bool _isPeerRequestingVideoUpgrade;
    _Bool _isSelfRequestingVideoUpgrade;
    _Bool _disableVideoScheduled;
    NSMutableArray *_offlineStanzaQueue;
    NSMutableSet *_offlineProcessedCallStanza;
    NSMutableDictionary *_offlineCutoffTimestamp;
    NSMutableArray *_offlineOffer;
    NSCache *_recentlyTerminatedCalls;
    int _rekeyTransactionID;
    WATimer *_ongoingCallTimer;
    WATimer *_callUpgradeRequestTimer;
    WATimer *_fetchOfferTimer;
    WATimer *_sendOfferTimer;
    NSMutableDictionary *_groupCallInviteTimerForParticipantJID;
    int _callWakeupSource;
    double _secondsSinceLastRating;
    WamEventCall *_savedFieldStatsEvent;
    int _callUISource;
    NSString *_callPeerPlatform;
    NSString *_callPeerVersion;
    _Bool _isScreenDimmed;
    WAReferenceCountToken *_quietTimeToken;
    WAAudioActivity *_incomingSoundActivity;
    AVAudioPlayer *_endCallSoundPlayer;
    WAAudioActivity *_callActivity;
    unsigned int _callSoundPlayer;
    NSTimer *_vibrationTimer;
    _Bool _isCallInterrupted;
    _Bool _isCallBackground;
    NSMutableDictionary *_calls;
    _Bool _relayBindsFailed;
    _Bool _pendingBackgroundCall;
    _Bool _interimCallPresent;
    _Bool _callConnected;
    _Bool _callRejectedByPeer;
    _Bool _callTimedout;
    _Bool _endCallInProgress;
    _Bool _defaultPortraitMode;
    _Bool _shouldUploadLogs;
    _Bool _enableCallerMessageBuffer;
    _Bool _enableCalleeMessageBuffer;
    _Bool _uploadFieldStatsAtCallEnd;
    _Bool _badASN;
    _Bool _showRatingScreenForCall;
    int _callState;
    int _callStartDelayInMilliseconds;
    int _portraitModeThreshold;
    int _landscapeModeThreshold;
    int _horizontalDegreeThreshold;
    id <WACallManagerDelegate> _delegate;
    WACallInfo *_lastCallInfo;
    long long _batteryLevelAtCallStart;
    WACallNotificationManager *_callNotificationManager;
    NSObject<OS_dispatch_queue> *_voipQueue;
    WAVideoCaptureView *_selfVideoSubview;
    NSNumber *_secondsSinceCallOffer;
    NSString *_callIDFromOffer;
    NSString *_callOfferPushName;
    double _dimScreenInVideoCallPercentage;
    long long _spamCallThresholdSeconds;
    long long _showRatingIntervalInSeconds;
}

+ (_Bool)isVoIPPushFlowEnabled;
+ (_Bool)isCalleeMessageBufferEnabled;
+ (_Bool)isCallerMessageBufferEnabled;
+ (int)callStartDelayInMilliseconds;
@property long long showRatingIntervalInSeconds; // @synthesize showRatingIntervalInSeconds=_showRatingIntervalInSeconds;
@property _Bool showRatingScreenForCall; // @synthesize showRatingScreenForCall=_showRatingScreenForCall;
@property _Bool badASN; // @synthesize badASN=_badASN;
@property _Bool uploadFieldStatsAtCallEnd; // @synthesize uploadFieldStatsAtCallEnd=_uploadFieldStatsAtCallEnd;
@property long long spamCallThresholdSeconds; // @synthesize spamCallThresholdSeconds=_spamCallThresholdSeconds;
@property _Bool enableCalleeMessageBuffer; // @synthesize enableCalleeMessageBuffer=_enableCalleeMessageBuffer;
@property _Bool enableCallerMessageBuffer; // @synthesize enableCallerMessageBuffer=_enableCallerMessageBuffer;
@property _Bool shouldUploadLogs; // @synthesize shouldUploadLogs=_shouldUploadLogs;
@property _Bool defaultPortraitMode; // @synthesize defaultPortraitMode=_defaultPortraitMode;
@property int horizontalDegreeThreshold; // @synthesize horizontalDegreeThreshold=_horizontalDegreeThreshold;
@property int landscapeModeThreshold; // @synthesize landscapeModeThreshold=_landscapeModeThreshold;
@property int portraitModeThreshold; // @synthesize portraitModeThreshold=_portraitModeThreshold;
@property double dimScreenInVideoCallPercentage; // @synthesize dimScreenInVideoCallPercentage=_dimScreenInVideoCallPercentage;
@property int callStartDelayInMilliseconds; // @synthesize callStartDelayInMilliseconds=_callStartDelayInMilliseconds;
@property(copy, nonatomic) NSString *callOfferPushName; // @synthesize callOfferPushName=_callOfferPushName;
@property(copy, nonatomic) NSString *callIDFromOffer; // @synthesize callIDFromOffer=_callIDFromOffer;
@property(copy, nonatomic) NSNumber *secondsSinceCallOffer; // @synthesize secondsSinceCallOffer=_secondsSinceCallOffer;
@property(retain, nonatomic) WAVideoCaptureView *selfVideoSubview; // @synthesize selfVideoSubview=_selfVideoSubview;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *voipQueue; // @synthesize voipQueue=_voipQueue;
@property int callState; // @synthesize callState=_callState;
@property _Bool endCallInProgress; // @synthesize endCallInProgress=_endCallInProgress;
@property(readonly, nonatomic) WACallNotificationManager *callNotificationManager; // @synthesize callNotificationManager=_callNotificationManager;
@property(readonly, nonatomic) _Bool callTimedout; // @synthesize callTimedout=_callTimedout;
@property(readonly, nonatomic) _Bool callRejectedByPeer; // @synthesize callRejectedByPeer=_callRejectedByPeer;
@property(nonatomic) _Bool callConnected; // @synthesize callConnected=_callConnected;
@property _Bool interimCallPresent; // @synthesize interimCallPresent=_interimCallPresent;
@property(nonatomic) long long batteryLevelAtCallStart; // @synthesize batteryLevelAtCallStart=_batteryLevelAtCallStart;
@property(nonatomic) _Bool pendingBackgroundCall; // @synthesize pendingBackgroundCall=_pendingBackgroundCall;
@property(nonatomic) _Bool relayBindsFailed; // @synthesize relayBindsFailed=_relayBindsFailed;
@property(retain, nonatomic) WACallInfo *lastCallInfo; // @synthesize lastCallInfo=_lastCallInfo;
@property(nonatomic) __weak id <WACallManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) WACallProviderDelegate *callProviderDelegate; // @synthesize callProviderDelegate=_callProviderDelegate;
- (void).cxx_destruct;
- (void)didFailToEndCall;
- (void)updateNetworkMedium;
- (void)networkStatusDidChange:(id)arg1;
- (void)captureSessionRuntimeError:(id)arg1;
- (void)deviceOrientationChanged:(long long)arg1;
- (void)stopOrientationMonitoring;
- (double)accelerationToDegree:(CDStruct_39925896)arg1;
- (void)accelerometerDidUpdateWithData:(id)arg1;
- (void)startOrientationMonitoring;
- (void)startOutgoingCallWith:(id)arg1 withVideo:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (void)attemptOutgoingCellularVoiceCallWithPhoneURL:(id)arg1 fromViewController:(id)arg2;
- (void)internalAttemptOutgoingVoiceCallWithJIDs:(id)arg1 callUISource:(int)arg2 withVideo:(_Bool)arg3;
- (void)attemptOutgoingVoiceCallWithJIDs:(id)arg1 callUISource:(int)arg2 withVideo:(_Bool)arg3;
- (void)addMissedCallFromPeerJID:(id)arg1 withParticipantsJID:(id)arg2 isVideoCall:(_Bool)arg3 timestamp:(double)arg4 timeIntervalSinceCallOffer:(id)arg5;
- (void)addCallEventWithHeldCallInfo:(id)arg1;
- (void)addCallEvent:(id)arg1;
- (void)updateCallsForEndingCallEvent;
- (void)removeNonPendingCalls;
@property(readonly, nonatomic) _Bool currentCallWasPendingCall;
@property(readonly, nonatomic) _Bool hasPendingCall;
- (id)pendingCalls;
@property(readonly, nonatomic) _Bool isCellularCallActive;
@property(readonly, nonatomic) _Bool needsInterruption;
@property(readonly, nonatomic) _Bool isWebClientCallActive;
@property(readonly, nonatomic) double callDuration;
@property(readonly, nonatomic) _Bool isBadASN;
@property(readonly, nonatomic) _Bool isInitiatingCall;
@property(readonly, nonatomic) _Bool isCallStarted;
@property(readonly, nonatomic) _Bool isCallActive;
- (void)showedRatingScreenForCall;
- (_Bool)shouldGetRating;
- (_Bool)shouldShowRatingScreenForCall;
- (void)reallyAcceptCall;
- (void)acceptCall;
- (void)acceptPendingCallAndHoldCurrentCall;
- (void)acceptPendingCallAndEndCurrentCall;
- (void)executeAfterPermissionsCheck:(CDUnknownBlockType)arg1;
- (void)resumeHeldCall:(id)arg1;
- (void)switchToOtherCall;
- (void)endPendingCall;
- (void)endCallWithReason:(int)arg1;
- (void)makeHeldCallActive:(id)arg1;
- (void)mute:(_Bool)arg1;
@property(readonly, nonatomic) _Bool isChangingNumber;
@property(readonly, nonatomic) _Bool callEndedByUser;
@property(readonly, nonatomic) _Bool callFailed;
@property(readonly, nonatomic) NSString *callID;
@property(readonly, nonatomic) WAUserJID *peerJid;
- (_Bool)shouldUseCallKitForCallWithVideo:(_Bool)arg1;
@property(retain, nonatomic) WACallInfo *callInfo;
- (_Bool)processRetryReceiptForPeerJID:(id)arg1 callID:(id)arg2 registrationID:(unsigned int)arg3 retryCount:(unsigned char)arg4;
- (id)getMessageIDFromPeerJID:(id)arg1 callID:(id)arg2;
- (void)didFailToChangeToCallWaitingState:(unsigned long long)arg1;
- (void)didChangeToCallWaitingState:(unsigned long long)arg1;
- (void)handlePendingCallTerminateProcessed:(id)arg1;
- (void)handleAudioSessionActivatedFromCallKitForIncomingCall:(id)arg1;
- (void)handleCallAcceptedFromCallKit:(id)arg1;
- (void)reportIncomingCallFromPushPayload:(id)arg1;
- (id)peerParticipantsFromPushPayload:(id)arg1;
- (_Bool)isCallKitSupported;
- (void)setCallType:(unsigned long long)arg1 forCallID:(id)arg2;
- (void)endWACall:(id)arg1;
- (void)showAlertView:(id)arg1;
- (void)handleRejectReason:(unsigned long long)arg1 withParticipantJID:(id)arg2;
- (void)failCurrentCallWithGenericError;
- (void)failCurrentCallWithGroupError:(unsigned long long)arg1;
- (void)failCurrentCallWithNackError:(unsigned long long)arg1;
- (void)failCurrentCall;
- (void)showNetworkFailureAlerts;
- (void)handleCallInterruptionStateChanged:(int)arg1;
- (void)callEnterBackground;
- (void)callEnterForeground;
- (void)handleCallStateOnEnteringForeground;
- (void)blockedContactsListUpdated:(id)arg1;
- (void)dismissCallView;
- (void)uninitializeCallStateIfNeeded;
- (void)setNeedsUninitializeCallState;
- (void)reportEndedCallIDWithCachedReason:(id)arg1;
- (void)initializeCallStateWithVideo:(_Bool)arg1;
- (void)saveApplicationSettings;
- (void)doVoIPInit;
- (id)init;
- (void)notifyUncallableUserWithJID:(id)arg1 isVideoCall:(_Bool)arg2;
- (void)notifyFallbackToVoiceCall;
- (void)notifyBlockedNetworkForPeerJID:(id)arg1;
- (void)notifyBlockedNetwork;
- (void)notifyIncompatibleNetwork;
- (void)callInterruptionDidEnd:(id)arg1;
- (void)callInterruptionDidBegin:(id)arg1;
- (void)removeAudioSessionInterrptionObserver;
- (void)addAudioSessionInterruptionObserver;
- (void)stopIncomingCallVibration;
- (void)onVibrateTimer;
- (void)startIncomingCallVibrationIfNeeded;
- (void)audioSessionDidChangeRingerState:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void *)arg4;
- (void)playCallEndedSound;
- (void)stopIncomingCallSound;
- (void)playIncomingCallSound;
- (id)descriptionOfAllPorts:(id)arg1;
- (void)logAudioRoutes;
- (void)routeAudioToOutputRoute:(id)arg1;
- (id)currentActiveAudioRoute;
- (id)availableAudioRoutes;
- (void)restorePreviousAudioCategory;
- (void)startVoipAudioSessionIfNecessaryForVideoCall:(_Bool)arg1;
- (void)voipBridgeDidChangeToCallState:(int)arg1 fromCallState:(int)arg2 processedElsewhere:(_Bool)arg3;
- (void)voipBridgeDidCreateVideoRenderView:(id)arg1 forParticipantJID:(id)arg2;
- (void)voipBridgeDidFailToChangeToCallWaitingState:(unsigned long long)arg1;
- (void)voipBridgeDidChangeToCallWaitingState:(unsigned long long)arg1;
- (void)voipBridgeDidReceiveByeSignal;
- (void)voipBridgeDidCreateSoundPort;
- (void)voipBridgeDidFailRelayBindsWithBadASN:(_Bool)arg1;
- (void)voipBridgeDidTimeoutPacketStream;
- (void)voipBridgeDidFailToCreateVideoRenderView;
- (void)voipBridgeDidReceiveGenericMediaFailure;
- (void)voipBridgeDidReceiveTerminateForCall:(id)arg1 fromCarrierBlock:(_Bool)arg2;
- (void)voipBridgeVideoCodecMismatch;
- (void)voipBridgeDidFailToDecryptWithPeerJID:(id)arg1 callID:(id)arg2 registrationID:(unsigned int)arg3 retryCount:(unsigned char)arg4;
- (void)voipBridgeDidReceiveMissedCallFromJID:(id)arg1 videoCall:(_Bool)arg2 timeIntervalSinceCallOffer:(double)arg3 participantJIDs:(id)arg4;
- (void)voipBridgeDidSwitchFromWiFiToCellular;
- (void)voipBridgeSelfDidChangeToVideoState:(unsigned long long)arg1;
- (void)voipBridgePeerDidChangeToVideoState:(unsigned long long)arg1;
- (void)voipBridgeDidReceiveLowBatteryWarningForPeerJID:(id)arg1;
- (void)voipBridgeDidReceiveLowBatteryWarning;
- (void)voipBridgeDidFailToCreateVideoStream;
- (void)voipBridgeDidFailToProcessOfferAck;
- (void)voipBridgeDidFailToProcessPreaccept;
- (void)voipBridgeDidReceivePreaccept;
- (void)voipBridgeDidFailToRejectVideoUpgradeRequest;
- (void)voipBridgeDidFailToCancelVideoUpgradeRequest;
- (void)voipBridgeDidFailToAcceptVideoUpgradeRequest;
- (void)voipBridgeCallIsEndingWithCallEvent:(id)arg1 answeredElsewhere:(_Bool)arg2 showRatingInterval:(double)arg3;
- (void)voipBridgeDidFailToEndCall;
- (void)voipBridgeParticipantJID:(id)arg1 didRejectWithReason:(unsigned long long)arg2;
- (void)voipBridgeParticipantJID:(id)arg1 didLeaveGroupCallWithReason:(unsigned long long)arg2;
- (void)voipBridgeDidChangeGroupInfo;
- (void)voipBridgeDidFailToAddParticipantJID:(id)arg1 error:(unsigned long long)arg2;
- (void)voipBridgeDidNackCallOfferWithGenericError;
- (void)voipBridgeDidNackCallOfferWithNackError:(unsigned long long)arg1;
- (void)voipBridgeDidNackCallOfferWithGroupCallError:(unsigned long long)arg1 withJIDs:(id)arg2;
- (void)voipBridgeDidRequestVoipParamsProcessForStanza:(id)arg1;
- (void)voipBridgeDidFinishProcessOffer;
- (void)voipBridgePreprocessStanza:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)voipBridgeShouldPreprocessStanza:(id)arg1;
- (void)voipBridgeDidUpdateToCallInfo:(id)arg1;
- (void)restoreScreenBrightness;
- (void)dimScreenBrightnessForVideoCall;
- (void)logVoIP:(const char *)arg1 level:(int)arg2;
- (void)registerCallbacks;
- (_Bool)getEncryptionBytes:(char *)arg1 length:(int *)arg2 fromEncryptionElement:(id)arg3 registrationElement:(id)arg4 peerJID:(id)arg5 callID:(id)arg6;
- (void)setEncryptionElementForStanza:(id)arg1 encryptionBytes:(id)arg2 encryptionType:(id)arg3 retryCount:(int)arg4;
- (double)parseUserIdFromJID:(id)arg1;
- (long long)getRadioType;
- (void)attachUserRating:(int)arg1 problems:(unsigned long long)arg2 text:(id)arg3;
- (id)createEventFromFieldStats:(const CDStruct_f35f49c0 *)arg1;
- (void)submitFieldStatsEvent:(id)arg1;
- (void)flushSavedFieldStats;
- (long long)getCallResultFromSavedFieldStats;
- (void)submitSavedFieldStatsWithoutUserRating;
- (void)submitSavedFieldStatsWithUserRating:(int)arg1 problems:(unsigned long long)arg2 text:(id)arg3;
- (void)saveFieldStats:(const CDStruct_f35f49c0 *)arg1;
- (void)submitFieldStatsForMissedIncomingCall:(id)arg1;
- (void)submitFieldStats:(const CDStruct_f35f49c0 *)arg1;
- (void)initFieldStats;
- (void)didFailToAddParticipantJIDs:(id)arg1 error:(unsigned long long)arg2;
- (void)groupInfoDidChange;
- (void)updateCallProviderDelegate;
- (void)updateCallState;
- (void)cancelInviteToParticipantJID:(id)arg1;
- (void)addParticipantJID:(id)arg1;
- (void)markCallAsTrusted;
- (void)blockCaller;
- (void)reportCallAndBlockContact:(_Bool)arg1;
- (_Bool)isSpam;
- (_Bool)shouldShowSpamReportView;
- (void)cancelGroupCallInviteForConnectedAndRemovedParticipants;
- (void)cancelAllGroupCallInviteTimeouts;
- (void)cancelGroupCallInviteTimeoutForParticipantJID:(id)arg1;
- (void)startGroupCallInviteTimeout:(double)arg1 forParticipantJID:(id)arg2;
- (void)cancelCallUpgradeRequestTimeout;
- (void)startCallUpgradeRequestTimeout:(double)arg1;
- (void)cancelFetchOfferTimeout;
- (void)waitFetchOfferTimeout:(double)arg1 forCallID:(id)arg2;
- (void)cancelCallTimeout;
- (void)startCallTimeout:(double)arg1;
- (void)updateVideoPausedState;
- (id)getParticipantVideoViewForParticipantJID:(id)arg1;
- (void)destroyTerminatedParticipantViews;
- (void)destroyAllParticipantVideoViews;
- (void)destroyParticipantVideoViewForParticipantJID:(id)arg1;
- (void)addParticipantVideoView:(id)arg1 forParticipantJID:(id)arg2;
- (void)ensureVideoSubviewSet:(id)arg1 forParticipantJID:(id)arg2;
- (void)addSelfVideoToView:(id)arg1;
- (void)destroySelfVideo;
- (struct CGSize)videoSizeForParticipant:(id)arg1;
- (void)switchCamera;
- (void)turnCameraOff;
- (void)turnCameraOn;
@property(readonly, nonatomic) _Bool peerHasRequestedVideo;
@property(readonly, nonatomic) _Bool callHasVideo;
- (void)rejectUpgradeToVideoCall:(_Bool)arg1;
- (void)cancelUpgradeToVideoCall:(_Bool)arg1;
- (void)reallyAcceptUpgradeToVideoCall;
- (void)acceptUpgradeToVideoCall;
- (void)reallyRequestUpgradeToVideoCall;
- (void)requestUpgradeToVideoCallWithCameraPermission;
- (void)requestUpgradeToVideoCall;
- (void)handleVideoCallUpgradeCompleted;
- (void)presentVideoCallViewResetForSameCurrentVideoState:(_Bool)arg1;
- (void)presentAudioCallViewResetForSameCurrentVideoState:(_Bool)arg1;
- (void)presentVideoCallView;
- (void)presentAudioCallView;
- (void)ensureVideoEnabledForVideoState:(unsigned long long)arg1 changedForPeer:(_Bool)arg2;
- (void)handleSelfVideoStateChanged:(unsigned long long)arg1;
- (void)videoStateDidChangeToVideoRequestOutgoing:(_Bool)arg1;
- (void)handlePeerVideoStateChanged:(unsigned long long)arg1;
- (void)setupSelfVideo;
- (void)createAndSetupSelfVideo;
- (void)initVideoState;
- (_Bool)getVoipParamAsBool:(id)arg1;
- (int)getVoipParamAsInt:(id)arg1;
- (_Bool)hasVoipParam:(id)arg1;
- (id)getVoipParamFromPath:(id)arg1;
- (void)updateVoipParams;
- (void)initClientOptions;
- (void)initVoipParams;
- (void)encryptAndSendRekey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)encryptAndSendOffer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)sendStanza:(id)arg1 withEncryptMessage:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)triggerCompletionBlock:(CDUnknownBlockType)arg1 withResultCode:(long long)arg2;
- (id)webCallOfferFromOffer:(id)arg1;
- (void)setCallCreatorWithJIDFormat:(id)arg1;
- (void)markCachedIncomingCallOfferStanzaAsHandled:(id)arg1;
- (id)incomingCallOfferForWebClientWithCallID:(id)arg1 hasBeenHandled:(_Bool *)arg2;
- (void)webClientDidEndCallWithCallID:(id)arg1 callEvent:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)abandonWebClientCall;
- (void)forwardReKeyToWebClient:(id)arg1;
- (void)forwardCallKeyToWebClientFromPeerJID:(const char *)arg1 callID:(const char *)arg2 e2eBytes:(const char *)arg3 e2eLength:(int)arg4;
- (void)webClientDidActivateOrRejectCall;
- (void)webClientDidRequestAction:(unsigned long long)arg1 onCall:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)webClientDidRelayRekey:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)webClientDidRelayCallOffer:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)webClientDidRelayCallStanza:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)rejectCallwithRejectMessage:(id)arg1 stanza:(id)arg2;
- (void)processIncomingCallStanza:(id)arg1;
- (_Bool)shouldRejectOfferStanza:(id)arg1 decryptionFailed:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)shouldProcessOffer:(id)arg1 withTerminatedCall:(id)arg2;
- (_Bool)decryptRawe2eBytesAndReplaceFromStanza:(id)arg1 peerJID:(id)arg2 callID:(id)arg3;
- (void)handlePendingCallOnWebClient:(id)arg1;
- (void)updateCallWithCallOfferStanza:(id)arg1;
- (void)preprocessRekeyStanza:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)preprocessAcceptStanza:(id)arg1;
- (void)preprocessOfferStanza:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (_Bool)isOfferProcessed:(id)arg1;
- (_Bool)shouldUpdateVoipParamsForCallAckStanza:(id)arg1;
- (void)handleCallTerminatedByPeerInCallState:(int)arg1;
- (void)handleCallStanza:(id)arg1;
- (void)modifyAndSendStanza:(id)arg1 toJID:(id)arg2 callID:(id)arg3;
- (void)modifyStanza:(id)arg1 toJID:(id)arg2 withEncryptionData:(id)arg3 retryCount:(unsigned int)arg4 callID:(id)arg5 completion:(CDUnknownBlockType)arg6;
- (void)sendCallReceiptOrAck:(id)arg1 verifyDuration:(_Bool)arg2;
- (void)sendAckForStanza:(id)arg1;
- (void)sendAck:(id)arg1 forTerminate:(id)arg2;
- (void)sendReceiptForReKeyStanza:(id)arg1 decryptionFailed:(_Bool)arg2;
- (void)sendReceiptForStanza:(id)arg1;
- (id)generateReceiptForStanza:(id)arg1;
- (void)receiptOrAckStanza:(id)arg1;
- (_Bool)setCallDurationForStanza:(id)arg1 withCallInfo:(id)arg2;
- (id)popOfflineOfferForCallId:(id)arg1;
- (void)notifyEndofOffline;
- (void)processOfflineStanza:(id)arg1;
- (void)processOfflineTerminate:(id)arg1;
- (void)processOfflineOffer:(id)arg1;
- (void)handleCallTerminateProcessedForCallID:(id)arg1;
- (void)handleCallAcceptProcessed;
- (void)handleCallOfferProcessed;
- (void)handleCallOfferReceipt:(id)arg1;
- (void)handleCallRekeyReceipt:(id)arg1;
- (void)handleCallAck:(id)arg1;
- (void)handleIncomingCallStanza:(id)arg1;
- (void)handleSendCallStanzaTimeout:(id)arg1;
- (void)cancelSendOfferBlock;
- (void)performSendOfferBlock:(CDUnknownBlockType)arg1 afterDelay:(double)arg2;
- (void)sendStanza:(id)arg1 forCallID:(id)arg2 toJID:(id)arg3 afterDelay:(int)arg4;
- (void)sendCallStanza:(id)arg1 verifyDuration:(_Bool)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

