//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <Core/WAAssetMetadataManagerDelegate-Protocol.h>
#import <Core/WAStickerMediaDownloadManagerDelegate-Protocol.h>

@class NSCache, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, WAAssetManager, WAAssetMetadataManager, WAMMSTaskSessionV4, WAPNGImageCache, WAPersistentKeyValueStore, WAPurgeableImage, WAStickerMediaDownloadManager, WAStickerMediaUploadManager, WAStickerStorage;
@protocol OS_dispatch_queue;

@interface WAStickerAssetManager : NSObject <WAAssetMetadataManagerDelegate, WAStickerMediaDownloadManagerDelegate>
{
    WAPNGImageCache *_pngImageCache;
    WAAssetManager *_assetManager;
    NSObject<OS_dispatch_queue> *_stickerQueue;
    NSObject<OS_dispatch_queue> *_stickerCachingQueue;
    WAStickerMediaDownloadManager *_downloadManager;
    WAStickerMediaUploadManager *_uploadManager;
    WAAssetMetadataManager *_assetMetadataManager;
    WAStickerStorage *_stickerStorage;
    WAPersistentKeyValueStore *_keyValueStore;
    NSCache *_inMemoryImageCache;
    NSString *_storageDirectory;
    NSMutableSet *_updatingStickerPackIds;
    NSMutableArray *_downloadingStickerPackIds;
    NSMutableDictionary *_downloadingStickerPackIdsToAssetIdentifier;
    NSMutableDictionary *_downloadingStickerPackIdsToStickersMap;
    NSMutableDictionary *_stickerToTemporaryImagePathMap;
    WAPurgeableImage *failureIcon;
    WAMMSTaskSessionV4 *_mmsTaskSession;
}

+ (id)randomFileName;
+ (struct CGSize)stickerSliceSize;
+ (void)stickerInformationFromStickerImageFileWithPath:(id)arg1 completion:(CDUnknownBlockType)arg2;
+ (id)previewURLForImageId:(id)arg1;
@property(readonly, nonatomic) WAMMSTaskSessionV4 *mmsTaskSession; // @synthesize mmsTaskSession=_mmsTaskSession;
@property(readonly, nonatomic) NSString *storageDirectory; // @synthesize storageDirectory=_storageDirectory;
@property(readonly, nonatomic) WAPersistentKeyValueStore *keyValueStore; // @synthesize keyValueStore=_keyValueStore;
@property(readonly, nonatomic) WAStickerStorage *stickerStorage; // @synthesize stickerStorage=_stickerStorage;
- (void).cxx_destruct;
- (double)assetMetadataManager:(id)arg1 expiryIntervalForAssetWithIdentifier:(id)arg2;
- (void)deleteAllStickerPacks;
- (void)resetAllStickerState;
- (void)uploadSticker:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)uploadTrayImageForStickerPack:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)inMemoryCacheImage:(id)arg1 forSticker:(id)arg2 imageType:(long long)arg3;
- (id)inMemoryCachedImageForSticker:(id)arg1;
- (id)folderNameForStickerPackId:(id)arg1;
- (id)stickerMediaDownloadManager:(id)arg1 didRequestLinkDownloadedTemporaryImageFile:(id)arg2 forSticker:(id)arg3 error:(out id *)arg4;
- (id)stickerMediaDownloadManager:(id)arg1 didRequestAbsoluteFilePathForSticker:(id)arg2;
- (id)linkImageFile:(id)arg1 extension:(id)arg2 stickerPackId:(id)arg3;
- (id)saveImageData:(id)arg1 extension:(id)arg2 stickerPackId:(id)arg3;
- (id)stickerFailurePlaceholder;
- (id)animatedStickerThumbnailFor:(id)arg1 useLastFrame:(_Bool)arg2;
- (void)imageForSticker:(id)arg1 loadAnimationIfPossible:(_Bool)arg2 returnLastFrameIfAnimated:(_Bool)arg3 previewBlock:(CDUnknownBlockType)arg4 completion:(CDUnknownBlockType)arg5;
- (id)imageForSticker:(id)arg1;
- (id)absolutePathFrom:(id)arg1;
- (void)downloadStickerImageDataForSticker:(id)arg1 callbackQueue:(id)arg2 progressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)downloadStickerImageDataForStickerFromStickerPack:(id)arg1 index:(unsigned long long)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)validateDownloadedStickerFilePathMap:(id)arg1 forStickers:(id)arg2;
- (void)fetchStickers:(id)arg1 callbackQueue:(id)arg2 progressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchStickerImage:(id)arg1 callbackQueue:(id)arg2 progressBlock:(CDUnknownBlockType)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)removeStickerPackFromMyStickerPacks:(id)arg1;
- (void)setMyStickerPacks:(id)arg1;
- (id)myStickerPacks;
- (void)sendStickerPackDownloadProgressNotificationForStickerPack:(id)arg1 progress:(id)arg2;
- (void)sendNotificationForStickerPack:(id)arg1 oldState:(long long)arg2 newState:(long long)arg3;
- (void)didChangeDownloadStateFrom:(long long)arg1 to:(long long)arg2 forStickerPack:(id)arg3;
- (void)performOnStickerCachingQueue:(CDUnknownBlockType)arg1;
- (id)addStickerFromThirdPartyStickerPack:(id)arg1 index:(unsigned long long)arg2;
- (id)addThirdPartyStickerPack:(id)arg1;
- (void)downloadStickerFromFirstPartyStickerPack:(id)arg1 index:(unsigned long long)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)downloadFirstPartyStickerPack:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)validateStickerPack:(id)arg1 stickers:(id)arg2 error:(id *)arg3;
- (void)addStickerPackToMyStickerPacks:(id)arg1 stickers:(id)arg2 trayImageFilePath:(id)arg3 callbackQueue:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)downloadFetchedStickerPack:(id)arg1 stickers:(id)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchStickerPacksAndStickersForStickerPacks:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchJsonDataForStickerPacks:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)fetchStickerPackWithId:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)previewImageForId:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (id)previewImageIdentifierForImageId:(id)arg1;
- (void)previewImageForAbsoluteFilePath:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateFirstPartyStickerPack:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateThirdPartyStickerPack:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)dedupeExistingStickers:(id)arg1 withImageHashToNewStickersMap:(id)arg2;
- (void)updateDownloadedStickersDirectPath;
- (void)downloadDefaultStickerPackWithId:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)downloadStickerFromStickerPack:(id)arg1 index:(unsigned long long)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)createStickerFromImage:(id)arg1 rescalingToSize:(struct CGSize)arg2 stickerPackName:(id)arg3 stickerPackPublisher:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (id)currentlyDownloadingStickerPacks;
- (long long)downloadStateForStickerPack:(id)arg1;
- (void)cancelDownloadingStickerPackWithId:(id)arg1;
- (void)updateStickerPack:(id)arg1 callbackQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)downloadStickerPack:(id)arg1 downloadOrigin:(long long)arg2 callbackQueue:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)updateStickerStoreContentForcingDownload:(_Bool)arg1;
- (void)fetchPreviewImageForStickerPack:(id)arg1 index:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;
- (id)initWithStickerStorage:(id)arg1 keyValueStore:(id)arg2 mmsTaskSession:(id)arg3 storageDirectory:(id)arg4 pinnedCertificate:(id)arg5 userDefaults:(id)arg6 pngImageCache:(id)arg7 networkUsageManager:(id)arg8 networkUsageMetricsManager:(id)arg9;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

